var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,3.023,1,3.226]],["body/controllers/AppController.html",[0,4.959,1,5.291,2,3.754,3,0.107,4,0.094,5,0.094,6,5.021,7,0.259,8,1.872,9,7.149,10,0.772,11,0.01,12,7.11,13,0.319,14,5.699,15,1.501,16,6.828,17,0.163,18,1.143,19,1.262,20,1.293,21,1.293,22,5.104,23,5.699,24,0.107,25,0.395,26,2.784,27,2.439,28,1.84,29,5.699,30,0.008,31,0.008]],["title/modules/AppModule.html",[32,1.602,33,3.226]],["body/modules/AppModule.html",[1,4.81,2,3.676,3,0.074,4,0.065,5,0.065,11,0.01,17,0.178,18,0.794,22,5.056,24,0.074,25,0.275,30,0.006,31,0.006,32,2.062,33,6.648,34,1.869,35,2.633,36,3.49,37,3.49,38,3.49,39,4.8,40,5.354,41,5.354,42,5.354,43,5.354,44,5.354,45,5.056,46,5.354,47,4.8,48,2.935,49,2.082,50,2.082,51,3.961,52,2.826,53,2.826,54,3.961,55,3.961,56,3.961,57,3.18,58,3.18,59,3.49,60,2.082,61,2.763,62,5.582,63,2.082,64,2.763,65,2.082,66,2.763,67,3.961,68,3.961,69,3.961]],["title/injectables/AppService.html",[22,2.855,70,0.869]],["body/injectables/AppService.html",[3,0.111,4,0.097,5,0.097,7,0.268,8,1.914,9,7.24,11,0.01,13,0.331,15,1.556,16,7.24,17,0.153,18,1.184,19,1.308,20,1.341,21,1.341,22,4.788,24,0.111,25,0.41,28,1.907,30,0.008,31,0.008,70,1.458,71,2.123,72,5.206,73,5.908,74,5.908,75,5.908]],["title/controllers/AuthController.html",[0,3.023,76,3.226]],["body/controllers/AuthController.html",[0,3.571,2,3.372,3,0.096,4,0.084,5,0.084,7,0.233,8,1.749,10,0.693,11,0.01,13,0.286,15,1.348,17,0.17,18,1.026,19,1.134,20,1.162,21,1.162,24,0.096,25,0.355,26,2.5,27,2.191,28,1.652,30,0.007,31,0.007,76,4.942,77,4.511,78,5.119,79,5.119,80,3.363,81,5.851,82,5.119,83,7.8,84,5.119,85,5.119,86,1.453,87,1.001,88,0.286,89,0.693,90,7.371,91,3.81,92,5.119,93,2.919,94,4.609,95,4.11,96,3.81,97,5.119,98,2.919,99,4.11,100,3.959,101,5.119,102,5.119,103,5.119,104,5.119,105,2.919,106,5.119,107,5.119]],["title/modules/AuthModule.html",[32,1.602,39,2.71]],["body/modules/AuthModule.html",[2,4.095,3,0.087,4,0.076,5,0.076,11,0.01,17,0.178,18,0.929,24,0.087,25,0.321,30,0.007,31,0.007,32,2.297,34,2.186,35,2.933,39,5.352,47,3.888,48,3.269,49,2.436,50,2.436,52,3.148,53,2.346,57,3.719,76,5.223,94,5.036,95,3.719,108,4.082,109,4.082,110,5.618,111,5.618,112,4.633,113,4.337,114,4.633,115,3.719,116,4.991,117,3.448,118,4.633,119,2.897,120,4.633,121,4.633,122,4.633,123,4.633,124,4.633,125,3.719,126,4.633,127,4.082,128,4.082,129,4.633,130,4.082,131,4.633,132,4.082]],["title/injectables/AuthService.html",[70,0.869,94,2.71]],["body/injectables/AuthService.html",[3,0.065,4,0.057,5,0.057,7,0.159,8,1.344,11,0.01,13,0.371,15,1.587,17,0.148,18,0.701,19,0.774,20,0.794,21,0.794,24,0.065,25,0.243,27,2.58,28,1.946,30,0.005,31,0.005,70,1.023,71,1.257,80,3.625,81,4.497,86,1.882,87,1.296,88,0.371,89,0.897,91,3.799,94,3.192,100,3.951,105,3.438,113,2.439,115,2.807,117,2.602,127,4.497,130,3.081,132,3.081,133,2.807,134,4.097,135,5.104,136,1.524,137,3.081,138,4.202,139,7.601,140,6.697,141,3.496,142,4.497,143,5.104,144,3.496,145,4.334,146,4.497,147,1.233,148,3.97,149,3.496,150,3.951,151,1.94,152,5.104,153,3.496,154,3.496,155,2.807,156,3.081,157,2.807,158,2.807,159,2.807,160,2.807,161,2.807,162,2.807,163,2.807,164,2.807,165,2.839,166,2.439,167,2.602,168,3.081,169,4.839,170,4.497,171,3.496,172,3.081,173,1.408,174,3.081,175,3.496,176,3.081,177,3.496,178,3.496,179,3.496,180,5.104,181,3.496,182,3.496,183,3.496,184,3.496,185,2.807,186,2.303,187,3.081,188,3.081]],["title/modules/CoreModule.html",[32,1.602,40,3.023]],["body/modules/CoreModule.html",[2,3.415,3,0.097,4,0.085,5,0.085,11,0.01,17,0.18,18,1.04,24,0.097,25,0.36,30,0.007,31,0.007,32,2.474,34,2.446,40,4.67,52,2.626,53,3.391,116,4.162,117,3.859,155,4.162,189,5.185,190,5.375,191,5.185,192,5.375,193,5.185,194,5.185,195,0.644,196,4.983,197,5.185,198,2.957,199,1.718,200,4.162,201,5.185,202,5.185,203,5.185,204,5.185,205,1.725,206,5.185,207,5.185,208,5.185,209,5.185,210,5.185,211,5.185,212,5.185,213,5.185,214,5.185,215,2.957]],["title/classes/CoreResolver.html",[25,0.301,196,3.226]],["body/classes/CoreResolver.html",[3,0.113,4,0.099,5,0.099,7,0.273,8,1.936,10,0.815,11,0.01,13,0.337,15,1.585,17,0.127,24,0.113,25,0.418,28,1.943,30,0.008,31,0.008,195,0.748,196,5.473,216,0.705,217,5.303,218,8.271,219,3.432,220,6.019,221,7.354,222,4.193,223,4.193,224,6.019]],["title/classes/CreateGroupingItemInput.html",[25,0.301,225,2.855]],["body/classes/CreateGroupingItemInput.html",[3,0.096,4,0.085,5,0.085,7,0.234,10,1.001,11,0.009,13,0.414,17,0.14,24,0.096,25,0.357,30,0.007,31,0.007,65,4.111,88,0.414,147,1.31,195,0.64,216,0.604,225,4.392,226,3.819,227,6.889,228,3.834,229,0.853,230,3.744,231,1.178,232,5.935,233,5.935,234,5.935,235,1.504,236,4.539,237,1.958,238,5.152,239,5.152,240,2.332,241,1.199,242,2.818,243,2.938]],["title/classes/CreateHangmanWordInput.html",[25,0.301,244,2.855]],["body/classes/CreateHangmanWordInput.html",[3,0.1,4,0.088,5,0.088,7,0.242,10,0.922,11,0.009,13,0.381,17,0.158,24,0.1,25,0.472,30,0.007,31,0.007,63,3.948,88,0.381,147,1.228,195,0.662,216,0.624,229,0.871,230,3.802,231,1.203,235,1.361,240,2.381,241,1.238,242,2.911,243,3.035,244,4.485,245,3.667,246,6.027,247,3.328,248,4.695,249,4.695,250,2.257,251,4.689,252,4.689,253,2.424,254,1.334]],["title/classes/CreateMirrorWordInput.html",[25,0.301,255,2.855]],["body/classes/CreateMirrorWordInput.html",[3,0.104,4,0.092,5,0.092,7,0.254,10,0.755,11,0.009,13,0.312,17,0.161,24,0.104,25,0.487,30,0.007,31,0.007,60,3.689,88,0.312,147,1.088,195,0.694,216,0.654,229,0.898,230,3.886,231,1.24,235,1.272,240,2.454,241,1.298,242,3.052,243,3.182,246,5.633,247,3.49,249,4.799,250,1.849,252,4.917,253,2.265,254,1.398,255,4.621,256,3.427,257,4.035]],["title/classes/CreateQuizInput.html",[25,0.301,258,2.855]],["body/classes/CreateQuizInput.html",[3,0.09,4,0.079,5,0.079,7,0.218,10,1.03,11,0.01,13,0.426,17,0.16,19,1.063,20,1.089,21,1.089,24,0.09,25,0.333,30,0.007,31,0.007,88,0.426,147,1.288,195,0.596,216,0.562,229,0.814,230,3.616,231,1.125,235,1.504,237,2.419,240,2.226,241,1.116,242,2.625,243,2.737,258,4.192,259,6.974,260,3.572,261,5.315,262,4.466,263,5.315,264,5.733,265,4.799,266,4.799,267,4.704,268,4.799,269,4.799,270,3.98,271,2.724,272,3.852,273,3.347]],["title/classes/CreateQuizQuestionInput.html",[25,0.301,270,2.71]],["body/classes/CreateQuizQuestionInput.html",[3,0.087,4,0.076,5,0.076,7,0.211,10,1.017,11,0.01,13,0.42,17,0.131,24,0.087,25,0.322,30,0.007,31,0.007,88,0.461,89,1.017,147,1.328,195,0.578,216,0.544,229,0.797,230,3.559,231,1.101,235,1.492,237,2.368,240,2.178,241,1.081,242,2.541,243,2.65,270,3.895,271,3.351,272,6.286,274,3.825,275,3.458,276,5.641,277,5.641,278,5.23,279,1.791,280,4.107,281,4.094,282,4.094,283,4.647,284,4.647]],["title/classes/CreateRoleInput.html",[25,0.301,285,2.855]],["body/classes/CreateRoleInput.html",[3,0.096,4,0.084,5,0.084,7,0.233,10,0.998,11,0.01,13,0.412,17,0.155,24,0.096,25,0.461,30,0.007,31,0.007,87,1.441,88,0.412,147,1.308,195,0.636,216,0.6,229,0.85,230,3.732,231,1.173,235,1.414,240,2.322,241,1.191,242,2.8,243,2.919,250,2.201,253,2.379,254,1.283,262,4.609,285,4.374,286,6.872,287,3.81,288,5.917,289,5.119,290,5.119,291,5.119,292,5.119,293,3.133]],["title/classes/CreateSchoolInput.html",[25,0.301,294,2.855]],["body/classes/CreateSchoolInput.html",[3,0.087,4,0.076,5,0.076,7,0.211,10,1.06,11,0.01,13,0.438,17,0.148,24,0.087,25,0.432,30,0.007,31,0.007,87,1.374,88,0.438,147,1.34,195,0.578,216,0.544,229,0.797,230,3.559,231,1.101,235,1.461,240,2.178,241,1.081,242,2.541,243,2.65,250,2.488,253,2.527,254,1.164,293,2.939,294,4.103,295,7.102,296,3.458,297,4.902,298,5.23,299,4.394,300,4.394,301,4.647,302,4.647,303,4.094,304,4.647,305,4.647,306,4.647,307,5.489]],["title/classes/CreateUserInput.html",[25,0.301,308,2.855]],["body/classes/CreateUserInput.html",[3,0.085,4,0.075,5,0.075,7,0.207,10,1.053,11,0.01,13,0.435,17,0.146,24,0.085,25,0.426,30,0.007,31,0.007,88,0.435,89,1.008,147,1.335,148,4.582,150,4.147,195,0.566,216,0.534,229,0.786,230,3.523,231,1.086,235,1.485,237,1.731,240,2.149,241,1.06,242,2.491,243,2.597,250,2.037,253,2.404,254,1.141,279,1.466,280,3.362,299,4.35,308,4.048,309,7.061,310,3.39,311,5.178,312,5.585,313,4.555,314,4.555,315,4.555,316,4.555,317,4.555,318,4.555,319,5.416]],["title/classes/DeleteGroupingItemInput.html",[25,0.301,320,2.855]],["body/classes/DeleteGroupingItemInput.html",[3,0.106,4,0.093,5,0.093,7,0.258,10,0.769,11,0.009,13,0.318,17,0.163,24,0.106,25,0.492,30,0.008,31,0.008,65,2.986,88,0.318,147,1.1,195,0.706,216,0.665,226,2.774,228,4.226,229,0.908,231,1.254,235,1.286,240,2.481,241,1.321,250,1.882,253,2.29,254,1.423,320,4.672,321,5.004,322,3.08,323,2.371,324,1.167,325,3.238,326,2.357]],["title/classes/DeleteHangmanWordInput.html",[25,0.301,327,2.855]],["body/classes/DeleteHangmanWordInput.html",[3,0.106,4,0.093,5,0.093,7,0.258,10,0.769,11,0.009,13,0.318,17,0.163,24,0.106,25,0.492,30,0.008,31,0.008,63,2.986,88,0.318,147,1.1,195,0.706,216,0.665,229,0.908,231,1.254,235,1.286,240,2.481,241,1.321,245,2.774,247,3.551,250,1.882,253,2.29,254,1.423,322,3.08,323,2.371,324,1.167,325,3.238,326,2.357,327,4.672,328,4.559]],["title/classes/DeleteMirrorWordInput.html",[25,0.301,329,2.855]],["body/classes/DeleteMirrorWordInput.html",[3,0.106,4,0.093,5,0.093,7,0.258,10,0.769,11,0.009,13,0.318,17,0.163,24,0.106,25,0.492,30,0.008,31,0.008,60,2.986,88,0.318,147,1.1,195,0.706,216,0.665,229,0.908,231,1.254,235,1.286,240,2.481,241,1.321,247,3.551,250,1.882,253,2.29,254,1.423,256,2.774,322,3.08,323,2.371,324,1.167,325,3.238,326,2.357,328,4.559,329,4.672]],["title/classes/DeleteQuizInput.html",[25,0.301,330,2.855]],["body/classes/DeleteQuizInput.html",[3,0.107,4,0.094,5,0.094,7,0.26,10,0.774,11,0.01,13,0.32,17,0.163,24,0.107,25,0.494,30,0.008,31,0.008,88,0.32,147,1.105,195,0.711,216,0.67,229,0.912,231,1.259,235,1.292,240,2.492,241,1.331,250,1.895,253,2.3,254,1.433,260,4.257,322,3.088,323,2.378,324,1.176,325,3.261,326,2.374,330,4.693,331,5.039]],["title/classes/DeleteQuizQuestionInput.html",[25,0.301,332,2.855]],["body/classes/DeleteQuizQuestionInput.html",[3,0.106,4,0.093,5,0.093,7,0.258,10,0.769,11,0.009,13,0.318,17,0.163,24,0.106,25,0.492,30,0.008,31,0.008,88,0.318,147,1.1,195,0.706,216,0.665,229,0.908,231,1.254,235,1.286,240,2.481,241,1.321,250,1.882,253,2.29,254,1.423,271,2.431,274,2.774,275,4.226,322,3.08,323,2.371,324,1.167,325,3.238,326,2.357,332,4.672,333,5.004]],["title/classes/DeleteRoleInput.html",[25,0.301,334,2.855]],["body/classes/DeleteRoleInput.html",[3,0.107,4,0.094,5,0.094,7,0.26,10,0.774,11,0.01,13,0.32,17,0.163,24,0.107,25,0.494,30,0.008,31,0.008,88,0.32,147,1.105,195,0.711,216,0.67,229,0.912,231,1.259,235,1.292,240,2.492,241,1.331,250,1.895,253,2.3,254,1.433,287,4.257,322,3.088,323,2.378,324,1.176,325,3.261,326,2.374,334,4.693,335,5.039]],["title/classes/DeleteSchoolInput.html",[25,0.301,336,2.855]],["body/classes/DeleteSchoolInput.html",[3,0.107,4,0.094,5,0.094,7,0.26,10,0.774,11,0.01,13,0.32,17,0.163,24,0.107,25,0.494,30,0.008,31,0.008,88,0.32,147,1.105,195,0.711,216,0.67,229,0.912,231,1.259,235,1.292,240,2.492,241,1.331,250,1.895,253,2.3,254,1.433,296,4.257,322,3.088,323,2.378,324,1.176,325,3.261,326,2.374,336,4.693,337,5.039]],["title/classes/DeleteUserInput.html",[25,0.301,338,2.855]],["body/classes/DeleteUserInput.html",[3,0.107,4,0.094,5,0.094,7,0.26,10,0.774,11,0.01,13,0.32,17,0.163,24,0.107,25,0.494,30,0.008,31,0.008,88,0.32,147,1.105,195,0.711,216,0.67,229,0.912,231,1.259,235,1.292,240,2.492,241,1.331,250,1.895,253,2.3,254,1.433,310,4.257,322,3.088,323,2.378,324,1.176,325,3.261,326,2.374,338,4.693,339,5.039]],["title/classes/GetGroupingItemArgs.html",[25,0.301,340,2.855]],["body/classes/GetGroupingItemArgs.html",[3,0.107,4,0.094,5,0.094,7,0.261,10,0.777,11,0.009,13,0.321,17,0.15,24,0.107,25,0.398,30,0.008,31,0.008,65,3.018,88,0.321,147,1.108,195,0.713,205,1.661,216,0.673,226,2.803,229,0.914,231,1.262,235,1.294,241,1.335,279,1.369,323,2.382,324,1.18,340,4.703,341,4.608,342,5.057,343,3.973,344,2.182,345,4.608,346,2.457,347,3.057]],["title/classes/GetGroupingItemsArgs.html",[25,0.301,348,2.855]],["body/classes/GetGroupingItemsArgs.html",[3,0.103,4,0.09,5,0.09,7,0.249,10,0.743,11,0.01,13,0.307,17,0.16,24,0.103,25,0.482,30,0.007,31,0.007,65,2.884,88,0.307,89,0.94,147,1.181,195,0.682,205,1.276,216,0.643,226,2.679,229,0.888,231,1.227,235,1.258,237,2.085,241,1.276,254,1.374,279,1.655,293,3.275,324,1.127,341,4.403,346,2.348,347,2.971,348,4.572,349,4.833,350,3.776,351,4.165,352,3.128,353,3.27]],["title/classes/GetHangmanWordArgs.html",[25,0.301,354,2.855]],["body/classes/GetHangmanWordArgs.html",[3,0.098,4,0.086,5,0.086,7,0.237,10,0.91,11,0.009,13,0.376,17,0.141,24,0.098,25,0.362,30,0.007,31,0.007,63,3.535,88,0.376,89,0.91,147,1.219,195,0.649,205,1.828,216,0.612,229,0.86,231,1.188,235,1.474,241,1.214,245,3.284,248,4.652,279,1.603,323,2.28,324,1.073,343,3.838,344,2.556,345,4.189,346,2.234,347,2.878,354,4.428,355,4.69,356,4.189,357,5.219,358,5.924,359,5.924]],["title/classes/GetHangmanWordsArgs.html",[25,0.301,360,2.855]],["body/classes/GetHangmanWordsArgs.html",[3,0.094,4,0.083,5,0.083,7,0.229,10,0.89,11,0.01,13,0.368,17,0.154,24,0.094,25,0.456,30,0.007,31,0.007,63,3.456,88,0.368,89,1.05,147,1.279,195,0.626,205,1.702,216,0.59,229,0.841,231,1.161,235,1.326,237,2.498,241,1.172,245,3.21,248,4.574,254,1.263,279,1.849,293,3.101,324,1.036,346,2.157,347,2.813,350,3.658,351,4.001,352,2.874,353,3.004,355,4.585,360,4.329,361,4.045,362,5.039]],["title/classes/GetMirrorWordArgs.html",[25,0.301,363,2.855]],["body/classes/GetMirrorWordArgs.html",[3,0.105,4,0.092,5,0.092,7,0.255,10,0.761,11,0.009,13,0.314,17,0.148,24,0.105,25,0.39,30,0.007,31,0.007,60,2.955,88,0.314,147,1.093,195,0.698,205,1.64,216,0.659,229,0.902,231,1.245,235,1.463,241,1.307,256,2.745,279,1.34,323,2.359,324,1.155,343,3.943,344,2.136,345,4.511,346,2.405,347,3.016,355,3.92,356,4.511,358,6.21,359,6.21,363,4.642]],["title/classes/GetMirrorWordsArgs.html",[25,0.301,364,2.855]],["body/classes/GetMirrorWordsArgs.html",[3,0.103,4,0.09,5,0.09,7,0.249,10,0.743,11,0.01,13,0.307,17,0.16,24,0.103,25,0.482,30,0.007,31,0.007,60,2.884,88,0.307,89,0.94,147,1.181,195,0.682,205,1.276,216,0.643,229,0.888,231,1.227,235,1.258,237,2.085,241,1.276,254,1.374,256,2.679,279,1.655,293,3.275,324,1.127,346,2.348,347,2.971,350,3.776,351,4.165,352,3.128,353,3.27,355,3.826,361,4.403,364,4.572]],["title/classes/GetQuizArgs.html",[25,0.301,365,2.855]],["body/classes/GetQuizArgs.html",[3,0.107,4,0.094,5,0.094,7,0.26,10,0.774,11,0.01,13,0.32,17,0.163,24,0.107,25,0.494,30,0.008,31,0.008,88,0.32,147,1.105,195,0.711,216,0.67,229,0.912,231,1.259,235,1.292,241,1.331,250,1.895,253,2.3,254,1.433,323,2.378,324,1.176,343,3.968,346,2.448,347,3.05,365,4.693,366,4.591,367,5.039,368,4.257]],["title/classes/GetQuizQuestionArgs.html",[25,0.301,369,2.855]],["body/classes/GetQuizQuestionArgs.html",[3,0.106,4,0.093,5,0.093,7,0.258,10,0.769,11,0.009,13,0.318,17,0.163,24,0.106,25,0.492,30,0.008,31,0.008,88,0.318,147,1.1,195,0.706,216,0.665,229,0.908,231,1.254,235,1.286,241,1.321,250,1.882,253,2.29,254,1.423,271,2.431,274,2.774,323,2.371,324,1.167,343,3.958,346,2.431,347,3.036,368,4.226,369,4.672,370,4.559,371,5.004]],["title/classes/GetQuizQuestionsArgs.html",[25,0.301,372,2.855]],["body/classes/GetQuizQuestionsArgs.html",[3,0.103,4,0.09,5,0.09,7,0.249,10,0.743,11,0.01,13,0.307,17,0.16,24,0.103,25,0.482,30,0.007,31,0.007,88,0.307,89,0.94,147,1.181,195,0.682,205,1.276,216,0.643,229,0.888,231,1.227,235,1.258,237,2.085,241,1.276,254,1.374,271,2.348,274,2.679,279,1.655,293,3.275,324,1.127,346,2.348,347,2.971,350,3.776,351,4.165,352,3.128,353,3.27,370,4.403,372,4.572,373,4.833]],["title/classes/GetQuizzesArgs.html",[25,0.301,374,2.855]],["body/classes/GetQuizzesArgs.html",[3,0.097,4,0.085,5,0.085,7,0.235,10,0.905,11,0.01,13,0.374,17,0.156,24,0.097,25,0.464,30,0.007,31,0.007,88,0.374,89,1.06,147,1.257,195,0.642,205,1.723,216,0.606,229,0.855,231,1.181,235,1.342,237,1.965,241,1.202,248,4.63,254,1.295,279,1.766,293,3.153,324,1.062,344,1.965,346,2.212,347,2.86,350,3.693,351,4.05,352,2.947,353,3.081,366,5.364,374,4.401,375,4.554,376,5.169]],["title/classes/GetRoleArgs.html",[25,0.301,377,2.855]],["body/classes/GetRoleArgs.html",[3,0.107,4,0.094,5,0.094,7,0.26,10,0.774,11,0.01,13,0.32,17,0.163,24,0.107,25,0.494,30,0.008,31,0.008,88,0.32,147,1.105,195,0.711,216,0.67,229,0.912,231,1.259,235,1.292,241,1.331,250,1.895,253,2.3,254,1.433,323,2.378,324,1.176,343,3.968,346,2.448,347,3.05,368,4.257,377,4.693,378,4.591,379,5.039]],["title/classes/GetRolesArgs.html",[25,0.301,380,2.855]],["body/classes/GetRolesArgs.html",[3,0.103,4,0.091,5,0.091,7,0.251,10,0.748,11,0.01,13,0.309,17,0.161,24,0.103,25,0.484,30,0.007,31,0.007,88,0.309,89,0.944,147,1.185,195,0.686,205,1.285,216,0.647,229,0.892,231,1.232,235,1.264,237,2.099,241,1.285,254,1.384,279,1.662,293,3.289,324,1.135,346,2.364,347,2.984,350,3.785,351,4.178,352,3.15,353,3.293,378,4.434,380,4.591,381,4.866]],["title/classes/GetSchoolArgs.html",[25,0.301,382,2.855]],["body/classes/GetSchoolArgs.html",[3,0.107,4,0.094,5,0.094,7,0.26,10,0.774,11,0.01,13,0.32,17,0.163,24,0.107,25,0.494,30,0.008,31,0.008,88,0.32,147,1.105,195,0.711,216,0.67,229,0.912,231,1.259,235,1.292,241,1.331,250,1.895,253,2.3,254,1.433,323,2.378,324,1.176,343,3.968,346,2.448,347,3.05,368,4.257,382,4.693,383,4.591,384,5.039]],["title/classes/GetSchoolsArgs.html",[25,0.301,385,2.855]],["body/classes/GetSchoolsArgs.html",[3,0.077,4,0.068,5,0.068,7,0.188,10,1.053,11,0.01,13,0.435,17,0.139,24,0.077,25,0.399,30,0.006,31,0.006,87,1.293,88,0.463,89,1.133,147,1.334,195,0.514,205,1.968,216,0.484,229,0.736,231,1.016,235,1.447,237,1.571,241,0.962,254,1.036,279,1.904,293,2.713,297,4.613,298,4.922,299,4.136,324,0.85,344,2.857,346,1.769,347,2.462,350,3.374,351,3.618,352,2.357,353,2.464,383,6.246,385,3.788,386,3.642,387,4.134,388,4.134,389,4.134,390,4.134,391,4.134]],["title/classes/GetUserArgs.html",[25,0.301,392,2.855]],["body/classes/GetUserArgs.html",[3,0.098,4,0.086,5,0.086,7,0.237,10,0.91,11,0.01,13,0.376,17,0.156,24,0.098,25,0.467,30,0.007,31,0.007,88,0.376,89,1.064,147,1.219,150,4.435,195,0.649,205,1.564,216,0.612,229,0.86,231,1.188,235,1.348,241,1.214,254,1.308,279,1.603,323,2.28,344,2.556,347,2.878,392,4.428,393,5.972,394,4.598,395,4.899,396,6.724,397,5.219,398,5.219,399,5.972,400,4.189,401,4.189]],["title/classes/GetUsersArgs.html",[25,0.301,402,2.855]],["body/classes/GetUsersArgs.html",[3,0.103,4,0.091,5,0.091,7,0.251,10,0.748,11,0.01,13,0.309,17,0.161,24,0.103,25,0.484,30,0.007,31,0.007,88,0.309,89,0.944,147,1.185,195,0.686,205,1.285,216,0.647,229,0.892,231,1.232,235,1.264,237,2.099,241,1.285,254,1.384,279,1.662,293,3.289,324,1.135,346,2.364,347,2.984,350,3.785,351,4.178,352,3.15,353,3.293,393,4.434,402,4.591,403,4.866]],["title/classes/GqlArg.html",[25,0.301,395,2.855]],["body/classes/GqlArg.html",[3,0.122,4,0.107,5,0.107,11,0.009,17,0.137,24,0.122,25,0.453,30,0.008,31,0.008,195,0.812,216,0.765,347,3.306,395,5.087,400,5.243,404,4.302,405,5.755,406,5.755]],["title/classes/GqlAuthGuard.html",[25,0.301,407,2.279]],["body/classes/GqlAuthGuard.html",[3,0.109,4,0.096,5,0.096,7,0.266,8,1.902,11,0.009,13,0.327,15,1.539,17,0.165,18,1.172,24,0.109,25,0.405,28,1.886,30,0.008,31,0.008,86,1.659,87,1.143,88,0.327,89,0.791,119,3.654,195,0.726,216,0.685,229,0.748,407,3.797,408,6.363,409,4.349,410,7.222,411,7.222,412,6.572,413,5.844,414,4.691,415,4.691,416,5.149,417,5.149,418,5.844]],["title/classes/GqlInput.html",[25,0.301,230,2.195]],["body/classes/GqlInput.html",[3,0.125,4,0.11,5,0.11,11,0.009,24,0.125,25,0.464,30,0.008,31,0.008,216,0.784,230,3.968,242,3.661,404,4.409,406,5.898,419,5.898]],["title/classes/GroupingItem.html",[25,0.301,420,2.855]],["body/classes/GroupingItem.html",[3,0.072,4,0.063,5,0.063,7,0.175,10,1.059,11,0.01,13,0.438,17,0.146,19,0.852,20,0.873,21,0.873,24,0.119,25,0.267,30,0.006,31,0.006,88,0.462,89,0.938,147,1.262,165,1.55,195,0.478,199,1.275,205,0.895,216,0.451,226,3.905,231,0.966,232,5.107,233,5.107,234,5.107,235,1.449,279,0.917,344,1.462,420,3.601,421,5.576,422,2.863,423,2.34,424,5.561,425,3.345,426,3.628,427,3.479,428,2.723,429,3.26,430,3.26,431,3.847,432,4.13,433,3.847,434,3.156,435,3.847,436,2.294,437,3.847,438,3.847,439,3.847,440,3.847,441,3.26,442,4.766,443,2.81,444,2.294,445,2.294,446,3.118,447,1.597,448,3.088,449,2.294,450,2.863,451,3.39]],["title/modules/GroupingItemModule.html",[32,1.602,41,3.023]],["body/modules/GroupingItemModule.html",[3,0.09,4,0.079,5,0.079,11,0.01,17,0.171,18,0.962,24,0.09,25,0.333,30,0.007,31,0.007,32,2.352,34,2.264,35,3.003,41,6.008,48,3.347,49,2.523,50,2.523,52,3.223,53,2.43,65,3.347,66,3.347,87,0.938,198,2.737,199,1.59,215,3.63,226,2.344,420,3.161,443,2.12,450,4.737,452,4.228,453,4.228,454,4.228,455,5.758,456,5.758,457,4.799,458,4.228,459,4.737,460,4.799,461,5.11,462,3.852,463,4.228,464,2.861,465,4.799]],["title/injectables/GroupingItemRepository.html",[70,0.869,455,2.855]],["body/injectables/GroupingItemRepository.html",[3,0.065,4,0.057,5,0.057,7,0.157,8,1.331,11,0.01,13,0.41,15,1.846,17,0.172,18,0.692,19,0.764,20,0.783,21,0.783,24,0.065,25,0.239,28,1.114,30,0.005,31,0.005,65,3.852,70,1.014,71,1.24,80,3.723,86,2.08,87,1.433,88,0.392,89,0.992,105,1.968,136,1.031,151,2.785,165,2.037,173,2.037,199,1.144,225,2.273,226,2.47,229,0.647,257,4.081,320,2.273,324,1.441,340,4.338,348,2.273,420,2.273,421,3.527,424,2.771,447,1.433,448,2.771,455,3.33,462,2.771,466,3.041,467,4.081,468,2.099,469,2.037,470,2.099,471,2.099,472,2.099,473,2.569,474,3.756,475,3.452,476,3.763,477,4.455,478,2.407,479,3.041,480,1.433,481,2.307,482,2.273,483,2.183,484,1.433,485,2.233,486,2.158,487,1.433,488,2.47,489,2.569,490,1.433,491,2.158,492,2.058,493,2.273,494,1.207,495,4.803,496,1.207,497,1.768,498,2.771,499,2.771,500,1.207,501,2.158,502,3.452,503,2.569,504,2.407,505,4.059,506,2.771,507,2.771,508,2.771,509,2.771]],["title/classes/GroupingItemResolver.html",[25,0.301,459,3.226]],["body/classes/GroupingItemResolver.html",[3,0.055,4,0.048,5,0.048,7,0.132,8,1.173,10,0.883,11,0.01,13,0.385,15,1.718,17,0.169,18,0.584,19,0.645,20,0.661,21,0.661,24,0.055,25,0.202,26,1.423,27,1.247,28,2.106,30,0.005,31,0.005,65,3.616,66,4.992,86,1.953,87,1.345,88,0.385,89,0.931,93,1.662,98,1.662,136,0.87,151,2.934,173,2.178,195,0.362,205,1.409,216,0.341,219,2.54,222,3.084,223,2.54,225,3.988,226,3.495,279,1.64,320,3.988,340,3.988,348,3.988,407,1.532,420,4.982,424,2.339,456,3.988,458,2.568,459,3.315,461,2.339,462,2.339,483,2.558,493,3.988,494,1.019,495,4.341,496,1.019,497,1.558,498,2.339,499,2.339,500,1.019,510,2.568,511,4.455,512,4.455,513,4.455,514,4.455,515,2.033,516,2.914,517,3.107,518,2.914,519,3.381,520,1.919,521,2.914,522,2.914,523,1.822,524,2.914,525,2.914,526,2.914,527,2.914,528,1.919,529,3.616,530,2.914,531,2.914,532,1.822,533,2.914,534,3.61,535,1.737,536,1.737,537,1.594,538,1.532,539,1.737,540,1.737,541,1.737,542,2.914,543,2.656,544,2.914,545,2.033,546,1.822,547,3.61,548,2.914,549,2.033,550,1.822,551,2.914,552,2.033,553,1.737,554,2.914,555,2.033,556,1.737,557,2.914,558,2.033]],["title/injectables/GroupingItemService.html",[70,0.869,456,2.855]],["body/injectables/GroupingItemService.html",[3,0.075,4,0.065,5,0.065,7,0.181,8,1.475,11,0.01,13,0.43,15,1.952,17,0.17,18,0.798,24,0.075,25,0.276,30,0.006,31,0.006,65,3.897,66,3.907,70,1.123,71,1.43,86,2.183,87,1.503,88,0.43,89,1.041,136,1.189,225,2.622,226,2.736,229,0.717,320,2.622,324,1.523,340,2.622,348,2.622,455,4.632,456,3.689,461,3.195,463,3.507,468,2.325,469,2.256,470,2.325,471,2.325,472,2.325,480,1.652,481,2.556,483,2.456,484,1.652,485,2.474,487,1.652,488,2.736,490,1.652,493,2.622,494,1.392,495,5.203,496,1.392,497,1.959,498,3.195,499,3.195,500,1.392,559,3.507,560,4.411,561,3.502,562,3.981,563,2.489,564,2.489,565,2.489,566,2.489,567,1.758,568,2.736,569,2.489,570,3.194,571,2.489,572,2.489,573,2.489,574,2.622]],["title/classes/HangmanWord.html",[25,0.301,575,2.855]],["body/classes/HangmanWord.html",[3,0.076,4,0.067,5,0.067,7,0.184,10,1.048,11,0.01,13,0.433,17,0.149,19,0.899,20,0.922,21,0.922,24,0.123,25,0.282,30,0.006,31,0.006,88,0.454,89,0.961,147,1.158,165,1.636,195,0.505,199,1.346,205,0.945,216,0.476,231,1.004,235,1.44,245,3.88,248,4.096,249,4.096,279,0.968,344,1.543,423,2.431,425,3.444,426,3.736,427,3.583,428,2.804,429,2.421,430,2.421,432,4.23,434,3.212,436,2.421,441,3.386,442,4.735,443,2.894,444,2.421,445,2.421,446,3.239,447,1.685,449,2.421,575,3.741,576,5.54,577,2.832,578,5.696,579,3.578,580,3.578,581,3.578,582,4.061,583,3.578,584,3.578,585,3.26,586,3.022,587,3.578]],["title/modules/HangmanWordModule.html",[32,1.602,42,3.023]],["body/modules/HangmanWordModule.html",[3,0.09,4,0.079,5,0.079,11,0.01,17,0.171,18,0.962,24,0.09,25,0.333,30,0.007,31,0.007,32,2.352,34,2.264,35,3.003,42,6.008,48,3.347,49,2.523,50,2.523,52,3.223,53,2.43,63,3.347,64,3.347,87,0.938,198,2.737,199,1.59,215,3.63,245,2.344,443,2.12,464,2.861,575,3.161,586,4.737,588,4.228,589,4.228,590,4.228,591,5.758,592,5.758,593,4.228,594,3.572,595,4.737,596,4.228,597,5.11,598,3.161,599,3.572,600,4.799]],["title/injectables/HangmanWordRepository.html",[70,0.869,591,2.855]],["body/injectables/HangmanWordRepository.html",[3,0.056,4,0.049,5,0.049,7,0.137,8,1.201,11,0.01,13,0.39,15,1.742,17,0.166,18,0.603,19,0.666,20,0.682,21,0.682,24,0.056,25,0.209,28,1.986,30,0.005,31,0.005,63,3.661,70,0.915,71,1.081,80,3.658,86,1.977,87,1.361,88,0.37,89,0.943,105,3.143,136,0.898,151,2.75,165,2.479,173,2.22,199,0.996,229,0.584,244,1.98,245,2.228,248,2.852,257,3.661,324,1.36,327,1.98,354,4.052,360,4.052,447,1.248,467,3.918,468,1.894,469,1.838,470,1.894,471,1.894,472,1.894,474,3.509,478,2.097,480,1.248,481,2.081,482,1.98,483,2.192,484,1.248,485,2.015,486,1.88,487,1.894,490,1.248,491,1.88,492,1.792,494,1.051,496,1.051,497,1.595,500,1.051,501,1.88,504,3.182,505,3.662,506,2.414,507,2.414,508,2.414,509,2.414,567,2.015,575,1.98,576,3.182,578,2.414,585,2.414,591,3.004,598,1.98,601,2.414,602,3.007,603,2.649,604,4.562,605,3.007,606,1.98,607,3.63,608,1.98,609,1.98,610,3.007,611,3.007,612,4.562,613,3.007,614,2.414,615,5.828,616,3.007,617,4.857,618,3.007,619,3.662,620,3.662,621,3.007,622,3.007,623,2.097,624,3.007,625,3.007,626,3.007,627,3.007,628,2.649,629,3.007,630,3.007,631,2.414,632,3.007,633,2.649,634,3.007,635,2.414,636,3.007,637,3.007]],["title/classes/HangmanWordResolver.html",[25,0.301,595,3.226]],["body/classes/HangmanWordResolver.html",[3,0.054,4,0.047,5,0.047,7,0.131,8,1.16,10,0.877,11,0.01,13,0.383,15,1.707,17,0.169,18,0.576,19,0.636,20,0.652,21,0.652,24,0.054,25,0.199,26,1.403,27,1.23,28,2.092,30,0.005,31,0.005,63,3.863,64,4.966,86,1.942,87,1.337,88,0.383,89,0.926,93,1.638,98,1.638,136,0.858,151,2.922,173,2.159,195,0.357,205,1.398,216,0.337,219,2.512,222,3.056,223,2.512,244,3.958,245,3.478,249,2.755,262,2.755,279,1.631,327,3.958,354,3.958,360,3.958,407,1.51,483,2.548,494,1.004,496,1.004,497,1.541,500,1.004,515,2.004,517,3.073,519,3.351,520,1.892,523,1.796,528,1.892,529,3.596,532,1.796,534,3.583,535,1.713,536,1.713,537,1.571,538,1.51,539,1.713,540,1.713,541,1.713,543,1.713,545,2.004,546,1.796,547,3.583,549,2.004,550,1.796,552,2.004,553,1.713,555,2.004,556,1.713,558,2.004,575,4.961,578,2.306,592,3.958,594,2.138,595,3.279,597,2.306,598,1.892,606,3.958,607,3.53,608,1.892,609,1.892,631,2.306,638,2.306,639,4.406,640,4.406,641,4.406,642,4.406,643,2.531,644,2.873,645,2.531,646,2.873,647,2.531,648,2.873,649,4.406,650,2.531,651,2.873,652,2.531,653,2.873,654,2.531,655,2.873,656,2.873,657,2.873,658,2.873,659,2.873,660,2.873]],["title/injectables/HangmanWordService.html",[70,0.869,592,2.855]],["body/injectables/HangmanWordService.html",[3,0.075,4,0.065,5,0.065,7,0.181,8,1.475,11,0.01,13,0.43,15,1.952,17,0.17,18,0.798,24,0.075,25,0.276,30,0.006,31,0.006,63,3.897,64,3.907,70,1.123,71,1.43,86,2.183,87,1.503,88,0.43,89,1.041,136,1.189,229,0.717,244,2.622,245,2.736,324,1.523,327,2.622,354,2.622,360,2.622,468,2.325,469,2.256,470,2.325,471,2.325,472,2.325,480,1.652,481,2.556,483,2.456,484,1.652,485,2.474,487,1.652,488,2.736,490,1.652,494,1.392,496,1.392,497,1.959,500,1.392,560,4.411,561,3.502,563,2.489,564,2.489,565,2.489,566,2.489,567,1.758,568,2.736,569,2.489,570,3.194,571,2.489,572,2.489,573,2.489,574,2.622,591,4.632,592,3.689,597,3.195,599,2.962,606,2.622,607,4.268,608,2.622,609,2.622,661,3.195,662,3.507]],["title/classes/IdArg.html",[25,0.301,343,2.117]],["body/classes/IdArg.html",[3,0.102,4,0.089,5,0.089,7,0.247,10,0.735,11,0.01,13,0.304,17,0.159,24,0.129,25,0.526,30,0.007,31,0.007,88,0.304,147,1.237,195,0.675,205,1.263,216,0.636,229,0.97,231,1.219,235,1.374,250,1.8,253,2.226,254,1.361,279,1.295,293,3.254,323,2.322,343,3.369,350,2.562,351,2.97,395,5.251,401,4.359,404,4.542,663,4.359,664,5.43,665,3.788]],["title/classes/IdArrayArg.html",[25,0.301,350,2.045]],["body/classes/IdArrayArg.html",[3,0.1,4,0.088,5,0.088,7,0.243,10,0.725,11,0.01,13,0.3,17,0.158,24,0.128,25,0.523,30,0.007,31,0.007,88,0.3,89,0.926,147,1.231,195,0.666,205,1.246,216,0.628,229,0.964,231,1.208,235,1.365,237,2.036,253,2.207,254,1.342,279,1.631,293,3.226,323,1.642,343,2.617,350,3.226,351,4.12,352,3.055,395,5.226,401,4.301,404,4.504,663,4.301,665,3.737,666,5.358]],["title/classes/IdInput.html",[25,0.301,322,1.648]],["body/classes/IdInput.html",[3,0.115,4,0.101,5,0.101,7,0.279,11,0.009,13,0.343,17,0.129,24,0.115,25,0.426,30,0.008,31,0.008,88,0.343,147,1.154,216,0.719,229,0.952,230,4.054,231,1.314,243,3.498,322,2.827,323,2.453,404,4.899,665,4.278,667,5.404,668,6.133]],["title/classes/JwtAuthGuard.html",[25,0.301,669,3.48]],["body/classes/JwtAuthGuard.html",[3,0.124,4,0.109,5,0.109,11,0.009,17,0.139,24,0.124,25,0.459,30,0.008,31,0.008,119,4.134,216,0.775,229,0.846,409,4.921,415,5.308,417,5.826,669,6.245,670,5.826]],["title/injectables/JwtStrategy.html",[70,0.869,110,3.023]],["body/injectables/JwtStrategy.html",[3,0.09,4,0.079,5,0.079,7,0.219,8,1.679,11,0.01,13,0.357,15,1.267,17,0.16,18,0.965,24,0.09,25,0.334,27,2.06,28,1.554,30,0.007,31,0.007,70,1.279,71,1.73,80,3.264,86,1.811,87,1.247,88,0.426,89,0.863,91,3.582,110,4.448,113,3.357,119,3.01,125,3.864,128,4.241,134,5.12,136,1.905,137,4.241,138,4.723,142,5.619,147,0.989,150,3.802,155,3.864,156,4.241,168,4.241,169,3.864,170,4.241,174,4.241,176,4.241,229,0.616,671,4.241,672,4.813,673,6.378,674,6.378,675,4.813,676,4.813,677,4.241,678,3.864,679,4.241,680,4.241,681,4.241,682,4.813,683,4.813,684,4.813,685,3.582,686,4.813,687,4.813]],["title/classes/LocalAuthGuard.html",[25,0.301,96,3.226]],["body/classes/LocalAuthGuard.html",[3,0.123,4,0.108,5,0.108,11,0.009,17,0.138,24,0.123,25,0.457,30,0.008,31,0.008,96,5.776,119,4.117,216,0.772,229,0.842,409,4.901,415,6.23,688,5.802,689,5.286]],["title/injectables/LocalStrategy.html",[70,0.869,111,3.023]],["body/injectables/LocalStrategy.html",[3,0.088,4,0.078,5,0.078,7,0.214,8,1.656,11,0.01,13,0.352,15,1.241,17,0.165,18,0.945,19,1.044,20,1.07,21,1.07,24,0.088,25,0.327,26,2.303,27,2.018,28,1.522,30,0.007,31,0.007,70,1.261,71,1.694,80,3.23,86,1.786,87,1.23,88,0.352,89,0.852,94,5.061,95,3.785,100,2.811,105,2.689,111,4.388,119,2.948,134,5.05,136,1.408,145,4.307,146,5.542,147,1.256,148,4.974,150,3.75,151,2.391,165,1.899,185,3.785,186,3.105,229,0.603,677,4.154,678,3.785,679,4.154,680,4.154,681,4.154,689,3.785,690,4.154,691,4.715,692,4.715,693,4.715,694,6.291,695,4.715,696,4.715,697,4.715]],["title/classes/MirrorWord.html",[25,0.301,698,2.855]],["body/classes/MirrorWord.html",[3,0.079,4,0.07,5,0.07,7,0.192,10,1.026,11,0.01,13,0.424,17,0.152,19,0.937,20,0.96,21,0.96,24,0.125,25,0.294,30,0.006,31,0.006,88,0.45,89,0.978,147,1.039,165,1.704,195,0.526,199,1.402,205,0.984,216,0.496,231,1.033,235,1.421,249,4.187,256,3.828,279,1.009,344,1.608,423,2.502,425,3.521,426,3.819,427,3.663,428,2.866,429,2.523,430,2.523,432,3.992,434,3.253,436,2.523,441,3.485,442,4.673,443,2.958,444,2.523,445,2.523,446,3.333,447,1.756,449,2.523,577,2.951,579,3.728,580,3.728,581,3.728,583,3.728,584,3.728,698,3.85,699,5.467,700,5.798,701,3.397,702,3.149,703,3.728]],["title/modules/MirrorWordModule.html",[32,1.602,43,3.023]],["body/modules/MirrorWordModule.html",[3,0.09,4,0.079,5,0.079,11,0.01,17,0.171,18,0.962,24,0.09,25,0.333,30,0.007,31,0.007,32,2.352,34,2.264,35,3.003,43,6.008,48,3.347,49,2.523,50,2.523,52,3.223,53,2.43,60,3.347,61,3.347,87,0.938,198,2.737,199,1.59,215,3.63,256,2.344,443,2.12,464,2.861,593,4.228,594,3.572,596,4.228,598,3.161,599,3.572,698,3.161,702,4.737,704,4.228,705,4.228,706,4.228,707,5.758,708,5.758,709,4.737,710,5.11,711,4.799]],["title/injectables/MirrorWordRepository.html",[70,0.869,707,2.855]],["body/injectables/MirrorWordRepository.html",[3,0.065,4,0.057,5,0.057,7,0.157,8,1.331,11,0.01,13,0.41,15,1.846,17,0.172,18,0.692,19,0.764,20,0.783,21,0.783,24,0.065,25,0.239,28,1.114,30,0.005,31,0.005,60,3.852,70,1.014,71,1.24,80,3.723,86,2.08,87,1.433,88,0.392,89,0.992,105,1.968,136,1.031,151,2.785,165,2.037,173,2.037,199,1.144,229,0.647,255,2.273,256,2.47,257,4.081,324,1.441,329,2.273,363,4.338,364,2.273,447,1.433,467,4.081,468,2.099,469,2.037,470,2.099,471,2.099,472,2.099,474,3.756,477,4.455,478,2.407,479,3.041,480,1.433,481,2.307,482,2.273,483,2.183,484,1.433,485,2.233,486,2.158,487,1.433,488,2.47,489,2.569,490,1.433,491,2.158,492,2.058,494,1.207,496,1.207,497,1.768,500,1.207,501,2.158,504,2.407,505,4.059,506,2.771,507,2.771,508,2.771,509,2.771,598,2.273,601,2.771,603,3.041,607,3.941,608,2.273,609,2.273,698,2.273,699,3.527,700,2.771,701,2.771,707,3.33,712,3.452,713,5.056,714,2.273,715,3.452,716,3.452]],["title/classes/MirrorWordResolver.html",[25,0.301,709,3.226]],["body/classes/MirrorWordResolver.html",[3,0.055,4,0.048,5,0.048,7,0.132,8,1.173,10,0.883,11,0.01,13,0.385,15,1.718,17,0.169,18,0.584,19,0.645,20,0.661,21,0.661,24,0.055,25,0.202,26,1.423,27,1.247,28,2.106,30,0.005,31,0.005,60,3.616,61,4.992,86,1.953,87,1.345,88,0.385,89,0.931,93,1.662,98,1.662,136,0.87,151,2.934,173,2.178,195,0.362,205,1.409,216,0.341,219,2.54,222,3.084,223,2.54,255,3.988,256,3.495,279,1.64,329,3.988,363,3.988,364,3.988,407,1.532,483,2.558,494,1.019,496,1.019,497,1.558,500,1.019,519,3.381,520,1.919,523,1.822,528,1.919,529,3.616,532,1.822,534,3.61,535,1.737,536,1.737,537,1.594,538,1.532,539,1.737,540,1.737,541,1.737,543,1.737,546,1.822,547,3.61,550,1.822,553,1.737,556,1.737,594,2.169,598,1.919,607,3.561,608,1.919,609,1.919,631,2.339,638,2.339,643,2.568,645,2.568,647,2.568,650,2.568,652,2.568,654,2.568,698,4.982,700,2.339,708,4.53,709,3.315,710,2.339,714,3.988,717,4.455,718,4.455,719,4.455,720,4.455,721,2.914,722,2.914,723,2.914,724,2.914,725,2.914,726,2.914,727,2.914,728,2.914,729,2.914,730,2.914,731,2.914,732,2.914,733,2.914,734,2.914,735,2.914,736,2.914,737,2.914]],["title/injectables/MirrorWordService.html",[70,0.869,708,2.855]],["body/injectables/MirrorWordService.html",[3,0.075,4,0.065,5,0.065,7,0.181,8,1.475,11,0.01,13,0.43,15,1.952,17,0.17,18,0.798,24,0.075,25,0.276,30,0.006,31,0.006,60,3.897,61,3.907,70,1.123,71,1.43,86,2.183,87,1.503,88,0.43,89,1.041,136,1.189,229,0.717,255,2.622,256,2.736,324,1.523,329,2.622,363,2.622,364,2.622,468,2.325,469,2.256,470,2.325,471,2.325,472,2.325,480,1.652,481,2.556,483,2.456,484,1.652,485,2.474,487,1.652,488,2.736,490,1.652,494,1.392,496,1.392,497,1.959,500,1.392,560,4.411,561,3.502,563,2.489,564,2.489,565,2.489,566,2.489,567,1.758,568,2.736,569,2.489,570,3.194,571,2.489,572,2.489,573,2.489,574,2.622,599,2.962,607,4.268,608,2.622,609,2.622,661,3.195,662,3.507,707,4.632,708,3.689,710,3.195,714,2.622]],["title/guards/PermissionGuard.html",[529,2.279,738,3.48]],["body/guards/PermissionGuard.html",[3,0.083,4,0.073,5,0.073,7,0.201,8,1.588,11,0.01,13,0.338,15,1.166,17,0.155,18,0.888,19,0.981,20,1.005,21,1.005,24,0.083,25,0.307,26,2.163,28,2.214,30,0.006,31,0.006,70,1.209,86,1.712,87,1.179,88,0.338,89,0.817,100,3.596,136,1.323,145,4.199,147,0.687,165,2.966,195,0.551,205,1.03,412,5.91,414,3.556,416,3.903,423,1.896,529,3.171,623,4.207,685,3.296,739,4.429,740,6.043,741,3.903,742,7.363,743,4.429,744,7.948,745,4.429,746,6.031,747,4.429,748,4.429,749,3.903,750,4.429,751,4.429,752,4.429,753,6.031,754,4.429,755,4.429,756,4.429,757,4.429,758,4.429,759,4.429,760,3.903,761,3.903,762,3.903,763,3.903,764,4.429,765,4.429,766,4.429,767,4.429,768,4.429,769,4.429,770,4.429,771,4.429]],["title/classes/Quiz.html",[25,0.301,271,1.855]],["body/classes/Quiz.html",[3,0.067,4,0.059,5,0.059,7,0.162,10,1.082,11,0.01,13,0.447,17,0.15,19,0.791,20,0.811,21,0.811,24,0.114,25,0.248,30,0.006,31,0.006,88,0.473,89,0.907,147,1.301,165,1.44,195,0.444,199,1.184,205,0.831,216,0.419,231,0.916,235,1.471,261,4.543,262,3.817,263,4.543,264,4.9,267,4.02,271,2.613,279,0.852,344,1.358,423,2.22,425,3.209,426,3.481,427,3.339,428,2.613,429,3.992,430,3.992,432,3.992,434,3.079,436,2.131,441,3.092,442,4.838,443,2.696,444,2.131,445,2.131,446,2.958,447,1.483,449,2.131,772,2.66,773,5.376,774,6.104,775,3.574,776,3.574,777,3.574,778,3.574,779,3.574,780,3.574,781,3.574,782,3.574,783,3.574,784,3.092,785,2.235,786,2.493,787,2.869,788,3.574,789,2.66,790,3.149]],["title/modules/QuizModule.html",[32,1.602,44,3.023]],["body/modules/QuizModule.html",[3,0.088,4,0.077,5,0.077,11,0.01,17,0.174,18,0.94,24,0.088,25,0.325,30,0.007,31,0.007,32,2.315,34,2.211,35,2.956,44,5.983,48,3.294,49,2.464,50,2.464,52,3.173,53,2.373,87,1.225,198,2.673,199,1.553,215,3.573,271,2.682,443,2.768,464,2.794,784,2.794,785,2.931,786,3.269,789,4.663,791,4.13,792,4.13,793,4.13,794,5.737,795,5.737,796,4.687,797,4.13,798,4.663,799,4.687,800,4.13,801,4.13,802,4.371,803,4.13,804,4.687]],["title/classes/QuizQuestion.html",[25,0.301,784,2.584]],["body/classes/QuizQuestion.html",[3,0.066,4,0.058,5,0.058,7,0.16,10,1.057,11,0.01,13,0.437,17,0.14,19,0.781,20,0.801,21,0.801,24,0.113,25,0.245,30,0.005,31,0.005,88,0.476,89,1.057,147,1.298,165,1.421,195,0.438,199,1.169,205,0.821,216,0.413,231,0.908,235,1.443,237,1.952,267,4.383,274,3.89,276,4.863,277,4.863,278,4.509,279,1.687,280,2.81,344,1.341,423,2.199,425,3.185,426,3.455,427,3.314,428,2.593,429,2.103,430,3.612,432,3.968,434,3.064,436,2.103,441,3.062,442,4.747,443,2.676,444,2.103,445,2.103,446,2.929,447,1.464,449,2.103,784,3.062,785,4.979,802,2.46,805,2.625,806,3.527,807,4.526,808,3.527,809,3.527,810,3.527,811,3.527,812,3.527,813,3.527,814,3.527,815,2.831,816,3.108]],["title/modules/QuizQuestionModule.html",[32,1.602,817,3.226]],["body/modules/QuizQuestionModule.html",[3,0.09,4,0.079,5,0.079,11,0.01,17,0.171,18,0.962,24,0.09,25,0.333,30,0.007,31,0.007,32,2.352,34,2.264,35,3.003,48,3.347,49,2.523,50,2.523,52,3.223,53,2.43,87,0.938,198,2.737,199,1.59,215,3.63,271,2.724,274,2.344,443,2.12,464,2.861,784,2.861,786,3.347,802,4.44,803,4.228,817,6.411,818,4.228,819,4.228,820,4.228,821,5.758,822,5.758,823,3.572,824,4.799,825,4.228,826,4.737,827,4.799,828,5.11,829,4.228]],["title/injectables/QuizQuestionRepository.html",[70,0.869,821,2.855]],["body/injectables/QuizQuestionRepository.html",[3,0.066,4,0.058,5,0.058,7,0.161,8,1.357,11,0.01,13,0.414,15,1.866,17,0.173,18,0.71,19,0.784,20,0.804,21,0.804,24,0.066,25,0.246,30,0.005,31,0.005,70,1.033,71,1.273,80,3.695,86,2.099,87,1.446,88,0.397,89,1.001,136,1.058,151,2.693,173,2.076,199,1.174,229,0.659,257,4.258,267,2.333,270,2.215,271,3.165,273,4.236,274,2.517,324,1.456,332,2.333,369,2.333,372,2.333,447,1.47,467,4.111,468,2.139,469,2.076,470,2.139,471,2.139,472,2.139,473,2.636,474,3.803,476,3.835,480,1.47,481,2.351,482,2.333,483,2.348,484,1.47,485,2.276,486,2.215,487,1.47,488,2.517,489,2.636,490,1.47,491,2.215,492,2.112,494,1.239,496,1.239,497,1.802,500,1.239,501,2.215,503,2.636,567,1.565,568,2.517,784,2.112,785,3.222,786,2.471,815,2.844,821,3.394,830,3.121,831,3.543,832,2.636,833,2.215,834,2.844,835,2.844,836,3.543,837,3.543,838,3.543,839,3.543,840,3.543,841,3.543]],["title/classes/QuizQuestionResolver.html",[25,0.301,826,3.226]],["body/classes/QuizQuestionResolver.html",[3,0.054,4,0.048,5,0.048,7,0.131,8,1.167,10,0.88,11,0.01,13,0.384,15,1.712,17,0.169,18,0.58,19,0.641,20,0.657,21,0.657,24,0.054,25,0.201,26,1.413,27,1.238,28,2.099,30,0.005,31,0.005,86,1.947,87,1.341,88,0.384,89,0.929,93,1.65,98,1.65,136,0.864,151,2.928,173,2.168,195,0.36,205,1.252,216,0.339,219,2.526,222,3.07,223,2.526,263,2.153,267,1.906,270,3.772,271,2.936,273,3.755,274,3.487,279,1.636,332,3.973,369,3.973,372,3.973,407,1.521,483,2.553,494,1.012,496,1.012,497,1.549,500,1.012,515,2.018,517,3.09,519,3.366,520,1.906,523,1.809,528,1.906,529,3.753,532,1.809,534,3.596,535,1.725,536,1.725,537,1.582,538,1.521,539,1.725,540,1.725,541,1.725,543,1.725,545,2.018,546,1.809,547,3.876,549,2.018,550,1.809,552,2.018,553,1.725,555,2.018,556,1.725,558,2.018,784,4.5,786,2.018,822,3.973,823,5.313,825,2.549,826,3.297,828,2.323,833,3.772,834,2.323,835,2.323,842,2.549,843,4.43,844,4.43,845,4.43,846,4.43,847,2.893,848,2.893,849,2.893,850,2.893,851,2.893,852,2.893,853,2.153,854,2.153,855,2.893,856,2.893,857,2.893,858,2.893,859,2.893,860,2.893,861,2.018,862,2.893,863,2.893,864,2.893,865,2.893,866,2.893]],["title/injectables/QuizQuestionService.html",[70,0.869,822,2.855]],["body/injectables/QuizQuestionService.html",[3,0.075,4,0.065,5,0.065,7,0.181,8,1.475,11,0.01,13,0.43,15,1.952,17,0.17,18,0.798,24,0.075,25,0.276,30,0.006,31,0.006,70,1.123,71,1.43,86,2.183,87,1.503,88,0.43,89,1.041,136,1.189,229,0.717,270,2.489,271,3.173,273,4.52,274,2.736,324,1.523,332,2.622,369,2.622,372,2.622,468,2.325,469,2.256,470,2.325,471,2.325,472,2.325,480,1.652,481,2.556,483,2.456,484,1.652,485,2.474,487,1.652,488,2.736,490,1.652,494,1.392,496,1.392,497,1.959,500,1.392,560,4.411,561,3.502,563,2.489,564,2.489,565,2.489,566,2.489,567,1.758,568,2.736,569,2.489,570,3.194,571,2.489,572,2.489,573,2.489,574,2.622,821,4.632,822,3.689,823,4.169,828,3.195,829,3.507,833,2.489,834,3.195,835,3.195,867,3.507,868,3.981]],["title/injectables/QuizRepository.html",[70,0.869,794,2.855]],["body/injectables/QuizRepository.html",[3,0.063,4,0.056,5,0.056,7,0.269,8,1.311,11,0.01,13,0.407,15,1.83,17,0.171,18,0.677,19,0.748,20,0.767,21,0.767,24,0.063,25,0.234,28,1.908,30,0.005,31,0.005,70,0.998,71,1.214,80,3.75,86,2.064,87,1.422,88,0.389,89,0.984,136,1.009,151,2.858,173,2.381,199,1.12,229,0.637,257,3.823,258,4.295,261,2.515,271,1.446,278,2.515,324,1.429,330,2.225,365,2.225,374,4.295,425,1.777,447,1.403,467,4.057,468,2.066,469,2.005,470,2.066,471,2.066,472,2.066,473,2.515,474,3.718,476,3.705,478,2.357,480,2.066,483,2.304,484,1.403,485,2.199,486,2.113,487,2.066,490,1.403,491,2.113,492,2.014,494,1.182,496,1.182,497,1.741,500,1.182,501,2.113,503,2.515,504,3.472,567,1.493,568,2.431,614,2.712,617,4.386,619,2.712,620,2.712,635,2.712,773,2.712,787,2.712,794,3.278,832,2.515,869,2.977,870,3.379,871,3.379,872,3.379,873,2.225,874,4.744,875,2.712,876,2.712,877,3.379,878,2.977,879,3.379,880,3.379,881,3.379,882,3.379]],["title/classes/QuizResolver.html",[25,0.301,798,3.226]],["body/classes/QuizResolver.html",[3,0.056,4,0.05,5,0.05,7,0.137,8,1.203,10,0.896,11,0.01,13,0.39,15,1.743,17,0.171,18,0.604,19,0.667,20,0.684,21,0.684,24,0.056,25,0.209,26,1.471,27,1.289,28,2.137,30,0.005,31,0.005,86,1.978,87,1.362,88,0.39,89,0.943,93,1.718,98,1.718,136,0.9,151,2.959,173,2.223,195,0.374,205,1.284,216,0.353,219,2.605,222,3.147,223,2.605,258,4.056,271,3.268,279,1.662,330,4.056,365,4.056,374,4.056,407,1.584,483,2.58,494,1.053,496,1.053,497,1.597,500,1.053,515,2.101,517,3.186,519,3.451,520,1.984,523,1.884,528,1.984,529,3.806,532,1.884,534,3.672,535,1.796,536,1.796,537,1.648,538,1.584,539,1.796,540,1.796,541,1.796,543,1.796,545,2.101,546,1.884,547,3.946,549,2.101,550,1.884,552,2.101,553,1.796,555,2.101,556,1.796,558,2.101,773,2.418,795,4.056,797,2.654,798,3.4,800,2.654,853,2.242,854,2.242,861,2.101,873,4.056,874,4.43,875,2.418,876,2.418,883,2.654,884,4.568,885,4.568,886,4.568,887,4.568,888,3.012,889,3.012,890,3.012,891,3.012,892,3.012,893,3.012,894,3.012,895,3.012,896,3.012,897,3.012,898,3.012,899,3.012,900,3.012,901,3.012,902,3.012,903,3.012,904,3.012]],["title/injectables/QuizService.html",[70,0.869,795,2.855]],["body/injectables/QuizService.html",[3,0.076,4,0.067,5,0.067,7,0.185,8,1.501,11,0.01,13,0.434,15,1.97,17,0.171,18,0.818,24,0.076,25,0.283,30,0.006,31,0.006,70,1.143,71,1.467,86,2.2,87,1.515,88,0.434,89,1.049,136,1.219,229,0.729,258,2.688,324,1.538,330,2.688,365,2.688,374,2.688,468,2.366,469,2.296,470,2.366,471,2.366,472,2.366,480,1.694,481,2.601,483,2.479,484,1.694,485,2.518,487,1.694,488,2.784,490,1.694,494,1.427,496,1.427,497,1.993,500,1.427,560,4.438,561,3.564,563,2.552,564,2.552,565,2.552,566,2.552,567,1.803,568,2.784,569,2.552,570,3.251,571,2.552,572,2.552,573,2.552,574,2.688,794,4.683,795,3.754,801,3.596,873,2.688,874,5.273,875,3.276,876,3.276,905,3.596,906,4.081]],["title/injectables/RepositoryProxyService.html",[70,0.869,560,2.371]],["body/injectables/RepositoryProxyService.html",[3,0.074,4,0.065,5,0.065,7,0.179,8,1.465,11,0.01,13,0.429,15,1.945,17,0.147,18,0.79,24,0.074,25,0.273,27,1.687,28,2.384,30,0.006,31,0.006,70,1.115,71,1.416,86,2.176,87,1.498,88,0.429,89,1.038,136,1.177,229,0.896,322,2.45,326,1.636,343,2.717,346,1.687,350,2.624,467,2.072,468,2.309,469,2.241,470,2.309,471,2.309,472,2.309,480,2.309,481,3.195,483,2.447,484,2.309,485,3.093,487,2.309,488,3.42,490,2.309,560,3.042,561,2.465,563,3.478,567,2.457,568,3.42,570,3.993,665,3.88,907,6.94,908,3.473,909,6.446,910,3.942,911,3.942,912,3.942,913,3.942,914,3.942,915,3.942,916,3.942,917,3.473,918,3.942,919,3.942,920,3.942,921,3.942,922,3.942]],["title/classes/Role.html",[25,0.301,923,2.472]],["body/classes/Role.html",[3,0.075,4,0.066,5,0.066,7,0.182,10,1.071,11,0.01,13,0.443,17,0.148,19,0.886,20,0.908,21,0.908,24,0.122,25,0.278,30,0.006,31,0.006,87,1.271,88,0.465,89,0.954,147,1.273,165,1.611,195,0.497,199,1.326,205,0.931,216,0.469,231,0.993,235,1.464,262,4.063,279,0.954,288,5.217,344,1.52,423,2.406,425,3.417,426,3.706,427,3.554,428,2.781,429,3.351,430,3.351,432,4.202,434,3.196,436,2.385,441,3.351,442,4.813,443,2.87,444,2.385,445,2.385,446,3.205,447,1.66,449,2.385,923,3.205,924,2.977,925,4.916,926,4,927,4,928,4,929,4,930,4,931,4,932,4,933,2.977,934,2.79,935,3.525]],["title/modules/RoleModule.html",[32,1.602,45,2.855]],["body/modules/RoleModule.html",[3,0.085,4,0.075,5,0.075,11,0.01,17,0.175,18,0.913,24,0.085,25,0.316,30,0.007,31,0.007,32,2.271,34,2.149,35,2.9,39,5.011,45,5.712,47,3.843,48,3.232,49,2.395,50,2.395,52,3.112,53,3.112,57,3.656,58,3.656,87,0.891,113,4.287,198,2.597,199,1.509,215,3.505,443,2.012,464,2.715,923,2.597,934,4.287,936,4.013,937,4.555,938,4.013,939,4.013,940,5.712,941,5.712,942,4.555,943,4.013,944,4.574,945,4.555,946,4.013,947,4.013,948,3.656]],["title/injectables/RoleRepository.html",[70,0.869,940,2.855]],["body/injectables/RoleRepository.html",[3,0.069,4,0.06,5,0.06,7,0.167,8,1.393,11,0.01,13,0.419,15,1.893,17,0.174,18,0.736,19,0.813,20,0.833,21,0.833,24,0.069,25,0.255,30,0.006,31,0.006,70,1.06,71,1.32,80,3.725,86,2.125,87,1.464,88,0.402,89,1.013,136,1.097,151,2.732,173,2.13,199,1.217,229,0.677,257,4.293,285,2.418,324,1.477,334,2.418,377,2.418,380,2.418,447,1.524,467,4.151,468,2.195,469,2.13,470,2.195,471,2.195,472,2.195,474,3.867,480,1.524,481,2.413,482,2.418,483,2.382,484,1.524,485,2.336,486,2.296,487,1.524,488,2.583,489,2.733,490,1.524,491,2.296,492,2.189,494,1.284,496,1.284,497,1.849,500,1.284,501,2.296,567,1.622,568,2.583,832,2.733,923,2.094,925,2.561,933,2.733,940,3.483,949,3.235,950,3.672,951,3.672,952,4.66,953,3.672,954,2.418,955,4.976,956,2.948,957,2.948,958,3.672,959,3.672]],["title/classes/RoleResolver.html",[25,0.301,944,3.226]],["body/classes/RoleResolver.html",[3,0.057,4,0.05,5,0.05,7,0.139,8,1.217,10,0.902,11,0.01,13,0.392,15,1.755,17,0.171,18,0.613,19,0.677,20,0.694,21,0.694,24,0.057,25,0.212,26,1.494,27,1.309,28,2.151,30,0.005,31,0.005,86,1.989,87,1.37,88,0.392,89,0.949,93,1.744,98,1.744,136,0.913,151,2.971,173,2.243,195,0.38,205,1.296,216,0.358,219,2.635,222,3.176,223,2.635,279,1.671,285,4.088,311,3.439,334,4.088,377,4.088,380,4.088,407,1.608,483,2.59,494,1.069,496,1.069,497,1.616,500,1.069,528,2.014,529,2.928,534,3.7,535,1.823,536,1.823,537,1.673,538,1.608,539,1.823,540,1.823,541,1.823,543,1.823,546,1.912,547,3.973,550,1.912,553,1.823,556,1.823,861,2.133,923,4.373,925,2.133,941,4.616,943,2.694,944,3.439,946,2.694,954,4.088,955,4.471,956,2.455,957,2.455,960,2.694,961,4.621,962,4.621,963,4.621,964,3.058,965,3.058,966,3.058,967,3.058,968,3.058,969,3.058,970,3.058,971,3.058,972,3.058,973,3.058,974,3.058,975,3.058,976,3.058,977,3.058,978,3.058,979,3.058,980,3.058,981,3.058,982,3.058,983,3.058,984,3.058,985,3.058,986,3.058,987,3.058,988,3.058,989,3.058,990,3.058]],["title/injectables/RoleService.html",[70,0.869,941,2.855]],["body/injectables/RoleService.html",[3,0.076,4,0.067,5,0.067,7,0.185,8,1.501,11,0.01,13,0.434,15,1.97,17,0.171,18,0.818,24,0.076,25,0.283,30,0.006,31,0.006,70,1.143,71,1.467,86,2.2,87,1.515,88,0.434,89,1.049,136,1.219,229,0.729,285,2.688,324,1.538,334,2.688,377,2.688,380,2.688,468,2.366,469,2.296,470,2.366,471,2.366,472,2.366,480,1.694,481,2.601,483,2.479,484,1.694,485,2.518,487,1.694,488,2.784,490,1.694,494,1.427,496,1.427,497,1.993,500,1.427,560,4.438,564,2.552,565,2.552,566,2.552,567,1.803,568,2.784,569,2.552,570,3.251,571,2.552,572,2.552,573,2.552,940,4.927,941,3.754,947,3.596,954,2.688,955,5.273,956,3.276,957,3.276,991,3.596,992,5.701,993,4.081,994,4.081]],["title/classes/School.html",[25,0.301,995,2.855]],["body/classes/School.html",[3,0.07,4,0.061,5,0.061,7,0.17,10,1.094,11,0.01,13,0.452,17,0.144,19,0.828,20,0.849,21,0.849,24,0.117,25,0.26,30,0.006,31,0.006,87,1.224,88,0.469,89,0.926,147,1.312,165,1.507,195,0.465,199,1.239,205,0.87,216,0.438,231,0.947,235,1.486,279,0.892,297,4.368,298,4.661,299,3.916,300,3.916,344,1.422,423,2.294,425,3.293,426,3.571,427,3.425,428,2.68,429,3.195,430,3.195,432,4.491,434,3.127,436,2.23,441,3.195,442,4.887,443,2.766,444,2.23,445,2.23,446,3.056,447,1.552,449,2.23,995,3.529,996,2.783,997,5.49,998,3.74,999,3.74,1000,3.74,1001,3.74,1002,3.74,1003,3.74,1004,3.74,1005,3.74,1006,3.74,1007,3.002,1008,2.783,1009,3.295]],["title/modules/SchoolModule.html",[32,1.602,46,3.023]],["body/modules/SchoolModule.html",[3,0.091,4,0.08,5,0.08,11,0.01,17,0.172,18,0.98,24,0.091,25,0.339,30,0.007,31,0.007,32,2.38,34,2.305,35,3.039,46,6.028,48,3.387,49,2.569,50,2.569,52,3.262,53,2.474,87,0.955,198,2.786,199,1.619,215,3.673,443,2.158,464,2.913,995,3.218,1008,4.794,1010,4.305,1011,4.305,1012,4.305,1013,5.774,1014,5.774,1015,4.886,1016,4.305,1017,4.794,1018,4.886,1019,4.305,1020,4.305,1021,4.886]],["title/injectables/SchoolRepository.html",[70,0.869,1013,2.855]],["body/injectables/SchoolRepository.html",[3,0.061,4,0.054,5,0.054,7,0.149,8,1.281,11,0.01,13,0.402,15,1.807,17,0.17,18,0.657,19,0.725,20,0.744,21,0.744,24,0.061,25,0.227,28,1.57,30,0.005,31,0.005,70,0.975,71,1.177,80,3.681,86,2.041,87,1.406,88,0.402,89,0.973,136,0.978,151,2.733,165,1.96,173,2.338,199,1.086,229,0.622,257,4.021,294,2.158,324,1.411,336,2.158,382,2.158,385,4.23,447,1.36,467,4.021,468,2.019,469,1.96,470,2.019,471,2.409,472,2.019,473,2.438,474,3.663,476,3.621,478,2.285,480,1.36,481,2.22,482,2.158,483,2.383,484,1.36,485,2.149,486,2.048,487,2.019,490,1.36,491,2.048,492,1.953,494,1.145,496,1.145,497,1.701,500,1.145,501,2.048,503,2.438,504,2.285,567,1.447,568,2.376,614,2.63,619,3.905,620,3.905,832,2.438,878,2.886,995,2.158,997,2.63,1007,2.63,1013,3.204,1022,2.886,1023,3.276,1024,3.276,1025,2.158,1026,4.659,1027,2.63,1028,2.63,1029,3.276,1030,3.276,1031,3.276,1032,3.276,1033,3.276,1034,5.804,1035,3.276,1036,3.276,1037,3.276,1038,5.804,1039,3.276,1040,3.276,1041,3.276]],["title/classes/SchoolResolver.html",[25,0.301,1017,3.226]],["body/classes/SchoolResolver.html",[3,0.057,4,0.05,5,0.05,7,0.139,8,1.217,10,0.902,11,0.01,13,0.392,15,1.755,17,0.171,18,0.613,19,0.677,20,0.694,21,0.694,24,0.057,25,0.212,26,1.494,27,1.309,28,2.151,30,0.005,31,0.005,86,1.989,87,1.37,88,0.392,89,0.949,93,1.744,98,1.744,136,0.913,151,2.971,173,2.243,195,0.38,205,1.296,216,0.358,219,2.635,222,3.176,223,2.635,279,1.671,294,4.088,336,4.088,382,4.088,385,4.088,407,1.608,483,2.59,494,1.069,496,1.069,497,1.616,500,1.069,515,2.133,517,3.223,519,2.889,523,1.912,529,3.263,532,1.912,534,3.7,535,1.823,536,1.823,537,1.673,538,1.608,539,1.823,540,1.823,541,1.823,543,2.755,545,2.133,547,3.32,549,2.133,552,2.133,553,1.823,555,2.133,556,1.823,558,2.133,853,2.276,854,2.276,861,2.133,995,5.05,997,2.455,1014,4.088,1016,2.694,1017,3.439,1019,2.694,1025,4.088,1026,4.471,1027,2.455,1028,2.455,1042,2.694,1043,4.621,1044,4.621,1045,4.621,1046,4.621,1047,3.058,1048,3.058,1049,3.058,1050,3.058,1051,3.058,1052,3.058,1053,3.058,1054,3.058,1055,3.058,1056,3.058,1057,3.058,1058,3.058,1059,3.058,1060,3.058,1061,3.058,1062,3.058,1063,3.058,1064,3.058]],["title/injectables/SchoolService.html",[70,0.869,1014,2.855]],["body/injectables/SchoolService.html",[3,0.076,4,0.067,5,0.067,7,0.185,8,1.501,11,0.01,13,0.434,15,1.97,17,0.171,18,0.818,24,0.076,25,0.283,30,0.006,31,0.006,70,1.143,71,1.467,86,2.2,87,1.515,88,0.434,89,1.049,136,1.219,229,0.729,294,2.688,324,1.538,336,2.688,382,2.688,385,2.688,468,2.366,469,2.296,470,2.366,471,2.366,472,2.366,480,1.694,481,2.601,483,2.479,484,1.694,485,2.518,487,1.694,488,2.784,490,1.694,494,1.427,496,1.427,497,1.993,500,1.427,560,4.438,561,3.564,563,2.552,564,2.552,565,2.552,566,2.552,567,1.803,568,2.784,569,2.552,570,3.251,571,2.552,572,2.552,573,2.552,574,2.688,1013,4.683,1014,3.754,1020,3.596,1025,2.688,1026,5.273,1027,3.276,1028,3.276,1065,3.596,1066,4.081]],["title/injectables/SimpleRepository.html",[70,0.869,467,2.279]],["body/injectables/SimpleRepository.html",[3,0.059,4,0.051,5,0.051,7,0.142,8,1.238,11,0.01,13,0.396,15,1.772,17,0.142,18,0.627,19,0.693,20,0.71,21,0.71,24,0.059,25,0.217,27,1.339,28,2.282,30,0.005,31,0.005,70,0.943,71,1.125,80,3.8,86,2.007,87,1.382,88,0.377,89,0.957,105,1.785,136,0.935,151,2.988,165,1.894,173,2.711,186,4.656,257,4.378,300,1.957,322,1.189,323,1.441,326,1.299,343,1.529,346,1.339,350,1.476,425,1.645,426,1.785,427,3.089,428,1.339,434,2.344,446,1.785,447,1.299,467,2.472,468,1.952,469,1.894,470,2.344,471,1.952,472,2.344,474,4.031,480,1.952,481,2.577,483,2.558,484,1.952,485,2.495,487,1.952,488,2.758,490,1.952,538,1.645,567,2.077,568,3.067,570,1.785,615,4.143,623,2.183,635,2.512,665,3.279,685,2.329,917,2.757,1067,2.757,1068,3.13,1069,3.13,1070,3.13,1071,3.13,1072,3.13,1073,3.13,1074,3.13,1075,2.757,1076,4.702,1077,3.13,1078,2.681,1079,2.757,1080,2.757,1081,2.757,1082,3.13,1083,3.13,1084,3.13,1085,4.702,1086,3.13,1087,2.512,1088,2.757,1089,4.143,1090,3.13,1091,3.13,1092,3.13,1093,3.13,1094,3.13,1095,3.13,1096,3.13]],["title/classes/UpdateGroupingItemInput.html",[25,0.301,493,2.855]],["body/classes/UpdateGroupingItemInput.html",[3,0.08,4,0.07,5,0.07,7,0.193,10,0.98,11,0.01,13,0.425,17,0.152,19,0.942,20,0.965,21,0.965,24,0.08,25,0.407,30,0.006,31,0.006,65,3.993,88,0.425,89,1.11,147,1.291,195,0.529,205,1.684,216,0.498,226,3.709,228,3.166,229,0.75,231,1.037,232,5.391,233,5.391,234,5.391,235,1.377,236,3.748,237,1.617,240,2.051,241,0.99,250,1.41,253,1.894,254,1.066,279,1.726,280,3.209,322,2.751,323,2.058,324,0.874,326,1.766,344,2.23,423,2.511,428,2.874,434,2.435,493,3.864,1078,3.829,1097,6.691,1098,4.254,1099,4.254,1100,2.802,1101,4.254]],["title/classes/UpdateHangmanWordInput.html",[25,0.301,606,2.855]],["body/classes/UpdateHangmanWordInput.html",[3,0.086,4,0.075,5,0.075,7,0.208,10,0.943,11,0.01,13,0.417,17,0.157,19,1.011,20,1.037,21,1.037,24,0.086,25,0.427,30,0.007,31,0.007,63,3.92,88,0.417,89,1.086,147,1.244,195,0.568,205,1.735,216,0.535,229,0.788,231,1.088,235,1.352,240,2.153,241,1.063,245,3.642,247,2.856,248,4.356,249,4.356,250,1.514,251,4.024,253,1.988,254,1.144,279,1.469,322,2.834,323,2.135,324,0.939,326,1.896,344,2.341,423,2.636,428,2.982,434,2.556,606,4.056,1078,3.973,1100,3.008,1102,5.986,1103,4.024,1104,4.568]],["title/classes/UpdateMirrorWordInput.html",[25,0.301,714,2.855]],["body/classes/UpdateMirrorWordInput.html",[3,0.093,4,0.081,5,0.081,7,0.225,10,0.879,11,0.01,13,0.406,17,0.162,19,1.095,20,1.123,21,1.123,24,0.093,25,0.451,30,0.007,31,0.007,60,3.811,88,0.406,89,0.879,147,1.194,195,0.615,216,0.58,229,0.831,231,1.147,235,1.314,240,2.271,241,1.151,247,3.093,249,4.533,250,2.152,253,2.34,254,1.239,256,3.541,322,2.926,323,2.221,324,1.017,326,2.053,423,2.779,428,3.103,434,2.695,714,4.277,1078,4.134,1100,3.258,1102,5.819,1103,4.358,1105,4.946]],["title/classes/UpdateQuizInput.html",[25,0.301,873,2.855]],["body/classes/UpdateQuizInput.html",[3,0.077,4,0.067,5,0.067,7,0.186,10,1.014,11,0.01,13,0.434,17,0.157,19,0.906,20,0.929,21,0.929,24,0.077,25,0.396,30,0.006,31,0.006,88,0.434,89,0.773,147,1.28,195,0.509,205,1.656,216,0.479,229,0.731,231,1.009,235,1.406,237,2.17,240,1.997,241,0.952,250,1.356,253,1.843,254,1.025,260,3.045,261,4.896,262,4.113,263,4.896,264,5.28,267,4.332,271,2.444,273,2.854,279,1.85,280,3.894,322,2.706,323,2.016,324,0.841,326,1.698,344,2.17,423,2.444,428,2.815,434,2.37,833,3.571,873,3.761,1078,3.751,1106,6.834,1107,4.092,1108,4.092,1109,4.092,1110,4.092,1111,4.092,1112,4.092,1113,3.285]],["title/classes/UpdateQuizQuestionInput.html",[25,0.301,833,2.71]],["body/classes/UpdateQuizQuestionInput.html",[3,0.075,4,0.066,5,0.066,7,0.183,10,1.007,11,0.01,13,0.432,17,0.149,19,0.89,20,0.912,21,0.912,24,0.075,25,0.391,30,0.006,31,0.006,88,0.46,89,1.044,147,1.317,195,0.5,205,1.643,216,0.471,229,0.722,231,0.997,235,1.398,237,2.144,240,1.972,241,0.935,250,1.332,253,1.821,254,1.007,271,3.301,274,3.767,275,2.992,276,5.231,277,5.231,278,4.849,279,1.839,280,3.864,281,3.542,282,3.542,322,2.685,323,1.997,324,0.826,326,1.669,344,2.144,423,2.414,428,2.789,434,2.341,833,3.527,1078,3.716,1100,2.648,1113,6.192,1114,4.02,1115,4.02,1116,4.02]],["title/classes/UpdateRoleInput.html",[25,0.301,954,2.855]],["body/classes/UpdateRoleInput.html",[3,0.08,4,0.07,5,0.07,7,0.194,10,0.982,11,0.01,13,0.426,17,0.153,19,0.947,20,0.971,21,0.971,24,0.08,25,0.409,30,0.006,31,0.006,87,1.317,88,0.426,89,1.111,147,1.292,195,0.532,205,1.37,216,0.501,229,0.753,231,1.04,235,1.379,237,1.625,240,2.059,241,0.995,250,1.417,253,2.342,254,1.071,262,4.211,279,1.73,280,2.339,287,3.183,288,5.406,293,2.778,322,2.758,323,2.063,324,0.879,326,1.775,344,2.238,399,5.824,423,2.52,428,2.882,434,2.444,954,3.878,1078,3.84,1100,2.816,1117,6.704,1118,5.888,1119,4.276,1120,4.276,1121,4.276,1122,4.276,1123,4.276]],["title/classes/UpdateSchoolInput.html",[25,0.301,1025,2.855]],["body/classes/UpdateSchoolInput.html",[3,0.073,4,0.064,5,0.064,7,0.176,10,1.033,11,0.01,13,0.439,17,0.146,19,0.86,20,0.882,21,0.882,24,0.073,25,0.382,30,0.006,31,0.006,87,1.25,88,0.439,89,1.143,147,1.32,195,0.483,205,1.864,216,0.455,229,0.704,231,0.973,235,1.422,237,1.476,240,1.925,241,0.904,250,1.287,253,1.777,254,0.973,279,1.819,280,2.125,293,2.597,296,2.891,297,4.461,298,4.759,299,3.999,300,3.999,303,3.422,307,4.851,322,2.644,323,1.96,324,0.798,326,1.612,344,2.644,399,4.419,423,2.356,428,2.737,434,2.285,1025,3.626,1078,3.647,1100,2.558,1124,6.911,1125,3.884,1126,3.884,1127,3.884,1128,3.884,1129,3.884,1130,3.884]],["title/classes/UpdateUserInput.html",[25,0.301,1131,2.855]],["body/classes/UpdateUserInput.html",[3,0.067,4,0.059,5,0.059,7,0.163,10,1.062,11,0.01,13,0.448,17,0.141,19,0.795,20,0.815,21,0.815,24,0.067,25,0.361,30,0.006,31,0.006,88,0.448,89,1.146,147,1.337,148,4.03,150,3.648,195,0.446,205,1.914,216,0.421,229,0.666,231,0.919,235,1.45,237,1.364,240,1.819,241,0.835,250,1.19,253,1.679,254,0.9,279,1.871,280,2.846,299,3.827,310,2.672,311,4.554,312,4.913,319,4.584,322,2.551,323,1.875,324,0.738,325,2.047,326,1.49,344,2.823,423,2.227,428,2.619,434,2.16,1078,3.49,1131,3.427,1132,7.047,1133,6.12,1134,6.12,1135,3.59,1136,3.59,1137,3.59,1138,3.59,1139,3.59,1140,3.59,1141,3.59,1142,3.59,1143,3.59]],["title/classes/User.html",[25,0.301,145,2.472]],["body/classes/User.html",[3,0.065,4,0.057,5,0.057,7,0.158,10,1.074,11,0.01,13,0.444,17,0.154,19,0.769,20,0.788,21,0.788,24,0.112,25,0.241,30,0.005,31,0.005,88,0.462,89,1.053,100,3.58,145,3.425,147,1.231,148,3.955,150,3.58,165,1.399,195,0.432,199,1.151,205,1.182,216,0.407,231,0.898,235,1.438,237,1.32,279,1.576,280,1.9,299,3.755,300,2.172,311,4.47,312,4.821,344,1.931,423,2.174,425,3.158,426,3.425,427,3.285,428,2.57,429,2.071,430,3.58,432,3.939,434,3.048,436,3.028,441,3.028,442,4.871,443,2.653,444,2.071,445,2.071,446,2.897,447,2.109,449,2.071,807,3.061,923,2.897,925,4.189,948,2.789,1087,4.078,1144,2.585,1145,3.474,1146,3.474,1147,3.474,1148,3.474,1149,3.474,1150,3.474,1151,5.08,1152,3.474,1153,3.474,1154,3.474,1155,2.789,1156,3.474,1157,2.789,1158,3.474,1159,2.585,1160,3.061]],["title/injectables/UserRepository.html",[70,0.869,1161,2.855]],["body/injectables/UserRepository.html",[3,0.051,4,0.045,5,0.045,7,0.124,8,1.114,11,0.01,13,0.375,15,1.666,17,0.165,18,0.547,19,0.604,20,0.619,21,0.619,24,0.051,25,0.189,27,1.811,28,2.162,30,0.004,31,0.004,70,0.848,71,0.98,80,3.703,86,1.901,87,1.309,88,0.375,89,0.907,100,1.626,105,2.413,136,1.264,145,3.334,148,1.796,150,2.523,151,2.881,157,2.189,158,2.189,159,2.189,160,2.189,161,2.189,162,2.189,163,2.189,164,2.189,165,2.089,166,1.902,167,2.029,169,3.397,172,2.402,173,2.089,185,4.693,186,4.885,187,2.402,188,2.402,199,0.904,257,4.267,297,1.902,300,1.705,308,3.85,323,1.589,338,3.85,392,3.85,402,3.85,425,1.434,427,1.491,434,1.757,447,1.757,468,1.757,469,1.705,470,2.153,471,1.757,472,1.757,474,3.985,480,1.757,483,2.394,484,1.757,487,1.757,490,1.757,492,1.626,494,0.953,496,0.953,497,1.48,500,0.953,567,1.869,623,1.902,923,1.555,925,1.902,933,2.029,952,4.57,1075,2.402,1079,2.402,1080,2.402,1081,2.402,1087,2.189,1088,2.402,1089,4.57,1131,3.85,1155,2.189,1157,2.189,1161,2.787,1162,2.189,1163,2.727,1164,2.727,1165,4.232,1166,2.727,1167,2.727,1168,2.727,1169,2.727,1170,2.727,1171,2.727,1172,4.164,1173,2.189,1174,2.189,1175,2.727,1176,2.727,1177,2.727,1178,2.727,1179,4.232,1180,2.727,1181,2.727,1182,2.727,1183,2.727,1184,2.727,1185,2.727,1186,2.727,1187,2.727,1188,2.727,1189,4.232,1190,2.727,1191,2.727,1192,2.727,1193,2.727,1194,2.727,1195,2.727,1196,2.727,1197,2.727,1198,2.727,1199,2.727]],["title/modules/UsersModule.html",[32,1.602,47,2.71]],["body/modules/UsersModule.html",[3,0.086,4,0.076,5,0.076,11,0.01,17,0.178,18,0.921,24,0.086,25,0.319,30,0.007,31,0.007,32,2.284,34,2.167,35,2.917,39,3.865,45,4.071,47,5.287,48,3.25,49,2.415,50,2.415,52,3.13,53,2.326,58,3.687,59,4.047,87,1.209,113,4.874,138,5.177,145,2.62,198,2.62,199,1.522,215,3.525,443,2.731,464,2.738,923,2.62,934,4.312,948,3.687,1155,3.687,1159,4.601,1161,5.291,1200,4.047,1201,4.047,1202,4.047,1203,4.594,1204,4.047,1205,4.601,1206,4.594,1207,4.047,1208,4.047,1209,4.594]],["title/classes/UsersResolver.html",[25,0.301,1205,3.226]],["body/classes/UsersResolver.html",[3,0.057,4,0.05,5,0.05,7,0.138,8,1.208,10,0.898,11,0.01,13,0.391,15,1.747,17,0.171,18,0.607,19,0.671,20,0.688,21,0.688,24,0.057,25,0.21,26,1.48,27,1.297,28,2.142,30,0.005,31,0.005,86,1.982,87,1.365,88,0.391,89,0.945,93,1.728,98,1.728,100,1.806,136,0.905,138,4.163,145,4.361,151,2.963,173,2.231,195,0.377,205,1.067,216,0.355,219,2.616,222,3.158,223,2.616,279,1.583,308,4.068,338,4.068,392,4.068,402,4.068,407,1.593,483,2.584,494,1.059,496,1.059,497,1.604,500,1.059,519,3.463,520,1.995,523,1.894,529,3.671,532,1.894,534,3.682,535,1.806,536,1.806,537,1.657,538,1.593,539,1.806,540,1.806,541,1.806,543,1.806,546,1.894,547,3.956,550,1.894,553,1.806,556,1.806,853,2.255,854,2.255,861,2.113,1131,4.068,1172,4.445,1173,2.432,1174,2.432,1204,2.669,1205,3.414,1208,2.669,1210,2.669,1211,4.588,1212,4.588,1213,4.588,1214,4.588,1215,3.029,1216,3.029,1217,3.029,1218,3.029,1219,3.029,1220,3.029,1221,3.029,1222,3.029,1223,3.029,1224,3.029,1225,3.029,1226,3.029,1227,3.029,1228,3.029,1229,3.029,1230,3.029,1231,3.029,1232,3.029,1233,3.029,1234,3.029,1235,3.029,1236,3.029,1237,3.029,1238,3.029,1239,3.029]],["title/injectables/UsersService.html",[70,0.869,138,2.584]],["body/injectables/UsersService.html",[3,0.064,4,0.056,5,0.056,7,0.156,8,1.325,11,0.01,13,0.409,15,1.842,17,0.163,18,0.688,19,0.759,20,0.778,21,0.778,24,0.064,25,0.238,26,1.675,27,1.468,28,2.257,30,0.005,31,0.005,70,1.009,71,1.232,80,3.608,86,2.075,87,1.429,88,0.409,89,0.99,100,2.044,105,1.956,136,1.024,138,3,151,3.055,157,2.753,158,2.753,159,2.753,160,2.753,161,2.753,162,2.753,163,2.753,164,2.753,165,1.381,166,2.392,167,2.552,173,2.401,257,4.447,308,4.325,338,4.325,392,4.325,402,4.325,468,2.089,469,2.027,470,2.089,471,2.089,472,2.089,480,2.089,483,2.318,484,2.089,487,2.089,490,2.089,494,1.199,496,1.199,497,1.76,500,1.199,567,2.223,1131,4.325,1161,4.815,1172,4.785,1173,2.753,1174,2.753,1207,3.022,1240,2.753,1241,3.429,1242,3.429,1243,3.429,1244,3.429,1245,3.429,1246,3.429,1247,3.429,1248,3.429,1249,3.429,1250,3.429,1251,3.429,1252,2.753,1253,3.429,1254,3.429,1255,3.429]],["title/coverage.html",[1256,5.236]],["body/coverage.html",[0,1.87,1,1.163,5,0.026,6,1.377,11,0.01,22,1.029,25,0.608,30,0.003,31,0.003,60,2.472,61,1.87,63,2.472,64,1.87,65,2.472,66,1.87,70,1.541,72,1.377,76,1.163,77,1.377,88,0.087,94,0.977,96,1.163,110,1.09,111,1.09,133,2.153,138,0.931,145,0.891,166,2.457,186,1.029,190,1.254,192,1.254,196,1.163,200,1.254,217,1.377,225,1.029,226,3.067,227,1.377,228,2.622,230,0.791,242,0.855,244,1.029,245,3.067,246,2.153,247,3.209,255,1.029,256,3.067,258,1.029,259,1.377,260,2.622,270,0.977,271,2.197,272,1.254,274,3.067,275,2.622,285,1.029,286,1.377,287,2.622,294,1.029,295,1.377,296,2.622,308,1.029,309,1.377,310,2.622,320,1.029,321,1.377,322,0.594,327,1.029,328,2.153,329,1.029,330,1.029,331,1.377,332,1.029,333,1.377,334,1.029,335,1.377,336,1.029,337,1.377,338,1.029,339,1.377,340,1.029,341,2.153,342,1.377,343,0.763,348,1.029,349,1.377,350,0.737,354,1.029,355,2.914,356,2.153,360,1.029,361,2.153,363,1.029,364,1.029,365,1.029,366,2.153,367,1.377,369,1.029,370,2.153,371,1.377,372,1.029,373,1.377,374,1.029,375,1.377,377,1.029,378,2.153,379,1.377,380,1.029,381,1.377,382,1.029,383,2.153,384,1.377,385,1.029,386,1.377,392,1.029,393,2.153,394,1.377,395,1.029,400,1.254,402,1.029,403,1.377,404,3.097,405,1.377,407,0.822,408,1.377,409,2.622,419,1.377,420,1.029,421,2.457,422,1.996,450,1.163,455,1.029,456,1.029,459,1.163,466,1.377,467,0.822,493,1.029,510,1.377,529,0.822,537,0.855,538,0.822,559,1.377,560,0.855,575,1.029,576,2.457,577,2.914,586,1.163,591,1.029,592,1.029,595,1.163,601,2.153,606,1.029,623,6.301,638,2.153,661,2.153,663,2.153,667,1.377,669,1.254,670,1.377,671,1.377,688,1.377,690,1.377,698,1.029,699,2.457,702,1.163,707,1.029,708,1.029,709,1.163,714,1.029,738,1.254,740,1.377,741,1.377,772,1.996,784,0.931,785,2.203,789,1.163,794,1.029,795,1.029,798,1.163,802,1.09,805,1.996,821,1.029,822,1.029,823,1.996,826,1.163,830,1.377,833,0.977,842,1.377,867,1.377,869,1.377,873,1.029,883,1.377,905,1.377,907,1.377,908,1.377,923,0.891,924,1.996,934,1.09,940,1.029,941,1.029,944,1.163,949,1.377,954,1.029,960,1.377,991,1.377,995,1.029,996,1.996,1008,1.163,1013,1.029,1014,1.029,1017,1.163,1022,1.377,1025,1.029,1042,1.377,1065,1.377,1067,1.377,1097,1.377,1102,2.153,1106,1.377,1113,1.254,1117,1.377,1124,1.377,1131,1.029,1132,1.377,1144,1.996,1159,1.163,1161,1.029,1162,2.153,1205,1.163,1210,1.377,1240,2.153,1256,1.377,1257,1.377,1258,1.563,1259,1.563,1260,8.006,1261,4.178,1262,7.466,1263,7.807,1264,1.377,1265,1.377,1266,1.377,1267,2.363,1268,5.794,1269,1.377,1270,1.377,1271,1.377,1272,1.377,1273,3.523,1274,4.702,1275,3.523,1276,8.088,1277,1.563,1278,4.178,1279,1.377,1280,2.363,1281,1.377,1282,1.377,1283,1.563,1284,1.377,1285,1.563,1286,1.563]],["title/dependencies.html",[35,2.463,1287,3.607]],["body/dependencies.html",[11,0.01,18,0.926,25,0.321,30,0.007,31,0.007,35,2.18,99,4.982,115,3.709,117,3.438,119,2.889,125,3.709,195,0.574,199,1.531,254,1.158,447,1.918,678,5.625,689,3.709,749,4.071,1288,4.62,1289,8.357,1290,4.62,1291,4.62,1292,4.62,1293,4.62,1294,6.206,1295,5.468,1296,4.62,1297,4.62,1298,4.62,1299,4.62,1300,7.491,1301,4.62,1302,4.62,1303,4.62,1304,4.62,1305,4.62,1306,4.071,1307,4.62,1308,4.62,1309,4.071,1310,4.62,1311,4.62,1312,4.62,1313,4.62,1314,4.62,1315,4.62,1316,4.62,1317,4.62,1318,4.62,1319,6.206,1320,4.62,1321,4.071,1322,4.62,1323,4.62,1324,4.62,1325,4.62,1326,4.62,1327,4.62,1328,4.62,1329,4.62,1330,4.62,1331,4.62,1332,4.62,1333,4.62,1334,4.62,1335,4.62,1336,4.62,1337,4.62,1338,4.62,1339,4.62,1340,4.62,1341,4.62]],["title/miscellaneous/functions.html",[1342,2.375,1343,4.6]],["body/miscellaneous/functions.html",[7,0.311,11,0.008,30,0.008,31,0.008,1282,6.023,1284,7.385,1342,4.502,1343,6.023,1344,6.836]],["title/index.html",[7,0.164,1345,3.607,1346,3.607]],["body/index.html",[4,0.05,11,0.007,19,0.675,30,0.005,31,0.005,35,1.437,99,2.446,186,3.035,300,1.905,469,1.227,628,4.896,633,4.896,1252,3.699,1257,4.896,1306,2.684,1309,4.06,1321,2.684,1347,3.047,1348,5.557,1349,3.047,1350,5.557,1351,8.352,1352,3.047,1353,3.047,1354,3.047,1355,7.483,1356,3.047,1357,3.047,1358,4.608,1359,3.047,1360,3.047,1361,3.047,1362,3.047,1363,3.047,1364,3.047,1365,3.047,1366,5.557,1367,5.557,1368,3.047,1369,4.608,1370,6.653,1371,7.483,1372,3.047,1373,4.608,1374,6.998,1375,3.047,1376,3.047,1377,6.653,1378,3.047,1379,6.195,1380,3.047,1381,5.557,1382,4.608,1383,3.047,1384,3.047,1385,3.047,1386,8.134,1387,3.047,1388,3.047,1389,3.047,1390,4.608,1391,3.047,1392,3.047,1393,3.047,1394,3.047,1395,3.047,1396,3.047,1397,3.047,1398,3.047,1399,7.267,1400,4.608,1401,7.808,1402,5.557,1403,3.047,1404,7.267,1405,4.608,1406,3.047,1407,3.047,1408,4.608,1409,3.047,1410,3.047,1411,3.047,1412,3.047,1413,3.047,1414,3.047,1415,3.047,1416,3.047,1417,3.047,1418,3.047,1419,3.047,1420,3.047,1421,5.557,1422,3.047,1423,5.557,1424,3.047,1425,5.557,1426,3.047,1427,3.047,1428,3.047,1429,3.047,1430,3.047,1431,3.047,1432,3.047,1433,2.684,1434,4.608,1435,5.557,1436,6.998,1437,6.195,1438,4.608,1439,3.047,1440,3.047,1441,4.608,1442,6.998,1443,3.047,1444,3.047,1445,3.047,1446,3.047,1447,3.047,1448,4.06,1449,3.047,1450,3.047,1451,3.047,1452,3.047,1453,4.608,1454,4.608,1455,6.195,1456,4.608,1457,3.047,1458,3.047,1459,3.047,1460,3.047,1461,3.047,1462,3.047,1463,3.047,1464,3.047,1465,3.047,1466,3.047,1467,3.047,1468,4.608,1469,3.047,1470,3.047,1471,3.047,1472,3.047,1473,3.047,1474,3.047,1475,3.047,1476,3.047,1477,3.047,1478,3.047,1479,3.047,1480,3.047,1481,3.047,1482,3.047,1483,3.047,1484,3.047,1485,3.047,1486,3.047,1487,3.047,1488,3.047,1489,3.047,1490,3.047]],["title/modules.html",[34,2.804]],["body/modules.html",[11,0.008,30,0.008,31,0.008,33,4.241,34,2.689,39,3.564,40,3.975,41,3.975,42,3.975,43,3.975,44,3.975,45,3.754,46,3.975,47,3.564,817,4.241,1295,7.811,1448,5.021,1491,8.866,1492,8.866,1493,8.916,1494,5.699]],["title/overview.html",[1495,5.236]],["body/overview.html",[2,1.944,11,0.01,22,3.589,30,0.005,31,0.005,33,6.392,34,1.393,35,2.122,36,2.601,37,2.601,38,2.601,39,4.842,40,3.801,41,5.295,42,5.295,43,5.295,44,5.295,45,5.185,46,5.295,47,4.633,48,2.365,49,1.552,50,1.552,71,1.061,94,3.408,108,2.601,109,2.601,110,3.801,111,3.801,138,4.285,216,0.346,452,2.601,453,2.601,454,2.601,455,4.734,456,4.734,588,2.601,589,2.601,590,2.601,591,4.734,592,4.734,704,2.601,705,2.601,706,2.601,707,4.734,708,4.734,738,2.369,791,2.601,792,2.601,793,2.601,794,4.734,795,4.734,817,5.515,818,2.601,819,2.601,820,2.601,821,4.734,822,4.734,936,2.601,938,2.601,939,2.601,940,4.734,941,4.734,1010,2.601,1011,2.601,1012,2.601,1013,4.734,1014,4.734,1161,3.589,1200,2.601,1201,2.601,1202,2.601,1495,2.601,1496,2.952,1497,2.952,1498,2.952,1499,2.952,1500,2.952]],["title/miscellaneous/typealiases.html",[1342,2.375,1501,5.221]],["body/miscellaneous/typealiases.html",[7,0.266,11,0.008,30,0.008,31,0.008,88,0.327,226,2.854,245,2.854,256,2.854,274,2.854,421,4.076,422,5.374,448,5.797,576,4.076,577,5.71,585,5.797,699,4.076,701,5.797,772,4.349,785,3.654,787,5.797,805,5.374,815,5.797,924,4.349,933,5.374,996,4.349,1007,5.797,1144,4.349,1157,5.797,1342,3.849,1502,5.844,1503,5.149,1504,5.149,1505,5.149,1506,5.149,1507,5.149,1508,5.149,1509,5.149,1510,5.149]],["title/miscellaneous/variables.html",[1342,2.375,1511,4.6]],["body/miscellaneous/variables.html",[7,0.151,11,0.01,28,1.889,30,0.005,31,0.005,52,1.683,53,1.683,80,1.516,88,0.328,91,2.473,116,2.668,133,2.668,140,5.157,147,0.763,151,1.263,165,1.981,166,5.042,167,4.356,190,3.947,192,3.947,200,3.947,205,0.773,226,1.623,245,1.623,256,1.623,274,1.623,412,2.668,414,2.668,421,2.318,422,3.659,450,3.659,451,2.928,537,2.689,538,2.585,576,2.318,577,4.512,586,3.659,587,2.928,685,2.473,699,2.318,702,3.659,703,2.928,760,2.928,761,2.928,762,2.928,763,2.928,772,2.473,785,2.078,789,3.659,790,2.928,802,3.43,805,3.659,816,2.928,924,2.473,934,3.43,935,2.928,996,2.473,1008,3.659,1009,2.928,1144,2.473,1159,3.659,1160,2.928,1162,2.668,1240,2.668,1252,2.668,1264,2.928,1265,4.332,1266,4.332,1267,2.928,1269,2.928,1270,2.928,1271,4.332,1272,2.928,1279,2.928,1280,6.083,1281,2.928,1342,2.189,1433,5.157,1503,2.928,1504,2.928,1505,2.928,1506,2.928,1507,2.928,1508,2.928,1509,2.928,1510,2.928,1511,2.928,1512,3.323,1513,3.323,1514,3.323,1515,3.323,1516,3.323,1517,3.323,1518,3.323,1519,3.323,1520,4.917,1521,3.323,1522,8.613,1523,8.613,1524,3.323,1525,4.917,1526,3.323,1527,3.323,1528,3.323,1529,5.853,1530,3.323,1531,4.917,1532,3.323,1533,3.323,1534,3.323,1535,3.323,1536,3.323,1537,3.323,1538,5.853,1539,3.323,1540,3.323,1541,3.323,1542,4.917,1543,3.323,1544,4.917,1545,3.323,1546,3.323,1547,3.323,1548,3.323,1549,3.323,1550,3.323]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":623,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"guards/PermissionGuard.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["0.1.13",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1263,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1278,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1260,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1268,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1273,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1261,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1274,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1276,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1275,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1277,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1500,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":1330,"title":{},"body":{"dependencies.html":{}}}],["1.1.18",{"_index":1299,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":1301,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1252,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":1496,"title":{},"body":{"overview.html":{}}}],["13.1.0",{"_index":1289,"title":{},"body":{"dependencies.html":{}}}],["13.4.6",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["14.2.0",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["15.0.0",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["17.5.0",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1497,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":1498,"title":{},"body":{"overview.html":{}}}],["3.6.1",{"_index":1310,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["6.1.7",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["65",{"_index":1499,"title":{},"body":{"overview.html":{}}}],["7.4.0",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["8.0.0",{"_index":1300,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":1304,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":1339,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":1303,"title":{},"body":{"dependencies.html":{}}}],["9.1.2",{"_index":1302,"title":{},"body":{"dependencies.html":{}}}],["__data",{"_index":479,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["_id",{"_index":425,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"injectables/QuizRepository.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["abilities",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["above",{"_index":1405,"title":{},"body":{"index.html":{}}}],["abstract",{"_index":406,"title":{},"body":{"classes/GqlArg.html":{},"classes/GqlInput.html":{}}}],["access_token",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["add",{"_index":1371,"title":{},"body":{"index.html":{}}}],["adding",{"_index":1365,"title":{},"body":{"index.html":{}}}],["address",{"_index":297,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/GetSchoolsArgs.html":{},"classes/School.html":{},"classes/UpdateSchoolInput.html":{},"injectables/UserRepository.html":{}}}],["advanced",{"_index":1481,"title":{},"body":{"index.html":{}}}],["advantage",{"_index":1474,"title":{},"body":{"index.html":{}}}],["affected",{"_index":1441,"title":{},"body":{"index.html":{}}}],["affected:e2e",{"_index":1445,"title":{},"body":{"index.html":{}}}],["affected:test",{"_index":1440,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":1502,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alongside",{"_index":1479,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1385,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1288,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1290,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1291,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1292,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1293,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1294,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1297,"title":{},"body":{"dependencies.html":{}}}],["answers",{"_index":276,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/QuizQuestion.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["any).deletedat",{"_index":1090,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["any).updatedat",{"_index":1194,"title":{},"body":{"injectables/UserRepository.html":{}}}],["any).user",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["anything",{"_index":839,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["api",{"_index":75,"title":{},"body":{"injectables/AppService.html":{}}}],["apollo",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":1404,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":1400,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1374,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":33,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/.../auth.service.ts",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../configuration.ts",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../current",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../grouping",{"_index":1503,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../hangman",{"_index":1504,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":1344,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mirror",{"_index":1505,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../mongo",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../permission.decorator.ts",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../quiz",{"_index":1507,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../quiz.entity.ts",{"_index":1506,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../role.entity.ts",{"_index":1508,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../school.entity.ts",{"_index":1509,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../user.entity.ts",{"_index":1510,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../user.repository.ts",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../users.service.ts",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../validation.ts",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/api/src/app/app.module.ts",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/app/auth/auth.controller.ts",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/auth.controller.ts:13",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/api/src/app/auth/auth.module.ts",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/api/src/app/auth/auth.service.ts",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/auth.service.ts:10",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:18",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:23",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:33",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/decorators/current",{"_index":1264,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/decorators/permission.decorator.ts",{"_index":1267,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/guards/gql",{"_index":408,"title":{},"body":{"classes/GqlAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/jwt",{"_index":670,"title":{},"body":{"classes/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/local",{"_index":688,"title":{},"body":{"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/permission",{"_index":740,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts",{"_index":671,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts:19",{"_index":675,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts:7",{"_index":672,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts",{"_index":690,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts:13",{"_index":693,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts:8",{"_index":692,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["apps/api/src/app/core/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["apps/api/src/app/core/app.controller.ts:12",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/api/src/app/core/app.service.ts",{"_index":72,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["apps/api/src/app/core/app.service.ts:6",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/api/src/app/core/config/configuration.ts",{"_index":1269,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/core/config/mongo",{"_index":1270,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/core/config/validation.ts",{"_index":1272,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/core/core.module.ts",{"_index":189,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/api/src/app/core/core.resolver.ts",{"_index":217,"title":{},"body":{"classes/CoreResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/core/core.resolver.ts:6",{"_index":220,"title":{},"body":{"classes/CoreResolver.html":{}}}],["apps/api/src/app/grouping",{"_index":226,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/hangman",{"_index":245,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/UpdateHangmanWordInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/mirror",{"_index":256,"title":{},"body":{"classes/CreateMirrorWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/quiz",{"_index":274,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/quiz/dto/args/get",{"_index":366,"title":{},"body":{"classes/GetQuizArgs.html":{},"classes/GetQuizzesArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/dto/inputs/create",{"_index":259,"title":{},"body":{"classes/CreateQuizInput.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/dto/inputs/delete",{"_index":331,"title":{},"body":{"classes/DeleteQuizInput.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/dto/inputs/update",{"_index":1106,"title":{},"body":{"classes/UpdateQuizInput.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts",{"_index":772,"title":{},"body":{"classes/Quiz.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:14",{"_index":775,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:18",{"_index":781,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:22",{"_index":779,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:26",{"_index":776,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:30",{"_index":780,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:34",{"_index":782,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:38",{"_index":777,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:42",{"_index":783,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:46",{"_index":778,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.repository.ts",{"_index":869,"title":{},"body":{"injectables/QuizRepository.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/entities/quiz.repository.ts:22",{"_index":870,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["apps/api/src/app/quiz/quiz.module.ts",{"_index":796,"title":{},"body":{"modules/QuizModule.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts",{"_index":883,"title":{},"body":{"classes/QuizResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:17",{"_index":888,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:23",{"_index":894,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:30",{"_index":896,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:37",{"_index":890,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:44",{"_index":898,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:51",{"_index":892,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.service.ts",{"_index":905,"title":{},"body":{"injectables/QuizService.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/quiz.service.ts:18",{"_index":906,"title":{},"body":{"injectables/QuizService.html":{}}}],["apps/api/src/app/role/dto/args/get",{"_index":378,"title":{},"body":{"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/create",{"_index":286,"title":{},"body":{"classes/CreateRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/delete",{"_index":335,"title":{},"body":{"classes/DeleteRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/update",{"_index":1117,"title":{},"body":{"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts",{"_index":924,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:13",{"_index":926,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:17",{"_index":929,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:21",{"_index":930,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:25",{"_index":931,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:29",{"_index":927,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:33",{"_index":932,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:37",{"_index":928,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.repository.ts",{"_index":949,"title":{},"body":{"injectables/RoleRepository.html":{},"coverage.html":{}}}],["apps/api/src/app/role/entities/role.repository.ts:22",{"_index":951,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["apps/api/src/app/role/role.module.ts",{"_index":942,"title":{},"body":{"modules/RoleModule.html":{}}}],["apps/api/src/app/role/role.resolver.ts",{"_index":960,"title":{},"body":{"classes/RoleResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/role/role.resolver.ts:17",{"_index":965,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:23",{"_index":974,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:30",{"_index":976,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:37",{"_index":968,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:44",{"_index":979,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:51",{"_index":971,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.service.ts",{"_index":991,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["apps/api/src/app/role/role.service.ts:18",{"_index":993,"title":{},"body":{"injectables/RoleService.html":{}}}],["apps/api/src/app/school/dto/args/get",{"_index":383,"title":{},"body":{"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/school/dto/inputs/create",{"_index":295,"title":{},"body":{"classes/CreateSchoolInput.html":{},"coverage.html":{}}}],["apps/api/src/app/school/dto/inputs/delete",{"_index":337,"title":{},"body":{"classes/DeleteSchoolInput.html":{},"coverage.html":{}}}],["apps/api/src/app/school/dto/inputs/update",{"_index":1124,"title":{},"body":{"classes/UpdateSchoolInput.html":{},"coverage.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts",{"_index":996,"title":{},"body":{"classes/School.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:13",{"_index":998,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:17",{"_index":1004,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:21",{"_index":1003,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:25",{"_index":999,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:29",{"_index":1000,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:33",{"_index":1005,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:37",{"_index":1001,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:41",{"_index":1006,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:45",{"_index":1002,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.repository.ts",{"_index":1022,"title":{},"body":{"injectables/SchoolRepository.html":{},"coverage.html":{}}}],["apps/api/src/app/school/entities/school.repository.ts:22",{"_index":1023,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["apps/api/src/app/school/school.module.ts",{"_index":1015,"title":{},"body":{"modules/SchoolModule.html":{}}}],["apps/api/src/app/school/school.resolver.ts",{"_index":1042,"title":{},"body":{"classes/SchoolResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/school/school.resolver.ts:17",{"_index":1047,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:23",{"_index":1054,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:28",{"_index":1056,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:33",{"_index":1050,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:40",{"_index":1058,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:47",{"_index":1052,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.service.ts",{"_index":1065,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["apps/api/src/app/school/school.service.ts:18",{"_index":1066,"title":{},"body":{"injectables/SchoolService.html":{}}}],["apps/api/src/app/users/dto/args/get",{"_index":393,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/create",{"_index":309,"title":{},"body":{"classes/CreateUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/delete",{"_index":339,"title":{},"body":{"classes/DeleteUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/update",{"_index":1132,"title":{},"body":{"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts",{"_index":1144,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:15",{"_index":1145,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:19",{"_index":1154,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:23",{"_index":1149,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:26",{"_index":1150,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:30",{"_index":1148,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:34",{"_index":1152,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:38",{"_index":1146,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:42",{"_index":1153,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:46",{"_index":1147,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts",{"_index":1162,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:17",{"_index":1164,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:23",{"_index":1168,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:29",{"_index":1169,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:37",{"_index":1166,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:41",{"_index":1170,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:60",{"_index":1167,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/users.module.ts",{"_index":1203,"title":{},"body":{"modules/UsersModule.html":{}}}],["apps/api/src/app/users/users.resolver.ts",{"_index":1210,"title":{},"body":{"classes/UsersResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/users/users.resolver.ts:17",{"_index":1216,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:23",{"_index":1224,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:30",{"_index":1228,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:37",{"_index":1218,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:44",{"_index":1222,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:51",{"_index":1220,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.service.ts",{"_index":1240,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/users.service.ts:13",{"_index":1242,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:16",{"_index":1245,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:20",{"_index":1246,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:24",{"_index":1243,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:29",{"_index":1247,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:33",{"_index":1244,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/environments/environment.prod.ts",{"_index":1279,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/environments/environment.ts",{"_index":1281,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/main.ts",{"_index":1282,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/api/src/shared/gql",{"_index":404,"title":{},"body":{"classes/GqlArg.html":{},"classes/GqlInput.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/repository",{"_index":907,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts",{"_index":1067,"title":{},"body":{"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:16",{"_index":1069,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:19",{"_index":1072,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:25",{"_index":1073,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:30",{"_index":1070,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:40",{"_index":1074,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:48",{"_index":1071,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arg.abstract",{"_index":401,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{}}}],["arg.abstract.ts",{"_index":405,"title":{},"body":{"classes/GqlArg.html":{},"coverage.html":{}}}],["args",{"_index":535,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["args/gql",{"_index":400,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/GqlArg.html":{},"coverage.html":{}}}],["args/id.args",{"_index":346,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{}}}],["args/id.args.ts",{"_index":663,"title":{},"body":{"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"coverage.html":{}}}],["args/id.args.ts:14",{"_index":664,"title":{},"body":{"classes/IdArg.html":{}}}],["args/id.args.ts:8",{"_index":666,"title":{},"body":{"classes/IdArrayArg.html":{}}}],["argstype",{"_index":347,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{}}}],["arraynotempty",{"_index":307,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["artifacts",{"_index":1427,"title":{},"body":{"index.html":{}}}],["async",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["auth.guard.ts",{"_index":409,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":413,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["auth.service",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["auth/decorators/permission.decorator",{"_index":539,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["auth/guards/gql",{"_index":536,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["auth/guards/permission",{"_index":540,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["authcontroller",{"_index":76,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":415,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":417,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{}}}],["authmechanism=mongodb",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authmodule",{"_index":39,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":94,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":1419,"title":{},"body":{"index.html":{}}}],["autoschemafile",{"_index":208,"title":{},"body":{"modules/CoreModule.html":{}}}],["available",{"_index":1494,"title":{},"body":{"modules.html":{}}}],["await",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["backend",{"_index":1489,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":1075,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["badrequestexception('cannot",{"_index":1091,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["badrequestexception('current",{"_index":1187,"title":{},"body":{"injectables/UserRepository.html":{}}}],["bcrypt",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare(data.password",{"_index":1186,"title":{},"body":{"injectables/UserRepository.html":{}}}],["bcrypt.compare(password",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":1251,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcryptjs",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["below",{"_index":1383,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":1284,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":1487,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1493,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1295,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":1355,"title":{},"body":{"index.html":{}}}],["building",{"_index":1475,"title":{},"body":{"index.html":{}}}],["caching",{"_index":1458,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":742,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["canactivate(context",{"_index":746,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["capabilities",{"_index":1366,"title":{},"body":{"index.html":{}}}],["categories",{"_index":261,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/Quiz.html":{},"injectables/QuizRepository.html":{},"classes/UpdateQuizInput.html":{}}}],["category",{"_index":248,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/UpdateHangmanWordInput.html":{}}}],["cert",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":1421,"title":{},"body":{"index.html":{}}}],["check",{"_index":838,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["class",{"_index":25,"title":{"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":216,"title":{},"body":{"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"overview.html":{}}}],["cli",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["cloud",{"_index":1455,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_groupingitemmodule",{"_index":452,"title":{},"body":{"modules/GroupingItemModule.html":{},"overview.html":{}}}],["cluster_groupingitemmodule_exports",{"_index":453,"title":{},"body":{"modules/GroupingItemModule.html":{},"overview.html":{}}}],["cluster_groupingitemmodule_providers",{"_index":454,"title":{},"body":{"modules/GroupingItemModule.html":{},"overview.html":{}}}],["cluster_hangmanwordmodule",{"_index":588,"title":{},"body":{"modules/HangmanWordModule.html":{},"overview.html":{}}}],["cluster_hangmanwordmodule_exports",{"_index":589,"title":{},"body":{"modules/HangmanWordModule.html":{},"overview.html":{}}}],["cluster_hangmanwordmodule_providers",{"_index":590,"title":{},"body":{"modules/HangmanWordModule.html":{},"overview.html":{}}}],["cluster_mirrorwordmodule",{"_index":704,"title":{},"body":{"modules/MirrorWordModule.html":{},"overview.html":{}}}],["cluster_mirrorwordmodule_exports",{"_index":705,"title":{},"body":{"modules/MirrorWordModule.html":{},"overview.html":{}}}],["cluster_mirrorwordmodule_providers",{"_index":706,"title":{},"body":{"modules/MirrorWordModule.html":{},"overview.html":{}}}],["cluster_quizmodule",{"_index":791,"title":{},"body":{"modules/QuizModule.html":{},"overview.html":{}}}],["cluster_quizmodule_exports",{"_index":792,"title":{},"body":{"modules/QuizModule.html":{},"overview.html":{}}}],["cluster_quizmodule_providers",{"_index":793,"title":{},"body":{"modules/QuizModule.html":{},"overview.html":{}}}],["cluster_quizquestionmodule",{"_index":818,"title":{},"body":{"modules/QuizQuestionModule.html":{},"overview.html":{}}}],["cluster_quizquestionmodule_exports",{"_index":820,"title":{},"body":{"modules/QuizQuestionModule.html":{},"overview.html":{}}}],["cluster_quizquestionmodule_providers",{"_index":819,"title":{},"body":{"modules/QuizQuestionModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":936,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_exports",{"_index":939,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_imports",{"_index":937,"title":{},"body":{"modules/RoleModule.html":{}}}],["cluster_rolemodule_providers",{"_index":938,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":1010,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_exports",{"_index":1011,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_providers",{"_index":1012,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1200,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1201,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1202,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":1423,"title":{},"body":{"index.html":{}}}],["community",{"_index":1398,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":1298,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":1425,"title":{},"body":{"index.html":{}}}],["computation",{"_index":1457,"title":{},"body":{"index.html":{}}}],["config.factory",{"_index":202,"title":{},"body":{"modules/CoreModule.html":{}}}],["config.factory.ts",{"_index":1271,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":191,"title":{},"body":{"modules/CoreModule.html":{}}}],["config/mongo",{"_index":201,"title":{},"body":{"modules/CoreModule.html":{}}}],["config/validation",{"_index":193,"title":{},"body":{"modules/CoreModule.html":{}}}],["configmodule",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":203,"title":{},"body":{"modules/CoreModule.html":{}}}],["configservice",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["configservice.get",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_cert",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":190,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":1469,"title":{},"body":{"index.html":{}}}],["console.log('user",{"_index":697,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["const",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(groupingitem.name",{"_index":502,"title":{},"body":{"injectables/GroupingItemRepository.html":{}}}],["constructor(@injectmodel(hangmanword.name",{"_index":610,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["constructor(@injectmodel(mirrorword.name",{"_index":715,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["constructor(@injectmodel(quiz.name",{"_index":877,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["constructor(@injectmodel(quizquestion.name",{"_index":836,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["constructor(@injectmodel(role.name",{"_index":958,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["constructor(@injectmodel(school.name",{"_index":1029,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["constructor(authservice",{"_index":691,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(hangmanwordmodel",{"_index":602,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["constructor(mirrorwordmodel",{"_index":712,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["constructor(mirrorwordservice",{"_index":721,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["constructor(model",{"_index":1068,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["constructor(private",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(protected",{"_index":917,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{}}}],["constructor(reflector",{"_index":743,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["constructor(repository",{"_index":561,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SchoolService.html":{}}}],["constructor(resourcemodel",{"_index":473,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["constructor(rolemodel",{"_index":950,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["constructor(rolerepository",{"_index":992,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(roleservice",{"_index":964,"title":{},"body":{"classes/RoleResolver.html":{}}}],["constructor(service",{"_index":515,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["constructor(usermodel",{"_index":1163,"title":{},"body":{"injectables/UserRepository.html":{}}}],["constructor(userrepository",{"_index":1241,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(usersservice",{"_index":1215,"title":{},"body":{"classes/UsersResolver.html":{}}}],["context",{"_index":414,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["context.getclass",{"_index":752,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["context.gethandler",{"_index":753,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["context.gettype",{"_index":760,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest().user",{"_index":762,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["core",{"_index":1384,"title":{},"body":{"index.html":{}}}],["core.resolver",{"_index":197,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/app.controller",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["core/app.service",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["core/core.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["coremodule",{"_index":40,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coreresolver",{"_index":196,"title":{"classes/CoreResolver.html":{}},"body":{"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"coverage.html":{}}}],["correct",{"_index":232,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/GroupingItem.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["correctanswers",{"_index":277,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/QuizQuestion.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["count",{"_index":505,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["county",{"_index":298,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/GetSchoolsArgs.html":{},"classes/School.html":{},"classes/UpdateSchoolInput.html":{}}}],["coverage",{"_index":1256,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":469,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(data",{"_index":480,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["createdat",{"_index":426,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{}}}],["creategroupingitem",{"_index":511,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["creategroupingitem(@args('creategroupingitemdata",{"_index":551,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["creategroupingitem(data",{"_index":518,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["creategroupingiteminput",{"_index":225,"title":{"classes/CreateGroupingItemInput.html":{}},"body":{"classes/CreateGroupingItemInput.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["createhangmanword",{"_index":639,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["createhangmanword(@args('createhangmanworddata",{"_index":658,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["createhangmanword(data",{"_index":644,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["createhangmanwordinput",{"_index":244,"title":{"classes/CreateHangmanWordInput.html":{}},"body":{"classes/CreateHangmanWordInput.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["createmirrorword",{"_index":717,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["createmirrorword(@args('createmirrorworddata",{"_index":732,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["createmirrorword(data",{"_index":722,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["createmirrorwordinput",{"_index":255,"title":{"classes/CreateMirrorWordInput.html":{}},"body":{"classes/CreateMirrorWordInput.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["createparamdecorator((_data",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquiz",{"_index":884,"title":{},"body":{"classes/QuizResolver.html":{}}}],["createquiz(@args('createquizdata",{"_index":902,"title":{},"body":{"classes/QuizResolver.html":{}}}],["createquiz(data",{"_index":889,"title":{},"body":{"classes/QuizResolver.html":{}}}],["createquizinput",{"_index":258,"title":{"classes/CreateQuizInput.html":{}},"body":{"classes/CreateQuizInput.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["createquizquestion",{"_index":843,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["createquizquestion(@args('createquizquestiondata",{"_index":864,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["createquizquestion(data",{"_index":848,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["createquizquestioninput",{"_index":270,"title":{"classes/CreateQuizQuestionInput.html":{}},"body":{"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["createrole",{"_index":961,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createrole(@args('createroledata",{"_index":985,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createrole(data",{"_index":966,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createroleinput",{"_index":285,"title":{"classes/CreateRoleInput.html":{}},"body":{"classes/CreateRoleInput.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["createschool",{"_index":1043,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["createschool(@args('createschooldata",{"_index":1062,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["createschool(data",{"_index":1048,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["createschoolinput",{"_index":294,"title":{"classes/CreateSchoolInput.html":{}},"body":{"classes/CreateSchoolInput.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["createuser",{"_index":1211,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(@args('createuserdata",{"_index":1234,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(data",{"_index":1217,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuserinput",{"_index":308,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["currentuser",{"_index":1266,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cypress",{"_index":1444,"title":{},"body":{"index.html":{}}}],["data",{"_index":483,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["data.address",{"_index":1032,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.category",{"_index":617,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizRepository.html":{}}}],["data.county",{"_index":1033,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.email",{"_index":1179,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.id",{"_index":1089,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["data.ids.includes(x._id.tostring",{"_index":625,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data.ids?.length",{"_index":622,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data.name",{"_index":1031,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.newpassword",{"_index":1189,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.newpasswordconfirm",{"_index":1190,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.om",{"_index":1030,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.password",{"_index":1250,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.questions",{"_index":880,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["data.questions.map((question",{"_index":881,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["data.type",{"_index":1034,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.updatedat",{"_index":1093,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["data?.category",{"_index":612,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data?.ids",{"_index":613,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data?.roles?.map((roleid",{"_index":1196,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data[filterkey",{"_index":1038,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["database_host",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":434,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["date.now",{"_index":1096,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["decoded",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoded.email",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}}}],["default",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["del",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["delete",{"_index":470,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["delete(data",{"_index":484,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["deleted",{"_index":1092,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["deletedat",{"_index":427,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["deletegroupingitem",{"_index":512,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["deletegroupingitem(@args('deletegroupingitemdata",{"_index":557,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["deletegroupingitem(data",{"_index":522,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["deletegroupingiteminput",{"_index":320,"title":{"classes/DeleteGroupingItemInput.html":{}},"body":{"classes/DeleteGroupingItemInput.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["deletehangmanword",{"_index":640,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["deletehangmanword(@args('deletehangmanworddata",{"_index":660,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["deletehangmanword(data",{"_index":646,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["deletehangmanwordinput",{"_index":327,"title":{"classes/DeleteHangmanWordInput.html":{}},"body":{"classes/DeleteHangmanWordInput.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["deletemirrorword",{"_index":718,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["deletemirrorword(@args('deletemirrorworddata",{"_index":736,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["deletemirrorword(data",{"_index":723,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["deletemirrorwordinput",{"_index":329,"title":{"classes/DeleteMirrorWordInput.html":{}},"body":{"classes/DeleteMirrorWordInput.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["deletequiz",{"_index":885,"title":{},"body":{"classes/QuizResolver.html":{}}}],["deletequiz(@args('deletequizdata",{"_index":904,"title":{},"body":{"classes/QuizResolver.html":{}}}],["deletequiz(data",{"_index":891,"title":{},"body":{"classes/QuizResolver.html":{}}}],["deletequizinput",{"_index":330,"title":{"classes/DeleteQuizInput.html":{}},"body":{"classes/DeleteQuizInput.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["deletequizquestion",{"_index":844,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["deletequizquestion(@args('deletequizquestiondata",{"_index":866,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["deletequizquestion(data",{"_index":850,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["deletequizquestioninput",{"_index":332,"title":{"classes/DeleteQuizQuestionInput.html":{}},"body":{"classes/DeleteQuizQuestionInput.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["deleterole",{"_index":962,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleterole(@args('deleteroledata",{"_index":989,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleterole(data",{"_index":969,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleteroleinput",{"_index":334,"title":{"classes/DeleteRoleInput.html":{}},"body":{"classes/DeleteRoleInput.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["deleteschool",{"_index":1044,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["deleteschool(@args('deleteschooldata",{"_index":1064,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["deleteschool(data",{"_index":1051,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["deleteschoolinput",{"_index":336,"title":{"classes/DeleteSchoolInput.html":{}},"body":{"classes/DeleteSchoolInput.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["deleteuser",{"_index":1212,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuser(@args('deleteuserdata",{"_index":1238,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuser(data",{"_index":1219,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuserinput",{"_index":338,"title":{"classes/DeleteUserInput.html":{}},"body":{"classes/DeleteUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["dep",{"_index":1447,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":35,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":1483,"title":{},"body":{"index.html":{}}}],["deprecationreason",{"_index":358,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{}}}],["description",{"_index":262,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/CreateRoleInput.html":{},"classes/HangmanWordResolver.html":{},"classes/Quiz.html":{},"classes/Role.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateRoleInput.html":{}}}],["dev",{"_index":1416,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1490,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1372,"title":{},"body":{"index.html":{}}}],["development",{"_index":1414,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1380,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":1450,"title":{},"body":{"index.html":{}}}],["different",{"_index":1373,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1430,"title":{},"body":{"index.html":{}}}],["disable",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["dist",{"_index":1429,"title":{},"body":{"index.html":{}}}],["distributed",{"_index":1456,"title":{},"body":{"index.html":{}}}],["document",{"_index":446,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{}}}],["documentation",{"_index":1257,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["dto/args/get",{"_index":497,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/create",{"_index":496,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/delete",{"_index":500,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/update",{"_index":494,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dynamic",{"_index":1296,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1443,"title":{},"body":{"index.html":{}}}],["email",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserArgs.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["enable",{"_index":1463,"title":{},"body":{"index.html":{}}}],["end",{"_index":1442,"title":{},"body":{"index.html":{}}}],["entities/grouping",{"_index":461,"title":{},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["entities/hangman",{"_index":597,"title":{},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{}}}],["entities/mirror",{"_index":710,"title":{},"body":{"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["entities/quiz",{"_index":828,"title":{},"body":{"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{}}}],["entities/quiz.entity",{"_index":800,"title":{},"body":{"modules/QuizModule.html":{},"classes/QuizResolver.html":{}}}],["entities/quiz.repository",{"_index":801,"title":{},"body":{"modules/QuizModule.html":{},"injectables/QuizService.html":{}}}],["entities/role.entity",{"_index":946,"title":{},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{}}}],["entities/role.repository",{"_index":947,"title":{},"body":{"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["entities/school.entity",{"_index":1019,"title":{},"body":{"modules/SchoolModule.html":{},"classes/SchoolResolver.html":{}}}],["entities/school.repository",{"_index":1020,"title":{},"body":{"modules/SchoolModule.html":{},"injectables/SchoolService.html":{}}}],["entities/user.entity",{"_index":1208,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["entities/user.repository",{"_index":1207,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["environment",{"_index":1280,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eq",{"_index":1082,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["error('new",{"_index":1191,"title":{},"body":{"injectables/UserRepository.html":{}}}],["error('please",{"_index":1182,"title":{},"body":{"injectables/UserRepository.html":{}}}],["error('user",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{}}}],["eslint",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["eslint/no",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["etc",{"_index":1378,"title":{},"body":{"index.html":{}}}],["even",{"_index":1467,"title":{},"body":{"index.html":{}}}],["exec",{"_index":879,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["execute",{"_index":1437,"title":{},"body":{"index.html":{}}}],["execution",{"_index":1460,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":412,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["experience",{"_index":1486,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":215,"title":{},"body":{"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{},"index.html":{}}}],["extends",{"_index":229,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["extensible",{"_index":1354,"title":{},"body":{"index.html":{}}}],["extractjwt",{"_index":676,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":683,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":685,"title":{},"body":{"injectables/JwtStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/SimpleRepository.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1353,"title":{},"body":{"index.html":{}}}],["features",{"_index":1362,"title":{},"body":{"index.html":{}}}],["few",{"_index":629,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["field",{"_index":235,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["field()@isnotempty",{"_index":250,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/IdArg.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["field()@isnotempty()@isemail",{"_index":313,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["field()@prop",{"_index":432,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["field(undefined",{"_index":237,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateUserInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArrayArg.html":{},"classes/QuizQuestion.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["field(undefined)@isarray",{"_index":291,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["field(undefined)@isarray()@arraynotempty",{"_index":305,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["field(undefined)@prop({type",{"_index":429,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["field({nullable",{"_index":344,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":1422,"title":{},"body":{"index.html":{}}}],["filtering",{"_index":878,"title":{},"body":{"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["filterkey",{"_index":1037,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["filters",{"_index":1036,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["filters['types",{"_index":1040,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["filters[filterkey",{"_index":1039,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["findall",{"_index":471,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findall(data",{"_index":487,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":468,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findone().skip",{"_index":634,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["findone(__data",{"_index":477,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["findone(data",{"_index":567,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["flag",{"_index":1432,"title":{},"body":{"index.html":{}}}],["flatten",{"_index":748,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["flatten(user.roles.map((role",{"_index":765,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["float",{"_index":221,"title":{},"body":{"classes/CoreResolver.html":{}}}],["forwardref",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["found",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{}}}],["framework",{"_index":1390,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":1488,"title":{},"body":{"index.html":{}}}],["frontends",{"_index":1391,"title":{},"body":{"index.html":{}}}],["full",{"_index":1476,"title":{},"body":{"index.html":{}}}],["function",{"_index":1283,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1343,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1451,"title":{},"body":{"index.html":{}}}],["g",{"_index":1402,"title":{},"body":{"index.html":{}}}],["gain",{"_index":1473,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1399,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1349,"title":{},"body":{"index.html":{}}}],["generating",{"_index":1376,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1482,"title":{},"body":{"index.html":{}}}],["get('hello",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["getdata",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getgroupingitemargs",{"_index":340,"title":{"classes/GetGroupingItemArgs.html":{}},"body":{"classes/GetGroupingItemArgs.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["getgroupingitemsargs",{"_index":348,"title":{"classes/GetGroupingItemsArgs.html":{}},"body":{"classes/GetGroupingItemsArgs.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["gethangmanwordargs",{"_index":354,"title":{"classes/GetHangmanWordArgs.html":{}},"body":{"classes/GetHangmanWordArgs.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["gethangmanwordsargs",{"_index":360,"title":{"classes/GetHangmanWordsArgs.html":{}},"body":{"classes/GetHangmanWordsArgs.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["getmirrorwordargs",{"_index":363,"title":{"classes/GetMirrorWordArgs.html":{}},"body":{"classes/GetMirrorWordArgs.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["getmirrorwordsargs",{"_index":364,"title":{"classes/GetMirrorWordsArgs.html":{}},"body":{"classes/GetMirrorWordsArgs.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["getquizargs",{"_index":365,"title":{"classes/GetQuizArgs.html":{}},"body":{"classes/GetQuizArgs.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["getquizquestionargs",{"_index":369,"title":{"classes/GetQuizQuestionArgs.html":{}},"body":{"classes/GetQuizQuestionArgs.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["getquizquestionsargs",{"_index":372,"title":{"classes/GetQuizQuestionsArgs.html":{}},"body":{"classes/GetQuizQuestionsArgs.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["getquizzesargs",{"_index":374,"title":{"classes/GetQuizzesArgs.html":{}},"body":{"classes/GetQuizzesArgs.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["getrequest",{"_index":410,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["getrequest(context",{"_index":411,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["getroleargs",{"_index":377,"title":{"classes/GetRoleArgs.html":{}},"body":{"classes/GetRoleArgs.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["getrolesargs",{"_index":380,"title":{"classes/GetRolesArgs.html":{}},"body":{"classes/GetRolesArgs.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["getschoolargs",{"_index":382,"title":{"classes/GetSchoolArgs.html":{}},"body":{"classes/GetSchoolArgs.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["getschoolsargs",{"_index":385,"title":{"classes/GetSchoolsArgs.html":{}},"body":{"classes/GetSchoolsArgs.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["getting",{"_index":1345,"title":{"index.html":{}},"body":{}}],["getuserargs",{"_index":392,"title":{"classes/GetUserArgs.html":{}},"body":{"classes/GetUserArgs.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["getusersargs",{"_index":402,"title":{"classes/GetUsersArgs.html":{}},"body":{"classes/GetUsersArgs.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["gql",{"_index":665,"title":{},"body":{"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{}}}],["gqlarg",{"_index":395,"title":{"classes/GqlArg.html":{}},"body":{"classes/GetUserArgs.html":{},"classes/GqlArg.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"coverage.html":{}}}],["gqlauthguard",{"_index":407,"title":{"classes/GqlAuthGuard.html":{}},"body":{"classes/GqlAuthGuard.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["gqlexecutioncontext",{"_index":416,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext().req",{"_index":418,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext().req.user",{"_index":763,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["gqlinput",{"_index":230,"title":{"classes/GqlInput.html":{}},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/GqlInput.html":{},"classes/IdInput.html":{},"coverage.html":{}}}],["graph",{"_index":1448,"title":{},"body":{"index.html":{},"modules.html":{}}}],["graphql",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["graphqlmodule",{"_index":194,"title":{},"body":{"modules/CoreModule.html":{}}}],["graphqlmodule.forroot",{"_index":207,"title":{},"body":{"modules/CoreModule.html":{}}}],["grouping",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateGroupingItemInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["groupingitem",{"_index":420,"title":{"classes/GroupingItem.html":{}},"body":{"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"coverage.html":{}}}],["groupingitem(@args",{"_index":544,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitem(data",{"_index":525,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitem.name",{"_index":465,"title":{},"body":{"modules/GroupingItemModule.html":{}}}],["groupingitemdocument",{"_index":448,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"miscellaneous/typealiases.html":{}}}],["groupingitemmodule",{"_index":41,"title":{"modules/GroupingItemModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GroupingItemModule.html":{},"modules.html":{},"overview.html":{}}}],["groupingitemrepository",{"_index":455,"title":{"injectables/GroupingItemRepository.html":{}},"body":{"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{},"overview.html":{}}}],["groupingitemresolver",{"_index":459,"title":{"classes/GroupingItemResolver.html":{}},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"coverage.html":{}}}],["groupingitems",{"_index":513,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitems(@args",{"_index":548,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitems(data",{"_index":527,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitemschema",{"_index":450,"title":{},"body":{"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["groupingitemservice",{"_index":456,"title":{"injectables/GroupingItemService.html":{}},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{},"overview.html":{}}}],["groups",{"_index":233,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/GroupingItem.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["guard",{"_index":738,"title":{"guards/PermissionGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":541,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["guard.service.ts",{"_index":741,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["guard.service.ts:10",{"_index":747,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guard.service.ts:7",{"_index":745,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guards",{"_index":739,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guards/local",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["hangman",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateHangmanWordInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/UpdateHangmanWordInput.html":{},"coverage.html":{}}}],["hangmanword",{"_index":575,"title":{"classes/HangmanWord.html":{}},"body":{"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"coverage.html":{}}}],["hangmanword(@args",{"_index":656,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanword(data",{"_index":648,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanword.name",{"_index":600,"title":{},"body":{"modules/HangmanWordModule.html":{}}}],["hangmanworddocument",{"_index":585,"title":{},"body":{"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"miscellaneous/typealiases.html":{}}}],["hangmanwordmodel",{"_index":604,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["hangmanwordmodule",{"_index":42,"title":{"modules/HangmanWordModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HangmanWordModule.html":{},"modules.html":{},"overview.html":{}}}],["hangmanwordrepository",{"_index":591,"title":{"injectables/HangmanWordRepository.html":{}},"body":{"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{},"overview.html":{}}}],["hangmanwordresolver",{"_index":595,"title":{"classes/HangmanWordResolver.html":{}},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"coverage.html":{}}}],["hangmanwords",{"_index":641,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanwords(@args",{"_index":657,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanwords(data",{"_index":651,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanwordschema",{"_index":586,"title":{},"body":{"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hangmanwordservice",{"_index":592,"title":{"injectables/HangmanWordService.html":{}},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":1452,"title":{},"body":{"index.html":{}}}],["http",{"_index":761,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1418,"title":{},"body":{"index.html":{}}}],["hundred",{"_index":630,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["iapiresource",{"_index":1077,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["id",{"_index":323,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetUserArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"injectables/UserRepository.html":{}}}],["idarg",{"_index":343,"title":{"classes/IdArg.html":{}},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["idarg:7",{"_index":345,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{}}}],["idarg:9",{"_index":368,"title":{},"body":{"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{}}}],["idarrayarg",{"_index":350,"title":{"classes/IdArrayArg.html":{}},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["idarrayarg:9",{"_index":353,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{}}}],["identifier",{"_index":1258,"title":{},"body":{"coverage.html":{}}}],["idinput",{"_index":322,"title":{"classes/IdInput.html":{}},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/IdInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["idinput:10",{"_index":1100,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["idinput:11",{"_index":1109,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["idinput:9",{"_index":325,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["ids",{"_index":351,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{}}}],["ignoreexpiration",{"_index":684,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["igroupingitem",{"_index":424,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{}}}],["ihangmanword",{"_index":578,"title":{},"body":{"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{}}}],["imirrorword",{"_index":700,"title":{},"body":{"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{}}}],["implements",{"_index":423,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["imported",{"_index":1412,"title":{},"body":{"index.html":{}}}],["imports",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["include",{"_index":1375,"title":{},"body":{"index.html":{}}}],["incorrect",{"_index":1188,"title":{},"body":{"injectables/UserRepository.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":324,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["inject",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/JwtStrategy.html":{}}}],["inject(forwardref",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["injectable",{"_index":70,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":71,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":492,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/UserRepository.html":{}}}],["injectmodel(role.name",{"_index":1176,"title":{},"body":{"injectables/UserRepository.html":{}}}],["injectmodel(user.name",{"_index":1175,"title":{},"body":{"injectables/UserRepository.html":{}}}],["input.abstract",{"_index":243,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/IdInput.html":{}}}],["input.abstract.ts",{"_index":419,"title":{},"body":{"classes/GqlInput.html":{},"coverage.html":{}}}],["inputs/gql",{"_index":242,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/GqlInput.html":{},"coverage.html":{}}}],["inputs/id.input",{"_index":326,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["inputs/id.input.ts",{"_index":667,"title":{},"body":{"classes/IdInput.html":{},"coverage.html":{}}}],["inputs/id.input.ts:4",{"_index":668,"title":{},"body":{"classes/IdInput.html":{}}}],["inputtype",{"_index":240,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["instantly",{"_index":1472,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":1363,"title":{},"body":{"index.html":{}}}],["interfaces",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateQuizInput.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["iquiz",{"_index":773,"title":{},"body":{"classes/Quiz.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{}}}],["iquizquestion",{"_index":267,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"classes/UpdateQuizInput.html":{}}}],["irole",{"_index":925,"title":{},"body":{"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["isarray",{"_index":293,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["ischool",{"_index":997,"title":{},"body":{"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{}}}],["isemail",{"_index":319,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["isglobal",{"_index":204,"title":{},"body":{"modules/CoreModule.html":{}}}],["isnotempty",{"_index":253,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["isoptional",{"_index":399,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["item",{"_index":234,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/GroupingItem.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["item.args",{"_index":499,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["item.args.ts",{"_index":342,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"coverage.html":{}}}],["item.entity",{"_index":462,"title":{},"body":{"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{}}}],["item.entity.ts",{"_index":422,"title":{},"body":{"classes/GroupingItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["item.entity.ts:13",{"_index":431,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:17",{"_index":439,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:21",{"_index":438,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:25",{"_index":433,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:29",{"_index":435,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:33",{"_index":440,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:37",{"_index":437,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.input",{"_index":495,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["item.input.ts",{"_index":228,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["item.input.ts:10",{"_index":238,"title":{},"body":{"classes/CreateGroupingItemInput.html":{}}}],["item.input.ts:13",{"_index":236,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:16",{"_index":1099,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:19",{"_index":1098,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:21",{"_index":1101,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:7",{"_index":239,"title":{},"body":{"classes/CreateGroupingItemInput.html":{}}}],["item.module",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["item.module.ts",{"_index":457,"title":{},"body":{"modules/GroupingItemModule.html":{}}}],["item.repository",{"_index":463,"title":{},"body":{"modules/GroupingItemModule.html":{},"injectables/GroupingItemService.html":{}}}],["item.repository.ts",{"_index":466,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"coverage.html":{}}}],["item.repository.ts:22",{"_index":475,"title":{},"body":{"injectables/GroupingItemRepository.html":{}}}],["item.resolver",{"_index":460,"title":{},"body":{"modules/GroupingItemModule.html":{}}}],["item.resolver.ts",{"_index":510,"title":{},"body":{"classes/GroupingItemResolver.html":{},"coverage.html":{}}}],["item.resolver.ts:17",{"_index":516,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:21",{"_index":526,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:28",{"_index":530,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:35",{"_index":521,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:42",{"_index":533,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:49",{"_index":524,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.service",{"_index":458,"title":{},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{}}}],["item.service.ts",{"_index":559,"title":{},"body":{"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["item.service.ts:18",{"_index":562,"title":{},"body":{"injectables/GroupingItemService.html":{}}}],["item/dto/args/get",{"_index":341,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"coverage.html":{}}}],["item/dto/inputs/create",{"_index":227,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"coverage.html":{}}}],["item/dto/inputs/delete",{"_index":321,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"coverage.html":{}}}],["item/dto/inputs/update",{"_index":1097,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["item/entities/grouping",{"_index":421,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["item/grouping",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["items",{"_index":543,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["items'})@permission('browse')@useguards(gqlauthguard",{"_index":528,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{}}}],["items'})@useguards(gqlauthguard",{"_index":1226,"title":{},"body":{"classes/UsersResolver.html":{}}}],["items.args",{"_index":498,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["items.args.ts",{"_index":349,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"coverage.html":{}}}],["itemsandlist",{"_index":280,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/CreateUserInput.html":{},"classes/QuizQuestion.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["itemsandlist'})@isoptional()@isarray",{"_index":1121,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["itemsandlist'})@isoptional()@isarray()@arraynotempty",{"_index":1128,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["itemsandlist'})@prop({type",{"_index":807,"title":{},"body":{"classes/QuizQuestion.html":{},"classes/User.html":{}}}],["iupdatedat",{"_index":1078,"title":{},"body":{"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["iuser",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["jest",{"_index":1439,"title":{},"body":{"index.html":{}}}],["joi",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["joi.number().default(3000",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('development",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":669,"title":{"classes/JwtAuthGuard.html":{}},"body":{"classes/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":682,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":110,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["learn",{"_index":1454,"title":{},"body":{"index.html":{}}}],["lib",{"_index":1410,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1377,"title":{},"body":{"index.html":{}}}],["library",{"_index":1408,"title":{},"body":{"index.html":{}}}],["line",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["literal",{"_index":674,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["load",{"_index":206,"title":{},"body":{"modules/CoreModule.html":{}}}],["local",{"_index":689,"title":{},"body":{"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":96,"title":{"classes/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":111,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@req",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["many",{"_index":1369,"title":{},"body":{"index.html":{}}}],["map((permission",{"_index":767,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["match",{"_index":1193,"title":{},"body":{"injectables/UserRepository.html":{}}}],["matching",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":508,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["message",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["metadata",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["minute",{"_index":1359,"title":{},"body":{"index.html":{}}}],["mirror",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateMirrorWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["mirrorword",{"_index":698,"title":{"classes/MirrorWord.html":{}},"body":{"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"coverage.html":{}}}],["mirrorword(@args",{"_index":728,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorword(data",{"_index":724,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorword.name",{"_index":711,"title":{},"body":{"modules/MirrorWordModule.html":{}}}],["mirrorworddocument",{"_index":701,"title":{},"body":{"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"miscellaneous/typealiases.html":{}}}],["mirrorwordmodel",{"_index":713,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["mirrorwordmodule",{"_index":43,"title":{"modules/MirrorWordModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MirrorWordModule.html":{},"modules.html":{},"overview.html":{}}}],["mirrorwordrepository",{"_index":707,"title":{"injectables/MirrorWordRepository.html":{}},"body":{"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{},"overview.html":{}}}],["mirrorwordresolver",{"_index":709,"title":{"classes/MirrorWordResolver.html":{}},"body":{"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"coverage.html":{}}}],["mirrorwords",{"_index":719,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorwords(@args",{"_index":730,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorwords(data",{"_index":725,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorwordschema",{"_index":702,"title":{},"body":{"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mirrorwordservice",{"_index":708,"title":{"injectables/MirrorWordService.html":{}},"body":{"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{},"overview.html":{}}}],["miscellaneous",{"_index":1342,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":474,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["module",{"_index":32,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":34,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb+srv://${configservice.get('database_user')}@${configservice.get",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose",{"_index":447,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"dependencies.html":{}}}],["mongooseconfig",{"_index":200,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongooseconfig.imports",{"_index":211,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseconfig.mongooseconfigfactory",{"_index":213,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseconfig.providers",{"_index":214,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseconfigfactory",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":198,"title":{},"body":{"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":464,"title":{},"body":{"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":210,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseschema",{"_index":445,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["mongooseschema.types.mixed",{"_index":788,"title":{},"body":{"classes/Quiz.html":{}}}],["mongooseschema.types.objectid",{"_index":449,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["more",{"_index":628,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"index.html":{}}}],["multiple",{"_index":1406,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":534,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["mutation(undefined",{"_index":1049,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard",{"_index":519,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('create",{"_index":967,"title":{},"body":{"classes/RoleResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('delete",{"_index":970,"title":{},"body":{"classes/RoleResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('update",{"_index":978,"title":{},"body":{"classes/RoleResolver.html":{}}}],["name",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/GetSchoolsArgs.html":{},"classes/GqlAuthGuard.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["navigate",{"_index":1417,"title":{},"body":{"index.html":{}}}],["needs",{"_index":840,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["nest",{"_index":1393,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/GqlAuthGuard.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":749,"title":{},"body":{"guards/PermissionGuard.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":195,"title":{},"body":{"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":199,"title":{},"body":{"modules/CoreModule.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{},"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1305,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"index.html":{}}}],["newpassword",{"_index":1133,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["newpasswordconfirm",{"_index":1134,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["next",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["ng",{"_index":1386,"title":{},"body":{"index.html":{}}}],["node",{"_index":1396,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":626,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["notfoundexception",{"_index":1076,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["nrwl/angular",{"_index":1306,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nrwl/angular:app",{"_index":1403,"title":{},"body":{"index.html":{}}}],["nrwl/angular:lib",{"_index":1409,"title":{},"body":{"index.html":{}}}],["nrwl/express",{"_index":1395,"title":{},"body":{"index.html":{}}}],["nrwl/nest",{"_index":1394,"title":{},"body":{"index.html":{}}}],["nrwl/node",{"_index":1397,"title":{},"body":{"index.html":{}}}],["nrwl/react",{"_index":1388,"title":{},"body":{"index.html":{}}}],["nrwl/web",{"_index":1392,"title":{},"body":{"index.html":{}}}],["null",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["nullable",{"_index":279,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/CreateUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}}}],["nx",{"_index":1351,"title":{},"body":{"index.html":{}}}],["nx/api",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateQuizInput.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["nx/mylib",{"_index":1413,"title":{},"body":{"index.html":{}}}],["nx’s",{"_index":1480,"title":{},"body":{"index.html":{}}}],["object",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(data).length",{"_index":1079,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["objecttype",{"_index":441,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["om",{"_index":299,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/GetSchoolsArgs.html":{},"classes/School.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["optional",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateUserInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArrayArg.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":620,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["order",{"_index":1462,"title":{},"body":{"index.html":{}}}],["out",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overridden",{"_index":841,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["override",{"_index":504,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["overview",{"_index":1495,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1287,"title":{"dependencies.html":{}},"body":{}}],["pairs",{"_index":1461,"title":{},"body":{"index.html":{}}}],["param",{"_index":616,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["param['category",{"_index":618,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["parameters",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["parseint(process.env.port",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":678,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":679,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":680,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["passwords",{"_index":1192,"title":{},"body":{"injectables/UserRepository.html":{}}}],["payload",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":687,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["per",{"_index":632,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["permission",{"_index":537,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission('browse",{"_index":546,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('create",{"_index":550,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('delete",{"_index":556,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('read",{"_index":861,"title":{},"body":{"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('update",{"_index":553,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permission.replace(/^\\*::/g",{"_index":768,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["permissionguard",{"_index":529,"title":{"guards/PermissionGuard.html":{}},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["permissionguard)@permission('browse",{"_index":1227,"title":{},"body":{"classes/UsersResolver.html":{}}}],["permissionguard)@permission('create",{"_index":520,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/UsersResolver.html":{}}}],["permissionguard)@permission('delete",{"_index":523,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permissionguard)@permission('read",{"_index":854,"title":{},"body":{"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permissionguard)@permission('update",{"_index":532,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permissions",{"_index":288,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/Role.html":{},"classes/UpdateRoleInput.html":{}}}],["playground",{"_index":209,"title":{},"body":{"modules/CoreModule.html":{}}}],["plugins",{"_index":1370,"title":{},"body":{"index.html":{}}}],["plus",{"_index":1484,"title":{},"body":{"index.html":{}}}],["populate('roles",{"_index":1181,"title":{},"body":{"injectables/UserRepository.html":{}}}],["port",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["preferred",{"_index":1478,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["private",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserRepository.html":{}}}],["process.env.jwt_expires",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_secret",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.node_env",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.uptime",{"_index":224,"title":{},"body":{"classes/CoreResolver.html":{}}}],["prod",{"_index":1431,"title":{},"body":{"index.html":{}}}],["production",{"_index":1433,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1348,"title":{},"body":{"index.html":{}}}],["project=my",{"_index":1426,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1382,"title":{},"body":{"index.html":{}}}],["promise",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["promise.all(data.ids.map((id",{"_index":1080,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["promise.reject(new",{"_index":1085,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["prop",{"_index":442,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["properties",{"_index":231,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["provide",{"_index":1183,"title":{},"body":{"injectables/UserRepository.html":{}}}],["providers",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["proxy.service",{"_index":573,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["proxy.service.ts",{"_index":908,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"coverage.html":{}}}],["proxy.service.ts:22",{"_index":910,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:25",{"_index":911,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:29",{"_index":913,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:33",{"_index":914,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:37",{"_index":915,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:41",{"_index":912,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["public",{"_index":257,"title":{},"body":{"classes/CreateMirrorWordInput.html":{},"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["query",{"_index":222,"title":{},"body":{"classes/CoreResolver.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["query(undefined",{"_index":219,"title":{},"body":{"classes/CoreResolver.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["question",{"_index":278,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/QuizQuestion.html":{},"injectables/QuizRepository.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["question.args",{"_index":835,"title":{},"body":{"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{}}}],["question.args.ts",{"_index":371,"title":{},"body":{"classes/GetQuizQuestionArgs.html":{},"coverage.html":{}}}],["question.entity",{"_index":786,"title":{},"body":{"classes/Quiz.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{}}}],["question.entity.ts",{"_index":805,"title":{},"body":{"classes/QuizQuestion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["question.entity.ts:13",{"_index":806,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:17",{"_index":812,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:21",{"_index":813,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:25",{"_index":808,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:29",{"_index":809,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:33",{"_index":810,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:37",{"_index":814,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:41",{"_index":811,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.input",{"_index":273,"title":{},"body":{"classes/CreateQuizInput.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"classes/UpdateQuizInput.html":{}}}],["question.input.ts",{"_index":275,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{}}}],["question.input.ts:10",{"_index":284,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{}}}],["question.input.ts:13",{"_index":281,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:16",{"_index":282,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:19",{"_index":1114,"title":{},"body":{"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:22",{"_index":1115,"title":{},"body":{"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:24",{"_index":1116,"title":{},"body":{"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:7",{"_index":283,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{}}}],["question.module.ts",{"_index":824,"title":{},"body":{"modules/QuizQuestionModule.html":{}}}],["question.repository",{"_index":829,"title":{},"body":{"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionService.html":{}}}],["question.repository.ts",{"_index":830,"title":{},"body":{"injectables/QuizQuestionRepository.html":{},"coverage.html":{}}}],["question.repository.ts:22",{"_index":831,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["question.resolver",{"_index":827,"title":{},"body":{"modules/QuizQuestionModule.html":{}}}],["question.resolver.ts",{"_index":842,"title":{},"body":{"classes/QuizQuestionResolver.html":{},"coverage.html":{}}}],["question.resolver.ts:17",{"_index":847,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:23",{"_index":855,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:30",{"_index":857,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:37",{"_index":849,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:44",{"_index":859,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:51",{"_index":851,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.service",{"_index":825,"title":{},"body":{"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{}}}],["question.service.ts",{"_index":867,"title":{},"body":{"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["question.service.ts:18",{"_index":868,"title":{},"body":{"injectables/QuizQuestionService.html":{}}}],["question/dto/args/get",{"_index":370,"title":{},"body":{"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"coverage.html":{}}}],["question/dto/inputs/create",{"_index":272,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"coverage.html":{}}}],["question/dto/inputs/delete",{"_index":333,"title":{},"body":{"classes/DeleteQuizQuestionInput.html":{},"coverage.html":{}}}],["question/dto/inputs/update",{"_index":1113,"title":{},"body":{"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{}}}],["question/entities/quiz",{"_index":785,"title":{},"body":{"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["question/quiz",{"_index":823,"title":{},"body":{"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["questions",{"_index":263,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/Quiz.html":{},"classes/QuizQuestionResolver.html":{},"classes/UpdateQuizInput.html":{}}}],["questions.args",{"_index":834,"title":{},"body":{"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{}}}],["questions.args.ts",{"_index":373,"title":{},"body":{"classes/GetQuizQuestionsArgs.html":{},"coverage.html":{}}}],["quick",{"_index":1357,"title":{},"body":{"index.html":{}}}],["quiz",{"_index":271,"title":{"classes/Quiz.html":{}},"body":{"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/Quiz.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{}}}],["quiz(@args",{"_index":900,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quiz(data",{"_index":893,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quiz.args",{"_index":876,"title":{},"body":{"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{}}}],["quiz.args.ts",{"_index":367,"title":{},"body":{"classes/GetQuizArgs.html":{},"coverage.html":{}}}],["quiz.entity",{"_index":872,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["quiz.input",{"_index":874,"title":{},"body":{"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{}}}],["quiz.input.ts",{"_index":260,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/DeleteQuizInput.html":{},"classes/UpdateQuizInput.html":{},"coverage.html":{}}}],["quiz.input.ts:12",{"_index":266,"title":{},"body":{"classes/CreateQuizInput.html":{}}}],["quiz.input.ts:14",{"_index":1111,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:15",{"_index":265,"title":{},"body":{"classes/CreateQuizInput.html":{}}}],["quiz.input.ts:17",{"_index":1108,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:18",{"_index":268,"title":{},"body":{"classes/CreateQuizInput.html":{}}}],["quiz.input.ts:20",{"_index":1107,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:23",{"_index":1110,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:25",{"_index":1112,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:9",{"_index":269,"title":{},"body":{"classes/CreateQuizInput.html":{}}}],["quiz.name",{"_index":804,"title":{},"body":{"modules/QuizModule.html":{}}}],["quiz.resolver",{"_index":799,"title":{},"body":{"modules/QuizModule.html":{}}}],["quiz.service",{"_index":797,"title":{},"body":{"modules/QuizModule.html":{},"classes/QuizResolver.html":{}}}],["quiz/quiz.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["quizdocument",{"_index":787,"title":{},"body":{"classes/Quiz.html":{},"injectables/QuizRepository.html":{},"miscellaneous/typealiases.html":{}}}],["quizmodule",{"_index":44,"title":{"modules/QuizModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QuizModule.html":{},"modules.html":{},"overview.html":{}}}],["quizquestion",{"_index":784,"title":{"classes/QuizQuestion.html":{}},"body":{"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"coverage.html":{}}}],["quizquestion(@args",{"_index":862,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestion(data",{"_index":852,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestion.name",{"_index":803,"title":{},"body":{"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{}}}],["quizquestiondocument",{"_index":815,"title":{},"body":{"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"miscellaneous/typealiases.html":{}}}],["quizquestionmodule",{"_index":817,"title":{"modules/QuizQuestionModule.html":{}},"body":{"modules/QuizQuestionModule.html":{},"modules.html":{},"overview.html":{}}}],["quizquestionrepository",{"_index":821,"title":{"injectables/QuizQuestionRepository.html":{}},"body":{"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{},"overview.html":{}}}],["quizquestionresolver",{"_index":826,"title":{"classes/QuizQuestionResolver.html":{}},"body":{"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{},"coverage.html":{}}}],["quizquestions",{"_index":845,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestions(@args",{"_index":863,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestions(data",{"_index":856,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestionschema",{"_index":802,"title":{},"body":{"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quizquestionservice",{"_index":822,"title":{"injectables/QuizQuestionService.html":{}},"body":{"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{},"overview.html":{}}}],["quizrepository",{"_index":794,"title":{"injectables/QuizRepository.html":{}},"body":{"modules/QuizModule.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"coverage.html":{},"overview.html":{}}}],["quizresolver",{"_index":798,"title":{"classes/QuizResolver.html":{}},"body":{"modules/QuizModule.html":{},"classes/QuizResolver.html":{},"coverage.html":{}}}],["quizschema",{"_index":789,"title":{},"body":{"classes/Quiz.html":{},"modules/QuizModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quizservice",{"_index":795,"title":{"injectables/QuizService.html":{}},"body":{"modules/QuizModule.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{},"overview.html":{}}}],["quizzes",{"_index":886,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quizzes(@args",{"_index":901,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quizzes(data",{"_index":895,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quizzes.args",{"_index":875,"title":{},"body":{"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{}}}],["quizzes.args.ts",{"_index":375,"title":{},"body":{"classes/GetQuizzesArgs.html":{},"coverage.html":{}}}],["quizzes.args.ts:12",{"_index":376,"title":{},"body":{"classes/GetQuizzesArgs.html":{}}}],["random",{"_index":507,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["randomly",{"_index":649,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["rapidly",{"_index":1464,"title":{},"body":{"index.html":{}}}],["react",{"_index":1387,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"injectables/RepositoryProxyService.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["ref",{"_index":1151,"title":{},"body":{"classes/User.html":{}}}],["reflect",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":744,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["regex",{"_index":619,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["reload",{"_index":1420,"title":{},"body":{"index.html":{}}}],["repository",{"_index":563,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SchoolService.html":{}}}],["repositoryproxyservice",{"_index":560,"title":{"injectables/RepositoryProxyService.html":{}},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["repositoryproxyservice:25",{"_index":564,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["repositoryproxyservice:29",{"_index":566,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["repositoryproxyservice:33",{"_index":569,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["repositoryproxyservice:37",{"_index":571,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["repositoryproxyservice:41",{"_index":565,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["req",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["require('bcryptjs",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":758,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities",{"_index":754,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities?.length",{"_index":756,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities[0]}::${requiredresource[0",{"_index":759,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities[0]}::`).replace(/::\\*$/g",{"_index":769,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource",{"_index":750,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource?.length",{"_index":757,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource[0",{"_index":770,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requires",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["res",{"_index":615,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/SimpleRepository.html":{}}}],["res.filter((x",{"_index":624,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["res.length",{"_index":637,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["res?.deletedat",{"_index":1084,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["res[math.floor(math.random",{"_index":636,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["reset",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolver",{"_index":223,"title":{},"body":{"classes/CoreResolver.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["resource",{"_index":538,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UsersResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resource('grouping",{"_index":542,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["resource('hangman",{"_index":655,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["resource('mirror",{"_index":727,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["resource('quiz",{"_index":860,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["resource('quizzes",{"_index":899,"title":{},"body":{"classes/QuizResolver.html":{}}}],["resource('roles",{"_index":980,"title":{},"body":{"classes/RoleResolver.html":{}}}],["resource('schools",{"_index":1059,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["resource('users",{"_index":1229,"title":{},"body":{"classes/UsersResolver.html":{}}}],["resourcemodel",{"_index":476,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["resources",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["results",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/RepositoryProxyService.html":{},"classes/RoleResolver.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":923,"title":{"classes/Role.html":{}},"body":{"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["role(@args",{"_index":981,"title":{},"body":{"classes/RoleResolver.html":{}}}],["role(data",{"_index":972,"title":{},"body":{"classes/RoleResolver.html":{}}}],["role.args",{"_index":957,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["role.args.ts",{"_index":379,"title":{},"body":{"classes/GetRoleArgs.html":{},"coverage.html":{}}}],["role.entity",{"_index":953,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["role.input",{"_index":955,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["role.input.ts",{"_index":287,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/DeleteRoleInput.html":{},"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["role.input.ts:13",{"_index":289,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.input.ts:15",{"_index":1120,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:17",{"_index":292,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.input.ts:20",{"_index":1119,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:25",{"_index":1122,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:27",{"_index":1123,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:9",{"_index":290,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.name",{"_index":948,"title":{},"body":{"modules/RoleModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["role.permissions",{"_index":766,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["role.resolver",{"_index":945,"title":{},"body":{"modules/RoleModule.html":{}}}],["role.service",{"_index":943,"title":{},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{}}}],["role/entities/role.entity",{"_index":1155,"title":{},"body":{"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{}}}],["role/role.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["roledocument",{"_index":933,"title":{},"body":{"classes/Role.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":952,"title":{},"body":{"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["rolemodule",{"_index":45,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["rolerepository",{"_index":940,"title":{"injectables/RoleRepository.html":{}},"body":{"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["roleresolver",{"_index":944,"title":{"classes/RoleResolver.html":{}},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{},"coverage.html":{}}}],["roles",{"_index":311,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RoleResolver.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["roles(@args",{"_index":983,"title":{},"body":{"classes/RoleResolver.html":{}}}],["roles(data",{"_index":975,"title":{},"body":{"classes/RoleResolver.html":{}}}],["roles.args",{"_index":956,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["roles.args.ts",{"_index":381,"title":{},"body":{"classes/GetRolesArgs.html":{},"coverage.html":{}}}],["roleschema",{"_index":934,"title":{},"body":{"classes/Role.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleservice",{"_index":941,"title":{"injectables/RoleService.html":{}},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":1401,"title":{},"body":{"index.html":{}}}],["running",{"_index":1434,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":1407,"title":{},"body":{"index.html":{}}}],["save",{"_index":1088,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["saving",{"_index":1470,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":1424,"title":{},"body":{"index.html":{}}}],["schema",{"_index":443,"title":{},"body":{"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":444,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(groupingitem",{"_index":451,"title":{},"body":{"classes/GroupingItem.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(hangmanword",{"_index":587,"title":{},"body":{"classes/HangmanWord.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(mirrorword",{"_index":703,"title":{},"body":{"classes/MirrorWord.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(quiz",{"_index":790,"title":{},"body":{"classes/Quiz.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(quizquestion",{"_index":816,"title":{},"body":{"classes/QuizQuestion.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":935,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(school",{"_index":1009,"title":{},"body":{"classes/School.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1160,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schematypes",{"_index":1156,"title":{},"body":{"classes/User.html":{}}}],["schematypes.objectid",{"_index":1158,"title":{},"body":{"classes/User.html":{}}}],["school",{"_index":995,"title":{"classes/School.html":{}},"body":{"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"coverage.html":{}}}],["school(@args",{"_index":1060,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["school(data",{"_index":1053,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["school.args",{"_index":1028,"title":{},"body":{"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{}}}],["school.args.ts",{"_index":384,"title":{},"body":{"classes/GetSchoolArgs.html":{},"coverage.html":{}}}],["school.entity",{"_index":1024,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["school.input",{"_index":1026,"title":{},"body":{"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{}}}],["school.input.ts",{"_index":296,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/UpdateSchoolInput.html":{},"coverage.html":{}}}],["school.input.ts:13",{"_index":303,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:16",{"_index":1127,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:17",{"_index":301,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["school.input.ts:19",{"_index":1125,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:21",{"_index":302,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["school.input.ts:22",{"_index":1126,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:26",{"_index":306,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["school.input.ts:28",{"_index":1129,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:30",{"_index":1130,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:9",{"_index":304,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["school.name",{"_index":1021,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.resolver",{"_index":1018,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.service",{"_index":1016,"title":{},"body":{"modules/SchoolModule.html":{},"classes/SchoolResolver.html":{}}}],["school/school.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["schooldocument",{"_index":1007,"title":{},"body":{"classes/School.html":{},"injectables/SchoolRepository.html":{},"miscellaneous/typealiases.html":{}}}],["schoolmodule",{"_index":46,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolrepository",{"_index":1013,"title":{"injectables/SchoolRepository.html":{}},"body":{"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["schoolresolver",{"_index":1017,"title":{"classes/SchoolResolver.html":{}},"body":{"modules/SchoolModule.html":{},"classes/SchoolResolver.html":{},"coverage.html":{}}}],["schools",{"_index":1045,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["schools(@args",{"_index":1061,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["schools(data",{"_index":1055,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["schools.args",{"_index":1027,"title":{},"body":{"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{}}}],["schools.args.ts",{"_index":386,"title":{},"body":{"classes/GetSchoolsArgs.html":{},"coverage.html":{}}}],["schools.args.ts:12",{"_index":390,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schools.args.ts:15",{"_index":389,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schools.args.ts:18",{"_index":387,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schools.args.ts:21",{"_index":388,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schools.args.ts:24",{"_index":391,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schoolschema",{"_index":1008,"title":{},"body":{"classes/School.html":{},"modules/SchoolModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolservice",{"_index":1014,"title":{"injectables/SchoolService.html":{}},"body":{"modules/SchoolModule.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["secret",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":686,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["see",{"_index":1449,"title":{},"body":{"index.html":{}}}],["serve",{"_index":1415,"title":{},"body":{"index.html":{}}}],["server",{"_index":1309,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["service",{"_index":517,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["setmetadata('abilities",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata('resources",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shareable",{"_index":1411,"title":{},"body":{"index.html":{}}}],["shared/gql",{"_index":241,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["shared/proxies/repository",{"_index":572,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["shared/proxies/simple.repository",{"_index":501,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{}}}],["showing",{"_index":1361,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":1035,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["simple.repository",{"_index":916,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["simplerepository",{"_index":467,"title":{"injectables/SimpleRepository.html":{}},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["simplerepository:19",{"_index":489,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/RoleRepository.html":{}}}],["simplerepository:25",{"_index":832,"title":{},"body":{"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{}}}],["simplerepository:27",{"_index":478,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["simplerepository:30",{"_index":482,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{}}}],["simplerepository:33",{"_index":871,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["simplerepository:37",{"_index":605,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["simplerepository:40",{"_index":491,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{}}}],["simplerepository:48",{"_index":486,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{}}}],["smart",{"_index":1352,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sslcert",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sslkey",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stack",{"_index":1477,"title":{},"body":{"index.html":{}}}],["start",{"_index":1358,"title":{},"body":{"index.html":{}}}],["started",{"_index":1346,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1259,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":1428,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":677,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["super",{"_index":681,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(hangmanwordmodel",{"_index":611,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["super(mirrorwordmodel",{"_index":716,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["super(repository",{"_index":574,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/SchoolService.html":{}}}],["super(resourcemodel",{"_index":503,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["super(rolemodel",{"_index":959,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["super(rolerepository",{"_index":994,"title":{},"body":{"injectables/RoleService.html":{}}}],["super.create(data",{"_index":882,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["super.findall(data",{"_index":614,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["support",{"_index":1491,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1368,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1492,"title":{},"body":{"modules.html":{}}}],["system",{"_index":1356,"title":{},"body":{"index.html":{}}}],["szakszolg",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateQuizInput.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["szakszolgnx",{"_index":1347,"title":{},"body":{"index.html":{}}}],["table",{"_index":1286,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1285,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":1459,"title":{},"body":{"index.html":{}}}],["tcreateinput",{"_index":481,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{}}}],["tdeleteinput",{"_index":485,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{}}}],["teams",{"_index":1468,"title":{},"body":{"index.html":{}}}],["test",{"_index":1381,"title":{},"body":{"index.html":{}}}],["test').required",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":1436,"title":{},"body":{"index.html":{}}}],["tfindmanyargs",{"_index":488,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{}}}],["tfindoneargs",{"_index":568,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{}}}],["this.appservice.getdata",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login((req",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validate(email",{"_index":696,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.configservice.get('jwt_expires",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_secret",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.findone",{"_index":1081,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["this.jwtservice.sign(payload",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mirrorwordservice.create(data",{"_index":733,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.delete(data",{"_index":737,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.findall(data",{"_index":731,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.findone(data",{"_index":729,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.update(data",{"_index":735,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.model",{"_index":1086,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.estimateddocumentcount",{"_index":506,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["this.model.find",{"_index":635,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SimpleRepository.html":{}}}],["this.model.find(filters).exec",{"_index":1041,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["this.model.find(param",{"_index":621,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["this.model.findbyid(data.id",{"_index":1083,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findbyidandupdate(data.id",{"_index":1095,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findbyidandupdate(id",{"_index":1094,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findone().skip(random).limit(1",{"_index":509,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["this.reflector.get('abilities",{"_index":755,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.reflector.getallandmerge('resources",{"_index":751,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.repository.create(data",{"_index":918,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.delete(data",{"_index":922,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.findall(data",{"_index":919,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.findone(data",{"_index":920,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.update(data",{"_index":921,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.roleservice.create(data",{"_index":986,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.delete(data",{"_index":990,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.findall(data",{"_index":984,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.findone(data",{"_index":982,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.update(data",{"_index":988,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.service.create(data",{"_index":552,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["this.service.delete(data",{"_index":558,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["this.service.findall(data",{"_index":549,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["this.service.findone(data",{"_index":545,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["this.service.update(data",{"_index":555,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["this.usermodel",{"_index":1184,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.find",{"_index":1177,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyid(data.id",{"_index":1185,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyid(data.id).populate('roles",{"_index":1178,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyidandupdate(data.id",{"_index":1199,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findone",{"_index":1180,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.userrepository.create(data",{"_index":1253,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.delete(data",{"_index":1255,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findall(data",{"_index":1248,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone(data",{"_index":1249,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.update(data",{"_index":1254,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.findone",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.usersservice.create(data",{"_index":1235,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.delete(data",{"_index":1239,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findall(data",{"_index":1233,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findone(data",{"_index":1231,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.update(data",{"_index":1237,"title":{},"body":{"classes/UsersResolver.html":{}}}],["throw",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserRepository.html":{}}}],["time",{"_index":1471,"title":{},"body":{"index.html":{}}}],["times",{"_index":1466,"title":{},"body":{"index.html":{}}}],["title",{"_index":264,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/Quiz.html":{},"classes/UpdateQuizInput.html":{}}}],["todo",{"_index":837,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["token",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens",{"_index":774,"title":{},"body":{"classes/Quiz.html":{}}}],["tools",{"_index":1321,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["trepository",{"_index":909,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["true",{"_index":205,"title":{},"body":{"modules/CoreModule.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"miscellaneous/variables.html":{}}}],["true})@isarray",{"_index":352,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArrayArg.html":{}}}],["true})@isemail",{"_index":1135,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["true})@isoptional",{"_index":396,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["true})@isoptional()@isnotempty",{"_index":1118,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["true})@prop",{"_index":436,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["true})@useguards(gqlauthguard",{"_index":853,"title":{},"body":{"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["true})@useguards(gqlauthguard)@permission('read",{"_index":973,"title":{},"body":{"classes/RoleResolver.html":{}}}],["tslib",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["tupdateinput",{"_index":570,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{}}}],["tutorial",{"_index":1364,"title":{},"body":{"index.html":{}}}],["type",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1501,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":300,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateSchoolInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"index.html":{}}}],["types.objectid",{"_index":1087,"title":{},"body":{"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["types.objectid(roleid",{"_index":1197,"title":{},"body":{"injectables/UserRepository.html":{}}}],["typescript",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":694,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":430,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["understand",{"_index":1446,"title":{},"body":{"index.html":{}}}],["unified",{"_index":1485,"title":{},"body":{"index.html":{}}}],["unit",{"_index":1435,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["unused",{"_index":359,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{}}}],["up",{"_index":1465,"title":{},"body":{"index.html":{}}}],["update",{"_index":472,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["update(data",{"_index":490,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["updatedat",{"_index":428,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["updategroupingitem",{"_index":514,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["updategroupingitem(@args('updategroupingitemdata",{"_index":554,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["updategroupingitem(data",{"_index":531,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["updategroupingiteminput",{"_index":493,"title":{"classes/UpdateGroupingItemInput.html":{}},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["updatehangmanword",{"_index":642,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["updatehangmanword(@args('updatehangmanworddata",{"_index":659,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["updatehangmanword(data",{"_index":653,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["updatehangmanwordinput",{"_index":606,"title":{"classes/UpdateHangmanWordInput.html":{}},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/UpdateHangmanWordInput.html":{},"coverage.html":{}}}],["updatemirrorword",{"_index":720,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["updatemirrorword(@args('updatemirrorworddata",{"_index":734,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["updatemirrorword(data",{"_index":726,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["updatemirrorwordinput",{"_index":714,"title":{"classes/UpdateMirrorWordInput.html":{}},"body":{"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["updatequiz",{"_index":887,"title":{},"body":{"classes/QuizResolver.html":{}}}],["updatequiz(@args('updatequizdata",{"_index":903,"title":{},"body":{"classes/QuizResolver.html":{}}}],["updatequiz(data",{"_index":897,"title":{},"body":{"classes/QuizResolver.html":{}}}],["updatequizinput",{"_index":873,"title":{"classes/UpdateQuizInput.html":{}},"body":{"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"classes/UpdateQuizInput.html":{},"coverage.html":{}}}],["updatequizquestion",{"_index":846,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["updatequizquestion(@args('updatequizquestiondata",{"_index":865,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["updatequizquestion(data",{"_index":858,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["updatequizquestioninput",{"_index":833,"title":{"classes/UpdateQuizQuestionInput.html":{}},"body":{"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{}}}],["updaterole",{"_index":963,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updaterole(@args('updateroledata",{"_index":987,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updaterole(data",{"_index":977,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updateroleinput",{"_index":954,"title":{"classes/UpdateRoleInput.html":{}},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["updateschool",{"_index":1046,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["updateschool(@args('updateschooldata",{"_index":1063,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["updateschool(data",{"_index":1057,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["updateschoolinput",{"_index":1025,"title":{"classes/UpdateSchoolInput.html":{}},"body":{"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolInput.html":{},"coverage.html":{}}}],["updateuser",{"_index":1213,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuser(@args('updateuserdata",{"_index":1236,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuser(data",{"_index":1221,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuserinput",{"_index":1131,"title":{"classes/UpdateUserInput.html":{}},"body":{"classes/UpdateUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uptime",{"_index":218,"title":{},"body":{"classes/CoreResolver.html":{}}}],["uri",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":633,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"index.html":{}}}],["usefactory",{"_index":212,"title":{},"body":{"modules/CoreModule.html":{}}}],["useguards",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["useguards(gqlauthguard",{"_index":547,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["useguards(localauthguard",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":145,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["user(@args",{"_index":1230,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user(data",{"_index":1223,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user._id",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.args",{"_index":1173,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.args.ts",{"_index":394,"title":{},"body":{"classes/GetUserArgs.html":{},"coverage.html":{}}}],["user.args.ts:13",{"_index":397,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["user.args.ts:9",{"_index":398,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["user.decorator.ts",{"_index":1265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.entity",{"_index":1171,"title":{},"body":{"injectables/UserRepository.html":{}}}],["user.input",{"_index":1172,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.input.ts",{"_index":310,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["user.input.ts:10",{"_index":314,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:13",{"_index":1136,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:14",{"_index":318,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:16",{"_index":1143,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:18",{"_index":316,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:20",{"_index":1140,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:21",{"_index":315,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:23",{"_index":1137,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:24",{"_index":317,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:26",{"_index":1138,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:29",{"_index":1139,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:32",{"_index":1141,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:34",{"_index":1142,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.name",{"_index":1209,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{}}}],["user.roles",{"_index":1195,"title":{},"body":{"injectables/UserRepository.html":{}}}],["user.save",{"_index":1198,"title":{},"body":{"injectables/UserRepository.html":{}}}],["userdocument",{"_index":1157,"title":{},"body":{"classes/User.html":{},"injectables/UserRepository.html":{},"miscellaneous/typealiases.html":{}}}],["usermodel",{"_index":1165,"title":{},"body":{"injectables/UserRepository.html":{}}}],["username",{"_index":312,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["usernamefield",{"_index":695,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userpermissions",{"_index":764,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["userpermissions.includes(required",{"_index":771,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["userrepository",{"_index":1161,"title":{"injectables/UserRepository.html":{}},"body":{"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":1214,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users(@args",{"_index":1232,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users(data",{"_index":1225,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users.args",{"_index":1174,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["users.args.ts",{"_index":403,"title":{},"body":{"classes/GetUsersArgs.html":{},"coverage.html":{}}}],["users.resolver",{"_index":1206,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1204,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["users/users.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{}}}],["users/users.service",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userschema",{"_index":1159,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["usersmodule",{"_index":47,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersresolver",{"_index":1205,"title":{"classes/UsersResolver.html":{}},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["usersservice",{"_index":138,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":1350,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":1338,"title":{},"body":{"dependencies.html":{}}}],["validate",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":673,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationschema",{"_index":192,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":254,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"dependencies.html":{}}}],["value",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["variable",{"_index":1262,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1511,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["verify(token",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["via",{"_index":1438,"title":{},"body":{"index.html":{}}}],["video",{"_index":1360,"title":{},"body":{"index.html":{}}}],["visit",{"_index":1453,"title":{},"body":{"index.html":{}}}],["want",{"_index":627,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["web",{"_index":1389,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":74,"title":{},"body":{"injectables/AppService.html":{}}}],["well",{"_index":1379,"title":{},"body":{"index.html":{}}}],["word",{"_index":249,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWord.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{}}}],["word.args",{"_index":609,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["word.args.ts",{"_index":356,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"coverage.html":{}}}],["word.args.ts:10",{"_index":357,"title":{},"body":{"classes/GetHangmanWordArgs.html":{}}}],["word.entity",{"_index":598,"title":{},"body":{"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{}}}],["word.entity.ts",{"_index":577,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["word.entity.ts:13",{"_index":579,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:17",{"_index":584,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:21",{"_index":580,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:25",{"_index":581,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:29",{"_index":583,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:33",{"_index":582,"title":{},"body":{"classes/HangmanWord.html":{}}}],["word.input",{"_index":607,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["word.input.ts",{"_index":247,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["word.input.ts:13",{"_index":251,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/UpdateHangmanWordInput.html":{}}}],["word.input.ts:14",{"_index":1105,"title":{},"body":{"classes/UpdateMirrorWordInput.html":{}}}],["word.input.ts:16",{"_index":1103,"title":{},"body":{"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{}}}],["word.input.ts:18",{"_index":1104,"title":{},"body":{"classes/UpdateHangmanWordInput.html":{}}}],["word.input.ts:9",{"_index":252,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{}}}],["word.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["word.module.ts",{"_index":593,"title":{},"body":{"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{}}}],["word.repository",{"_index":599,"title":{},"body":{"modules/HangmanWordModule.html":{},"injectables/HangmanWordService.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordService.html":{}}}],["word.repository.ts",{"_index":601,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"coverage.html":{}}}],["word.repository.ts:22",{"_index":603,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["word.resolver",{"_index":596,"title":{},"body":{"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{}}}],["word.resolver.ts",{"_index":638,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"coverage.html":{}}}],["word.resolver.ts:17",{"_index":643,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:21",{"_index":650,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:28",{"_index":652,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:35",{"_index":645,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:42",{"_index":654,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:49",{"_index":647,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.service",{"_index":594,"title":{},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{}}}],["word.service.ts",{"_index":661,"title":{},"body":{"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["word.service.ts:18",{"_index":662,"title":{},"body":{"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{}}}],["word/dto/args/get",{"_index":355,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"coverage.html":{}}}],["word/dto/inputs/create",{"_index":246,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"coverage.html":{}}}],["word/dto/inputs/delete",{"_index":328,"title":{},"body":{"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"coverage.html":{}}}],["word/dto/inputs/update",{"_index":1102,"title":{},"body":{"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["word/entities/hangman",{"_index":576,"title":{},"body":{"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["word/entities/mirror",{"_index":699,"title":{},"body":{"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["word/hangman",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["word/mirror",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["words",{"_index":631,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["words.args",{"_index":608,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["words.args.ts",{"_index":361,"title":{},"body":{"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"coverage.html":{}}}],["words.args.ts:12",{"_index":362,"title":{},"body":{"classes/GetHangmanWordsArgs.html":{}}}],["workspace",{"_index":1367,"title":{},"body":{"index.html":{}}}],["x509&ssl=true&retrywrites=true&w=majority",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/core/app.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Message\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\nimport { Message } from '@szakszolg-nx/api-interfaces'\n\nimport { AppService } from './app.service'\n\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get('hello')\n    getData(): Message {\n        return this.appService.getData()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nGroupingItemModule\n\nGroupingItemModule\n\nAppModule -->\n\nGroupingItemModule->AppModule\n\n\n\n\n\nHangmanWordModule\n\nHangmanWordModule\n\nAppModule -->\n\nHangmanWordModule->AppModule\n\n\n\n\n\nMirrorWordModule\n\nMirrorWordModule\n\nAppModule -->\n\nMirrorWordModule->AppModule\n\n\n\n\n\nQuizModule\n\nQuizModule\n\nAppModule -->\n\nQuizModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            GroupingItemModule\n                        \n                        \n                            HangmanWordModule\n                        \n                        \n                            MirrorWordModule\n                        \n                        \n                            QuizModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { AppController } from './core/app.controller'\nimport { AppService } from './core/app.service'\nimport { CoreModule } from './core/core.module'\nimport { UsersModule } from './users/users.module'\nimport { AuthModule } from './auth/auth.module'\nimport { RoleModule } from './role/role.module'\nimport { MirrorWordModule } from './mirror-word/mirror-word.module'\nimport { HangmanWordModule } from './hangman-word/hangman-word.module'\nimport { GroupingItemModule } from './grouping-item/grouping-item.module'\nimport { SchoolModule } from './school/school.module'\nimport { QuizModule } from './quiz/quiz.module'\n\n@Module({\n    imports: [\n        CoreModule,\n        UsersModule,\n        AuthModule,\n        RoleModule,\n        MirrorWordModule,\n        HangmanWordModule,\n        GroupingItemModule,\n        SchoolModule,\n        QuizModule,\n    ],\n    controllers: [AppController],\n    providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/core/app.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Message\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { Message } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class AppService {\n    getData(): Message {\n        return { message: 'Welcome to api!' }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Req, UseGuards } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { LocalAuthGuard } from './guards/local-auth.guard'\nimport { Request } from 'express'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService) {}\n\n    @UseGuards(LocalAuthGuard)\n    @Post('login')\n    async login(@Req() req: Request) {\n        return await this.authService.login((req as any).user as IUser)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { UsersModule } from '../users/users.module'\nimport { JwtModule } from '@nestjs/jwt'\nimport { ConfigModule } from '@nestjs/config'\nimport { PassportModule } from '@nestjs/passport'\nimport { JwtStrategy } from './strategies/jwt.strategy'\nimport { LocalStrategy } from './strategies/local.strategy'\nimport { AuthController } from './auth.controller'\n\n@Module({\n    imports: [\n        ConfigModule,\n        forwardRef(() => UsersModule),\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        JwtModule.register({\n            secret: process.env.JWT_SECRET,\n            signOptions: {\n                expiresIn: process.env.JWT_EXPIRES || '7d',\n            },\n        }),\n    ],\n    controllers: [AuthController],\n    providers: [AuthService, JwtStrategy, LocalStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Async\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verify\n                        \n                    \n                \n            \n            \n                \n                    \n                    verify(token: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\nimport { UsersService } from '../users/users.service'\nimport { JwtService } from '@nestjs/jwt'\nimport { ConfigService } from '@nestjs/config'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        @Inject(forwardRef(() => UsersService))\n        private readonly userService: UsersService,\n        private readonly jwtService: JwtService,\n        private readonly configService: ConfigService,\n    ) {}\n\n    async validate(email: string, password: string): Promise {\n        const user = await this.userService.findOne({ email })\n        return user && (await bcrypt.compare(password, user.password)) ? user : null\n    }\n\n    async login(user: IUser) {\n        const payload = { email: user.email, sub: user._id }\n        return {\n            access_token: this.jwtService.sign(payload, {\n                secret: this.configService.get('JWT_SECRET'),\n                expiresIn: this.configService.get('JWT_EXPIRES') || '7d',\n            }),\n        }\n    }\n\n    async verify(token: string) {\n        const decoded = this.jwtService.verify(token, { secret: this.configService.get('JWT_SECRET')! })\n        const user = await this.userService.findOne({ email: decoded.email })\n        if (!user) throw new Error('User not found')\n        return user\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { configuration } from './config/configuration'\nimport { validationSchema } from './config/validation'\nimport { GraphQLModule } from '@nestjs/graphql'\nimport { CoreResolver } from './core.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { mongooseConfig } from './config/mongo-config.factory'\n\n@Module({\n    imports: [\n        ConfigModule.forRoot({\n            isGlobal: true,\n            load: [configuration],\n            validationSchema,\n        }),\n        GraphQLModule.forRoot({\n            autoSchemaFile: true,\n            playground: true,\n        }),\n        MongooseModule.forRootAsync({\n            imports: mongooseConfig.imports,\n            useFactory: mongooseConfig.mongooseConfigFactory,\n            inject: mongooseConfig.providers,\n        }),\n    ],\n    controllers: [],\n    providers: [CoreResolver],\n    exports: [],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoreResolver.html":{"url":"classes/CoreResolver.html","title":"class - CoreResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoreResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/core.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                uptime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        uptime\n                        \n                    \n                \n            \n            \n                \nuptime()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/core/core.resolver.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Float, Query, Resolver } from '@nestjs/graphql'\n\n@Resolver()\nexport class CoreResolver {\n    @Query(() => Float)\n    uptime() {\n        return process.uptime()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGroupingItemInput.html":{"url":"classes/CreateGroupingItemInput.html","title":"class - CreateGroupingItemInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGroupingItemInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                correct\n                            \n                            \n                                groups\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateGroupingItemInput extends GqlInput {\n    @Field()\n    item: string\n\n    @Field(() => [String])\n    groups: string[]\n\n    @Field()\n    correct: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateHangmanWordInput.html":{"url":"classes/CreateHangmanWordInput.html","title":"class - CreateHangmanWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateHangmanWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class CreateHangmanWordInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    word: string\n\n    @Field()\n    @IsNotEmpty()\n    category: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMirrorWordInput.html":{"url":"classes/CreateMirrorWordInput.html","title":"class - CreateMirrorWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMirrorWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/inputs/create-mirror-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/dto/inputs/create-mirror-word.input.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateMirrorWordInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    public word: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuizInput.html":{"url":"classes/CreateQuizInput.html","title":"class - CreateQuizInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuizInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                description\n                            \n                            \n                                questions\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IQuizQuestion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\nimport { IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { CreateQuizQuestionInput } from '../../../quiz-question/dto/inputs/create-quiz-question.input'\n\n@InputType()\nexport class CreateQuizInput extends GqlInput {\n    @Field()\n    title: string\n\n    @Field()\n    description: string\n\n    @Field(() => [String])\n    categories: string[]\n\n    @Field(() => [CreateQuizQuestionInput])\n    questions: IQuizQuestion[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuizQuestionInput.html":{"url":"classes/CreateQuizQuestionInput.html","title":"class - CreateQuizQuestionInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuizQuestionInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                answers\n                            \n                            \n                                    Optional\n                                correctAnswers\n                            \n                            \n                                question\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        correctAnswers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateQuizQuestionInput extends GqlInput {\n    @Field()\n    question: string\n\n    @Field()\n    type: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    answers?: string[]\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    correctAnswers?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleInput.html":{"url":"classes/CreateRoleInput.html","title":"class - CreateRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/create-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateRoleInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    name: string\n\n    @Field()\n    @IsNotEmpty()\n    description: string\n\n    @Field(() => [String])\n    @IsArray()\n    permissions: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolInput.html":{"url":"classes/CreateSchoolInput.html","title":"class - CreateSchoolInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/inputs/create-school.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                county\n                            \n                            \n                                name\n                            \n                            \n                                om\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        county\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsArray()@ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\nimport { ArrayNotEmpty, IsArray, IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class CreateSchoolInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    om: string\n\n    @Field()\n    @IsNotEmpty()\n    name: string\n\n    @Field()\n    @IsNotEmpty()\n    address: string\n\n    @Field()\n    @IsNotEmpty()\n    county: string\n\n    @Field(() => [String])\n    @IsArray()\n    @ArrayNotEmpty()\n    types: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/create-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsEmail, IsNotEmpty } from 'class-validator'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateUserInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @Field()\n    @IsNotEmpty()\n    username: string\n\n    @Field()\n    @IsNotEmpty()\n    password: string\n\n    @Field()\n    om?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    roles?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteGroupingItemInput.html":{"url":"classes/DeleteGroupingItemInput.html","title":"class - DeleteGroupingItemInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteGroupingItemInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/inputs/delete-grouping-item.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteGroupingItemInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteHangmanWordInput.html":{"url":"classes/DeleteHangmanWordInput.html","title":"class - DeleteHangmanWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteHangmanWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/inputs/delete-hangman-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteHangmanWordInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMirrorWordInput.html":{"url":"classes/DeleteMirrorWordInput.html","title":"class - DeleteMirrorWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMirrorWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/inputs/delete-mirror-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteMirrorWordInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteQuizInput.html":{"url":"classes/DeleteQuizInput.html","title":"class - DeleteQuizInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteQuizInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/inputs/delete-quiz.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteQuizInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteQuizQuestionInput.html":{"url":"classes/DeleteQuizQuestionInput.html","title":"class - DeleteQuizQuestionInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteQuizQuestionInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/inputs/delete-quiz-question.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteQuizQuestionInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteRoleInput.html":{"url":"classes/DeleteRoleInput.html","title":"class - DeleteRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/delete-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteRoleInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteSchoolInput.html":{"url":"classes/DeleteSchoolInput.html","title":"class - DeleteSchoolInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteSchoolInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/inputs/delete-school.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteSchoolInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserInput.html":{"url":"classes/DeleteUserInput.html","title":"class - DeleteUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/delete-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteUserInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetGroupingItemArgs.html":{"url":"classes/GetGroupingItemArgs.html","title":"class - GetGroupingItemArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetGroupingItemArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/args/get-grouping-item.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\n\n@ArgsType()\nexport class GetGroupingItemArgs extends IdArg {\n    @Field({ nullable: true })\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetGroupingItemsArgs.html":{"url":"classes/GetGroupingItemsArgs.html","title":"class - GetGroupingItemsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetGroupingItemsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/args/get-grouping-items.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetGroupingItemsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetHangmanWordArgs.html":{"url":"classes/GetHangmanWordArgs.html","title":"class - GetHangmanWordArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetHangmanWordArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/args/get-hangman-word.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/args/get-hangman-word.args.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true, deprecationReason: 'This field is unused'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\n\n@ArgsType()\nexport class GetHangmanWordArgs extends IdArg {\n    @Field({ nullable: true, deprecationReason: 'This field is unused' })\n    id: string\n\n    @Field({ nullable: true })\n    category?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetHangmanWordsArgs.html":{"url":"classes/GetHangmanWordsArgs.html","title":"class - GetHangmanWordsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetHangmanWordsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/args/get-hangman-words.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/args/get-hangman-words.args.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetHangmanWordsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n\n    @Field(() => String, { nullable: true })\n    category?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetMirrorWordArgs.html":{"url":"classes/GetMirrorWordArgs.html","title":"class - GetMirrorWordArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetMirrorWordArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/args/get-mirror-word.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true, deprecationReason: 'This field is unused.'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\n\n@ArgsType()\nexport class GetMirrorWordArgs extends IdArg {\n    @Field({ nullable: true, deprecationReason: 'This field is unused.' })\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetMirrorWordsArgs.html":{"url":"classes/GetMirrorWordsArgs.html","title":"class - GetMirrorWordsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetMirrorWordsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/args/get-mirror-words.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetMirrorWordsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizArgs.html":{"url":"classes/GetQuizArgs.html","title":"class - GetQuizArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/args/get-quiz.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizQuestionArgs.html":{"url":"classes/GetQuizQuestionArgs.html","title":"class - GetQuizQuestionArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizQuestionArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/args/get-quiz-question.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizQuestionArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizQuestionsArgs.html":{"url":"classes/GetQuizQuestionsArgs.html","title":"class - GetQuizQuestionsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizQuestionsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/args/get-quiz-questions.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizQuestionsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizzesArgs.html":{"url":"classes/GetQuizzesArgs.html","title":"class - GetQuizzesArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizzesArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/args/get-quizzes.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/args/get-quizzes.args.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizzesArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n\n    @Field({ nullable: true })\n    category?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRoleArgs.html":{"url":"classes/GetRoleArgs.html","title":"class - GetRoleArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRoleArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/args/get-role.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetRoleArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRolesArgs.html":{"url":"classes/GetRolesArgs.html","title":"class - GetRolesArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRolesArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/args/get-roles.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetRolesArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSchoolArgs.html":{"url":"classes/GetSchoolArgs.html","title":"class - GetSchoolArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSchoolArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/args/get-school.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetSchoolArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSchoolsArgs.html":{"url":"classes/GetSchoolsArgs.html","title":"class - GetSchoolsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSchoolsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/args/get-schools.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                county\n                            \n                            \n                                    Optional\n                                ids\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        county\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetSchoolsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field({ nullable: true })\n    name?: string\n\n    @Field({ nullable: true })\n    address?: string\n\n    @Field({ nullable: true })\n    county?: string\n\n    @Field({ nullable: true })\n    type: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserArgs.html":{"url":"classes/GetUserArgs.html","title":"class - GetUserArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/args/get-user.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/args/get-user.args.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/args/get-user.args.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field } from '@nestjs/graphql'\nimport { IsOptional } from 'class-validator'\nimport { GqlArg } from '../../../../shared/gql-args/gql-arg.abstract'\n\n@ArgsType()\nexport class GetUserArgs extends GqlArg {\n    @Field({ nullable: true })\n    @IsOptional()\n    id?: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    email?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersArgs.html":{"url":"classes/GetUsersArgs.html","title":"class - GetUsersArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/args/get-users.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetUsersArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlArg.html":{"url":"classes/GqlArg.html","title":"class - GqlArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/gql-arg.abstract.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType } from '@nestjs/graphql'\n\n@ArgsType()\nexport abstract class GqlArg {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlAuthGuard.html":{"url":"classes/GqlAuthGuard.html","title":"class - GqlAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/gql-auth.guard.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRequest\n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/guards/gql-auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\nimport {ExecutionContext} from \"@nestjs/common\";\nimport {GqlExecutionContext} from \"@nestjs/graphql\";\n\nexport class GqlAuthGuard extends AuthGuard('jwt') {\n    getRequest(context: ExecutionContext) {\n        return GqlExecutionContext.create(context).getContext().req\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlInput.html":{"url":"classes/GqlInput.html","title":"class - GqlInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-inputs/gql-input.abstract.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class GqlInput {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupingItem.html":{"url":"classes/GroupingItem.html","title":"class - GroupingItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupingItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGroupingItem\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                correct\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                groups\n                            \n                            \n                                item\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IGroupingItem } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type GroupingItemDocument = IGroupingItem & Document\n\n@ObjectType()\n@Schema()\nexport class GroupingItem implements IGroupingItem {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    item: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    groups: string[]\n\n    @Field()\n    @Prop()\n    correct: string\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const GroupingItemSchema = SchemaFactory.createForClass(GroupingItem)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupingItemModule.html":{"url":"modules/GroupingItemModule.html","title":"module - GroupingItemModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupingItemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GroupingItemModule\n\n\n\ncluster_GroupingItemModule_exports\n\n\n\ncluster_GroupingItemModule_providers\n\n\n\n\nGroupingItemRepository \n\nGroupingItemRepository \n\n\n\nGroupingItemService \n\nGroupingItemService \n\n\n\nGroupingItemModule\n\nGroupingItemModule\n\nGroupingItemRepository  -->\n\nGroupingItemModule->GroupingItemRepository \n\n\n\nGroupingItemService  -->\n\nGroupingItemModule->GroupingItemService \n\n\n\n\n\nGroupingItemRepository\n\nGroupingItemRepository\n\nGroupingItemModule -->\n\nGroupingItemRepository->GroupingItemModule\n\n\n\n\n\nGroupingItemService\n\nGroupingItemService\n\nGroupingItemModule -->\n\nGroupingItemService->GroupingItemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/grouping-item.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GroupingItemRepository\n                        \n                        \n                            GroupingItemService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GroupingItemRepository\n                        \n                        \n                            GroupingItemService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { GroupingItemService } from './grouping-item.service'\nimport { GroupingItemResolver } from './grouping-item.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { GroupingItem, GroupingItemSchema } from './entities/grouping-item.entity'\nimport { GroupingItemRepository } from './entities/grouping-item.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: GroupingItem.name,\n                schema: GroupingItemSchema,\n            },\n        ]),\n    ],\n    providers: [GroupingItemResolver, GroupingItemService, GroupingItemRepository],\n    exports: [GroupingItemService, GroupingItemRepository],\n})\nexport class GroupingItemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupingItemRepository.html":{"url":"injectables/GroupingItemRepository.html","title":"injectable - GroupingItemRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupingItemRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/entities/grouping-item.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(__data: GetGroupingItemArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    __data\n                                    \n                                                GetGroupingItemArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { GroupingItem, GroupingItemDocument } from './grouping-item.entity'\nimport { Model } from 'mongoose'\nimport { UpdateGroupingItemInput } from '../dto/inputs/update-grouping-item.input'\nimport { CreateGroupingItemInput } from '../dto/inputs/create-grouping-item.input'\nimport { GetGroupingItemsArgs } from '../dto/args/get-grouping-items.args'\nimport { GetGroupingItemArgs } from '../dto/args/get-grouping-item.args'\nimport { IGroupingItem } from '@szakszolg-nx/api-interfaces'\nimport { DeleteGroupingItemInput } from '../dto/inputs/delete-grouping-item.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class GroupingItemRepository extends SimpleRepository {\n    constructor(@InjectModel(GroupingItem.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    override async findOne(__data: GetGroupingItemArgs): Promise {\n        const count = await this.model.estimatedDocumentCount()\n        const random = Math.floor(Math.random() * count)\n        return this.model.findOne().skip(random).limit(1)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupingItemResolver.html":{"url":"classes/GroupingItemResolver.html","title":"class - GroupingItemResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupingItemResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/grouping-item.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGroupingItem\n                            \n                            \n                                deleteGroupingItem\n                            \n                            \n                                groupingItem\n                            \n                            \n                                groupingItems\n                            \n                            \n                                updateGroupingItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: GroupingItemService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        GroupingItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createGroupingItem\n                        \n                    \n                \n            \n            \n                \ncreateGroupingItem(data: CreateGroupingItemInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateGroupingItemInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroupingItem\n                        \n                    \n                \n            \n            \n                \ndeleteGroupingItem(data: DeleteGroupingItemInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteGroupingItemInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupingItem\n                        \n                    \n                \n            \n            \n                \ngroupingItem(data: GetGroupingItemArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetGroupingItemArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupingItems\n                        \n                    \n                \n            \n            \n                \ngroupingItems(data: GetGroupingItemsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetGroupingItemsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateGroupingItem\n                        \n                    \n                \n            \n            \n                \nupdateGroupingItem(data: UpdateGroupingItemInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateGroupingItemInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { GroupingItemService } from './grouping-item.service'\nimport { GroupingItem } from './entities/grouping-item.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetGroupingItemArgs } from './dto/args/get-grouping-item.args'\nimport { IGroupingItem } from '@szakszolg-nx/api-interfaces'\nimport { GetGroupingItemsArgs } from './dto/args/get-grouping-items.args'\nimport { CreateGroupingItemInput } from './dto/inputs/create-grouping-item.input'\nimport { UpdateGroupingItemInput } from './dto/inputs/update-grouping-item.input'\nimport { DeleteGroupingItemInput } from './dto/inputs/delete-grouping-item.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => GroupingItem)\n@Resource('grouping-items')\nexport class GroupingItemResolver {\n    constructor(private readonly service: GroupingItemService) {}\n\n    @Query(() => GroupingItem, { nullable: true })\n    groupingItem(@Args({ nullable: true }) data: GetGroupingItemArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [GroupingItem], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    groupingItems(@Args({ nullable: true }) data: GetGroupingItemsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => GroupingItem)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createGroupingItem(@Args('createGroupingItemData') data: CreateGroupingItemInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => GroupingItem)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateGroupingItem(@Args('updateGroupingItemData') data: UpdateGroupingItemInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => GroupingItem)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteGroupingItem(@Args('deleteGroupingItemData') data: DeleteGroupingItemInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupingItemService.html":{"url":"injectables/GroupingItemService.html","title":"injectable - GroupingItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupingItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/grouping-item.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: GroupingItemRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/grouping-item/grouping-item.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        GroupingItemRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateGroupingItemInput } from './dto/inputs/create-grouping-item.input'\nimport { UpdateGroupingItemInput } from './dto/inputs/update-grouping-item.input'\nimport { GroupingItemRepository } from './entities/grouping-item.repository'\nimport { GetGroupingItemsArgs } from './dto/args/get-grouping-items.args'\nimport { GetGroupingItemArgs } from './dto/args/get-grouping-item.args'\nimport { DeleteGroupingItemInput } from './dto/inputs/delete-grouping-item.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class GroupingItemService extends RepositoryProxyService {\n    constructor(repository: GroupingItemRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HangmanWord.html":{"url":"classes/HangmanWord.html","title":"class - HangmanWord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HangmanWord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IHangmanWord\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                category\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IHangmanWord } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type HangmanWordDocument = IHangmanWord & Document\n\n@ObjectType()\n@Schema()\nexport class HangmanWord implements IHangmanWord {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    word: string\n\n    @Field()\n    @Prop()\n    category: string\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const HangmanWordSchema = SchemaFactory.createForClass(HangmanWord)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HangmanWordModule.html":{"url":"modules/HangmanWordModule.html","title":"module - HangmanWordModule","body":"\n                   \n\n\n\n\n    Modules\n    HangmanWordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HangmanWordModule\n\n\n\ncluster_HangmanWordModule_exports\n\n\n\ncluster_HangmanWordModule_providers\n\n\n\n\nHangmanWordRepository \n\nHangmanWordRepository \n\n\n\nHangmanWordService \n\nHangmanWordService \n\n\n\nHangmanWordModule\n\nHangmanWordModule\n\nHangmanWordRepository  -->\n\nHangmanWordModule->HangmanWordRepository \n\n\n\nHangmanWordService  -->\n\nHangmanWordModule->HangmanWordService \n\n\n\n\n\nHangmanWordRepository\n\nHangmanWordRepository\n\nHangmanWordModule -->\n\nHangmanWordRepository->HangmanWordModule\n\n\n\n\n\nHangmanWordService\n\nHangmanWordService\n\nHangmanWordModule -->\n\nHangmanWordService->HangmanWordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/hangman-word.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HangmanWordRepository\n                        \n                        \n                            HangmanWordService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HangmanWordRepository\n                        \n                        \n                            HangmanWordService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { HangmanWordService } from './hangman-word.service'\nimport { HangmanWordResolver } from './hangman-word.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { HangmanWord, HangmanWordSchema } from './entities/hangman-word.entity'\nimport { HangmanWordRepository } from './entities/hangman-word.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: HangmanWord.name,\n                schema: HangmanWordSchema,\n            },\n        ]),\n    ],\n    providers: [HangmanWordResolver, HangmanWordService, HangmanWordRepository],\n    exports: [HangmanWordService, HangmanWordRepository],\n})\nexport class HangmanWordModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HangmanWordRepository.html":{"url":"injectables/HangmanWordRepository.html","title":"injectable - HangmanWordRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HangmanWordRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/entities/hangman-word.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(hangmanWordModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hangmanWordModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetHangmanWordsArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetHangmanWordsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetHangmanWordArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetHangmanWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { HangmanWord, HangmanWordDocument } from './hangman-word.entity'\nimport { Model } from 'mongoose'\nimport { UpdateHangmanWordInput } from '../dto/inputs/update-hangman-word.input'\nimport { CreateHangmanWordInput } from '../dto/inputs/create-hangman-word.input'\nimport { GetHangmanWordsArgs } from '../dto/args/get-hangman-words.args'\nimport { GetHangmanWordArgs } from '../dto/args/get-hangman-word.args'\nimport { IHangmanWord } from '@szakszolg-nx/api-interfaces'\nimport { DeleteHangmanWordInput } from '../dto/inputs/delete-hangman-word.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class HangmanWordRepository extends SimpleRepository {\n    constructor(@InjectModel(HangmanWord.name) hangmanWordModel: Model) {\n        super(hangmanWordModel)\n    }\n\n    override async findAll(data: GetHangmanWordsArgs | null): Promise {\n        if (!data?.category && !data?.ids) return super.findAll(data)\n        let res: any[]\n        const param = {}\n        if (data.category) param['category'] = { $regex: data.category, $options: 'i' }\n        res = await this.model.find(param)\n        if (data.ids?.length > 0) res = res.filter((x) => data.ids.includes(x._id.toString()))\n        return res\n    }\n\n    override async findOne(data: GetHangmanWordArgs): Promise {\n        if (data?.category) {\n            // Note: If we want more than a few hundred words per category, we should use findOne().skip()\n            const res = await this.model.find({ category: { $regex: data.category, $options: 'i' } })\n            return res[Math.floor(Math.random() * res.length)]\n        }\n\n        const count = await this.model.estimatedDocumentCount()\n        const random = Math.floor(Math.random() * count)\n        return this.model.findOne().skip(random).limit(1)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HangmanWordResolver.html":{"url":"classes/HangmanWordResolver.html","title":"class - HangmanWordResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HangmanWordResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/hangman-word.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createHangmanWord\n                            \n                            \n                                deleteHangmanWord\n                            \n                            \n                                hangmanWord\n                            \n                            \n                                hangmanWords\n                            \n                            \n                                updateHangmanWord\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: HangmanWordService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        HangmanWordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createHangmanWord\n                        \n                    \n                \n            \n            \n                \ncreateHangmanWord(data: CreateHangmanWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateHangmanWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteHangmanWord\n                        \n                    \n                \n            \n            \n                \ndeleteHangmanWord(data: DeleteHangmanWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteHangmanWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hangmanWord\n                        \n                    \n                \n            \n            \n                \nhangmanWord(data: GetHangmanWordArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true, description: 'Get a hangman word randomly'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetHangmanWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hangmanWords\n                        \n                    \n                \n            \n            \n                \nhangmanWords(data: GetHangmanWordsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetHangmanWordsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateHangmanWord\n                        \n                    \n                \n            \n            \n                \nupdateHangmanWord(data: UpdateHangmanWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateHangmanWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { HangmanWordService } from './hangman-word.service'\nimport { HangmanWord } from './entities/hangman-word.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetHangmanWordArgs } from './dto/args/get-hangman-word.args'\nimport { IHangmanWord } from '@szakszolg-nx/api-interfaces'\nimport { GetHangmanWordsArgs } from './dto/args/get-hangman-words.args'\nimport { CreateHangmanWordInput } from './dto/inputs/create-hangman-word.input'\nimport { UpdateHangmanWordInput } from './dto/inputs/update-hangman-word.input'\nimport { DeleteHangmanWordInput } from './dto/inputs/delete-hangman-word.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => HangmanWord)\n@Resource('hangman-words')\nexport class HangmanWordResolver {\n    constructor(private readonly service: HangmanWordService) {}\n\n    @Query(() => HangmanWord, { nullable: true, description: 'Get a hangman word randomly' })\n    hangmanWord(@Args({ nullable: true }) data: GetHangmanWordArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [HangmanWord], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    hangmanWords(@Args({ nullable: true }) data: GetHangmanWordsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => HangmanWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createHangmanWord(@Args('createHangmanWordData') data: CreateHangmanWordInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => HangmanWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateHangmanWord(@Args('updateHangmanWordData') data: UpdateHangmanWordInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => HangmanWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteHangmanWord(@Args('deleteHangmanWordData') data: DeleteHangmanWordInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HangmanWordService.html":{"url":"injectables/HangmanWordService.html","title":"injectable - HangmanWordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HangmanWordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/hangman-word.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: HangmanWordRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/hangman-word/hangman-word.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        HangmanWordRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateHangmanWordInput } from './dto/inputs/create-hangman-word.input'\nimport { UpdateHangmanWordInput } from './dto/inputs/update-hangman-word.input'\nimport { HangmanWordRepository } from './entities/hangman-word.repository'\nimport { GetHangmanWordsArgs } from './dto/args/get-hangman-words.args'\nimport { GetHangmanWordArgs } from './dto/args/get-hangman-word.args'\nimport { DeleteHangmanWordInput } from './dto/inputs/delete-hangman-word.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class HangmanWordService extends RepositoryProxyService {\n    constructor(repository: HangmanWordRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdArg.html":{"url":"classes/IdArg.html","title":"class - IdArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/id.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-args/id.args.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlArg } from './gql-arg.abstract'\n\nexport class IdArrayArg extends GqlArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\nexport class IdArg extends GqlArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdArrayArg.html":{"url":"classes/IdArrayArg.html","title":"class - IdArrayArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdArrayArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/id.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-args/id.args.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlArg } from './gql-arg.abstract'\n\nexport class IdArrayArg extends GqlArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\nexport class IdArg extends GqlArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdInput.html":{"url":"classes/IdInput.html","title":"class - IdInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-inputs/id.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-inputs/id.input.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GqlInput } from './gql-input.abstract'\n\nexport class IdInput extends GqlInput {\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtAuthGuard.html":{"url":"classes/JwtAuthGuard.html","title":"class - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\n\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/strategies/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/strategies/jwt.strategy.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { forwardRef, Inject, Injectable } from '@nestjs/common'\nimport { UsersService } from '../../users/users.service'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        @Inject(forwardRef(() => UsersService))\n        private readonly userService: UsersService,\n    ) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: process.env.JWT_SECRET,\n        })\n    }\n\n    async validate(payload: { email: string; sub: string }) {\n        return this.userService.findOne({ email: payload.email })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalAuthGuard.html":{"url":"classes/LocalAuthGuard.html","title":"class - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\n\nexport class LocalAuthGuard extends AuthGuard\n('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/strategies/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/strategies/local.strategy.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport'\nimport { Strategy } from 'passport-local'\nimport { AuthService } from '../auth.service'\nimport { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private readonly authService: AuthService) {\n        super({ usernameField: 'email' })\n    }\n\n    async validate(email: string, password: string): Promise {\n        const user = await this.authService.validate(email, password)\n        console.log('user', user)\n        if (!user) {\n            throw new UnauthorizedException()\n        }\n        return user\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MirrorWord.html":{"url":"classes/MirrorWord.html","title":"class - MirrorWord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MirrorWord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IMirrorWord\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IMirrorWord } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type MirrorWordDocument = IMirrorWord & Document\n\n@ObjectType()\n@Schema()\nexport class MirrorWord implements IMirrorWord {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    word: string\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const MirrorWordSchema = SchemaFactory.createForClass(MirrorWord)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MirrorWordModule.html":{"url":"modules/MirrorWordModule.html","title":"module - MirrorWordModule","body":"\n                   \n\n\n\n\n    Modules\n    MirrorWordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MirrorWordModule\n\n\n\ncluster_MirrorWordModule_exports\n\n\n\ncluster_MirrorWordModule_providers\n\n\n\n\nMirrorWordRepository \n\nMirrorWordRepository \n\n\n\nMirrorWordService \n\nMirrorWordService \n\n\n\nMirrorWordModule\n\nMirrorWordModule\n\nMirrorWordRepository  -->\n\nMirrorWordModule->MirrorWordRepository \n\n\n\nMirrorWordService  -->\n\nMirrorWordModule->MirrorWordService \n\n\n\n\n\nMirrorWordRepository\n\nMirrorWordRepository\n\nMirrorWordModule -->\n\nMirrorWordRepository->MirrorWordModule\n\n\n\n\n\nMirrorWordService\n\nMirrorWordService\n\nMirrorWordModule -->\n\nMirrorWordService->MirrorWordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/mirror-word.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MirrorWordRepository\n                        \n                        \n                            MirrorWordService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MirrorWordRepository\n                        \n                        \n                            MirrorWordService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { MirrorWordService } from './mirror-word.service'\nimport { MirrorWordResolver } from './mirror-word.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { MirrorWord, MirrorWordSchema } from './entities/mirror-word.entity'\nimport { MirrorWordRepository } from './entities/mirror-word.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: MirrorWord.name,\n                schema: MirrorWordSchema,\n            },\n        ]),\n    ],\n    providers: [MirrorWordResolver, MirrorWordService, MirrorWordRepository],\n    exports: [MirrorWordService, MirrorWordRepository],\n})\nexport class MirrorWordModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MirrorWordRepository.html":{"url":"injectables/MirrorWordRepository.html","title":"injectable - MirrorWordRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MirrorWordRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/entities/mirror-word.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mirrorWordModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mirrorWordModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(__data: GetMirrorWordArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    __data\n                                    \n                                                GetMirrorWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { MirrorWord, MirrorWordDocument } from './mirror-word.entity'\nimport { Model } from 'mongoose'\nimport { UpdateMirrorWordInput } from '../dto/inputs/update-mirror-word.input'\nimport { CreateMirrorWordInput } from '../dto/inputs/create-mirror-word.input'\nimport { GetMirrorWordsArgs } from '../dto/args/get-mirror-words.args'\nimport { GetMirrorWordArgs } from '../dto/args/get-mirror-word.args'\nimport { IMirrorWord } from '@szakszolg-nx/api-interfaces'\nimport { DeleteMirrorWordInput } from '../dto/inputs/delete-mirror-word.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class MirrorWordRepository extends SimpleRepository {\n    constructor(@InjectModel(MirrorWord.name) mirrorWordModel: Model) {\n        super(mirrorWordModel)\n    }\n\n    override async findOne(__data: GetMirrorWordArgs): Promise {\n        const count = await this.model.estimatedDocumentCount()\n        const random = Math.floor(Math.random() * count)\n        return this.model.findOne().skip(random).limit(1)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MirrorWordResolver.html":{"url":"classes/MirrorWordResolver.html","title":"class - MirrorWordResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MirrorWordResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/mirror-word.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMirrorWord\n                            \n                            \n                                deleteMirrorWord\n                            \n                            \n                                mirrorWord\n                            \n                            \n                                mirrorWords\n                            \n                            \n                                updateMirrorWord\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mirrorWordService: MirrorWordService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mirrorWordService\n                                                  \n                                                        \n                                                                        MirrorWordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMirrorWord\n                        \n                    \n                \n            \n            \n                \ncreateMirrorWord(data: CreateMirrorWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateMirrorWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMirrorWord\n                        \n                    \n                \n            \n            \n                \ndeleteMirrorWord(data: DeleteMirrorWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteMirrorWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mirrorWord\n                        \n                    \n                \n            \n            \n                \nmirrorWord(data: GetMirrorWordArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetMirrorWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mirrorWords\n                        \n                    \n                \n            \n            \n                \nmirrorWords(data: GetMirrorWordsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetMirrorWordsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMirrorWord\n                        \n                    \n                \n            \n            \n                \nupdateMirrorWord(data: UpdateMirrorWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateMirrorWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { MirrorWordService } from './mirror-word.service'\nimport { MirrorWord } from './entities/mirror-word.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetMirrorWordArgs } from './dto/args/get-mirror-word.args'\nimport { IMirrorWord } from '@szakszolg-nx/api-interfaces'\nimport { GetMirrorWordsArgs } from './dto/args/get-mirror-words.args'\nimport { CreateMirrorWordInput } from './dto/inputs/create-mirror-word.input'\nimport { UpdateMirrorWordInput } from './dto/inputs/update-mirror-word.input'\nimport { DeleteMirrorWordInput } from './dto/inputs/delete-mirror-word.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => MirrorWord)\n@Resource('mirror-words')\nexport class MirrorWordResolver {\n    constructor(private readonly mirrorWordService: MirrorWordService) {}\n\n    @Query(() => MirrorWord, { nullable: true })\n    mirrorWord(@Args({ nullable: true }) data: GetMirrorWordArgs): Promise {\n        return this.mirrorWordService.findOne(data)\n    }\n\n    @Query(() => [MirrorWord], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    mirrorWords(@Args({ nullable: true }) data: GetMirrorWordsArgs | null): Promise {\n        return this.mirrorWordService.findAll(data)\n    }\n\n    @Mutation(() => MirrorWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createMirrorWord(@Args('createMirrorWordData') data: CreateMirrorWordInput): Promise {\n        return this.mirrorWordService.create(data)\n    }\n\n    @Mutation(() => MirrorWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateMirrorWord(@Args('updateMirrorWordData') data: UpdateMirrorWordInput): Promise {\n        return this.mirrorWordService.update(data)\n    }\n\n    @Mutation(() => MirrorWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteMirrorWord(@Args('deleteMirrorWordData') data: DeleteMirrorWordInput): Promise {\n        return this.mirrorWordService.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MirrorWordService.html":{"url":"injectables/MirrorWordService.html","title":"injectable - MirrorWordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MirrorWordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/mirror-word.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: MirrorWordRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/mirror-word/mirror-word.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        MirrorWordRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateMirrorWordInput } from './dto/inputs/create-mirror-word.input'\nimport { UpdateMirrorWordInput } from './dto/inputs/update-mirror-word.input'\nimport { MirrorWordRepository } from './entities/mirror-word.repository'\nimport { GetMirrorWordsArgs } from './dto/args/get-mirror-words.args'\nimport { GetMirrorWordArgs } from './dto/args/get-mirror-word.args'\nimport { DeleteMirrorWordInput } from './dto/inputs/delete-mirror-word.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class MirrorWordService extends RepositoryProxyService {\n    constructor(repository: MirrorWordRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PermissionGuard.html":{"url":"guards/PermissionGuard.html","title":"guard - PermissionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PermissionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/api/src/app/auth/guards/permission-guard.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/guards/permission-guard.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/guards/permission-guard.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, flatten, Injectable } from '@nestjs/common'\nimport { Reflector } from '@nestjs/core'\nimport { GqlExecutionContext } from '@nestjs/graphql'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class PermissionGuard implements CanActivate {\n    constructor(private reflector: Reflector) {}\n\n    canActivate(context: ExecutionContext) {\n        const requiredResource = this.reflector.getAllAndMerge('resources', [\n            context.getClass(),\n            context.getHandler(),\n        ])\n        const requiredAbilities = this.reflector.get('abilities', context.getHandler())\n        if (requiredAbilities?.length == 0 && requiredResource?.length == 0) return true\n        const required = `${requiredAbilities[0]}::${requiredResource[0]}`\n        let user: IUser\n        if (context.getType() === 'http') user = context.switchToHttp().getRequest().user\n        user = GqlExecutionContext.create(context).getContext().req.user\n        if (!user) return false\n        const userPermissions = flatten(user.roles.map((role) => role.permissions ?? [])).map((permission: string) =>\n            permission.replace(/^\\*::/g, `${requiredAbilities[0]}::`).replace(/::\\*$/g, `::${requiredResource[0]}`),\n        )\n\n        return userPermissions.includes(required)\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Quiz.html":{"url":"classes/Quiz.html","title":"class - Quiz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Quiz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/entities/quiz.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IQuiz\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                categories\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                questions\n                            \n                            \n                                title\n                            \n                            \n                                tokens\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IQuizQuestion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tokens\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IQuiz, IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\nimport { QuizQuestion } from '../../quiz-question/entities/quiz-question.entity'\n\nexport type QuizDocument = IQuiz & Document\n\n@ObjectType()\n@Schema()\nexport class Quiz implements IQuiz {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    title: string\n\n    @Field()\n    @Prop()\n    description: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    categories: string[]\n\n    @Field(() => [QuizQuestion])\n    @Prop({ type: [MongooseSchema.Types.Mixed] })\n    questions: IQuizQuestion[]\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    tokens: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const QuizSchema = SchemaFactory.createForClass(Quiz)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuizModule.html":{"url":"modules/QuizModule.html","title":"module - QuizModule","body":"\n                   \n\n\n\n\n    Modules\n    QuizModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_QuizModule\n\n\n\ncluster_QuizModule_exports\n\n\n\ncluster_QuizModule_providers\n\n\n\n\nQuizRepository \n\nQuizRepository \n\n\n\nQuizService \n\nQuizService \n\n\n\nQuizModule\n\nQuizModule\n\nQuizRepository  -->\n\nQuizModule->QuizRepository \n\n\n\nQuizService  -->\n\nQuizModule->QuizService \n\n\n\n\n\nQuizRepository\n\nQuizRepository\n\nQuizModule -->\n\nQuizRepository->QuizModule\n\n\n\n\n\nQuizService\n\nQuizService\n\nQuizModule -->\n\nQuizService->QuizModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/quiz/quiz.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QuizRepository\n                        \n                        \n                            QuizService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuizRepository\n                        \n                        \n                            QuizService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { QuizService } from './quiz.service'\nimport { QuizResolver } from './quiz.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Quiz, QuizSchema } from './entities/quiz.entity'\nimport { QuizRepository } from './entities/quiz.repository'\nimport { QuizQuestion, QuizQuestionSchema } from '../quiz-question/entities/quiz-question.entity'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: QuizQuestion.name,\n                schema: QuizQuestionSchema,\n            },\n            {\n                name: Quiz.name,\n                schema: QuizSchema,\n            },\n        ]),\n    ],\n    providers: [QuizResolver, QuizService, QuizRepository],\n    exports: [QuizService, QuizRepository],\n})\nexport class QuizModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizQuestion.html":{"url":"classes/QuizQuestion.html","title":"class - QuizQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQuizQuestion\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    Optional\n                                answers\n                            \n                            \n                                    Optional\n                                correctAnswers\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                question\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        correctAnswers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type QuizQuestionDocument = IQuizQuestion & Document\n\n@ObjectType()\n@Schema()\nexport class QuizQuestion implements IQuizQuestion {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    question: string\n\n    @Field()\n    @Prop()\n    type: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @Prop({ type: [String] })\n    answers?: string[]\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @Prop({ type: [String] })\n    correctAnswers?: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const QuizQuestionSchema = SchemaFactory.createForClass(QuizQuestion)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuizQuestionModule.html":{"url":"modules/QuizQuestionModule.html","title":"module - QuizQuestionModule","body":"\n                   \n\n\n\n\n    Modules\n    QuizQuestionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_QuizQuestionModule\n\n\n\ncluster_QuizQuestionModule_providers\n\n\n\ncluster_QuizQuestionModule_exports\n\n\n\n\nQuizQuestionRepository \n\nQuizQuestionRepository \n\n\n\nQuizQuestionService \n\nQuizQuestionService \n\n\n\nQuizQuestionModule\n\nQuizQuestionModule\n\nQuizQuestionRepository  -->\n\nQuizQuestionModule->QuizQuestionRepository \n\n\n\nQuizQuestionService  -->\n\nQuizQuestionModule->QuizQuestionService \n\n\n\n\n\nQuizQuestionRepository\n\nQuizQuestionRepository\n\nQuizQuestionModule -->\n\nQuizQuestionRepository->QuizQuestionModule\n\n\n\n\n\nQuizQuestionService\n\nQuizQuestionService\n\nQuizQuestionModule -->\n\nQuizQuestionService->QuizQuestionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/quiz-question.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QuizQuestionRepository\n                        \n                        \n                            QuizQuestionService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuizQuestionRepository\n                        \n                        \n                            QuizQuestionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { QuizQuestionService } from './quiz-question.service'\nimport { QuizQuestionResolver } from './quiz-question.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { QuizQuestion, QuizQuestionSchema } from './entities/quiz-question.entity'\nimport { QuizQuestionRepository } from './entities/quiz-question.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: QuizQuestion.name,\n                schema: QuizQuestionSchema,\n            },\n        ]),\n    ],\n    providers: [QuizQuestionResolver, QuizQuestionService, QuizQuestionRepository],\n    exports: [QuizQuestionService, QuizQuestionRepository],\n})\nexport class QuizQuestionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizQuestionRepository.html":{"url":"injectables/QuizQuestionRepository.html","title":"injectable - QuizQuestionRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizQuestionRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/entities/quiz-question.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { QuizQuestion, QuizQuestionDocument } from './quiz-question.entity'\nimport { Model } from 'mongoose'\nimport { UpdateQuizQuestionInput } from '../dto/inputs/update-quiz-question.input'\nimport { CreateQuizQuestionInput } from '../dto/inputs/create-quiz-question.input'\nimport { GetQuizQuestionsArgs } from '../dto/args/get-quiz-questions.args'\nimport { GetQuizQuestionArgs } from '../dto/args/get-quiz-question.args'\nimport { IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { DeleteQuizQuestionInput } from '../dto/inputs/delete-quiz-question.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class QuizQuestionRepository extends SimpleRepository {\n    constructor(@InjectModel(QuizQuestion.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    // TODO: Check if anything needs to be overridden\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizQuestionResolver.html":{"url":"classes/QuizQuestionResolver.html","title":"class - QuizQuestionResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizQuestionResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/quiz-question.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createQuizQuestion\n                            \n                            \n                                deleteQuizQuestion\n                            \n                            \n                                quizQuestion\n                            \n                            \n                                quizQuestions\n                            \n                            \n                                updateQuizQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: QuizQuestionService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        QuizQuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createQuizQuestion\n                        \n                    \n                \n            \n            \n                \ncreateQuizQuestion(data: CreateQuizQuestionInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizQuestionInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteQuizQuestion\n                        \n                    \n                \n            \n            \n                \ndeleteQuizQuestion(data: DeleteQuizQuestionInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteQuizQuestionInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizQuestion\n                        \n                    \n                \n            \n            \n                \nquizQuestion(data: GetQuizQuestionArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetQuizQuestionArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizQuestions\n                        \n                    \n                \n            \n            \n                \nquizQuestions(data: GetQuizQuestionsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizQuestionsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateQuizQuestion\n                        \n                    \n                \n            \n            \n                \nupdateQuizQuestion(data: UpdateQuizQuestionInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateQuizQuestionInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { QuizQuestionService } from './quiz-question.service'\nimport { QuizQuestion } from './entities/quiz-question.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetQuizQuestionArgs } from './dto/args/get-quiz-question.args'\nimport { IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { GetQuizQuestionsArgs } from './dto/args/get-quiz-questions.args'\nimport { CreateQuizQuestionInput } from './dto/inputs/create-quiz-question.input'\nimport { UpdateQuizQuestionInput } from './dto/inputs/update-quiz-question.input'\nimport { DeleteQuizQuestionInput } from './dto/inputs/delete-quiz-question.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => QuizQuestion)\n@Resource('quiz-questions')\nexport class QuizQuestionResolver {\n    constructor(private readonly service: QuizQuestionService) {}\n\n    @Query(() => QuizQuestion, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    quizQuestion(@Args({ nullable: true }) data: GetQuizQuestionArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [QuizQuestion], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    quizQuestions(@Args({ nullable: true }) data: GetQuizQuestionsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => QuizQuestion)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createQuizQuestion(@Args('createQuizQuestionData') data: CreateQuizQuestionInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => QuizQuestion)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateQuizQuestion(@Args('updateQuizQuestionData') data: UpdateQuizQuestionInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => QuizQuestion)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteQuizQuestion(@Args('deleteQuizQuestionData') data: DeleteQuizQuestionInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizQuestionService.html":{"url":"injectables/QuizQuestionService.html","title":"injectable - QuizQuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizQuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/quiz-question.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: QuizQuestionRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-question/quiz-question.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        QuizQuestionRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateQuizQuestionInput } from './dto/inputs/create-quiz-question.input'\nimport { UpdateQuizQuestionInput } from './dto/inputs/update-quiz-question.input'\nimport { QuizQuestionRepository } from './entities/quiz-question.repository'\nimport { GetQuizQuestionsArgs } from './dto/args/get-quiz-questions.args'\nimport { GetQuizQuestionArgs } from './dto/args/get-quiz-question.args'\nimport { DeleteQuizQuestionInput } from './dto/inputs/delete-quiz-question.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class QuizQuestionService extends RepositoryProxyService {\n    constructor(repository: QuizQuestionRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizRepository.html":{"url":"injectables/QuizRepository.html","title":"injectable - QuizRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/entities/quiz.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz/entities/quiz.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateQuizInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetQuizzesArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizzesArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Quiz, QuizDocument } from './quiz.entity'\nimport { Model } from 'mongoose'\nimport { UpdateQuizInput } from '../dto/inputs/update-quiz.input'\nimport { CreateQuizInput } from '../dto/inputs/create-quiz.input'\nimport { GetQuizzesArgs } from '../dto/args/get-quizzes.args'\nimport { GetQuizArgs } from '../dto/args/get-quiz.args'\nimport { IQuiz } from '@szakszolg-nx/api-interfaces'\nimport { DeleteQuizInput } from '../dto/inputs/delete-quiz.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class QuizRepository extends SimpleRepository {\n    constructor(@InjectModel(Quiz.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    override async findAll(data: GetQuizzesArgs | null): Promise {\n        if (!data.category) return super.findAll(data) // No filtering\n\n        return this.model.find({ categories: { $regex: data.category, $options: 'i' } }).exec()\n    }\n\n    override async create(data: CreateQuizInput): Promise {\n        data.questions = data.questions.map((question, index) => ({ _id: index, ...question }))\n        return super.create(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizResolver.html":{"url":"classes/QuizResolver.html","title":"class - QuizResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/quiz.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createQuiz\n                            \n                            \n                                deleteQuiz\n                            \n                            \n                                quiz\n                            \n                            \n                                quizzes\n                            \n                            \n                                updateQuiz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: QuizService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz/quiz.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createQuiz\n                        \n                    \n                \n            \n            \n                \ncreateQuiz(data: CreateQuizInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteQuiz\n                        \n                    \n                \n            \n            \n                \ndeleteQuiz(data: DeleteQuizInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteQuizInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quiz\n                        \n                    \n                \n            \n            \n                \nquiz(data: GetQuizArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetQuizArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizzes\n                        \n                    \n                \n            \n            \n                \nquizzes(data: GetQuizzesArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizzesArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateQuiz\n                        \n                    \n                \n            \n            \n                \nupdateQuiz(data: UpdateQuizInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateQuizInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { QuizService } from './quiz.service'\nimport { Quiz } from './entities/quiz.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetQuizArgs } from './dto/args/get-quiz.args'\nimport { IQuiz } from '@szakszolg-nx/api-interfaces'\nimport { GetQuizzesArgs } from './dto/args/get-quizzes.args'\nimport { CreateQuizInput } from './dto/inputs/create-quiz.input'\nimport { UpdateQuizInput } from './dto/inputs/update-quiz.input'\nimport { DeleteQuizInput } from './dto/inputs/delete-quiz.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => Quiz)\n@Resource('quizzes')\nexport class QuizResolver {\n    constructor(private readonly service: QuizService) {}\n\n    @Query(() => Quiz, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    quiz(@Args({ nullable: true }) data: GetQuizArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [Quiz], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    quizzes(@Args({ nullable: true }) data: GetQuizzesArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => Quiz)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createQuiz(@Args('createQuizData') data: CreateQuizInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => Quiz)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateQuiz(@Args('updateQuizData') data: UpdateQuizInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => Quiz)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteQuiz(@Args('deleteQuizData') data: DeleteQuizInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizService.html":{"url":"injectables/QuizService.html","title":"injectable - QuizService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/quiz.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: QuizRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz/quiz.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        QuizRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateQuizInput } from './dto/inputs/create-quiz.input'\nimport { UpdateQuizInput } from './dto/inputs/update-quiz.input'\nimport { QuizRepository } from './entities/quiz.repository'\nimport { GetQuizzesArgs } from './dto/args/get-quizzes.args'\nimport { GetQuizArgs } from './dto/args/get-quiz.args'\nimport { DeleteQuizInput } from './dto/inputs/delete-quiz.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class QuizService extends RepositoryProxyService {\n    constructor(repository: QuizRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepositoryProxyService.html":{"url":"injectables/RepositoryProxyService.html","title":"injectable - RepositoryProxyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepositoryProxyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/proxies/repository-proxy.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: TRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    TRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { SimpleRepository } from './simple.repository'\nimport { IdArg, IdArrayArg } from '../gql-args/id.args'\nimport { IdInput } from '../gql-inputs/id.input'\n\n@Injectable()\nexport class RepositoryProxyService,\n    TFindOneArgs extends IdArg,\n    TFindManyArgs extends IdArrayArg,\n    TCreateInput,\n    TUpdateInput extends IdInput,\n    TDeleteInput extends IdInput,\n> {\n    constructor(protected readonly repository: TRepository) {}\n\n    create(data: TCreateInput) {\n        return this.repository.create(data)\n    }\n\n    findAll(data: TFindManyArgs) {\n        return this.repository.findAll(data)\n    }\n\n    findOne(data: TFindOneArgs) {\n        return this.repository.findOne(data)\n    }\n\n    update(data: TUpdateInput) {\n        return this.repository.update(data)\n    }\n\n    delete(data: TDeleteInput) {\n        return this.repository.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/entities/role.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IRole\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type RoleDocument = IRole & Document\n\n@ObjectType()\n@Schema()\nexport class Role implements IRole {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    description: string\n\n    @Field()\n    @Prop()\n    name: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    permissions: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_imports\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_RoleModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nAuthModule->RoleModule\n\n\n\n\n\nRoleRepository \n\nRoleRepository \n\nRoleRepository  -->\n\nRoleModule->RoleRepository \n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nRoleRepository\n\nRoleRepository\n\nRoleModule -->\n\nRoleRepository->RoleModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepository\n                        \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleRepository\n                        \n                        \n                            RoleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common'\nimport { RoleService } from './role.service'\nimport { RoleResolver } from './role.resolver'\nimport { AuthModule } from '../auth/auth.module'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Role, RoleSchema } from './entities/role.entity'\nimport { RoleRepository } from './entities/role.repository'\nimport { UsersModule } from '../users/users.module'\n\n@Module({\n    imports: [\n        AuthModule,\n        forwardRef(() => UsersModule),\n        MongooseModule.forFeature([\n            {\n                name: Role.name,\n                schema: RoleSchema,\n            },\n        ]),\n    ],\n    providers: [RoleResolver, RoleService, RoleRepository],\n    exports: [RoleService, RoleRepository],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepository.html":{"url":"injectables/RoleRepository.html","title":"injectable - RoleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/entities/role.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/entities/role.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Role, RoleDocument } from './role.entity'\nimport { Model } from 'mongoose'\nimport { UpdateRoleInput } from '../dto/inputs/update-role.input'\nimport { CreateRoleInput } from '../dto/inputs/create-role.input'\nimport { GetRolesArgs } from '../dto/args/get-roles.args'\nimport { GetRoleArgs } from '../dto/args/get-role.args'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { DeleteRoleInput } from '../dto/inputs/delete-role.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class RoleRepository extends SimpleRepository {\n    constructor(@InjectModel(Role.name) roleModel: Model) {\n        super(roleModel)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleResolver.html":{"url":"classes/RoleResolver.html","title":"class - RoleResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/role.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createRole\n                            \n                            \n                                deleteRole\n                            \n                            \n                                role\n                            \n                            \n                                roles\n                            \n                            \n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/role.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createRole\n                        \n                    \n                \n            \n            \n                \ncreateRole(data: CreateRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRole\n                        \n                    \n                \n            \n            \n                \ndeleteRole(data: DeleteRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n            \n                \nrole(data: GetRoleArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetRoleArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n            \n                \nroles(data: GetRolesArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetRolesArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRole\n                        \n                    \n                \n            \n            \n                \nupdateRole(data: UpdateRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { RoleService } from './role.service'\nimport { Role } from './entities/role.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetRoleArgs } from './dto/args/get-role.args'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { GetRolesArgs } from './dto/args/get-roles.args'\nimport { CreateRoleInput } from './dto/inputs/create-role.input'\nimport { UpdateRoleInput } from './dto/inputs/update-role.input'\nimport { DeleteRoleInput } from './dto/inputs/delete-role.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => Role)\n@Resource('roles')\nexport class RoleResolver {\n    constructor(private readonly roleService: RoleService) {}\n\n    @Query(() => Role, { nullable: true })\n    @UseGuards(GqlAuthGuard)\n    @Permission('read')\n    role(@Args({ nullable: true }) data: GetRoleArgs): Promise {\n        return this.roleService.findOne(data)\n    }\n\n    @Query(() => [Role], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    roles(@Args({ nullable: true }) data: GetRolesArgs | null): Promise {\n        return this.roleService.findAll(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('create')\n    createRole(@Args('createRoleData') data: CreateRoleInput): Promise {\n        return this.roleService.create(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('update')\n    updateRole(@Args('updateRoleData') data: UpdateRoleInput): Promise {\n        return this.roleService.update(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('delete')\n    deleteRole(@Args('deleteRoleData') data: DeleteRoleInput): Promise {\n        return this.roleService.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/role.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: RoleRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/role.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        RoleRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateRoleInput } from './dto/inputs/create-role.input'\nimport { UpdateRoleInput } from './dto/inputs/update-role.input'\nimport { RoleRepository } from './entities/role.repository'\nimport { GetRolesArgs } from './dto/args/get-roles.args'\nimport { GetRoleArgs } from './dto/args/get-role.args'\nimport { DeleteRoleInput } from './dto/inputs/delete-role.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class RoleService extends RepositoryProxyService {\n    constructor(roleRepository: RoleRepository) {\n        super(roleRepository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/entities/school.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ISchool\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                address\n                            \n                            \n                                county\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                name\n                            \n                            \n                                om\n                            \n                            \n                                types\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        county\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { ISchool } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type SchoolDocument = ISchool & Document\n\n@ObjectType()\n@Schema()\nexport class School implements ISchool {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    om: string\n\n    @Field()\n    @Prop()\n    name: string\n\n    @Field()\n    @Prop()\n    address: string\n\n    @Field()\n    @Prop()\n    county: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    types: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const SchoolSchema = SchemaFactory.createForClass(School)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_exports\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nSchoolRepository \n\nSchoolRepository \n\n\n\nSchoolService \n\nSchoolService \n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolRepository  -->\n\nSchoolModule->SchoolRepository \n\n\n\nSchoolService  -->\n\nSchoolModule->SchoolService \n\n\n\n\n\nSchoolRepository\n\nSchoolRepository\n\nSchoolModule -->\n\nSchoolRepository->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolRepository\n                        \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SchoolRepository\n                        \n                        \n                            SchoolService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { SchoolService } from './school.service'\nimport { SchoolResolver } from './school.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { School, SchoolSchema } from './entities/school.entity'\nimport { SchoolRepository } from './entities/school.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: School.name,\n                schema: SchoolSchema,\n            },\n        ]),\n    ],\n    providers: [SchoolResolver, SchoolService, SchoolRepository],\n    exports: [SchoolService, SchoolRepository],\n})\nexport class SchoolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolRepository.html":{"url":"injectables/SchoolRepository.html","title":"injectable - SchoolRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/entities/school.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/school/entities/school.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetSchoolsArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetSchoolsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { School, SchoolDocument } from './school.entity'\nimport { Model } from 'mongoose'\nimport { UpdateSchoolInput } from '../dto/inputs/update-school.input'\nimport { CreateSchoolInput } from '../dto/inputs/create-school.input'\nimport { GetSchoolsArgs } from '../dto/args/get-schools.args'\nimport { GetSchoolArgs } from '../dto/args/get-school.args'\nimport { ISchool } from '@szakszolg-nx/api-interfaces'\nimport { DeleteSchoolInput } from '../dto/inputs/delete-school.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class SchoolRepository extends SimpleRepository {\n    constructor(@InjectModel(School.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    override async findAll(data: GetSchoolsArgs | null): Promise {\n        if (!data.om && !data.name && !data.address && !data.county && !data.type) return super.findAll(data) // Simple findAll, no filtering\n\n        const filters = {}\n        for (const filterKey in data) {\n            if (data[filterKey] && data[filterKey] !== 'type')\n                filters[filterKey] = {\n                    $regex: data[filterKey],\n                    $options: 'i',\n                }\n        }\n\n        if (data.type) filters['types'] = { $regex: data.type, $options: 'i' }\n\n        return this.model.find(filters).exec()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolResolver.html":{"url":"classes/SchoolResolver.html","title":"class - SchoolResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/school.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSchool\n                            \n                            \n                                deleteSchool\n                            \n                            \n                                school\n                            \n                            \n                                schools\n                            \n                            \n                                updateSchool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SchoolService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/school/school.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SchoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createSchool\n                        \n                    \n                \n            \n            \n                \ncreateSchool(data: CreateSchoolInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateSchoolInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSchool\n                        \n                    \n                \n            \n            \n                \ndeleteSchool(data: DeleteSchoolInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteSchoolInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n            \n                \nschool(data: GetSchoolArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetSchoolArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schools\n                        \n                    \n                \n            \n            \n                \nschools(data: GetSchoolsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetSchoolsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSchool\n                        \n                    \n                \n            \n            \n                \nupdateSchool(data: UpdateSchoolInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateSchoolInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { SchoolService } from './school.service'\nimport { School } from './entities/school.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetSchoolArgs } from './dto/args/get-school.args'\nimport { ISchool } from '@szakszolg-nx/api-interfaces'\nimport { GetSchoolsArgs } from './dto/args/get-schools.args'\nimport { CreateSchoolInput } from './dto/inputs/create-school.input'\nimport { UpdateSchoolInput } from './dto/inputs/update-school.input'\nimport { DeleteSchoolInput } from './dto/inputs/delete-school.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => School)\n@Resource('schools')\nexport class SchoolResolver {\n    constructor(private readonly service: SchoolService) {}\n\n    @Query(() => School, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    school(@Args({ nullable: true }) data: GetSchoolArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [School], { nullable: 'items' })\n    schools(@Args({ nullable: true }) data: GetSchoolsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => School)\n    createSchool(@Args('createSchoolData') data: CreateSchoolInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => School)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateSchool(@Args('updateSchoolData') data: UpdateSchoolInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => School)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteSchool(@Args('deleteSchoolData') data: DeleteSchoolInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/school.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: SchoolRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/school/school.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        SchoolRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateSchoolInput } from './dto/inputs/create-school.input'\nimport { UpdateSchoolInput } from './dto/inputs/update-school.input'\nimport { SchoolRepository } from './entities/school.repository'\nimport { GetSchoolsArgs } from './dto/args/get-schools.args'\nimport { GetSchoolArgs } from './dto/args/get-school.args'\nimport { DeleteSchoolInput } from './dto/inputs/delete-school.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class SchoolService extends RepositoryProxyService {\n    constructor(repository: SchoolRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SimpleRepository.html":{"url":"injectables/SimpleRepository.html","title":"injectable - SimpleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SimpleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/proxies/simple.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/shared/proxies/simple.repository.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common'\nimport { Document, Model, Types } from 'mongoose'\nimport { IdArg, IdArrayArg } from '../gql-args/id.args'\nimport { IdInput } from '../gql-inputs/id.input'\nimport { IApiResource, IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class SimpleRepository {\n    constructor(protected readonly model: Model) {}\n\n    public async findAll(data: TFindManyArgs | null): Promise {\n        return data && Object.keys(data).length > 0\n            ? Promise.all(data.ids.map((id) => this.findOne({ id } as TFindOneArgs)))\n            : (this.model.find({ deletedAt: { $eq: null } }) as any)\n    }\n\n    public async findOne(data: TFindOneArgs): Promise {\n        const res = this.model.findById(data.id) as any\n        return res?.deletedAt ? Promise.reject(new NotFoundException()) : res\n    }\n\n    public async create(data: TCreateInput): Promise {\n        return (await new this.model({\n            ...data,\n            _id: new Types.ObjectId(),\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            deletedAt: null,\n        }).save()) as any\n    }\n\n    public async update(data: TUpdateInput & IUpdatedAt): Promise {\n        const id = data.id\n        delete data.id\n        if ((data as any).deletedAt) return Promise.reject(new BadRequestException('Cannot update deleted resource'))\n        data.updatedAt = new Date()\n        return this.model.findByIdAndUpdate(id, data, { new: false }) as any\n    }\n\n    public async delete(data: TDeleteInput): Promise {\n        return this.model.findByIdAndUpdate(data.id, { deletedAt: Date.now() }) as any\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGroupingItemInput.html":{"url":"classes/UpdateGroupingItemInput.html","title":"class - UpdateGroupingItemInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGroupingItemInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                correct\n                            \n                            \n                                    Optional\n                                groups\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                item\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateGroupingItemInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    item?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    groups?: string[]\n\n    @Field({ nullable: true })\n    correct?: string\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateHangmanWordInput.html":{"url":"classes/UpdateHangmanWordInput.html","title":"class - UpdateHangmanWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateHangmanWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateHangmanWordInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    word?: string\n\n    @Field({ nullable: true })\n    category?: string\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMirrorWordInput.html":{"url":"classes/UpdateMirrorWordInput.html","title":"class - UpdateMirrorWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMirrorWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class UpdateMirrorWordInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field()\n    @IsNotEmpty()\n    word: string\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateQuizInput.html":{"url":"classes/UpdateQuizInput.html","title":"class - UpdateQuizInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateQuizInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                questions\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IQuizQuestion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IQuizQuestion, IUpdatedAt } from '@szakszolg-nx/api-interfaces'\nimport { UpdateQuizQuestionInput } from '../../../quiz-question/dto/inputs/update-quiz-question.input'\n\n@InputType()\nexport class UpdateQuizInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    title: string\n\n    @Field({ nullable: true })\n    description: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    categories: string[]\n\n    @Field(() => [UpdateQuizQuestionInput], { nullable: 'itemsAndList' })\n    questions: IQuizQuestion[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateQuizQuestionInput.html":{"url":"classes/UpdateQuizQuestionInput.html","title":"class - UpdateQuizQuestionInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateQuizQuestionInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                answers\n                            \n                            \n                                    Optional\n                                correctAnswers\n                            \n                            \n                                id\n                            \n                            \n                                question\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        correctAnswers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateQuizQuestionInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    question: string\n\n    @Field({ nullable: true })\n    type: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    answers?: string[]\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    correctAnswers?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleInput.html":{"url":"classes/UpdateRoleInput.html","title":"class - UpdateRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/update-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                permissions\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty, IsOptional } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateRoleInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    @IsNotEmpty()\n    name?: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    @IsNotEmpty()\n    description?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @IsOptional()\n    @IsArray()\n    permissions?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSchoolInput.html":{"url":"classes/UpdateSchoolInput.html","title":"class - UpdateSchoolInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSchoolInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/inputs/update-school.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                county\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                    Optional\n                                types\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        county\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@IsOptional()@IsArray()@ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { ArrayNotEmpty, IsArray, IsNotEmpty, IsOptional } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateSchoolInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field({ nullable: true })\n    name?: string\n\n    @Field({ nullable: true })\n    address?: string\n\n    @Field({ nullable: true })\n    county?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @IsOptional()\n    @IsArray()\n    @ArrayNotEmpty()\n    types?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserInput.html":{"url":"classes/UpdateUserInput.html","title":"class - UpdateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/update-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                newPassword\n                            \n                            \n                                    Optional\n                                newPasswordConfirm\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newPasswordConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsEmail, IsNotEmpty } from 'class-validator'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateUserInput extends IdInput implements IUpdatedAt {\n    @Field({ nullable: true })\n    id: string\n\n    @Field({ nullable: true })\n    @IsEmail()\n    email?: string\n\n    @Field({ nullable: true })\n    username?: string\n\n    @Field()\n    @IsNotEmpty()\n    password: string\n\n    @Field({ nullable: true })\n    newPassword?: string\n\n    @Field({ nullable: true })\n    newPasswordConfirm?: string\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    roles?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/entities/user.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Types.ObjectId[] | IRole[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { Document, Schema as MongooseSchema, Types } from 'mongoose'\nimport { IRole, IUser } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Role } from '../../role/entities/role.entity'\nimport { SchemaTypes } from 'mongoose'\n\nexport type UserDocument = User & Document\n\n@ObjectType()\n@Schema()\nexport class User implements IUser {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    username: string\n\n    @Field({ nullable: true })\n    @Prop()\n    om?: string\n\n    @Prop()\n    password?: string\n\n    @Field()\n    @Prop()\n    email: string\n\n    @Field(() => [Role], { nullable: 'itemsAndList' })\n    @Prop({ type: [SchemaTypes.ObjectId], ref: Role.name })\n    roles: Types.ObjectId[] | IRole[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/entities/user.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, roleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/entities/user.repository.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: DeleteUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetUsersArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetUserArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: UpdateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { User, UserDocument } from './user.entity'\nimport { CreateUserInput } from '../dto/inputs/create-user.input'\nimport { UpdateUserInput } from '../dto/inputs/update-user.input'\nimport { DeleteUserInput } from '../dto/inputs/delete-user.input'\nimport { GetUserArgs } from '../dto/args/get-user.args'\nimport { GetUsersArgs } from '../dto/args/get-users.args'\nimport { BadRequestException, Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\nimport { IRole, IUser } from '@szakszolg-nx/api-interfaces'\nimport { Types } from 'mongoose'\nimport { Role, RoleDocument } from '../../role/entities/role.entity'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class UserRepository {\n    constructor(\n        @InjectModel(User.name) private readonly userModel: Model,\n        @InjectModel(Role.name) private readonly roleModel: Model,\n    ) {}\n\n    public async findAll(data: GetUsersArgs | null): Promise {\n        return data && Object.keys(data).length > 0\n            ? Promise.all(data.ids.map((id) => this.findOne({ id })))\n            : this.userModel.find()\n    }\n\n    public async findOne(data: GetUserArgs): Promise {\n        if (data.id) return this.userModel.findById(data.id).populate('roles')\n\n        if (data.email) return this.userModel.findOne({ email: data.email }).populate('roles')\n\n        throw new Error('Please provide either an id or an email address')\n    }\n\n    public async create(data: CreateUserInput): Promise {\n        return new this.userModel({ ...data, _id: new Types.ObjectId() }).save()\n    }\n\n    public async update(data: UpdateUserInput): Promise {\n        const user = await this.userModel.findById(data.id)\n\n        if (!user) throw new Error('User not found')\n        if (!(await bcrypt.compare(data.password, user.password)))\n            throw new BadRequestException('Current password is incorrect')\n\n        if (data.newPassword && data.newPassword !== data.newPasswordConfirm)\n            throw new Error('New passwords do not match')\n        // const id = data.id\n        delete data.id\n        ;(data as any).updatedAt = new Date()\n\n        user.roles = data?.roles?.map((roleId) => new Types.ObjectId(roleId))\n\n        user.save()\n        return user\n    }\n\n    public async delete(data: DeleteUserInput): Promise {\n        return this.userModel.findByIdAndUpdate(data.id, { deletedAt: new Date() })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserRepository\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common'\nimport { UsersService } from './users.service'\nimport { UsersResolver } from './users.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { UserRepository } from './entities/user.repository'\nimport { AuthModule } from '../auth/auth.module'\nimport { User, UserSchema } from './entities/user.entity'\nimport { RoleModule } from '../role/role.module'\nimport { Role, RoleSchema } from '../role/entities/role.entity'\n\n@Module({\n    imports: [\n        forwardRef(() => AuthModule),\n        forwardRef(() => RoleModule),\n        MongooseModule.forFeature([\n            {\n                name: Role.name,\n                schema: RoleSchema,\n            },\n            {\n                name: User.name,\n                schema: UserSchema,\n            },\n        ]),\n    ],\n    providers: [UsersResolver, UsersService, UserRepository],\n    exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersResolver.html":{"url":"classes/UsersResolver.html","title":"class - UsersResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/users.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                updateUser\n                            \n                            \n                                user\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/users.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(data: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(data: DeleteUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(data: UpdateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n            \n                \nuser(data: GetUserArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n            \n                \nusers(data: GetUsersArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('browse')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Args, Mutation } from '@nestjs/graphql'\nimport { UsersService } from './users.service'\nimport { User } from './entities/user.entity'\nimport { GetUserArgs } from './dto/args/get-user.args'\nimport { GetUsersArgs } from './dto/args/get-users.args'\nimport { CreateUserInput } from './dto/inputs/create-user.input'\nimport { UpdateUserInput } from './dto/inputs/update-user.input'\nimport { DeleteUserInput } from './dto/inputs/delete-user.input'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => User)\n@Resource('users')\nexport class UsersResolver {\n    constructor(private readonly usersService: UsersService) {}\n\n    @Query(() => User, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    user(@Args() data: GetUserArgs): Promise {\n        return this.usersService.findOne(data)\n    }\n\n    @Query(() => [User], { nullable: 'items' })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('browse')\n    users(@Args({ nullable: true }) data: GetUsersArgs | null): Promise {\n        return this.usersService.findAll(data)\n    }\n\n    @Mutation(() => User)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createUser(@Args('createUserData') data: CreateUserInput): Promise {\n        return this.usersService.create(data)\n    }\n\n    @Mutation(() => User)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateUser(@Args('updateUserData') data: UpdateUserInput): Promise {\n        return this.usersService.update(data)\n    }\n\n    @Mutation(() => User)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteUser(@Args('deleteUserData') data: DeleteUserInput): Promise {\n        return this.usersService.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/users.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: DeleteUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetUsersArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetUserArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: UpdateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateUserInput } from './dto/inputs/create-user.input'\nimport { UpdateUserInput } from './dto/inputs/update-user.input'\nimport { DeleteUserInput } from './dto/inputs/delete-user.input'\nimport { GetUserArgs } from './dto/args/get-user.args'\nimport { GetUsersArgs } from './dto/args/get-users.args'\nimport { UserRepository } from './entities/user.repository'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class UsersService {\n    constructor(private readonly userRepository: UserRepository) {}\n\n    public findAll(data: GetUsersArgs | null): Promise {\n        return this.userRepository.findAll(data)\n    }\n\n    public findOne(data: GetUserArgs): Promise {\n        return this.userRepository.findOne(data)\n    }\n\n    public async create(data: CreateUserInput): Promise {\n        data.password = await bcrypt.hash(data.password, 10)\n        return this.userRepository.create(data)\n    }\n\n    public async update(data: UpdateUserInput): Promise {\n        return this.userRepository.update(data)\n    }\n\n    public async delete(data: DeleteUserInput): Promise {\n        return this.userRepository.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/auth.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/permission.decorator.ts\n            \n            variable\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/permission.decorator.ts\n            \n            variable\n            Resource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/gql-auth.guard.ts\n            \n            class\n            GqlAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/jwt-auth.guard.ts\n            \n            class\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/local-auth.guard.ts\n            \n            class\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/permission-guard.service.ts\n            \n            guard\n            PermissionGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/config/mongo-config.factory.ts\n            \n            variable\n            mongooseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/config/validation.ts\n            \n            variable\n            validationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/core.resolver.ts\n            \n            class\n            CoreResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/args/get-grouping-item.args.ts\n            \n            class\n            GetGroupingItemArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/args/get-grouping-items.args.ts\n            \n            class\n            GetGroupingItemsArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts\n            \n            class\n            CreateGroupingItemInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/inputs/delete-grouping-item.input.ts\n            \n            class\n            DeleteGroupingItemInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts\n            \n            class\n            UpdateGroupingItemInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n            \n            class\n            GroupingItem\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n            \n            variable\n            GroupingItemSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/entities/grouping-item.repository.ts\n            \n            injectable\n            GroupingItemRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/grouping-item.resolver.ts\n            \n            class\n            GroupingItemResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/grouping-item.service.ts\n            \n            injectable\n            GroupingItemService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/args/get-hangman-word.args.ts\n            \n            class\n            GetHangmanWordArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/args/get-hangman-words.args.ts\n            \n            class\n            GetHangmanWordsArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts\n            \n            class\n            CreateHangmanWordInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/inputs/delete-hangman-word.input.ts\n            \n            class\n            DeleteHangmanWordInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts\n            \n            class\n            UpdateHangmanWordInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n            \n            class\n            HangmanWord\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n            \n            variable\n            HangmanWordSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/entities/hangman-word.repository.ts\n            \n            injectable\n            HangmanWordRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/hangman-word.resolver.ts\n            \n            class\n            HangmanWordResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/hangman-word.service.ts\n            \n            injectable\n            HangmanWordService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/args/get-mirror-word.args.ts\n            \n            class\n            GetMirrorWordArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/args/get-mirror-words.args.ts\n            \n            class\n            GetMirrorWordsArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/inputs/create-mirror-word.input.ts\n            \n            class\n            CreateMirrorWordInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/inputs/delete-mirror-word.input.ts\n            \n            class\n            DeleteMirrorWordInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts\n            \n            class\n            UpdateMirrorWordInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n            \n            class\n            MirrorWord\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n            \n            variable\n            MirrorWordSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/entities/mirror-word.repository.ts\n            \n            injectable\n            MirrorWordRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/mirror-word.resolver.ts\n            \n            class\n            MirrorWordResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/mirror-word.service.ts\n            \n            injectable\n            MirrorWordService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/args/get-quiz-question.args.ts\n            \n            class\n            GetQuizQuestionArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/args/get-quiz-questions.args.ts\n            \n            class\n            GetQuizQuestionsArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts\n            \n            class\n            CreateQuizQuestionInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/inputs/delete-quiz-question.input.ts\n            \n            class\n            DeleteQuizQuestionInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts\n            \n            class\n            UpdateQuizQuestionInput\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n            \n            class\n            QuizQuestion\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n            \n            variable\n            QuizQuestionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/entities/quiz-question.repository.ts\n            \n            injectable\n            QuizQuestionRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/quiz-question.resolver.ts\n            \n            class\n            QuizQuestionResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/quiz-question.service.ts\n            \n            injectable\n            QuizQuestionService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/args/get-quiz.args.ts\n            \n            class\n            GetQuizArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/args/get-quizzes.args.ts\n            \n            class\n            GetQuizzesArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts\n            \n            class\n            CreateQuizInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/inputs/delete-quiz.input.ts\n            \n            class\n            DeleteQuizInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts\n            \n            class\n            UpdateQuizInput\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/entities/quiz.entity.ts\n            \n            class\n            Quiz\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/entities/quiz.entity.ts\n            \n            variable\n            QuizSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/entities/quiz.repository.ts\n            \n            injectable\n            QuizRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/quiz.resolver.ts\n            \n            class\n            QuizResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/quiz.service.ts\n            \n            injectable\n            QuizService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/args/get-role.args.ts\n            \n            class\n            GetRoleArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/args/get-roles.args.ts\n            \n            class\n            GetRolesArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/create-role.input.ts\n            \n            class\n            CreateRoleInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/delete-role.input.ts\n            \n            class\n            DeleteRoleInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/update-role.input.ts\n            \n            class\n            UpdateRoleInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.entity.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.repository.ts\n            \n            injectable\n            RoleRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/role.resolver.ts\n            \n            class\n            RoleResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/args/get-school.args.ts\n            \n            class\n            GetSchoolArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/args/get-schools.args.ts\n            \n            class\n            GetSchoolsArgs\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/inputs/create-school.input.ts\n            \n            class\n            CreateSchoolInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/inputs/delete-school.input.ts\n            \n            class\n            DeleteSchoolInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/inputs/update-school.input.ts\n            \n            class\n            UpdateSchoolInput\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/entities/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/entities/school.entity.ts\n            \n            variable\n            SchoolSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/entities/school.repository.ts\n            \n            injectable\n            SchoolRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/school.resolver.ts\n            \n            class\n            SchoolResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/args/get-user.args.ts\n            \n            class\n            GetUserArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/args/get-users.args.ts\n            \n            class\n            GetUsersArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/create-user.input.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/delete-user.input.ts\n            \n            class\n            DeleteUserInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/update-user.input.ts\n            \n            class\n            UpdateUserInput\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.entity.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.repository.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.resolver.ts\n            \n            class\n            UsersResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/gql-arg.abstract.ts\n            \n            class\n            GqlArg\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/id.args.ts\n            \n            class\n            IdArg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/id.args.ts\n            \n            class\n            IdArrayArg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-inputs/gql-input.abstract.ts\n            \n            class\n            GqlInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-inputs/id.input.ts\n            \n            class\n            IdInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/proxies/repository-proxy.service.ts\n            \n            injectable\n            RepositoryProxyService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/shared/proxies/simple.repository.ts\n            \n            injectable\n            SimpleRepository\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.1.0\n        \n            @angular/common : ~13.1.0\n        \n            @angular/compiler : ~13.1.0\n        \n            @angular/core : ~13.1.0\n        \n            @angular/forms : ~13.1.0\n        \n            @angular/platform-browser : ~13.1.0\n        \n            @angular/platform-browser-dynamic : ~13.1.0\n        \n            @angular/router : ~13.1.0\n        \n            @compodoc/compodoc : ^1.1.18\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.6\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/graphql : ^9.1.2\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mongoose : ^9.0.2\n        \n            @nestjs/passport : ^8.1.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nrwl/angular : 13.4.6\n        \n            apollo-server-express : ^3.6.1\n        \n            bcryptjs : ^2.4.3\n        \n            class-validator : ^0.13.2\n        \n            del-cli : ^4.0.1\n        \n            dotenv : ^14.2.0\n        \n            graphql : ^15.0.0\n        \n            graphql-tools : ^8.2.0\n        \n            joi : ^17.5.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^6.1.7\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.0.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSzakszolgNx\nThis project was generated using Nx.\n\n\n🔎 Smart, Fast and Extensible Build System\nQuick Start & Documentation\nNx Documentation\n10-minute video showing all Nx features\nInteractive Tutorial\nAdding capabilities to your workspace\nNx supports many plugins which add capabilities for developing different types of applications and different tools.\nThese capabilities include generating applications, libraries, etc as well as the devtools to test, and build projects as well.\nBelow are our core plugins:\n\nAngular\nng add @nrwl/angular\n\n\nReact\nng add @nrwl/react\n\n\nWeb (no framework frontends)\nng add @nrwl/web\n\n\nNest\nng add @nrwl/nest\n\n\nExpress\nng add @nrwl/express\n\n\nNode\nng add @nrwl/node\n\n\n\nThere are also many community plugins you could add.\nGenerate an application\nRun ng g @nrwl/angular:app my-app to generate an application.\n\nYou can use any of the plugins above to generate applications as well.\n\nWhen using Nx, you can create multiple applications and libraries in the same workspace.\nGenerate a library\nRun ng g @nrwl/angular:lib my-lib to generate a library.\n\nYou can also use any of the plugins above to generate libraries as well.\n\nLibraries are shareable across libraries and applications. They can be imported from @szakszolg-nx/mylib.\nDevelopment server\nRun ng serve my-app for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng g component my-component --project=my-app to generate a new component.\nBuild\nRun ng build my-app to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test my-app to execute the unit tests via Jest.\nRun nx affected:test to execute the unit tests affected by a change.\nRunning end-to-end tests\nRun ng e2e my-app to execute the end-to-end tests via Cypress.\nRun nx affected:e2e to execute the end-to-end tests affected by a change.\nUnderstand your workspace\nRun nx dep-graph to see a diagram of the dependencies of your projects.\nFurther help\nVisit the Nx Documentation to learn more.\n☁ Nx Cloud\nDistributed Computation Caching & Distributed Task Execution\n\n\nNx Cloud pairs with Nx in order to enable you to build and test code more rapidly, by up to 10 times. Even teams that are new to Nx can connect to Nx Cloud and start saving time instantly.\nTeams using Nx gain the advantage of building full-stack applications with their preferred framework alongside Nx’s advanced code generation and project dependency graph, plus a unified experience for both frontend and backend developers.\nVisit Nx Cloud to learn more.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupingItemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HangmanWordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MirrorWordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuizModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuizQuestionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GroupingItemModule\n\n\n\ncluster_GroupingItemModule_exports\n\n\n\ncluster_GroupingItemModule_providers\n\n\n\ncluster_HangmanWordModule\n\n\n\ncluster_HangmanWordModule_exports\n\n\n\ncluster_HangmanWordModule_providers\n\n\n\ncluster_MirrorWordModule\n\n\n\ncluster_MirrorWordModule_exports\n\n\n\ncluster_MirrorWordModule_providers\n\n\n\ncluster_QuizModule\n\n\n\ncluster_QuizModule_exports\n\n\n\ncluster_QuizModule_providers\n\n\n\ncluster_QuizQuestionModule\n\n\n\ncluster_QuizQuestionModule_exports\n\n\n\ncluster_QuizQuestionModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_exports\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nAuthModule->RoleModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nGroupingItemModule\n\nGroupingItemModule\n\nAppModule -->\n\nGroupingItemModule->AppModule\n\n\n\n\n\nGroupingItemRepository \n\nGroupingItemRepository \n\nGroupingItemRepository  -->\n\nGroupingItemModule->GroupingItemRepository \n\n\n\n\n\nGroupingItemService \n\nGroupingItemService \n\nGroupingItemService  -->\n\nGroupingItemModule->GroupingItemService \n\n\n\n\n\nHangmanWordModule\n\nHangmanWordModule\n\nAppModule -->\n\nHangmanWordModule->AppModule\n\n\n\n\n\nHangmanWordRepository \n\nHangmanWordRepository \n\nHangmanWordRepository  -->\n\nHangmanWordModule->HangmanWordRepository \n\n\n\n\n\nHangmanWordService \n\nHangmanWordService \n\nHangmanWordService  -->\n\nHangmanWordModule->HangmanWordService \n\n\n\n\n\nMirrorWordModule\n\nMirrorWordModule\n\nAppModule -->\n\nMirrorWordModule->AppModule\n\n\n\n\n\nMirrorWordRepository \n\nMirrorWordRepository \n\nMirrorWordRepository  -->\n\nMirrorWordModule->MirrorWordRepository \n\n\n\n\n\nMirrorWordService \n\nMirrorWordService \n\nMirrorWordService  -->\n\nMirrorWordModule->MirrorWordService \n\n\n\n\n\nQuizModule\n\nQuizModule\n\nAppModule -->\n\nQuizModule->AppModule\n\n\n\n\n\nQuizRepository \n\nQuizRepository \n\nQuizRepository  -->\n\nQuizModule->QuizRepository \n\n\n\n\n\nQuizService \n\nQuizService \n\nQuizService  -->\n\nQuizModule->QuizService \n\n\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoleRepository \n\nRoleRepository \n\nRoleRepository  -->\n\nRoleModule->RoleRepository \n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nSchoolRepository \n\nSchoolRepository \n\nSchoolRepository  -->\n\nSchoolModule->SchoolRepository \n\n\n\n\n\nSchoolService \n\nSchoolService \n\nSchoolService  -->\n\nSchoolModule->SchoolService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nGroupingItemRepository\n\nGroupingItemRepository\n\nGroupingItemModule -->\n\nGroupingItemRepository->GroupingItemModule\n\n\n\n\n\nGroupingItemService\n\nGroupingItemService\n\nGroupingItemModule -->\n\nGroupingItemService->GroupingItemModule\n\n\n\n\n\nHangmanWordRepository\n\nHangmanWordRepository\n\nHangmanWordModule -->\n\nHangmanWordRepository->HangmanWordModule\n\n\n\n\n\nHangmanWordService\n\nHangmanWordService\n\nHangmanWordModule -->\n\nHangmanWordService->HangmanWordModule\n\n\n\n\n\nMirrorWordRepository\n\nMirrorWordRepository\n\nMirrorWordModule -->\n\nMirrorWordRepository->MirrorWordModule\n\n\n\n\n\nMirrorWordService\n\nMirrorWordService\n\nMirrorWordModule -->\n\nMirrorWordService->MirrorWordModule\n\n\n\n\n\nQuizRepository\n\nQuizRepository\n\nQuizModule -->\n\nQuizRepository->QuizModule\n\n\n\n\n\nQuizService\n\nQuizService\n\nQuizModule -->\n\nQuizService->QuizModule\n\n\n\n\n\nQuizQuestionRepository \n\nQuizQuestionRepository \n\n\n\nQuizQuestionService \n\nQuizQuestionService \n\n\n\nQuizQuestionModule\n\nQuizQuestionModule\n\nQuizQuestionRepository  -->\n\nQuizQuestionModule->QuizQuestionRepository \n\n\n\nQuizQuestionService  -->\n\nQuizQuestionModule->QuizQuestionService \n\n\n\n\n\nQuizQuestionRepository\n\nQuizQuestionRepository\n\nQuizQuestionModule -->\n\nQuizQuestionRepository->QuizQuestionModule\n\n\n\n\n\nQuizQuestionService\n\nQuizQuestionService\n\nQuizQuestionModule -->\n\nQuizQuestionService->QuizQuestionModule\n\n\n\n\n\nRoleRepository\n\nRoleRepository\n\nRoleModule -->\n\nRoleRepository->RoleModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nSchoolRepository\n\nSchoolRepository\n\nSchoolModule -->\n\nSchoolRepository->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    65 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GroupingItemDocument   (apps/.../grouping-item.entity.ts)\n                        \n                        \n                            HangmanWordDocument   (apps/.../hangman-word.entity.ts)\n                        \n                        \n                            MirrorWordDocument   (apps/.../mirror-word.entity.ts)\n                        \n                        \n                            QuizDocument   (apps/.../quiz.entity.ts)\n                        \n                        \n                            QuizQuestionDocument   (apps/.../quiz-question.entity.ts)\n                        \n                        \n                            RoleDocument   (apps/.../role.entity.ts)\n                        \n                        \n                            SchoolDocument   (apps/.../school.entity.ts)\n                        \n                        \n                            UserDocument   (apps/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n    \n    \n        \n            \n                \n                    \n                    GroupingItemDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n    \n    \n        \n            \n                \n                    \n                    HangmanWordDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n    \n    \n        \n            \n                \n                    \n                    MirrorWordDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/quiz/entities/quiz.entity.ts\n    \n    \n        \n            \n                \n                    \n                    QuizDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n    \n    \n        \n            \n                \n                    \n                    QuizQuestionDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/role/entities/role.entity.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/school/entities/school.entity.ts\n    \n    \n        \n            \n                \n                    \n                    SchoolDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/users/entities/user.entity.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bcrypt   (apps/.../auth.service.ts)\n                        \n                        \n                            bcrypt   (apps/.../users.service.ts)\n                        \n                        \n                            bcrypt   (apps/.../user.repository.ts)\n                        \n                        \n                            configuration   (apps/.../configuration.ts)\n                        \n                        \n                            CurrentUser   (apps/.../current-user.decorator.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            GroupingItemSchema   (apps/.../grouping-item.entity.ts)\n                        \n                        \n                            HangmanWordSchema   (apps/.../hangman-word.entity.ts)\n                        \n                        \n                            MirrorWordSchema   (apps/.../mirror-word.entity.ts)\n                        \n                        \n                            mongooseConfig   (apps/.../mongo-config.factory.ts)\n                        \n                        \n                            Permission   (apps/.../permission.decorator.ts)\n                        \n                        \n                            QuizQuestionSchema   (apps/.../quiz-question.entity.ts)\n                        \n                        \n                            QuizSchema   (apps/.../quiz.entity.ts)\n                        \n                        \n                            Resource   (apps/.../permission.decorator.ts)\n                        \n                        \n                            RoleSchema   (apps/.../role.entity.ts)\n                        \n                        \n                            SchoolSchema   (apps/.../school.entity.ts)\n                        \n                        \n                            UserSchema   (apps/.../user.entity.ts)\n                        \n                        \n                            validationSchema   (apps/.../validation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/entities/user.repository.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/core/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => ({\n    environment: process.env.NODE_ENV,\n    port: parseInt(process.env.PORT || '3000', 10),\n})\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/auth/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_data: unknown, context: ExecutionContext) => {\n    if (context.getType() === 'http') return context.switchToHttp().getRequest().user\n    return GqlExecutionContext.create(context).getContext().req.user\n})\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GroupingItemSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(GroupingItem)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HangmanWordSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(HangmanWord)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MirrorWordSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(MirrorWord)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/core/config/mongo-config.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mongooseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    imports: [ConfigModule],\n    providers: [ConfigService],\n    mongooseConfigFactory: async (configService: ConfigService): Promise => {\n        const uri = `mongodb+srv://${configService.get('DATABASE_USER')}@${configService.get(\n            'DATABASE_HOST',\n        )}/${configService.get(\n            'DATABASE_NAME',\n        )}?authMechanism=MONGODB-X509&ssl=true&retryWrites=true&w=majority`\n        const cert = configService.get('DATABASE_CERT')\n        return {\n            uri,\n            sslKey: cert,\n            sslCert: cert,\n        }\n    },\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/auth/decorators/permission.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Permission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...abilities: string[]) => SetMetadata('abilities', abilities)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Resource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...resources: string[]) => SetMetadata('resources', resources)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        QuizQuestionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(QuizQuestion)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/quiz/entities/quiz.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        QuizSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Quiz)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/role/entities/role.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/school/entities/school.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SchoolSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(School)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/entities/user.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/core/config/validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n    NODE_ENV: Joi.string().valid('development', 'production', 'test').required(),\n    PORT: Joi.number().default(3000),\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
