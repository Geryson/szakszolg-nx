var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,2.252,1,2.457]],["body/controllers/AppController.html",[0,3.576,1,3.901,2,2.616,3,0.239,4,0.208,5,0.208,6,3.841,7,0.404,8,1.701,9,5.59,10,1.207,11,0.021,12,5.681,13,0.552,14,4.496,15,1.346,16,5.321,17,0.374,18,1.024,19,1.346,20,1.421,21,1.421,22,3.624,23,4.496,24,0.239,25,0.284,26,2.129,27,1.884,28,1.421,29,4.496,30,0.016,31,0.016]],["title/modules/AppModule.html",[32,1.592,33,2.457]],["body/modules/AppModule.html",[1,3.911,2,2.93,3,0.199,4,0.173,5,0.173,11,0.021,17,0.402,18,0.851,22,3.813,24,0.199,25,0.236,30,0.014,31,0.014,32,2.241,33,4.923,34,1.889,35,2.545,36,3.194,37,3.194,38,3.194,39,3.545,40,4.125,41,3.813,42,3.545,43,3.17,44,2.353,45,2.353,46,3.738,47,2.93,48,2.93,49,3.738,50,3.738,51,3.738,52,2.835,53,2.835,54,3.194]],["title/injectables/AppService.html",[22,2.082,55,0.815]],["body/injectables/AppService.html",[3,0.249,4,0.217,5,0.217,7,0.42,8,1.745,9,5.672,11,0.021,13,0.575,15,1.402,16,5.672,17,0.35,18,1.066,19,1.402,20,1.48,21,1.48,22,3.391,24,0.249,25,0.296,28,1.48,30,0.017,31,0.017,55,1.327,56,1.962,57,4,58,4.682,59,4.682,60,4.682]],["title/controllers/AuthController.html",[0,2.252,61,2.457]],["body/controllers/AuthController.html",[0,2.511,2,2.321,3,0.212,4,0.185,5,0.185,7,0.358,8,1.574,10,1.071,11,0.021,13,0.49,15,1.194,17,0.391,18,0.908,19,1.194,20,1.261,21,1.261,24,0.212,25,0.252,26,1.889,27,1.672,28,1.261,30,0.015,31,0.015,61,3.611,62,3.408,63,3.989,64,3.989,65,2.786,66,4.493,67,3.989,68,6.254,69,3.989,70,3.989,71,1.408,72,1.071,73,0.49,74,0.859,75,5.883,76,2.739,77,3.989,78,3.025,79,3.183,80,3.025,81,2.739,82,3.989,83,3.025,84,3.025,85,2.657,86,3.989,87,3.989,88,3.989,89,3.989,90,2.321,91,3.989,92,3.989]],["title/modules/AuthModule.html",[32,1.592,39,1.936]],["body/modules/AuthModule.html",[2,2.842,3,0.19,4,0.166,5,0.166,11,0.021,17,0.411,18,0.814,24,0.19,25,0.226,30,0.014,31,0.014,32,2.174,34,1.806,35,2.468,39,3.74,42,2.642,43,3.074,44,2.249,45,2.249,47,2.842,48,2.079,52,2.71,61,3.821,79,3.498,80,2.71,93,3.053,94,3.053,95,4.07,96,4.07,97,3.573,98,3.074,99,3.573,100,2.71,101,3.704,102,2.454,103,3.573,104,1.933,105,3.573,106,3.573,107,3.573,108,3.573,109,3.573,110,2.71,111,3.573,112,3.053,113,3.053,114,3.573,115,3.053,116,3.573,117,3.053]],["title/injectables/AuthService.html",[55,0.815,79,1.936]],["body/injectables/AuthService.html",[3,0.14,4,0.122,5,0.122,7,0.236,8,1.176,11,0.021,13,0.639,15,1.406,17,0.335,18,0.6,19,0.788,20,0.833,21,0.833,24,0.14,25,0.166,27,1.968,28,1.484,30,0.011,31,0.011,55,0.894,56,1.104,65,3.009,66,3.355,71,1.837,72,1.397,73,0.639,74,1.121,76,2.696,79,2.124,85,2.63,90,2.732,98,1.658,100,1.997,102,1.808,112,3.355,115,2.25,117,2.25,118,1.997,119,2.978,120,3.927,121,1.552,122,2.25,123,2.813,124,6.048,125,5.167,126,2.634,127,3.355,128,3.927,129,2.634,130,2.864,131,3.355,132,1.615,133,2.732,134,2.634,135,2.63,136,1.86,137,3.927,138,2.634,139,2.634,140,1.997,141,2.25,142,1.997,143,1.997,144,1.997,145,1.997,146,1.997,147,1.997,148,1.997,149,1.997,150,2.636,151,1.658,152,1.808,153,2.25,154,3.561,155,3.355,156,2.634,157,2.25,158,1.425,159,2.25,160,2.634,161,2.25,162,2.634,163,2.634,164,2.634,165,3.927,166,2.634,167,2.634,168,2.634,169,2.634,170,1.997,171,1.532,172,2.25,173,2.25]],["title/modules/CoreModule.html",[32,1.592,40,2.252]],["body/modules/CoreModule.html",[2,2.354,3,0.215,4,0.188,5,0.188,11,0.021,17,0.416,18,0.921,24,0.215,25,0.256,30,0.015,31,0.015,32,2.362,34,2.045,40,3.341,47,2.354,48,3.088,101,3.068,102,2.778,140,3.068,174,4.046,175,4.025,176,4.046,177,4.025,178,4.046,179,4.046,180,0.921,181,3.645,182,4.046,183,3.068,184,2.045,185,3.068,186,4.046,187,4.046,188,4.046,189,4.046,190,2.091,191,4.046,192,4.046,193,4.046,194,4.046,195,4.046,196,4.046,197,4.046,198,4.046,199,4.046,200,3.068]],["title/classes/CoreResolver.html",[25,0.226,181,2.457]],["body/classes/CoreResolver.html",[3,0.254,4,0.222,5,0.222,7,0.429,8,1.767,10,1.284,11,0.021,13,0.587,15,1.431,17,0.287,24,0.254,25,0.302,28,1.512,30,0.017,31,0.017,180,1.089,181,4.054,201,0.973,202,4.084,203,6.688,204,3.626,205,4.781,206,5.903,207,4.477,208,4.477,209,4.781]],["title/classes/CreateRoleInput.html",[25,0.226,210,2.082]],["body/classes/CreateRoleInput.html",[3,0.212,4,0.185,5,0.185,7,0.358,10,1.58,11,0.021,13,0.723,17,0.354,24,0.212,25,0.332,30,0.015,31,0.015,72,1.58,73,0.723,132,1.731,180,0.908,201,0.811,210,3.06,211,5.343,212,2.739,213,1.266,214,3.423,215,1.756,216,4.461,217,4.461,218,2.657,219,3.989,220,3.989,221,3.989,222,3.989,223,2.208,224,3.06,225,3.06,226,2.786,227,1.489,228,1.775,229,2.739,230,3.025]],["title/classes/CreateUserInput.html",[25,0.226,231,2.082]],["body/classes/CreateUserInput.html",[3,0.186,4,0.163,5,0.163,7,0.315,10,1.671,11,0.021,13,0.764,17,0.331,24,0.186,25,0.305,30,0.014,31,0.014,73,0.764,74,1.278,132,1.769,133,3.206,135,2.785,180,0.799,201,0.713,213,1.161,214,3.206,215,1.61,218,2.437,223,2.325,224,2.805,226,2.811,227,1.309,228,1.561,229,2.408,230,2.659,231,2.805,232,5.492,233,2.408,234,4.179,235,3.784,236,4.179,237,3.507,238,3.507,239,3.507,240,3.507,241,1.897,242,1.906,243,3.311,244,3.507,245,3.507,246,4.119]],["title/classes/DeleteRoleInput.html",[25,0.226,247,2.082]],["body/classes/DeleteRoleInput.html",[3,0.24,4,0.209,5,0.209,7,0.405,10,1.212,11,0.021,13,0.555,17,0.375,24,0.24,25,0.36,30,0.016,31,0.016,73,0.555,132,1.448,180,1.028,201,0.918,212,3.1,213,1.371,215,1.902,218,2.281,223,2.011,224,3.314,226,2.697,227,1.685,228,2.009,247,3.314,248,3.856,249,3.103,250,2.615,251,2.138,252,3.423,253,2.626]],["title/classes/DeleteUserInput.html",[25,0.226,254,2.082]],["body/classes/DeleteUserInput.html",[3,0.24,4,0.209,5,0.209,7,0.405,10,1.212,11,0.021,13,0.555,17,0.375,24,0.24,25,0.36,30,0.016,31,0.016,73,0.555,132,1.448,180,1.028,201,0.918,213,1.371,215,1.902,218,2.281,223,2.011,224,3.314,226,2.697,227,1.685,228,2.009,233,3.1,249,3.103,250,2.615,251,2.138,252,3.423,253,2.626,254,3.314,255,3.856]],["title/classes/GetRoleArgs.html",[25,0.226,256,2.082]],["body/classes/GetRoleArgs.html",[3,0.24,4,0.209,5,0.209,7,0.405,10,1.212,11,0.021,13,0.555,17,0.375,24,0.24,25,0.36,30,0.016,31,0.016,73,0.555,132,1.448,180,1.028,201,0.918,213,1.371,215,1.902,218,2.281,223,2.011,226,2.697,227,1.685,228,2.009,250,2.615,251,2.138,256,3.314,257,3.423,258,3.856,259,3.545,260,4.514,261,2.841,262,3.585]],["title/classes/GetRolesArgs.html",[25,0.226,263,2.082]],["body/classes/GetRolesArgs.html",[3,0.231,4,0.201,5,0.201,7,0.39,10,1.166,11,0.021,13,0.533,17,0.368,24,0.231,25,0.351,30,0.016,31,0.016,73,0.533,74,1.196,132,1.558,180,0.988,190,1.532,201,0.883,213,1.337,215,1.856,223,1.961,225,3.232,227,1.621,228,1.932,241,2.348,242,2.196,251,2.056,257,3.292,261,2.732,262,3.497,263,3.232,264,3.708,265,3.264,266,4.207,267,3.292,268,3.708]],["title/classes/GetUserArgs.html",[25,0.226,269,2.082]],["body/classes/GetUserArgs.html",[3,0.217,4,0.189,5,0.189,7,0.366,10,1.432,11,0.021,13,0.655,17,0.357,24,0.217,25,0.337,30,0.015,31,0.015,73,0.655,74,1.358,132,1.603,135,3.004,180,0.928,190,1.883,201,0.829,213,1.284,215,1.781,223,2.099,227,1.522,228,1.814,242,2.108,250,2.492,262,3.357,269,3.103,270,4.508,271,3.481,272,3.459,273,3.357,274,5.333,275,4.075,276,4.075,277,5.079,278,3.09,279,3.09]],["title/classes/GetUsersArgs.html",[25,0.226,280,2.082]],["body/classes/GetUsersArgs.html",[3,0.231,4,0.201,5,0.201,7,0.39,10,1.166,11,0.021,13,0.533,17,0.368,24,0.231,25,0.351,30,0.016,31,0.016,73,0.533,74,1.196,132,1.558,180,0.988,190,1.532,201,0.883,213,1.337,215,1.856,223,1.961,225,3.232,227,1.621,228,1.932,241,2.348,242,2.196,251,2.056,261,2.732,262,3.497,265,3.264,266,4.207,267,3.292,268,3.708,270,3.292,280,3.232,281,3.708]],["title/classes/GqlArg.html",[25,0.226,272,2.082]],["body/classes/GqlArg.html",[3,0.279,4,0.243,5,0.243,11,0.02,17,0.315,24,0.279,25,0.332,30,0.018,31,0.018,180,1.195,201,1.067,262,3.931,272,3.634,278,3.979,282,3.053,283,4.482,284,4.482]],["title/classes/GqlAuthGuard.html",[25,0.226,285,2.252]],["body/classes/GqlAuthGuard.html",[3,0.246,4,0.214,5,0.214,7,0.415,8,1.731,11,0.02,13,0.568,15,1.385,17,0.379,18,1.053,24,0.246,25,0.292,28,1.462,30,0.017,31,0.017,71,1.633,72,1.242,73,0.568,74,0.996,104,2.502,180,1.053,201,0.941,213,1.113,285,3.64,286,4.94,287,3.176,288,5.783,289,5.783,290,5.013,291,4.625,292,3.507,293,3.507,294,3.951,295,3.951,296,4.625]],["title/classes/GqlInput.html",[25,0.226,214,2.082]],["body/classes/GqlInput.html",[3,0.287,4,0.25,5,0.25,11,0.019,24,0.287,25,0.341,30,0.018,31,0.018,201,1.098,214,3.695,229,3.706,282,3.14,284,4.61,297,4.61]],["title/classes/IdArg.html",[25,0.226,259,1.936]],["body/classes/IdArg.html",[3,0.226,4,0.197,5,0.197,7,0.382,10,1.144,11,0.021,13,0.523,17,0.365,24,0.292,25,0.384,30,0.016,31,0.016,73,0.523,132,1.631,180,0.97,190,1.504,201,0.866,213,1.462,215,1.833,218,2.152,223,2.144,225,3.193,226,2.599,227,1.59,242,1.684,250,2.545,259,2.969,265,2.152,266,2.925,272,3.732,279,3.23,282,3.193,298,3.23,299,4.259,300,2.681]],["title/classes/IdArrayArg.html",[25,0.226,265,1.808]],["body/classes/IdArrayArg.html",[3,0.223,4,0.194,5,0.194,7,0.377,10,1.127,11,0.021,13,0.515,17,0.362,24,0.289,25,0.381,30,0.016,31,0.016,73,0.515,74,1.17,132,1.622,180,0.955,190,1.481,201,0.854,213,1.451,215,1.815,223,2.128,225,3.163,226,2.574,227,1.567,241,2.27,242,2.149,250,1.759,259,2.27,265,2.747,266,4.14,267,3.182,272,3.711,279,3.182,282,3.163,298,3.182,300,2.641,301,4.196]],["title/classes/IdInput.html",[25,0.226,249,1.694]],["body/classes/IdInput.html",[3,0.26,4,0.226,5,0.226,7,0.438,11,0.02,13,0.6,17,0.294,24,0.26,25,0.309,30,0.017,31,0.017,73,0.6,132,1.521,201,0.994,213,1.44,214,3.762,215,1.998,230,3.704,249,2.833,250,2.71,282,3.48,300,3.074,302,4.173,303,4.884]],["title/classes/JwtAuthGuard.html",[25,0.226,304,2.713]],["body/classes/JwtAuthGuard.html",[3,0.283,4,0.247,5,0.247,11,0.019,17,0.32,24,0.283,25,0.336,30,0.018,31,0.018,104,2.878,201,1.082,213,1.281,287,3.653,293,4.035,295,4.545,304,4.776,305,4.545]],["title/injectables/JwtStrategy.html",[55,0.815,95,2.252]],["body/injectables/JwtStrategy.html",[3,0.198,4,0.173,5,0.173,7,0.334,8,1.504,11,0.021,13,0.617,15,1.116,17,0.366,18,0.849,24,0.198,25,0.236,27,1.562,28,1.178,30,0.014,31,0.014,55,1.144,56,1.562,65,2.693,71,1.774,72,1.349,73,0.748,74,1.082,76,2.559,95,3.163,98,2.346,104,2.016,110,2.826,113,3.183,119,3.811,121,1.987,122,3.183,123,3.211,127,4.293,132,1.278,135,2.539,140,2.826,141,3.183,153,3.183,154,2.826,155,3.183,159,3.183,161,3.183,213,0.897,306,3.183,307,3.726,308,5.025,309,5.025,310,3.726,311,3.726,312,3.183,313,2.826,314,3.183,315,3.183,316,3.183,317,3.726,318,3.726,319,3.726,320,2.559,321,3.726,322,3.726]],["title/classes/LocalAuthGuard.html",[25,0.226,81,2.457]],["body/classes/LocalAuthGuard.html",[3,0.281,4,0.245,5,0.245,11,0.019,17,0.318,24,0.281,25,0.335,30,0.018,31,0.018,81,4.313,104,2.865,201,1.077,213,1.275,287,3.636,293,4.763,323,4.524,324,4.016]],["title/injectables/LocalStrategy.html",[55,0.815,96,2.252]],["body/injectables/LocalStrategy.html",[3,0.194,4,0.169,5,0.169,7,0.327,8,1.481,11,0.021,13,0.608,15,1.09,17,0.379,18,0.829,19,1.09,20,1.152,21,1.152,24,0.194,25,0.23,26,1.725,27,1.527,28,1.152,30,0.014,31,0.014,55,1.127,56,1.527,65,2.662,71,1.747,72,1.329,73,0.608,74,1.065,79,3.518,80,2.762,85,1.841,90,2.119,96,3.115,104,1.971,119,3.753,121,1.44,130,2.855,131,4.227,132,1.653,133,3.508,135,2.5,136,2.344,150,1.725,170,2.762,171,2.119,213,0.877,312,3.112,313,2.762,314,3.112,315,3.112,316,3.112,324,2.762,325,3.112,326,3.642,327,3.642,328,3.642,329,4.948,330,3.642,331,3.642,332,3.642]],["title/guards/PermissionGuard.html",[333,2.713,334,2.457]],["body/guards/PermissionGuard.html",[3,0.181,4,0.158,5,0.158,7,0.305,8,1.413,11,0.021,13,0.58,15,1.018,17,0.352,18,0.775,19,1.018,20,1.075,21,1.075,24,0.181,25,0.215,26,1.611,28,1.714,30,0.014,31,0.014,55,1.075,71,1.667,72,1.268,73,0.58,74,1.017,85,2.386,121,1.345,130,2.774,132,0.865,150,2.774,180,0.775,190,1.201,290,4.442,292,2.579,294,2.906,320,2.336,334,3.242,335,3.401,336,4.633,337,2.906,338,5.858,339,3.401,340,6.369,341,3.401,342,4.721,343,3.401,344,3.401,345,2.906,346,2.141,347,3.401,348,3.401,349,3.401,350,4.721,351,3.401,352,3.401,353,3.401,354,3.242,355,3.401,356,3.401,357,3.401,358,2.906,359,2.906,360,2.906,361,2.906,362,3.401,363,3.401,364,3.401,365,3.401,366,3.401,367,3.401,368,3.401,369,3.401]],["title/injectables/RepositoryProxyService.html",[55,0.815,370,2.457]],["body/injectables/RepositoryProxyService.html",[3,0.159,4,0.139,5,0.139,7,0.269,8,1.292,11,0.021,13,0.751,15,1.756,17,0.333,18,0.682,24,0.159,25,0.189,26,1.419,27,1.256,28,1.855,30,0.012,31,0.012,55,0.983,56,1.256,71,2.157,72,1.641,73,0.751,74,1.316,121,1.184,213,1.332,249,2.396,253,1.743,259,2.335,261,1.886,265,2.181,300,2.717,370,2.964,371,5.38,372,2.56,373,2.335,374,2.511,375,2.511,376,2.511,377,2.511,378,2.996,379,5.059,380,2.996,381,4.316,382,2.511,383,3.801,384,2.996,385,2.965,386,2.511,387,3.801,388,2.996,389,2.511,390,3.801,391,2.996,392,2.511,393,3.801,394,2.996,395,2.511,396,4.198,397,2.996,398,1.886,399,2.996,400,2.996,401,2.996,402,2.996,403,2.996,404,2.996]],["title/classes/Role.html",[25,0.226,405,1.694]],["body/classes/Role.html",[3,0.162,4,0.141,5,0.141,7,0.273,10,1.699,11,0.021,13,0.777,17,0.335,19,0.911,20,0.963,21,0.963,24,0.271,25,0.192,30,0.013,31,0.013,72,1.371,73,0.822,74,1.201,132,1.676,150,1.442,180,0.693,184,1.538,190,1.075,201,0.619,215,1.458,216,3.871,217,3.871,223,2.285,242,1.204,273,1.916,346,2.748,405,2.068,406,2.091,407,3.51,408,3.505,409,3.871,410,3.505,411,3.213,412,3.73,413,3.73,414,3.044,415,3.575,416,4.764,417,3.044,418,2.601,419,3.044,420,3.044,421,3.044,422,3.044,423,3.044,424,3.73,425,5.53,426,3.505,427,2.601,428,2.601,429,3.311,430,1.771,431,2.091,432,2.601,433,1.916,434,2.601]],["title/modules/RoleModule.html",[32,1.592,41,2.082]],["body/modules/RoleModule.html",[3,0.186,4,0.163,5,0.163,11,0.021,17,0.403,18,0.799,24,0.186,25,0.222,30,0.014,31,0.014,32,2.146,34,1.772,35,2.437,39,3.478,41,4.08,42,2.609,43,3.035,44,2.207,45,2.207,47,2.805,48,2.805,52,2.659,53,2.659,72,0.942,98,3.035,183,2.659,184,1.772,200,3.657,405,1.661,426,2.408,433,3.035,435,2.996,436,3.507,437,2.996,438,2.996,439,4.08,440,4.08,441,3.507,442,2.996,443,3.311,444,3.507,445,2.996,446,2.996,447,2.996,448,2.659]],["title/injectables/RoleRepository.html",[55,0.815,439,2.082]],["body/injectables/RoleRepository.html",[3,0.147,4,0.129,5,0.129,7,0.249,8,1.222,11,0.021,13,0.731,15,1.703,17,0.399,18,0.632,19,0.831,20,0.878,21,0.878,24,0.147,25,0.175,30,0.012,31,0.012,55,0.93,56,1.163,65,3.102,71,2.1,72,1.598,73,0.699,74,1.281,121,1.097,136,2.695,158,2.209,184,1.403,210,1.615,213,0.983,247,1.615,251,2.695,256,1.615,263,1.615,373,2.209,374,2.375,375,2.375,376,2.375,377,2.375,382,1.615,383,2.803,385,2.875,386,1.615,387,2.803,389,1.615,390,2.803,392,1.615,393,2.803,395,1.615,398,3.972,405,1.315,407,1.747,430,1.615,431,1.906,439,2.375,449,2.371,450,4.497,451,2.776,452,4.049,453,2.776,454,3.488,455,2.776,456,2.776,457,2.776,458,2.776,459,2.776,460,2.371,461,2.776,462,1.615,463,1.615,464,3.672,465,1.615,466,2.375,467,2.105,468,2.105,469,1.615,470,2.776,471,2.776,472,2.776]],["title/classes/RoleResolver.html",[25,0.226,443,2.457]],["body/classes/RoleResolver.html",[3,0.121,4,0.106,5,0.106,7,0.205,8,1.055,10,1.404,11,0.021,13,0.679,15,1.565,17,0.392,18,0.52,19,0.683,20,0.722,21,0.722,24,0.121,25,0.144,26,1.081,27,0.957,28,1.653,30,0.01,31,0.01,71,1.95,72,1.483,73,0.679,74,1.189,78,1.731,83,1.731,121,0.903,136,2.951,158,2.328,180,0.52,190,1.519,201,0.464,204,2.672,207,3.263,208,2.672,210,2.814,235,2.419,242,2.184,247,2.814,256,2.814,263,2.814,285,1.437,334,2.954,385,3.149,405,2.89,407,1.437,440,3.214,442,1.95,443,2.419,445,1.95,462,2.814,463,1.328,464,3.263,465,1.328,466,2.05,467,1.731,468,1.731,469,1.328,473,1.95,474,3.523,475,3.523,476,3.523,477,2.283,478,2.283,479,2.283,480,2.283,481,2.283,482,2.283,483,2.283,484,2.283,485,2.283,486,2.283,487,2.283,488,2.283,489,2.283,490,2.283,491,2.283,492,2.283,493,2.283,494,4.133,495,1.95,496,1.95,497,1.731,498,1.568,499,2.283,500,2.283,501,2.283,502,2.283,503,4.466,504,2.283,505,2.283,506,2.283,507,1.95,508,2.283,509,2.283,510,2.283,511,2.283,512,2.283,513,2.283,514,2.283,515,2.283,516,2.283,517,2.283,518,2.283,519,2.283]],["title/injectables/RoleService.html",[55,0.815,440,2.082]],["body/injectables/RoleService.html",[3,0.165,4,0.144,5,0.144,7,0.279,8,1.328,11,0.021,13,0.76,15,1.782,17,0.391,18,0.709,24,0.165,25,0.197,30,0.013,31,0.013,55,1.01,56,1.304,71,2.185,72,1.662,73,0.76,74,1.333,121,1.23,210,1.81,213,1.067,247,1.81,251,2.819,256,1.81,263,1.81,370,4.471,373,2.399,374,2.58,375,2.58,376,2.58,377,2.58,382,1.81,383,3.045,385,3.008,386,1.81,387,3.045,389,1.81,390,3.045,392,1.81,393,3.045,395,1.81,396,3.363,439,3.464,440,2.58,446,2.658,462,1.81,463,1.81,464,3.918,465,1.81,466,2.58,467,2.36,468,2.36,469,1.81,520,2.658,521,4.434,522,3.111,523,3.111,524,3.111,525,3.111,526,3.111,527,3.111,528,3.111,529,3.111,530,3.111]],["title/injectables/SimpleRepository.html",[55,0.815,398,2.252]],["body/injectables/SimpleRepository.html",[3,0.124,4,0.108,5,0.108,7,0.21,8,1.075,11,0.021,13,0.685,15,1.582,17,0.318,18,0.533,19,0.7,20,0.74,21,0.74,24,0.124,25,0.148,26,1.108,27,0.981,28,1.764,30,0.01,31,0.01,55,0.818,56,0.981,65,3.168,71,1.969,72,1.498,73,0.649,74,1.201,90,1.361,121,0.925,136,2.971,150,1.7,158,2.86,171,3.246,249,1.108,250,1.505,253,1.361,259,1.266,261,1.473,265,1.182,300,2.26,320,1.607,354,1.607,373,1.942,374,2.542,375,2.089,376,2.089,377,2.542,382,2.089,383,3,385,3.106,386,2.089,387,3,389,2.089,390,3,392,2.089,393,3.365,395,2.089,396,1.774,398,2.26,408,1.607,409,1.774,410,3,411,1.473,415,2.542,429,1.774,430,1.361,450,4.594,452,4.231,498,1.607,531,1.999,532,2.34,533,2.34,534,2.34,535,2.34,536,2.34,537,2.34,538,2.34,539,1.999,540,3.59,541,1.607,542,2.34,543,2.723,544,1.999,545,1.999,546,1.999,547,2.34,548,2.34,549,3.59,550,2.34,551,2.34,552,3.59,553,2.34,554,1.774,555,1.999,556,3.067,557,2.34,558,2.34,559,2.34,560,2.34,561,2.34,562,2.34,563,2.34]],["title/classes/UpdateRoleInput.html",[25,0.226,462,2.082]],["body/classes/UpdateRoleInput.html",[3,0.174,4,0.152,5,0.152,7,0.294,10,1.547,11,0.021,13,0.745,17,0.346,19,0.98,20,1.035,21,1.035,24,0.174,25,0.291,30,0.013,31,0.013,72,1.426,73,0.745,74,1.42,132,1.705,180,0.745,190,1.623,201,0.666,212,2.248,213,1.106,215,1.535,216,4.029,217,4.029,218,1.654,223,2.142,224,2.674,225,2.674,226,2.728,227,1.222,228,1.457,241,1.771,242,2.277,243,2.248,249,2.728,250,2.226,251,1.55,253,1.905,273,2.893,277,4.921,346,2.893,411,3.344,415,2.674,462,2.674,543,4.029,564,5.184,565,4.596,566,3.273,567,3.273,568,3.273,569,3.273,570,3.273,571,3.273]],["title/classes/UpdateUserInput.html",[25,0.226,572,2.082]],["body/classes/UpdateUserInput.html",[3,0.144,4,0.126,5,0.126,7,0.243,10,1.683,11,0.021,13,0.786,17,0.317,19,0.811,20,0.857,21,0.857,24,0.144,25,0.253,30,0.011,31,0.011,73,0.786,74,1.467,132,1.769,133,2.778,135,2.413,180,0.617,190,2.332,201,0.551,213,0.965,215,1.339,218,1.369,223,2.26,224,2.333,226,1.899,227,1.012,228,1.206,233,1.86,234,3.621,235,3.278,236,3.621,241,1.466,242,2.478,243,2.754,246,3.426,249,2.499,250,2.001,251,1.283,252,2.055,253,1.576,273,3.713,346,2.524,411,3.005,415,2.333,543,3.621,572,2.333,573,5.468,574,4.774,575,4.774,576,2.709,577,2.709,578,2.709,579,2.709,580,2.709,581,2.709,582,2.709,583,2.709,584,2.709]],["title/classes/User.html",[25,0.226,130,1.694]],["body/classes/User.html",[3,0.139,4,0.121,5,0.121,7,0.235,10,1.703,11,0.021,13,0.779,17,0.35,19,0.783,20,0.827,21,0.827,24,0.248,25,0.165,30,0.011,31,0.011,73,0.815,74,1.336,85,2.363,130,2.214,132,1.612,133,2.72,135,2.363,150,1.239,180,0.596,184,1.322,190,1.379,201,0.532,215,1.305,223,2.238,234,3.546,235,3.211,236,3.546,241,1.415,242,2.05,243,1.796,273,2.459,346,2.459,405,1.85,407,2.943,408,3.211,409,3.546,410,3.211,411,2.943,412,2.234,413,3.995,415,3.388,416,4.431,418,3.337,424,3.337,425,5.598,426,3.211,427,2.234,428,2.234,429,2.962,430,2.273,432,2.234,448,1.983,541,1.796,554,2.962,585,1.796,586,2.615,587,2.615,588,2.615,589,2.615,590,2.615,591,2.615,592,2.615,593,3.906,594,2.615,595,2.615,596,2.615,597,1.983,598,2.615,599,1.983,600,2.615,601,1.796,602,2.234]],["title/injectables/UserRepository.html",[55,0.815,603,2.082]],["body/injectables/UserRepository.html",[3,0.107,4,0.094,5,0.094,7,0.181,8,0.959,11,0.021,13,0.645,15,1.478,17,0.375,18,0.46,19,0.605,20,0.639,21,0.639,24,0.107,25,0.128,27,1.343,28,1.66,30,0.009,31,0.009,55,0.73,56,0.847,65,3.076,71,1.854,72,1.41,73,0.645,74,1.131,85,1.022,90,1.864,121,1.267,130,2.144,133,1.176,135,1.619,136,2.851,142,1.533,143,1.533,144,1.533,145,1.533,146,1.533,147,1.533,148,1.533,149,1.533,150,1.885,151,1.273,152,1.388,154,2.43,157,1.727,158,2.153,170,3.434,171,3.419,172,1.727,173,1.727,184,1.022,231,2.634,250,1.668,254,2.634,269,2.634,280,2.634,354,1.388,373,1.733,374,2.315,375,1.864,376,1.864,377,1.864,382,1.864,385,2.883,386,1.864,389,1.864,392,1.864,395,1.864,405,0.958,407,1.273,408,1.388,410,1.388,415,1.864,430,1.864,431,1.388,450,4.46,452,4.172,454,3.4,460,1.727,463,1.176,465,1.176,466,1.864,469,1.176,539,1.727,541,1.388,544,1.727,545,1.727,546,1.727,554,1.533,555,1.727,556,3.4,572,2.634,597,1.533,599,1.533,603,1.864,604,1.533,605,2.022,606,2.022,607,3.204,608,2.022,609,2.022,610,2.022,611,2.022,612,2.022,613,2.022,614,3.018,615,1.533,616,1.533,617,2.022,618,2.022,619,2.022,620,2.022,621,3.204,622,2.022,623,2.022,624,2.022,625,2.022,626,2.022,627,2.022,628,2.022,629,2.022,630,2.022,631,2.022,632,3.204,633,2.022,634,2.022,635,2.022,636,2.022,637,2.022,638,2.022,639,2.022,640,2.022,641,2.022,642,2.022]],["title/modules/UsersModule.html",[32,1.592,42,1.936]],["body/modules/UsersModule.html",[3,0.188,4,0.164,5,0.164,11,0.021,17,0.41,18,0.806,24,0.188,25,0.224,30,0.014,31,0.014,32,2.16,34,1.789,35,2.452,39,2.625,41,2.823,42,3.69,43,3.055,44,2.228,45,2.228,47,2.823,48,2.059,53,2.684,54,3.024,72,1.303,98,3.486,123,3.549,130,1.676,183,2.684,184,1.789,200,3.68,405,1.676,426,3.332,433,3.055,447,3.024,448,2.684,597,2.684,601,3.332,603,3.751,643,3.024,644,3.024,645,3.024,646,3.54,647,3.024,648,3.332,649,3.54,650,3.024,651,3.024,652,3.54]],["title/classes/UsersResolver.html",[25,0.226,648,2.457]],["body/classes/UsersResolver.html",[3,0.128,4,0.111,5,0.111,7,0.216,8,1.098,10,1.437,11,0.021,13,0.693,15,1.602,17,0.386,18,0.547,19,0.72,20,0.76,21,0.76,24,0.128,25,0.152,26,1.139,27,1.008,28,1.692,30,0.011,31,0.011,71,1.991,72,1.514,73,0.693,74,1.214,78,1.823,83,1.823,85,1.215,121,0.95,123,2.849,130,2.934,136,2.993,158,2.404,180,0.547,190,1.294,201,0.489,204,2.78,207,3.37,208,2.78,231,2.892,242,2.115,254,2.892,269,2.892,280,2.892,285,1.513,385,3.193,463,1.399,465,1.399,466,2.133,469,1.399,494,4.246,495,2.054,496,2.054,503,3.796,507,2.054,572,2.892,614,3.37,615,1.823,616,1.823,647,2.054,648,2.517,651,2.054,653,2.054,654,3.666,655,3.666,656,3.666,657,3.666,658,2.404,659,2.404,660,2.404,661,3.666,662,2.404,663,2.404,664,2.404,665,2.404,666,2.404,667,2.404,668,2.404,669,2.404,670,2.404,671,2.404,672,2.404,673,2.404,674,2.404,675,2.404,676,2.404,677,2.404,678,2.404,679,2.404,680,2.404,681,2.404,682,2.404,683,2.404]],["title/injectables/UsersService.html",[55,0.815,123,1.808]],["body/injectables/UsersService.html",[3,0.137,4,0.12,5,0.12,7,0.232,8,1.158,11,0.021,13,0.712,15,1.652,17,0.371,18,0.587,19,0.772,20,0.816,21,0.816,24,0.137,25,0.163,26,1.222,27,1.081,28,1.745,30,0.011,31,0.011,55,0.88,56,1.081,65,2.992,71,2.045,72,1.555,73,0.712,74,1.247,85,1.303,90,1.501,121,1.02,123,1.954,136,3.047,142,1.956,143,1.956,144,1.956,145,1.956,146,1.956,147,1.956,148,1.956,149,1.956,150,1.222,151,1.624,152,1.771,158,2.509,231,2.997,254,2.997,269,2.997,280,2.997,373,2.092,374,2.25,375,2.25,376,2.25,377,2.25,382,2.25,385,2.788,386,2.25,389,2.25,392,2.25,395,2.25,450,4.677,463,1.501,465,1.501,466,2.25,469,1.501,572,2.997,603,3.37,614,3.517,615,1.956,616,1.956,650,2.204,684,1.956,685,2.58,686,2.58,687,2.58,688,2.58,689,2.58,690,2.58,691,2.58,692,2.58,693,2.58,694,2.58,695,2.58,696,1.771,697,2.58,698,2.58,699,2.58]],["title/coverage.html",[700,4.176]],["body/coverage.html",[0,2.106,1,1.467,5,0.099,6,1.825,11,0.021,22,1.243,25,0.438,30,0.01,31,0.01,55,1.393,57,1.825,61,1.467,62,1.825,73,0.262,79,1.156,81,1.467,95,1.345,96,1.345,118,2.538,123,1.08,130,1.012,151,2.596,171,1.243,175,1.62,177,1.62,181,1.467,185,1.62,202,1.825,210,1.243,211,1.825,212,2.832,214,1.243,229,1.467,231,1.243,232,1.825,233,2.832,247,1.243,248,1.825,249,1.012,254,1.243,255,1.825,256,1.243,257,2.538,258,1.825,259,1.156,263,1.243,264,1.825,265,1.08,269,1.243,270,2.538,271,1.825,272,1.243,278,1.62,280,1.243,281,1.825,282,2.949,283,1.825,285,1.345,286,1.825,287,2.832,297,1.825,298,2.538,302,1.825,304,1.62,305,1.825,306,1.825,323,1.825,325,1.825,333,1.62,334,1.467,336,1.825,337,1.825,354,5.035,370,1.467,371,1.825,372,1.825,398,1.345,405,1.012,406,2.298,433,1.345,439,1.243,440,1.243,443,1.467,449,1.825,462,1.243,473,1.825,497,1.62,498,1.467,520,1.825,531,1.825,564,1.825,572,1.243,573,1.825,585,2.298,601,1.467,603,1.243,604,2.538,648,1.467,653,1.825,684,2.538,700,1.825,701,1.825,702,2.136,703,2.136,704,6.424,705,2.136,706,6.424,707,6.737,708,1.825,709,1.825,710,1.825,711,2.859,712,4.668,713,1.825,714,1.825,715,1.825,716,1.825,717,2.136,718,3.346,719,2.136,720,5.816,721,3.346,722,1.825,723,2.859,724,1.825,725,1.825,726,2.136,727,1.825,728,2.136,729,2.136]],["title/dependencies.html",[35,2.175,730,2.985]],["body/dependencies.html",[11,0.021,18,0.811,25,0.225,30,0.014,31,0.014,35,1.8,84,3.696,100,2.701,102,2.446,104,1.927,110,2.701,180,0.811,184,1.8,227,1.33,313,4.213,324,2.701,345,3.043,430,2.072,731,3.562,732,6.733,733,3.562,734,3.562,735,3.562,736,3.562,737,4.874,738,4.164,739,3.562,740,3.562,741,3.562,742,3.562,743,5.973,744,3.562,745,3.562,746,3.562,747,3.562,748,3.562,749,3.043,750,3.562,751,3.562,752,3.043,753,3.562,754,3.562,755,3.562,756,3.562,757,3.562,758,3.562,759,3.562,760,3.562,761,3.562,762,4.874,763,3.562,764,3.043,765,3.562,766,3.562,767,3.562,768,3.562,769,3.562,770,3.562,771,3.562,772,3.562,773,3.562,774,3.562,775,3.562,776,3.562,777,3.562,778,3.562,779,3.562,780,3.562,781,3.562,782,3.562,783,3.562,784,3.562]],["title/miscellaneous/functions.html",[785,1.737,786,3.677]],["body/miscellaneous/functions.html",[7,0.496,11,0.018,30,0.018,31,0.018,725,4.723,727,5.823,785,3.217,786,4.723,787,5.528]],["title/index.html",[7,0.268,788,2.985,789,2.985]],["body/index.html",[4,0.105,11,0.016,19,0.681,30,0.01,31,0.01,35,1.149,84,1.724,171,2.044,373,1.23,541,1.561,696,2.412,701,3.666,749,1.942,752,3.001,764,1.942,790,2.274,791,4.291,792,2.274,793,4.291,794,6.711,795,2.274,796,2.274,797,2.274,798,5.938,799,2.274,800,2.274,801,3.512,802,2.274,803,2.274,804,2.274,805,2.274,806,2.274,807,2.274,808,2.274,809,4.291,810,4.291,811,2.274,812,3.512,813,5.217,814,5.938,815,2.274,816,3.512,817,5.515,818,2.274,819,2.274,820,5.217,821,2.274,822,4.827,823,2.274,824,4.291,825,3.512,826,2.274,827,2.274,828,2.274,829,6.515,830,2.274,831,2.274,832,2.274,833,3.512,834,2.274,835,2.274,836,2.274,837,2.274,838,2.274,839,2.274,840,2.274,841,2.274,842,5.749,843,3.512,844,6.225,845,4.291,846,2.274,847,5.749,848,4.291,849,3.512,850,2.274,851,2.274,852,3.512,853,2.274,854,2.274,855,2.274,856,2.274,857,2.274,858,2.274,859,2.274,860,2.274,861,2.274,862,2.274,863,2.274,864,2.274,865,4.291,866,2.274,867,4.291,868,2.274,869,4.291,870,2.274,871,2.274,872,2.274,873,2.274,874,2.274,875,2.274,876,2.274,877,1.942,878,3.512,879,4.291,880,5.515,881,4.827,882,3.512,883,2.274,884,2.274,885,3.512,886,5.515,887,2.274,888,2.274,889,2.274,890,2.274,891,2.274,892,3.001,893,2.274,894,2.274,895,2.274,896,2.274,897,3.512,898,3.512,899,4.291,900,4.827,901,3.512,902,2.274,903,2.274,904,2.274,905,2.274,906,2.274,907,2.274,908,2.274,909,2.274,910,2.274,911,2.274,912,2.274,913,3.512,914,2.274,915,2.274,916,2.274,917,2.274,918,2.274,919,2.274,920,2.274,921,2.274,922,2.274,923,2.274,924,2.274,925,2.274,926,2.274,927,2.274,928,2.274,929,2.274,930,2.274,931,2.274,932,2.274,933,2.274,934,2.274,935,2.274]],["title/modules.html",[34,2.47]],["body/modules.html",[11,0.018,30,0.018,31,0.018,33,3.505,34,2.579,39,2.762,40,3.213,41,2.97,42,2.762,738,5.844,892,4.361,936,6.84,937,6.84,938,6.999,939,5.104]],["title/overview.html",[940,4.176]],["body/overview.html",[2,2.053,11,0.021,22,3.217,30,0.014,31,0.014,33,4.821,34,1.783,35,2.447,36,3.015,37,3.015,38,3.015,39,3.731,40,3.48,41,4.052,42,3.635,43,3.048,44,2.221,45,2.221,56,1.479,79,2.991,93,3.015,94,3.015,95,3.48,96,3.48,123,3.333,201,0.718,333,2.676,435,3.015,437,3.015,438,3.015,439,3.838,440,3.838,603,3.217,643,3.015,644,3.015,645,3.015,696,2.423,940,3.015,941,3.529,942,3.529,943,3.529,944,3.529]],["title/miscellaneous/typealiases.html",[785,1.737,945,4.304]],["body/miscellaneous/typealiases.html",[7,0.487,11,0.018,30,0.018,31,0.018,73,0.666,406,3.724,431,4.373,585,3.724,599,4.83,785,3.155,946,5.422,947,4.632,948,4.632]],["title/miscellaneous/variables.html",[785,1.737,949,3.677]],["body/miscellaneous/variables.html",[7,0.258,11,0.021,28,1.562,30,0.012,31,0.012,47,1.672,48,1.672,65,1.361,73,0.607,76,1.974,101,2.18,118,2.18,125,4.221,132,1.065,136,1.361,150,1.984,151,3.792,152,3.393,175,3.176,177,3.176,185,3.176,190,1.015,290,2.18,292,2.18,320,1.974,358,2.456,359,2.456,360,2.456,361,2.456,406,1.974,433,2.636,434,2.456,497,3.176,498,2.876,585,1.974,601,2.876,602,2.456,604,2.18,684,2.18,696,1.974,708,2.456,709,3.578,710,3.578,711,2.456,713,2.456,714,2.456,715,3.578,716,2.456,722,2.456,723,4.93,724,2.456,785,1.672,877,4.221,947,2.456,948,2.456,949,2.456,950,2.874,951,2.874,952,2.874,953,2.874,954,2.874,955,2.874,956,2.874,957,2.874,958,4.188,959,2.874,960,6.83,961,6.83,962,2.874,963,4.188,964,2.874,965,2.874,966,2.874,967,4.941,968,2.874,969,4.188,970,2.874,971,2.874,972,2.874,973,2.874,974,2.874,975,2.874,976,4.941,977,2.874,978,2.874,979,2.874,980,4.188,981,2.874,982,4.188,983,2.874,984,2.874,985,2.874,986,2.874,987,2.874,988,2.874]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":354,"title":{},"body":{"guards/PermissionGuard.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["0.1.13",{"_index":776,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":784,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":944,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["1.1.18",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":696,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["13.1.0",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["13.4.6",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["14.2.0",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["15.0.0",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["17.5.0",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":942,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":780,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["23",{"_index":943,"title":{},"body":{"overview.html":{}}}],["3.6.1",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":941,"title":{},"body":{"overview.html":{}}}],["6.1.7",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":778,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["8.0.0",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":782,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["9.1.2",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":408,"title":{},"body":{"classes/Role.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["abilities",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["above",{"_index":849,"title":{},"body":{"index.html":{}}}],["abstract",{"_index":284,"title":{},"body":{"classes/GqlArg.html":{},"classes/GqlInput.html":{}}}],["access_token",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["add",{"_index":814,"title":{},"body":{"index.html":{}}}],["adding",{"_index":808,"title":{},"body":{"index.html":{}}}],["address",{"_index":626,"title":{},"body":{"injectables/UserRepository.html":{}}}],["advanced",{"_index":926,"title":{},"body":{"index.html":{}}}],["advantage",{"_index":919,"title":{},"body":{"index.html":{}}}],["affected",{"_index":885,"title":{},"body":{"index.html":{}}}],["affected:e2e",{"_index":889,"title":{},"body":{"index.html":{}}}],["affected:test",{"_index":884,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":946,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alongside",{"_index":924,"title":{},"body":{"index.html":{}}}],["angular",{"_index":828,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":737,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["any).deletedat",{"_index":557,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["any).updatedat",{"_index":637,"title":{},"body":{"injectables/UserRepository.html":{}}}],["any).user",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["api",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["apollo",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":847,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":843,"title":{},"body":{"index.html":{}}}],["applications",{"_index":817,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":33,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/.../auth.service.ts",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../configuration.ts",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../current",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":787,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mongo",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../permission.decorator.ts",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../role.entity.ts",{"_index":947,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../user.entity.ts",{"_index":948,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../user.repository.ts",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../users.service.ts",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../validation.ts",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/api/src/app/app.module.ts",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/app/auth/auth.controller.ts",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/auth.controller.ts:13",{"_index":70,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/api/src/app/auth/auth.module.ts",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/api/src/app/auth/auth.service.ts",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/auth.service.ts:10",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:18",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:23",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:33",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/decorators/current",{"_index":708,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/decorators/permission.decorator.ts",{"_index":711,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/guards/gql",{"_index":286,"title":{},"body":{"classes/GqlAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/jwt",{"_index":305,"title":{},"body":{"classes/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/local",{"_index":323,"title":{},"body":{"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/permission",{"_index":336,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts",{"_index":306,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts:19",{"_index":310,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts:7",{"_index":307,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts",{"_index":325,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts:13",{"_index":328,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts:8",{"_index":327,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["apps/api/src/app/core/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["apps/api/src/app/core/app.controller.ts:12",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/api/src/app/core/app.service.ts",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["apps/api/src/app/core/app.service.ts:6",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/api/src/app/core/config/configuration.ts",{"_index":713,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/core/config/mongo",{"_index":714,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/core/config/validation.ts",{"_index":716,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/core/core.module.ts",{"_index":174,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/api/src/app/core/core.resolver.ts",{"_index":202,"title":{},"body":{"classes/CoreResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/core/core.resolver.ts:6",{"_index":205,"title":{},"body":{"classes/CoreResolver.html":{}}}],["apps/api/src/app/role/dto/args/get",{"_index":257,"title":{},"body":{"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/create",{"_index":211,"title":{},"body":{"classes/CreateRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/delete",{"_index":248,"title":{},"body":{"classes/DeleteRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/update",{"_index":564,"title":{},"body":{"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts",{"_index":406,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:13",{"_index":414,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:17",{"_index":420,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:21",{"_index":421,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:25",{"_index":422,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:29",{"_index":417,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:33",{"_index":423,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:37",{"_index":419,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.repository.ts",{"_index":449,"title":{},"body":{"injectables/RoleRepository.html":{},"coverage.html":{}}}],["apps/api/src/app/role/entities/role.repository.ts:22",{"_index":453,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["apps/api/src/app/role/role.module.ts",{"_index":441,"title":{},"body":{"modules/RoleModule.html":{}}}],["apps/api/src/app/role/role.resolver.ts",{"_index":473,"title":{},"body":{"classes/RoleResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/role/role.resolver.ts:17",{"_index":478,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:23",{"_index":487,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:30",{"_index":490,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:37",{"_index":481,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:44",{"_index":493,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:51",{"_index":484,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.service.ts",{"_index":520,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["apps/api/src/app/role/role.service.ts:18",{"_index":522,"title":{},"body":{"injectables/RoleService.html":{}}}],["apps/api/src/app/users/dto/args/get",{"_index":270,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/create",{"_index":232,"title":{},"body":{"classes/CreateUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/delete",{"_index":255,"title":{},"body":{"classes/DeleteUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/update",{"_index":573,"title":{},"body":{"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts",{"_index":585,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:15",{"_index":586,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:19",{"_index":596,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:23",{"_index":590,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:26",{"_index":591,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:30",{"_index":589,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:34",{"_index":594,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:38",{"_index":587,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:42",{"_index":595,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:46",{"_index":588,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts",{"_index":604,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:17",{"_index":606,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:23",{"_index":610,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:29",{"_index":611,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:37",{"_index":608,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:41",{"_index":612,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:60",{"_index":609,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/users.module.ts",{"_index":646,"title":{},"body":{"modules/UsersModule.html":{}}}],["apps/api/src/app/users/users.resolver.ts",{"_index":653,"title":{},"body":{"classes/UsersResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/users/users.resolver.ts:14",{"_index":659,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:19",{"_index":670,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:25",{"_index":673,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:30",{"_index":662,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:35",{"_index":667,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:41",{"_index":665,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.service.ts",{"_index":684,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/users.service.ts:13",{"_index":686,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:16",{"_index":689,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:20",{"_index":690,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:24",{"_index":687,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:29",{"_index":691,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:33",{"_index":688,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/environments/environment.prod.ts",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/environments/environment.ts",{"_index":724,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/main.ts",{"_index":725,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/api/src/shared/gql",{"_index":282,"title":{},"body":{"classes/GqlArg.html":{},"classes/GqlInput.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/repository",{"_index":371,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts",{"_index":531,"title":{},"body":{"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:16",{"_index":533,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:19",{"_index":536,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:25",{"_index":537,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:30",{"_index":534,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:40",{"_index":538,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:48",{"_index":535,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arg.abstract",{"_index":279,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{}}}],["arg.abstract.ts",{"_index":283,"title":{},"body":{"classes/GqlArg.html":{},"coverage.html":{}}}],["args",{"_index":495,"title":{},"body":{"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["args/gql",{"_index":278,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/GqlArg.html":{},"coverage.html":{}}}],["args/id.args",{"_index":261,"title":{},"body":{"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUsersArgs.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{}}}],["args/id.args.ts",{"_index":298,"title":{},"body":{"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"coverage.html":{}}}],["args/id.args.ts:14",{"_index":299,"title":{},"body":{"classes/IdArg.html":{}}}],["args/id.args.ts:8",{"_index":301,"title":{},"body":{"classes/IdArrayArg.html":{}}}],["argstype",{"_index":262,"title":{},"body":{"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{}}}],["artifacts",{"_index":871,"title":{},"body":{"index.html":{}}}],["async",{"_index":65,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/RoleRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":64,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["auth.guard.ts",{"_index":287,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":291,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["auth.service",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["auth/decorators/permission.decorator",{"_index":499,"title":{},"body":{"classes/RoleResolver.html":{}}}],["auth/guards/gql",{"_index":496,"title":{},"body":{"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["auth/guards/permission",{"_index":500,"title":{},"body":{"classes/RoleResolver.html":{}}}],["authcontroller",{"_index":61,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":293,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":295,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{}}}],["authmechanism=mongodb",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authmodule",{"_index":39,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":79,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":863,"title":{},"body":{"index.html":{}}}],["autoschemafile",{"_index":193,"title":{},"body":{"modules/CoreModule.html":{}}}],["available",{"_index":939,"title":{},"body":{"modules.html":{}}}],["await",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["backend",{"_index":934,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":539,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["badrequestexception('cannot",{"_index":558,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["badrequestexception('current",{"_index":630,"title":{},"body":{"injectables/UserRepository.html":{}}}],["bcrypt",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare(data.password",{"_index":629,"title":{},"body":{"injectables/UserRepository.html":{}}}],["bcrypt.compare(password",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":695,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcryptjs",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["below",{"_index":826,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":727,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":932,"title":{},"body":{"index.html":{}}}],["browse",{"_index":938,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":738,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":798,"title":{},"body":{"index.html":{}}}],["building",{"_index":920,"title":{},"body":{"index.html":{}}}],["caching",{"_index":903,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":338,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["canactivate(context",{"_index":342,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["capabilities",{"_index":809,"title":{},"body":{"index.html":{}}}],["cert",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":865,"title":{},"body":{"index.html":{}}}],["class",{"_index":25,"title":{"classes/CoreResolver.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":201,"title":{},"body":{"classes/CoreResolver.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"overview.html":{}}}],["cli",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["cloud",{"_index":900,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":93,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":94,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":435,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_exports",{"_index":437,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_imports",{"_index":436,"title":{},"body":{"modules/RoleModule.html":{}}}],["cluster_rolemodule_providers",{"_index":438,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":643,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":644,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":645,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":867,"title":{},"body":{"index.html":{}}}],["community",{"_index":841,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":869,"title":{},"body":{"index.html":{}}}],["computation",{"_index":902,"title":{},"body":{"index.html":{}}}],["config.factory",{"_index":187,"title":{},"body":{"modules/CoreModule.html":{}}}],["config.factory.ts",{"_index":715,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":176,"title":{},"body":{"modules/CoreModule.html":{}}}],["config/mongo",{"_index":186,"title":{},"body":{"modules/CoreModule.html":{}}}],["config/validation",{"_index":178,"title":{},"body":{"modules/CoreModule.html":{}}}],["configmodule",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":188,"title":{},"body":{"modules/CoreModule.html":{}}}],["configservice",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["configservice.get",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_cert",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":175,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":914,"title":{},"body":{"index.html":{}}}],["console.log('user",{"_index":332,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["const",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"classes/Role.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(role.name",{"_index":471,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["constructor(authservice",{"_index":326,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(model",{"_index":532,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["constructor(private",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/RoleResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(reflector",{"_index":339,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["constructor(repository",{"_index":378,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["constructor(rolemodel",{"_index":451,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["constructor(rolerepository",{"_index":521,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(roleservice",{"_index":477,"title":{},"body":{"classes/RoleResolver.html":{}}}],["constructor(usermodel",{"_index":605,"title":{},"body":{"injectables/UserRepository.html":{}}}],["constructor(userrepository",{"_index":685,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(usersservice",{"_index":658,"title":{},"body":{"classes/UsersResolver.html":{}}}],["context",{"_index":292,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["context.getclass",{"_index":349,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["context.gethandler",{"_index":350,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["context.gettype",{"_index":358,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest().user",{"_index":360,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["core",{"_index":827,"title":{},"body":{"index.html":{}}}],["core.resolver",{"_index":182,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/app.controller",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["core/app.service",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["core/core.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["coremodule",{"_index":40,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coreresolver",{"_index":181,"title":{"classes/CoreResolver.html":{}},"body":{"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"coverage.html":{}}}],["coverage",{"_index":700,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":373,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(data",{"_index":382,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["createdat",{"_index":409,"title":{},"body":{"classes/Role.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{}}}],["createparamdecorator((_data",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrole",{"_index":474,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createrole(@args('createroledata",{"_index":512,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createrole(data",{"_index":479,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createroleinput",{"_index":210,"title":{"classes/CreateRoleInput.html":{}},"body":{"classes/CreateRoleInput.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["createuser",{"_index":654,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(@args('createuserdata",{"_index":678,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(data",{"_index":660,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuserinput",{"_index":231,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["currentuser",{"_index":710,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cypress",{"_index":888,"title":{},"body":{"index.html":{}}}],["data",{"_index":385,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["data.email",{"_index":621,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.id",{"_index":556,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["data.newpassword",{"_index":632,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.newpasswordconfirm",{"_index":633,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.password",{"_index":694,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.updatedat",{"_index":560,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["data?.roles?.map((roleid",{"_index":639,"title":{},"body":{"injectables/UserRepository.html":{}}}],["database_host",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":415,"title":{},"body":{"classes/Role.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["date.now",{"_index":563,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["decoded",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoded.email",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CoreResolver.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}}}],["default",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["del",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["delete",{"_index":374,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["delete(data",{"_index":386,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["deleted",{"_index":559,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["deletedat",{"_index":410,"title":{},"body":{"classes/Role.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["deleterole",{"_index":475,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleterole(@args('deleteroledata",{"_index":518,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleterole(data",{"_index":482,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleteroleinput",{"_index":247,"title":{"classes/DeleteRoleInput.html":{}},"body":{"classes/DeleteRoleInput.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["deleteuser",{"_index":655,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuser(@args('deleteuserdata",{"_index":682,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuser(data",{"_index":663,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuserinput",{"_index":254,"title":{"classes/DeleteUserInput.html":{}},"body":{"classes/DeleteUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["dep",{"_index":891,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":35,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":928,"title":{},"body":{"index.html":{}}}],["description",{"_index":216,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/Role.html":{},"classes/UpdateRoleInput.html":{}}}],["dev",{"_index":860,"title":{},"body":{"index.html":{}}}],["developers",{"_index":935,"title":{},"body":{"index.html":{}}}],["developing",{"_index":815,"title":{},"body":{"index.html":{}}}],["development",{"_index":858,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":823,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":894,"title":{},"body":{"index.html":{}}}],["different",{"_index":816,"title":{},"body":{"index.html":{}}}],["directory",{"_index":874,"title":{},"body":{"index.html":{}}}],["disable",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["dist",{"_index":873,"title":{},"body":{"index.html":{}}}],["distributed",{"_index":901,"title":{},"body":{"index.html":{}}}],["document",{"_index":429,"title":{},"body":{"classes/Role.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{}}}],["documentation",{"_index":701,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["dto/args/get",{"_index":466,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/create",{"_index":465,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/delete",{"_index":469,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/update",{"_index":463,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dynamic",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":887,"title":{},"body":{"index.html":{}}}],["email",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserArgs.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["enable",{"_index":908,"title":{},"body":{"index.html":{}}}],["end",{"_index":886,"title":{},"body":{"index.html":{}}}],["entities/role.entity",{"_index":445,"title":{},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{}}}],["entities/role.repository",{"_index":446,"title":{},"body":{"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["entities/user.entity",{"_index":651,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["entities/user.repository",{"_index":650,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["environment",{"_index":723,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eq",{"_index":548,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["error('new",{"_index":634,"title":{},"body":{"injectables/UserRepository.html":{}}}],["error('please",{"_index":624,"title":{},"body":{"injectables/UserRepository.html":{}}}],["error('user",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{}}}],["eslint",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["eslint/no",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["etc",{"_index":821,"title":{},"body":{"index.html":{}}}],["even",{"_index":912,"title":{},"body":{"index.html":{}}}],["execute",{"_index":881,"title":{},"body":{"index.html":{}}}],["execution",{"_index":905,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":290,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["experience",{"_index":931,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":200,"title":{},"body":{"modules/CoreModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{},"index.html":{}}}],["extends",{"_index":213,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{}}}],["extensible",{"_index":797,"title":{},"body":{"index.html":{}}}],["extractjwt",{"_index":311,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":318,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":320,"title":{},"body":{"injectables/JwtStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/SimpleRepository.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":796,"title":{},"body":{"index.html":{}}}],["features",{"_index":805,"title":{},"body":{"index.html":{}}}],["field",{"_index":223,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/Role.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["field()@isnotempty",{"_index":218,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/IdArg.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{}}}],["field()@isnotempty()@isemail",{"_index":237,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["field()@prop",{"_index":416,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["field(undefined",{"_index":241,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetRolesArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArrayArg.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["field(undefined)@isarray",{"_index":221,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["field(undefined)@prop({type",{"_index":412,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["field({nullable",{"_index":273,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/Role.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":866,"title":{},"body":{"index.html":{}}}],["findall",{"_index":375,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findall(data",{"_index":389,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":376,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findone(data",{"_index":392,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["flag",{"_index":876,"title":{},"body":{"index.html":{}}}],["flatten",{"_index":344,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["flatten(user.roles.map((role",{"_index":363,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["float",{"_index":206,"title":{},"body":{"classes/CoreResolver.html":{}}}],["forwardref",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["found",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{}}}],["framework",{"_index":833,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":933,"title":{},"body":{"index.html":{}}}],["frontends",{"_index":834,"title":{},"body":{"index.html":{}}}],["full",{"_index":921,"title":{},"body":{"index.html":{}}}],["function",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":786,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":895,"title":{},"body":{"index.html":{}}}],["g",{"_index":845,"title":{},"body":{"index.html":{}}}],["gain",{"_index":918,"title":{},"body":{"index.html":{}}}],["generate",{"_index":842,"title":{},"body":{"index.html":{}}}],["generated",{"_index":792,"title":{},"body":{"index.html":{}}}],["generating",{"_index":819,"title":{},"body":{"index.html":{}}}],["generation",{"_index":927,"title":{},"body":{"index.html":{}}}],["get('hello",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["getdata",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getrequest",{"_index":288,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["getrequest(context",{"_index":289,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["getroleargs",{"_index":256,"title":{"classes/GetRoleArgs.html":{}},"body":{"classes/GetRoleArgs.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["getrolesargs",{"_index":263,"title":{"classes/GetRolesArgs.html":{}},"body":{"classes/GetRolesArgs.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["getting",{"_index":788,"title":{"index.html":{}},"body":{}}],["getuserargs",{"_index":269,"title":{"classes/GetUserArgs.html":{}},"body":{"classes/GetUserArgs.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["getusersargs",{"_index":280,"title":{"classes/GetUsersArgs.html":{}},"body":{"classes/GetUsersArgs.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["gql",{"_index":300,"title":{},"body":{"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{}}}],["gqlarg",{"_index":272,"title":{"classes/GqlArg.html":{}},"body":{"classes/GetUserArgs.html":{},"classes/GqlArg.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"coverage.html":{}}}],["gqlauthguard",{"_index":285,"title":{"classes/GqlAuthGuard.html":{}},"body":{"classes/GqlAuthGuard.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["gqlexecutioncontext",{"_index":294,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext().req",{"_index":296,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext().req.user",{"_index":361,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["gqlinput",{"_index":214,"title":{"classes/GqlInput.html":{}},"body":{"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/GqlInput.html":{},"classes/IdInput.html":{},"coverage.html":{}}}],["graph",{"_index":892,"title":{},"body":{"index.html":{},"modules.html":{}}}],["graphql",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["graphqlmodule",{"_index":179,"title":{},"body":{"modules/CoreModule.html":{}}}],["graphqlmodule.forroot",{"_index":192,"title":{},"body":{"modules/CoreModule.html":{}}}],["guard",{"_index":333,"title":{"guards/PermissionGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":501,"title":{},"body":{"classes/RoleResolver.html":{}}}],["guard.service.ts",{"_index":337,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["guard.service.ts:10",{"_index":343,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guard.service.ts:7",{"_index":341,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guards",{"_index":335,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guards/local",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["help",{"_index":896,"title":{},"body":{"index.html":{}}}],["http",{"_index":359,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":862,"title":{},"body":{"index.html":{}}}],["iapiresource",{"_index":542,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["id",{"_index":250,"title":{},"body":{"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetUserArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"injectables/UserRepository.html":{}}}],["idarg",{"_index":259,"title":{"classes/IdArg.html":{}},"body":{"classes/GetRoleArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["idarg:9",{"_index":260,"title":{},"body":{"classes/GetRoleArgs.html":{}}}],["idarrayarg",{"_index":265,"title":{"classes/IdArrayArg.html":{}},"body":{"classes/GetRolesArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["idarrayarg:9",{"_index":268,"title":{},"body":{"classes/GetRolesArgs.html":{},"classes/GetUsersArgs.html":{}}}],["identifier",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["idinput",{"_index":249,"title":{"classes/IdInput.html":{}},"body":{"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/IdInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["idinput:10",{"_index":567,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["idinput:9",{"_index":252,"title":{},"body":{"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["ids",{"_index":266,"title":{},"body":{"classes/GetRolesArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{}}}],["ignoreexpiration",{"_index":319,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":346,"title":{},"body":{"guards/PermissionGuard.html":{},"classes/Role.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["imported",{"_index":856,"title":{},"body":{"index.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["include",{"_index":818,"title":{},"body":{"index.html":{}}}],["incorrect",{"_index":631,"title":{},"body":{"injectables/UserRepository.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":251,"title":{},"body":{"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUsersArgs.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{}}}],["inject",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/JwtStrategy.html":{}}}],["inject(forwardref",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["injectable",{"_index":55,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":460,"title":{},"body":{"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["injectmodel(role.name",{"_index":618,"title":{},"body":{"injectables/UserRepository.html":{}}}],["injectmodel(user.name",{"_index":617,"title":{},"body":{"injectables/UserRepository.html":{}}}],["input.abstract",{"_index":230,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/IdInput.html":{}}}],["input.abstract.ts",{"_index":297,"title":{},"body":{"classes/GqlInput.html":{},"coverage.html":{}}}],["inputs/gql",{"_index":229,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/GqlInput.html":{},"coverage.html":{}}}],["inputs/id.input",{"_index":253,"title":{},"body":{"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{}}}],["inputs/id.input.ts",{"_index":302,"title":{},"body":{"classes/IdInput.html":{},"coverage.html":{}}}],["inputs/id.input.ts:4",{"_index":303,"title":{},"body":{"classes/IdInput.html":{}}}],["inputtype",{"_index":224,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{}}}],["instantly",{"_index":917,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":806,"title":{},"body":{"index.html":{}}}],["interfaces",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["irole",{"_index":407,"title":{},"body":{"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["isarray",{"_index":225,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/GetRolesArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateRoleInput.html":{}}}],["isemail",{"_index":246,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["isglobal",{"_index":189,"title":{},"body":{"modules/CoreModule.html":{}}}],["isnotempty",{"_index":226,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{}}}],["isoptional",{"_index":277,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/UpdateRoleInput.html":{}}}],["items",{"_index":507,"title":{},"body":{"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["items'})@permission('browse')@useguards(gqlauthguard",{"_index":489,"title":{},"body":{"classes/RoleResolver.html":{}}}],["items'})@useguards(gqlauthguard",{"_index":672,"title":{},"body":{"classes/UsersResolver.html":{}}}],["itemsandlist",{"_index":243,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["itemsandlist'})@isoptional()@isarray",{"_index":569,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["itemsandlist'})@prop({type",{"_index":592,"title":{},"body":{"classes/User.html":{}}}],["iupdatedat",{"_index":543,"title":{},"body":{"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{}}}],["iuser",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["jest",{"_index":883,"title":{},"body":{"index.html":{}}}],["joi",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["joi.number().default(3000",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('development",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":304,"title":{"classes/JwtAuthGuard.html":{}},"body":{"classes/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":317,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":95,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["learn",{"_index":898,"title":{},"body":{"index.html":{}}}],["lib",{"_index":854,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":820,"title":{},"body":{"index.html":{}}}],["library",{"_index":852,"title":{},"body":{"index.html":{}}}],["line",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["literal",{"_index":309,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["load",{"_index":191,"title":{},"body":{"modules/CoreModule.html":{}}}],["local",{"_index":324,"title":{},"body":{"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":81,"title":{"classes/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":96,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":66,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@req",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":67,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["many",{"_index":812,"title":{},"body":{"index.html":{}}}],["map((permission",{"_index":365,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["match",{"_index":636,"title":{},"body":{"injectables/UserRepository.html":{}}}],["matching",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["metadata",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["minute",{"_index":802,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":785,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":452,"title":{},"body":{"injectables/RoleRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["module",{"_index":32,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":34,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb+srv://${configservice.get('database_user')}@${configservice.get",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose",{"_index":430,"title":{},"body":{"classes/Role.html":{},"injectables/RoleRepository.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"dependencies.html":{}}}],["mongooseconfig",{"_index":185,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongooseconfig.imports",{"_index":196,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseconfig.mongooseconfigfactory",{"_index":198,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseconfig.providers",{"_index":199,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseconfigfactory",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":183,"title":{},"body":{"modules/CoreModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":447,"title":{},"body":{"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":195,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseschema",{"_index":428,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["mongooseschema.types.objectid",{"_index":432,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["more",{"_index":899,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":850,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":494,"title":{},"body":{"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["mutation(undefined",{"_index":661,"title":{},"body":{"classes/UsersResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard",{"_index":664,"title":{},"body":{"classes/UsersResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('create",{"_index":480,"title":{},"body":{"classes/RoleResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('delete",{"_index":483,"title":{},"body":{"classes/RoleResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('update",{"_index":492,"title":{},"body":{"classes/RoleResolver.html":{}}}],["name",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateRoleInput.html":{},"classes/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["navigate",{"_index":861,"title":{},"body":{"index.html":{}}}],["nest",{"_index":836,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":345,"title":{},"body":{"guards/PermissionGuard.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":180,"title":{},"body":{"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"guards/PermissionGuard.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":184,"title":{},"body":{"modules/CoreModule.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{},"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"index.html":{}}}],["newpassword",{"_index":574,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["newpasswordconfirm",{"_index":575,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["next",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["ng",{"_index":829,"title":{},"body":{"index.html":{}}}],["node",{"_index":839,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notfoundexception",{"_index":540,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["nrwl/angular",{"_index":749,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nrwl/angular:app",{"_index":846,"title":{},"body":{"index.html":{}}}],["nrwl/angular:lib",{"_index":853,"title":{},"body":{"index.html":{}}}],["nrwl/express",{"_index":838,"title":{},"body":{"index.html":{}}}],["nrwl/nest",{"_index":837,"title":{},"body":{"index.html":{}}}],["nrwl/node",{"_index":840,"title":{},"body":{"index.html":{}}}],["nrwl/react",{"_index":831,"title":{},"body":{"index.html":{}}}],["nrwl/web",{"_index":835,"title":{},"body":{"index.html":{}}}],["null",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["nullable",{"_index":242,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}}}],["nx",{"_index":794,"title":{},"body":{"index.html":{}}}],["nx/api",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["nx/mylib",{"_index":857,"title":{},"body":{"index.html":{}}}],["nx’s",{"_index":925,"title":{},"body":{"index.html":{}}}],["object",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(data).length",{"_index":544,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["objecttype",{"_index":424,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["om",{"_index":234,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["optional",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/IdArrayArg.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["order",{"_index":907,"title":{},"body":{"index.html":{}}}],["out",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":940,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":730,"title":{"dependencies.html":{}},"body":{}}],["pairs",{"_index":906,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["parseint(process.env.port",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":313,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":314,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":315,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["passwords",{"_index":635,"title":{},"body":{"injectables/UserRepository.html":{}}}],["payload",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":322,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["permission",{"_index":497,"title":{},"body":{"classes/RoleResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission('browse",{"_index":508,"title":{},"body":{"classes/RoleResolver.html":{}}}],["permission('create",{"_index":511,"title":{},"body":{"classes/RoleResolver.html":{}}}],["permission('delete",{"_index":517,"title":{},"body":{"classes/RoleResolver.html":{}}}],["permission('read",{"_index":504,"title":{},"body":{"classes/RoleResolver.html":{}}}],["permission('update",{"_index":514,"title":{},"body":{"classes/RoleResolver.html":{}}}],["permission.replace(/^\\*::/g",{"_index":366,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["permissionguard",{"_index":334,"title":{"guards/PermissionGuard.html":{}},"body":{"guards/PermissionGuard.html":{},"classes/RoleResolver.html":{},"coverage.html":{}}}],["permissions",{"_index":217,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/Role.html":{},"classes/UpdateRoleInput.html":{}}}],["playground",{"_index":194,"title":{},"body":{"modules/CoreModule.html":{}}}],["plugins",{"_index":813,"title":{},"body":{"index.html":{}}}],["plus",{"_index":929,"title":{},"body":{"index.html":{}}}],["populate('roles",{"_index":623,"title":{},"body":{"injectables/UserRepository.html":{}}}],["port",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["preferred",{"_index":923,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":63,"title":{},"body":{"controllers/AuthController.html":{}}}],["private",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserRepository.html":{}}}],["process.env.jwt_expires",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_secret",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.node_env",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.uptime",{"_index":209,"title":{},"body":{"classes/CoreResolver.html":{}}}],["prod",{"_index":875,"title":{},"body":{"index.html":{}}}],["production",{"_index":877,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":791,"title":{},"body":{"index.html":{}}}],["project=my",{"_index":870,"title":{},"body":{"index.html":{}}}],["projects",{"_index":825,"title":{},"body":{"index.html":{}}}],["promise",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["promise.all(data.ids.map((id",{"_index":545,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["promise.reject(new",{"_index":552,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["prop",{"_index":425,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["properties",{"_index":215,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/Role.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["provide",{"_index":625,"title":{},"body":{"injectables/UserRepository.html":{}}}],["providers",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["proxy.service",{"_index":529,"title":{},"body":{"injectables/RoleService.html":{}}}],["proxy.service.ts",{"_index":372,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"coverage.html":{}}}],["proxy.service.ts:22",{"_index":380,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:25",{"_index":384,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:29",{"_index":391,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:33",{"_index":394,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:37",{"_index":397,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:41",{"_index":388,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["public",{"_index":450,"title":{},"body":{"injectables/RoleRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["query",{"_index":207,"title":{},"body":{"classes/CoreResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["query(undefined",{"_index":204,"title":{},"body":{"classes/CoreResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["quick",{"_index":800,"title":{},"body":{"index.html":{}}}],["rapidly",{"_index":909,"title":{},"body":{"index.html":{}}}],["react",{"_index":830,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/RepositoryProxyService.html":{},"classes/RoleResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["ref",{"_index":593,"title":{},"body":{"classes/User.html":{}}}],["reflect",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":340,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["reload",{"_index":864,"title":{},"body":{"index.html":{}}}],["repository",{"_index":381,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["repositoryproxyservice",{"_index":370,"title":{"injectables/RepositoryProxyService.html":{}},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["repositoryproxyservice:25",{"_index":523,"title":{},"body":{"injectables/RoleService.html":{}}}],["repositoryproxyservice:29",{"_index":525,"title":{},"body":{"injectables/RoleService.html":{}}}],["repositoryproxyservice:33",{"_index":526,"title":{},"body":{"injectables/RoleService.html":{}}}],["repositoryproxyservice:37",{"_index":527,"title":{},"body":{"injectables/RoleService.html":{}}}],["repositoryproxyservice:41",{"_index":524,"title":{},"body":{"injectables/RoleService.html":{}}}],["req",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":68,"title":{},"body":{"controllers/AuthController.html":{}}}],["require('bcryptjs",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":356,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities",{"_index":351,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities?.length",{"_index":353,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities[0]}::${requiredresource[0",{"_index":357,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities[0]}::`).replace(/::\\*$/g",{"_index":367,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource",{"_index":347,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource?.length",{"_index":355,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource[0",{"_index":368,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requires",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["res",{"_index":549,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["res?.deletedat",{"_index":551,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["reset",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolver",{"_index":208,"title":{},"body":{"classes/CoreResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["resource",{"_index":498,"title":{},"body":{"classes/RoleResolver.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resource('roles",{"_index":502,"title":{},"body":{"classes/RoleResolver.html":{}}}],["resources",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["results",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/RoleResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/GqlAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":405,"title":{"classes/Role.html":{}},"body":{"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["role(@args",{"_index":505,"title":{},"body":{"classes/RoleResolver.html":{}}}],["role(data",{"_index":485,"title":{},"body":{"classes/RoleResolver.html":{}}}],["role.args",{"_index":468,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["role.args.ts",{"_index":258,"title":{},"body":{"classes/GetRoleArgs.html":{},"coverage.html":{}}}],["role.entity",{"_index":461,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["role.input",{"_index":464,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["role.input.ts",{"_index":212,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/DeleteRoleInput.html":{},"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["role.input.ts:13",{"_index":219,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.input.ts:15",{"_index":568,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:17",{"_index":222,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.input.ts:20",{"_index":566,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:25",{"_index":570,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:27",{"_index":571,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:9",{"_index":220,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.name",{"_index":448,"title":{},"body":{"modules/RoleModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["role.permissions",{"_index":364,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["role.resolver",{"_index":444,"title":{},"body":{"modules/RoleModule.html":{}}}],["role.service",{"_index":442,"title":{},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{}}}],["role/entities/role.entity",{"_index":597,"title":{},"body":{"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{}}}],["role/role.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["roledocument",{"_index":431,"title":{},"body":{"classes/Role.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":454,"title":{},"body":{"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["rolemodule",{"_index":41,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["rolerepository",{"_index":439,"title":{"injectables/RoleRepository.html":{}},"body":{"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["roleresolver",{"_index":443,"title":{"classes/RoleResolver.html":{}},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{},"coverage.html":{}}}],["roles",{"_index":235,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RoleResolver.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["roles(@args",{"_index":509,"title":{},"body":{"classes/RoleResolver.html":{}}}],["roles(data",{"_index":488,"title":{},"body":{"classes/RoleResolver.html":{}}}],["roles.args",{"_index":467,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["roles.args.ts",{"_index":264,"title":{},"body":{"classes/GetRolesArgs.html":{},"coverage.html":{}}}],["roleschema",{"_index":433,"title":{},"body":{"classes/Role.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleservice",{"_index":440,"title":{"injectables/RoleService.html":{}},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":844,"title":{},"body":{"index.html":{}}}],["running",{"_index":878,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":777,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":851,"title":{},"body":{"index.html":{}}}],["save",{"_index":555,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["saving",{"_index":915,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":868,"title":{},"body":{"index.html":{}}}],["schema",{"_index":426,"title":{},"body":{"classes/Role.html":{},"modules/RoleModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":427,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(role",{"_index":434,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":602,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schematypes",{"_index":598,"title":{},"body":{"classes/User.html":{}}}],["schematypes.objectid",{"_index":600,"title":{},"body":{"classes/User.html":{}}}],["secret",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":321,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["see",{"_index":893,"title":{},"body":{"index.html":{}}}],["serve",{"_index":859,"title":{},"body":{"index.html":{}}}],["server",{"_index":752,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["setmetadata('abilities",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata('resources",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shareable",{"_index":855,"title":{},"body":{"index.html":{}}}],["shared/gql",{"_index":228,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{}}}],["shared/proxies/repository",{"_index":528,"title":{},"body":{"injectables/RoleService.html":{}}}],["shared/proxies/simple.repository",{"_index":470,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["showing",{"_index":804,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple.repository",{"_index":399,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["simplerepository",{"_index":398,"title":{"injectables/SimpleRepository.html":{}},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["simplerepository:19",{"_index":457,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["simplerepository:25",{"_index":458,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["simplerepository:30",{"_index":455,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["simplerepository:40",{"_index":459,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["simplerepository:48",{"_index":456,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["smart",{"_index":795,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sslcert",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sslkey",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stack",{"_index":922,"title":{},"body":{"index.html":{}}}],["start",{"_index":801,"title":{},"body":{"index.html":{}}}],["started",{"_index":789,"title":{"index.html":{}},"body":{}}],["statements",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":872,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":312,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"classes/Role.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["super",{"_index":316,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(rolemodel",{"_index":472,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["super(rolerepository",{"_index":530,"title":{},"body":{"injectables/RoleService.html":{}}}],["support",{"_index":936,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":811,"title":{},"body":{"index.html":{}}}],["svg",{"_index":937,"title":{},"body":{"modules.html":{}}}],["system",{"_index":799,"title":{},"body":{"index.html":{}}}],["szakszolg",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["szakszolgnx",{"_index":790,"title":{},"body":{"index.html":{}}}],["table",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":904,"title":{},"body":{"index.html":{}}}],["tcreateinput",{"_index":383,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{}}}],["tdeleteinput",{"_index":387,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{}}}],["teams",{"_index":913,"title":{},"body":{"index.html":{}}}],["test",{"_index":824,"title":{},"body":{"index.html":{}}}],["test').required",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":880,"title":{},"body":{"index.html":{}}}],["tfindmanyargs",{"_index":390,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{}}}],["tfindoneargs",{"_index":393,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{}}}],["this.appservice.getdata",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login((req",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validate(email",{"_index":331,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.configservice.get('jwt_expires",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_secret",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.findone",{"_index":546,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["this.jwtservice.sign(payload",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.model",{"_index":553,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.find",{"_index":547,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findbyid(data.id",{"_index":550,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findbyidandupdate(data.id",{"_index":562,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findbyidandupdate(id",{"_index":561,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.reflector.get('abilities",{"_index":352,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.reflector.getallandmerge('resources",{"_index":348,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.repository.create(data",{"_index":400,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.delete(data",{"_index":404,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.findall(data",{"_index":401,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.findone(data",{"_index":402,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.update(data",{"_index":403,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.roleservice.create(data",{"_index":513,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.delete(data",{"_index":519,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.findall(data",{"_index":510,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.findone(data",{"_index":506,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.update(data",{"_index":516,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.usermodel",{"_index":627,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.find",{"_index":619,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyid(data.id",{"_index":628,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyid(data.id).populate('roles",{"_index":620,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyidandupdate(data.id",{"_index":642,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findone",{"_index":622,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.userrepository.create(data",{"_index":697,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.delete(data",{"_index":699,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findall(data",{"_index":692,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone(data",{"_index":693,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.update(data",{"_index":698,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.findone",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.usersservice.create(data",{"_index":679,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.delete(data",{"_index":683,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findall(data",{"_index":677,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findone(data",{"_index":675,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.update(data",{"_index":681,"title":{},"body":{"classes/UsersResolver.html":{}}}],["throw",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserRepository.html":{}}}],["time",{"_index":916,"title":{},"body":{"index.html":{}}}],["times",{"_index":911,"title":{},"body":{"index.html":{}}}],["token",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["tools",{"_index":764,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["trepository",{"_index":379,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["true",{"_index":190,"title":{},"body":{"modules/CoreModule.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"guards/PermissionGuard.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"miscellaneous/variables.html":{}}}],["true})@isarray",{"_index":267,"title":{},"body":{"classes/GetRolesArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArrayArg.html":{}}}],["true})@isemail",{"_index":576,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["true})@isoptional",{"_index":274,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["true})@isoptional()@isnotempty",{"_index":565,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["true})@prop",{"_index":418,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["true})@useguards(gqlauthguard",{"_index":669,"title":{},"body":{"classes/UsersResolver.html":{}}}],["true})@useguards(gqlauthguard)@permission('read",{"_index":486,"title":{},"body":{"classes/RoleResolver.html":{}}}],["tslib",{"_index":779,"title":{},"body":{"dependencies.html":{}}}],["tupdateinput",{"_index":396,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{}}}],["tutorial",{"_index":807,"title":{},"body":{"index.html":{}}}],["type",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":945,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":541,"title":{},"body":{"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"index.html":{}}}],["types.objectid",{"_index":554,"title":{},"body":{"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["types.objectid(roleid",{"_index":640,"title":{},"body":{"injectables/UserRepository.html":{}}}],["typescript",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":329,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":413,"title":{},"body":{"classes/Role.html":{},"classes/User.html":{}}}],["understand",{"_index":890,"title":{},"body":{"index.html":{}}}],["unified",{"_index":930,"title":{},"body":{"index.html":{}}}],["unit",{"_index":879,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":910,"title":{},"body":{"index.html":{}}}],["update",{"_index":377,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["update(data",{"_index":395,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["updatedat",{"_index":411,"title":{},"body":{"classes/Role.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["updaterole",{"_index":476,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updaterole(@args('updateroledata",{"_index":515,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updaterole(data",{"_index":491,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updateroleinput",{"_index":462,"title":{"classes/UpdateRoleInput.html":{}},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["updateuser",{"_index":656,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuser(@args('updateuserdata",{"_index":680,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuser(data",{"_index":666,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuserinput",{"_index":572,"title":{"classes/UpdateUserInput.html":{}},"body":{"classes/UpdateUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uptime",{"_index":203,"title":{},"body":{"classes/CoreResolver.html":{}}}],["uri",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":848,"title":{},"body":{"index.html":{}}}],["usefactory",{"_index":197,"title":{},"body":{"modules/CoreModule.html":{}}}],["useguards",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["useguards(gqlauthguard",{"_index":503,"title":{},"body":{"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["useguards(localauthguard",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":130,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["user(@args",{"_index":674,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user(data",{"_index":668,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user._id",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.args",{"_index":615,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.args.ts",{"_index":271,"title":{},"body":{"classes/GetUserArgs.html":{},"coverage.html":{}}}],["user.args.ts:13",{"_index":275,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["user.args.ts:9",{"_index":276,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["user.decorator.ts",{"_index":709,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.entity",{"_index":613,"title":{},"body":{"injectables/UserRepository.html":{}}}],["user.input",{"_index":614,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.input.ts",{"_index":233,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["user.input.ts:10",{"_index":238,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:13",{"_index":577,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:14",{"_index":245,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:16",{"_index":584,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:18",{"_index":240,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:20",{"_index":581,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:21",{"_index":239,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:23",{"_index":578,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:24",{"_index":244,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:26",{"_index":579,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:29",{"_index":580,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:32",{"_index":582,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:34",{"_index":583,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.name",{"_index":652,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{}}}],["user.roles",{"_index":638,"title":{},"body":{"injectables/UserRepository.html":{}}}],["user.save",{"_index":641,"title":{},"body":{"injectables/UserRepository.html":{}}}],["userdocument",{"_index":599,"title":{},"body":{"classes/User.html":{},"injectables/UserRepository.html":{},"miscellaneous/typealiases.html":{}}}],["usermodel",{"_index":607,"title":{},"body":{"injectables/UserRepository.html":{}}}],["username",{"_index":236,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["usernamefield",{"_index":330,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userpermissions",{"_index":362,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["userpermissions.includes(required",{"_index":369,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["userrepository",{"_index":603,"title":{"injectables/UserRepository.html":{}},"body":{"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":657,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users(@args",{"_index":676,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users(data",{"_index":671,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users.args",{"_index":616,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["users.args.ts",{"_index":281,"title":{},"body":{"classes/GetUsersArgs.html":{},"coverage.html":{}}}],["users.resolver",{"_index":649,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":647,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["users/users.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{}}}],["users/users.service",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userschema",{"_index":601,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["usersmodule",{"_index":42,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersresolver",{"_index":648,"title":{"classes/UsersResolver.html":{}},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["usersservice",{"_index":123,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":793,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":781,"title":{},"body":{"dependencies.html":{}}}],["validate",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":308,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationschema",{"_index":177,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":227,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"dependencies.html":{}}}],["value",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["variable",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":949,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{}}}],["verify(token",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["via",{"_index":882,"title":{},"body":{"index.html":{}}}],["video",{"_index":803,"title":{},"body":{"index.html":{}}}],["visit",{"_index":897,"title":{},"body":{"index.html":{}}}],["web",{"_index":832,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["well",{"_index":822,"title":{},"body":{"index.html":{}}}],["workspace",{"_index":810,"title":{},"body":{"index.html":{}}}],["x509&ssl=true&retrywrites=true&w=majority",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":783,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/core/app.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Message\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\nimport { Message } from '@szakszolg-nx/api-interfaces'\n\nimport { AppService } from './app.service'\n\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get('hello')\n    getData(): Message {\n        return this.appService.getData()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { AppController } from './core/app.controller'\nimport { AppService } from './core/app.service'\nimport { CoreModule } from './core/core.module'\nimport { UsersModule } from './users/users.module'\nimport { AuthModule } from './auth/auth.module'\nimport { RoleModule } from './role/role.module'\n\n@Module({\n    imports: [CoreModule, UsersModule, AuthModule, RoleModule],\n    controllers: [AppController],\n    providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/core/app.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Message\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { Message } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class AppService {\n    getData(): Message {\n        return { message: 'Welcome to api!' }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Req, UseGuards } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { LocalAuthGuard } from './guards/local-auth.guard'\nimport { Request } from 'express'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService) {}\n\n    @UseGuards(LocalAuthGuard)\n    @Post('login')\n    async login(@Req() req: Request) {\n        return await this.authService.login((req as any).user as IUser)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { UsersModule } from '../users/users.module'\nimport { JwtModule } from '@nestjs/jwt'\nimport { ConfigModule } from '@nestjs/config'\nimport { PassportModule } from '@nestjs/passport'\nimport { JwtStrategy } from './strategies/jwt.strategy'\nimport { LocalStrategy } from './strategies/local.strategy'\nimport { AuthController } from './auth.controller'\n\n@Module({\n    imports: [\n        ConfigModule,\n        forwardRef(() => UsersModule),\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        JwtModule.register({\n            secret: process.env.JWT_SECRET,\n            signOptions: {\n                expiresIn: process.env.JWT_EXPIRES || '7d',\n            },\n        }),\n    ],\n    controllers: [AuthController],\n    providers: [AuthService, JwtStrategy, LocalStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Async\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verify\n                        \n                    \n                \n            \n            \n                \n                    \n                    verify(token: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\nimport { UsersService } from '../users/users.service'\nimport { JwtService } from '@nestjs/jwt'\nimport { ConfigService } from '@nestjs/config'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        @Inject(forwardRef(() => UsersService))\n        private readonly userService: UsersService,\n        private readonly jwtService: JwtService,\n        private readonly configService: ConfigService,\n    ) {}\n\n    async validate(email: string, password: string): Promise {\n        const user = await this.userService.findOne({ email })\n        return user && (await bcrypt.compare(password, user.password)) ? user : null\n    }\n\n    async login(user: IUser) {\n        const payload = { email: user.email, sub: user._id }\n        return {\n            access_token: this.jwtService.sign(payload, {\n                secret: this.configService.get('JWT_SECRET'),\n                expiresIn: this.configService.get('JWT_EXPIRES') || '7d',\n            }),\n        }\n    }\n\n    async verify(token: string) {\n        const decoded = this.jwtService.verify(token, { secret: this.configService.get('JWT_SECRET')! })\n        const user = await this.userService.findOne({ email: decoded.email })\n        if (!user) throw new Error('User not found')\n        return user\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { configuration } from './config/configuration'\nimport { validationSchema } from './config/validation'\nimport { GraphQLModule } from '@nestjs/graphql'\nimport { CoreResolver } from './core.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { mongooseConfig } from './config/mongo-config.factory'\n\n@Module({\n    imports: [\n        ConfigModule.forRoot({\n            isGlobal: true,\n            load: [configuration],\n            validationSchema,\n        }),\n        GraphQLModule.forRoot({\n            autoSchemaFile: true,\n            playground: true,\n        }),\n        MongooseModule.forRootAsync({\n            imports: mongooseConfig.imports,\n            useFactory: mongooseConfig.mongooseConfigFactory,\n            inject: mongooseConfig.providers,\n        }),\n    ],\n    controllers: [],\n    providers: [CoreResolver],\n    exports: [],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoreResolver.html":{"url":"classes/CoreResolver.html","title":"class - CoreResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoreResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/core.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                uptime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        uptime\n                        \n                    \n                \n            \n            \n                \nuptime()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/core/core.resolver.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Float, Query, Resolver } from '@nestjs/graphql'\n\n@Resolver()\nexport class CoreResolver {\n    @Query(() => Float)\n    uptime() {\n        return process.uptime()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleInput.html":{"url":"classes/CreateRoleInput.html","title":"class - CreateRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/create-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateRoleInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    name: string\n\n    @Field()\n    @IsNotEmpty()\n    description: string\n\n    @Field(() => [String])\n    @IsArray()\n    permissions: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/create-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsEmail, IsNotEmpty } from 'class-validator'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateUserInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @Field()\n    @IsNotEmpty()\n    username: string\n\n    @Field()\n    @IsNotEmpty()\n    password: string\n\n    @Field()\n    om?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    roles?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteRoleInput.html":{"url":"classes/DeleteRoleInput.html","title":"class - DeleteRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/delete-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteRoleInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserInput.html":{"url":"classes/DeleteUserInput.html","title":"class - DeleteUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/delete-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteUserInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRoleArgs.html":{"url":"classes/GetRoleArgs.html","title":"class - GetRoleArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRoleArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/args/get-role.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetRoleArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRolesArgs.html":{"url":"classes/GetRolesArgs.html","title":"class - GetRolesArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRolesArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/args/get-roles.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetRolesArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserArgs.html":{"url":"classes/GetUserArgs.html","title":"class - GetUserArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/args/get-user.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/args/get-user.args.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/args/get-user.args.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field } from '@nestjs/graphql'\nimport { IsOptional } from 'class-validator'\nimport { GqlArg } from '../../../../shared/gql-args/gql-arg.abstract'\n\n@ArgsType()\nexport class GetUserArgs extends GqlArg {\n    @Field({ nullable: true })\n    @IsOptional()\n    id?: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    email?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersArgs.html":{"url":"classes/GetUsersArgs.html","title":"class - GetUsersArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/args/get-users.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetUsersArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlArg.html":{"url":"classes/GqlArg.html","title":"class - GqlArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/gql-arg.abstract.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType } from '@nestjs/graphql'\n\n@ArgsType()\nexport abstract class GqlArg {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlAuthGuard.html":{"url":"classes/GqlAuthGuard.html","title":"class - GqlAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/gql-auth.guard.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRequest\n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/guards/gql-auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\nimport {ExecutionContext} from \"@nestjs/common\";\nimport {GqlExecutionContext} from \"@nestjs/graphql\";\n\nexport class GqlAuthGuard extends AuthGuard('jwt') {\n    getRequest(context: ExecutionContext) {\n        return GqlExecutionContext.create(context).getContext().req\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlInput.html":{"url":"classes/GqlInput.html","title":"class - GqlInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-inputs/gql-input.abstract.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class GqlInput {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdArg.html":{"url":"classes/IdArg.html","title":"class - IdArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/id.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-args/id.args.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlArg } from './gql-arg.abstract'\n\nexport class IdArrayArg extends GqlArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\nexport class IdArg extends GqlArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdArrayArg.html":{"url":"classes/IdArrayArg.html","title":"class - IdArrayArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdArrayArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/id.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-args/id.args.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlArg } from './gql-arg.abstract'\n\nexport class IdArrayArg extends GqlArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\nexport class IdArg extends GqlArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdInput.html":{"url":"classes/IdInput.html","title":"class - IdInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-inputs/id.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-inputs/id.input.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GqlInput } from './gql-input.abstract'\n\nexport class IdInput extends GqlInput {\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtAuthGuard.html":{"url":"classes/JwtAuthGuard.html","title":"class - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\n\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/strategies/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/strategies/jwt.strategy.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { forwardRef, Inject, Injectable } from '@nestjs/common'\nimport { UsersService } from '../../users/users.service'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        @Inject(forwardRef(() => UsersService))\n        private readonly userService: UsersService,\n    ) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: process.env.JWT_SECRET,\n        })\n    }\n\n    async validate(payload: { email: string; sub: string }) {\n        return this.userService.findOne({ email: payload.email })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalAuthGuard.html":{"url":"classes/LocalAuthGuard.html","title":"class - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\n\nexport class LocalAuthGuard extends AuthGuard\n('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/strategies/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/strategies/local.strategy.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport'\nimport { Strategy } from 'passport-local'\nimport { AuthService } from '../auth.service'\nimport { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private readonly authService: AuthService) {\n        super({ usernameField: 'email' })\n    }\n\n    async validate(email: string, password: string): Promise {\n        const user = await this.authService.validate(email, password)\n        console.log('user', user)\n        if (!user) {\n            throw new UnauthorizedException()\n        }\n        return user\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PermissionGuard.html":{"url":"guards/PermissionGuard.html","title":"guard - PermissionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PermissionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/api/src/app/auth/guards/permission-guard.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/guards/permission-guard.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/guards/permission-guard.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, flatten, Injectable } from '@nestjs/common'\nimport { Reflector } from '@nestjs/core'\nimport { GqlExecutionContext } from '@nestjs/graphql'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class PermissionGuard implements CanActivate {\n    constructor(private reflector: Reflector) {}\n\n    canActivate(context: ExecutionContext) {\n        const requiredResource = this.reflector.getAllAndMerge('resources', [\n            context.getClass(),\n            context.getHandler(),\n        ])\n        const requiredAbilities = this.reflector.get('abilities', context.getHandler())\n        if (requiredAbilities?.length == 0 && requiredResource?.length == 0) return true\n        const required = `${requiredAbilities[0]}::${requiredResource[0]}`\n        let user: IUser\n        if (context.getType() === 'http') user = context.switchToHttp().getRequest().user\n        user = GqlExecutionContext.create(context).getContext().req.user\n        if (!user) return false\n        const userPermissions = flatten(user.roles.map((role) => role.permissions ?? [])).map((permission: string) =>\n            permission.replace(/^\\*::/g, `${requiredAbilities[0]}::`).replace(/::\\*$/g, `::${requiredResource[0]}`),\n        )\n\n        return userPermissions.includes(required)\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepositoryProxyService.html":{"url":"injectables/RepositoryProxyService.html","title":"injectable - RepositoryProxyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepositoryProxyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/proxies/repository-proxy.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: TRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    TRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { SimpleRepository } from './simple.repository'\nimport { IdArg, IdArrayArg } from '../gql-args/id.args'\nimport { IdInput } from '../gql-inputs/id.input'\n\n@Injectable()\nexport class RepositoryProxyService,\n    TFindOneArgs extends IdArg,\n    TFindManyArgs extends IdArrayArg,\n    TCreateInput,\n    TUpdateInput extends IdInput,\n    TDeleteInput extends IdInput,\n> {\n    constructor(private readonly repository: TRepository) {}\n\n    create(data: TCreateInput) {\n        return this.repository.create(data)\n    }\n\n    findAll(data: TFindManyArgs) {\n        return this.repository.findAll(data)\n    }\n\n    findOne(data: TFindOneArgs) {\n        return this.repository.findOne(data)\n    }\n\n    update(data: TUpdateInput) {\n        return this.repository.update(data)\n    }\n\n    delete(data: TDeleteInput) {\n        return this.repository.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/entities/role.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IRole\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type RoleDocument = IRole & Document\n\n@ObjectType()\n@Schema()\nexport class Role implements IRole {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    description: string\n\n    @Field()\n    @Prop()\n    name: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    permissions: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_imports\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nAuthModule->RoleModule\n\n\n\n\n\nRoleRepository \n\nRoleRepository \n\nRoleRepository  -->\n\nRoleModule->RoleRepository \n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nRoleRepository\n\nRoleRepository\n\nRoleModule -->\n\nRoleRepository->RoleModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepository\n                        \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleRepository\n                        \n                        \n                            RoleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common'\nimport { RoleService } from './role.service'\nimport { RoleResolver } from './role.resolver'\nimport { AuthModule } from '../auth/auth.module'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Role, RoleSchema } from './entities/role.entity'\nimport { RoleRepository } from './entities/role.repository'\nimport { UsersModule } from '../users/users.module'\n\n@Module({\n    imports: [\n        AuthModule,\n        forwardRef(() => UsersModule),\n        MongooseModule.forFeature([\n            {\n                name: Role.name,\n                schema: RoleSchema,\n            },\n        ]),\n    ],\n    providers: [RoleResolver, RoleService, RoleRepository],\n    exports: [RoleService, RoleRepository],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepository.html":{"url":"injectables/RoleRepository.html","title":"injectable - RoleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/entities/role.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/entities/role.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Role, RoleDocument } from './role.entity'\nimport { Model } from 'mongoose'\nimport { UpdateRoleInput } from '../dto/inputs/update-role.input'\nimport { CreateRoleInput } from '../dto/inputs/create-role.input'\nimport { GetRolesArgs } from '../dto/args/get-roles.args'\nimport { GetRoleArgs } from '../dto/args/get-role.args'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { DeleteRoleInput } from '../dto/inputs/delete-role.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class RoleRepository extends SimpleRepository {\n    constructor(@InjectModel(Role.name) roleModel: Model) {\n        super(roleModel)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleResolver.html":{"url":"classes/RoleResolver.html","title":"class - RoleResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/role.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createRole\n                            \n                            \n                                deleteRole\n                            \n                            \n                                role\n                            \n                            \n                                roles\n                            \n                            \n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/role.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createRole\n                        \n                    \n                \n            \n            \n                \ncreateRole(data: CreateRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRole\n                        \n                    \n                \n            \n            \n                \ndeleteRole(data: DeleteRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n            \n                \nrole(data: GetRoleArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetRoleArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n            \n                \nroles(data: GetRolesArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetRolesArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRole\n                        \n                    \n                \n            \n            \n                \nupdateRole(data: UpdateRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { RoleService } from './role.service'\nimport { Role } from './entities/role.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetRoleArgs } from './dto/args/get-role.args'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { GetRolesArgs } from './dto/args/get-roles.args'\nimport { CreateRoleInput } from './dto/inputs/create-role.input'\nimport { UpdateRoleInput } from './dto/inputs/update-role.input'\nimport { DeleteRoleInput } from './dto/inputs/delete-role.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => Role)\n@Resource('roles')\nexport class RoleResolver {\n    constructor(private readonly roleService: RoleService) {}\n\n    @Query(() => Role, { nullable: true })\n    @UseGuards(GqlAuthGuard)\n    @Permission('read')\n    role(@Args({ nullable: true }) data: GetRoleArgs): Promise {\n        return this.roleService.findOne(data)\n    }\n\n    @Query(() => [Role], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    roles(@Args({ nullable: true }) data: GetRolesArgs | null): Promise {\n        return this.roleService.findAll(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('create')\n    createRole(@Args('createRoleData') data: CreateRoleInput): Promise {\n        return this.roleService.create(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('update')\n    updateRole(@Args('updateRoleData') data: UpdateRoleInput): Promise {\n        return this.roleService.update(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('delete')\n    deleteRole(@Args('deleteRoleData') data: DeleteRoleInput): Promise {\n        return this.roleService.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/role.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: RoleRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/role.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        RoleRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateRoleInput } from './dto/inputs/create-role.input'\nimport { UpdateRoleInput } from './dto/inputs/update-role.input'\nimport { RoleRepository } from './entities/role.repository'\nimport { GetRolesArgs } from './dto/args/get-roles.args'\nimport { GetRoleArgs } from './dto/args/get-role.args'\nimport { DeleteRoleInput } from './dto/inputs/delete-role.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class RoleService extends RepositoryProxyService {\n    constructor(roleRepository: RoleRepository) {\n        super(roleRepository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SimpleRepository.html":{"url":"injectables/SimpleRepository.html","title":"injectable - SimpleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SimpleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/proxies/simple.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/shared/proxies/simple.repository.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common'\nimport { Document, Model, Types } from 'mongoose'\nimport { IdArg, IdArrayArg } from '../gql-args/id.args'\nimport { IdInput } from '../gql-inputs/id.input'\nimport { IApiResource, IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class SimpleRepository {\n    constructor(private readonly model: Model) {}\n\n    public async findAll(data: TFindManyArgs | null): Promise {\n        return data && Object.keys(data).length > 0\n            ? Promise.all(data.ids.map((id) => this.findOne({ id } as TFindOneArgs)))\n            : (this.model.find({ deletedAt: { $eq: null } }) as any)\n    }\n\n    public async findOne(data: TFindOneArgs): Promise {\n        const res = this.model.findById(data.id) as any\n        return res?.deletedAt ? Promise.reject(new NotFoundException()) : res\n    }\n\n    public async create(data: TCreateInput): Promise {\n        return (await new this.model({\n            ...data,\n            _id: new Types.ObjectId(),\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            deletedAt: null,\n        }).save()) as any\n    }\n\n    public async update(data: TUpdateInput & IUpdatedAt): Promise {\n        const id = data.id\n        delete data.id\n        if ((data as any).deletedAt) return Promise.reject(new BadRequestException('Cannot update deleted resource'))\n        data.updatedAt = new Date()\n        return this.model.findByIdAndUpdate(id, data, { new: false }) as any\n    }\n\n    public async delete(data: TDeleteInput): Promise {\n        return this.model.findByIdAndUpdate(data.id, { deletedAt: Date.now() }) as any\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleInput.html":{"url":"classes/UpdateRoleInput.html","title":"class - UpdateRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/update-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                permissions\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty, IsOptional } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateRoleInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    @IsNotEmpty()\n    name?: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    @IsNotEmpty()\n    description?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @IsOptional()\n    @IsArray()\n    permissions?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserInput.html":{"url":"classes/UpdateUserInput.html","title":"class - UpdateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/update-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                newPassword\n                            \n                            \n                                    Optional\n                                newPasswordConfirm\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newPasswordConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsEmail, IsNotEmpty } from 'class-validator'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateUserInput extends IdInput implements IUpdatedAt {\n    @Field({ nullable: true })\n    id: string\n\n    @Field({ nullable: true })\n    @IsEmail()\n    email?: string\n\n    @Field({ nullable: true })\n    username?: string\n\n    @Field()\n    @IsNotEmpty()\n    password: string\n\n    @Field({ nullable: true })\n    newPassword?: string\n\n    @Field({ nullable: true })\n    newPasswordConfirm?: string\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    roles?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/entities/user.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Types.ObjectId[] | IRole[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { Document, Schema as MongooseSchema, Types } from 'mongoose'\nimport { IRole, IUser } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Role } from '../../role/entities/role.entity'\nimport { SchemaTypes } from 'mongoose'\n\nexport type UserDocument = User & Document\n\n@ObjectType()\n@Schema()\nexport class User implements IUser {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    username: string\n\n    @Field({ nullable: true })\n    @Prop()\n    om?: string\n\n    @Prop()\n    password?: string\n\n    @Field()\n    @Prop()\n    email: string\n\n    @Field(() => [Role], { nullable: 'itemsAndList' })\n    @Prop({ type: [SchemaTypes.ObjectId], ref: Role.name })\n    roles: Types.ObjectId[] | IRole[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/entities/user.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, roleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/entities/user.repository.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: DeleteUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetUsersArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetUserArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: UpdateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { User, UserDocument } from './user.entity'\nimport { CreateUserInput } from '../dto/inputs/create-user.input'\nimport { UpdateUserInput } from '../dto/inputs/update-user.input'\nimport { DeleteUserInput } from '../dto/inputs/delete-user.input'\nimport { GetUserArgs } from '../dto/args/get-user.args'\nimport { GetUsersArgs } from '../dto/args/get-users.args'\nimport { BadRequestException, Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\nimport { IRole, IUser } from '@szakszolg-nx/api-interfaces'\nimport { Types } from 'mongoose'\nimport { Role, RoleDocument } from '../../role/entities/role.entity'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class UserRepository {\n    constructor(\n        @InjectModel(User.name) private readonly userModel: Model,\n        @InjectModel(Role.name) private readonly roleModel: Model,\n    ) {}\n\n    public async findAll(data: GetUsersArgs | null): Promise {\n        return data && Object.keys(data).length > 0\n            ? Promise.all(data.ids.map((id) => this.findOne({ id })))\n            : this.userModel.find()\n    }\n\n    public async findOne(data: GetUserArgs): Promise {\n        if (data.id) return this.userModel.findById(data.id).populate('roles')\n\n        if (data.email) return this.userModel.findOne({ email: data.email }).populate('roles')\n\n        throw new Error('Please provide either an id or an email address')\n    }\n\n    public async create(data: CreateUserInput): Promise {\n        return new this.userModel({ ...data, _id: new Types.ObjectId() }).save()\n    }\n\n    public async update(data: UpdateUserInput): Promise {\n        const user = await this.userModel.findById(data.id)\n\n        if (!user) throw new Error('User not found')\n        if (!(await bcrypt.compare(data.password, user.password)))\n            throw new BadRequestException('Current password is incorrect')\n\n        if (data.newPassword && data.newPassword !== data.newPasswordConfirm)\n            throw new Error('New passwords do not match')\n        // const id = data.id\n        delete data.id\n        ;(data as any).updatedAt = new Date()\n\n        user.roles = data?.roles?.map((roleId) => new Types.ObjectId(roleId))\n\n        user.save()\n        return user\n    }\n\n    public async delete(data: DeleteUserInput): Promise {\n        return this.userModel.findByIdAndUpdate(data.id, { deletedAt: new Date() })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserRepository\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common'\nimport { UsersService } from './users.service'\nimport { UsersResolver } from './users.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { UserRepository } from './entities/user.repository'\nimport { AuthModule } from '../auth/auth.module'\nimport { User, UserSchema } from './entities/user.entity'\nimport { RoleModule } from '../role/role.module'\nimport { Role, RoleSchema } from '../role/entities/role.entity'\n\n@Module({\n    imports: [\n        forwardRef(() => AuthModule),\n        forwardRef(() => RoleModule),\n        MongooseModule.forFeature([\n            {\n                name: Role.name,\n                schema: RoleSchema,\n            },\n            {\n                name: User.name,\n                schema: UserSchema,\n            },\n        ]),\n    ],\n    providers: [UsersResolver, UsersService, UserRepository],\n    exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersResolver.html":{"url":"classes/UsersResolver.html","title":"class - UsersResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/users.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                updateUser\n                            \n                            \n                                user\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/users.resolver.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(data: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(data: DeleteUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(data: UpdateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n            \n                \nuser(data: GetUserArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n            \n                \nusers(data: GetUsersArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@UseGuards(GqlAuthGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Args, Mutation } from '@nestjs/graphql'\nimport { UsersService } from './users.service'\nimport { User } from './entities/user.entity'\nimport { GetUserArgs } from './dto/args/get-user.args'\nimport { GetUsersArgs } from './dto/args/get-users.args'\nimport { CreateUserInput } from './dto/inputs/create-user.input'\nimport { UpdateUserInput } from './dto/inputs/update-user.input'\nimport { DeleteUserInput } from './dto/inputs/delete-user.input'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Resolver(() => User)\nexport class UsersResolver {\n    constructor(private readonly usersService: UsersService) {}\n\n    @Query(() => User, { nullable: true })\n    @UseGuards(GqlAuthGuard)\n    user(@Args() data: GetUserArgs): Promise {\n        return this.usersService.findOne(data)\n    }\n\n    @Query(() => [User], { nullable: 'items' })\n    @UseGuards(GqlAuthGuard)\n    users(@Args({ nullable: true }) data: GetUsersArgs | null): Promise {\n        return this.usersService.findAll(data)\n    }\n\n    @Mutation(() => User)\n    createUser(@Args('createUserData') data: CreateUserInput): Promise {\n        return this.usersService.create(data)\n    }\n\n    @Mutation(() => User)\n    updateUser(@Args('updateUserData') data: UpdateUserInput): Promise {\n        return this.usersService.update(data)\n    }\n\n    @Mutation(() => User)\n    @UseGuards(GqlAuthGuard)\n    deleteUser(@Args('deleteUserData') data: DeleteUserInput): Promise {\n        return this.usersService.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/users.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: DeleteUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetUsersArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetUserArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: UpdateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateUserInput } from './dto/inputs/create-user.input'\nimport { UpdateUserInput } from './dto/inputs/update-user.input'\nimport { DeleteUserInput } from './dto/inputs/delete-user.input'\nimport { GetUserArgs } from './dto/args/get-user.args'\nimport { GetUsersArgs } from './dto/args/get-users.args'\nimport { UserRepository } from './entities/user.repository'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class UsersService {\n    constructor(private readonly userRepository: UserRepository) {}\n\n    public findAll(data: GetUsersArgs | null): Promise {\n        return this.userRepository.findAll(data)\n    }\n\n    public findOne(data: GetUserArgs): Promise {\n        return this.userRepository.findOne(data)\n    }\n\n    public async create(data: CreateUserInput): Promise {\n        data.password = await bcrypt.hash(data.password, 10)\n        return this.userRepository.create(data)\n    }\n\n    public async update(data: UpdateUserInput): Promise {\n        return this.userRepository.update(data)\n    }\n\n    public async delete(data: DeleteUserInput): Promise {\n        return this.userRepository.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/auth.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/permission.decorator.ts\n            \n            variable\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/permission.decorator.ts\n            \n            variable\n            Resource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/gql-auth.guard.ts\n            \n            class\n            GqlAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/jwt-auth.guard.ts\n            \n            class\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/local-auth.guard.ts\n            \n            class\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/permission-guard.service.ts\n            \n            guard\n            PermissionGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/config/mongo-config.factory.ts\n            \n            variable\n            mongooseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/config/validation.ts\n            \n            variable\n            validationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/core.resolver.ts\n            \n            class\n            CoreResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/args/get-role.args.ts\n            \n            class\n            GetRoleArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/args/get-roles.args.ts\n            \n            class\n            GetRolesArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/create-role.input.ts\n            \n            class\n            CreateRoleInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/delete-role.input.ts\n            \n            class\n            DeleteRoleInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/update-role.input.ts\n            \n            class\n            UpdateRoleInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.entity.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.repository.ts\n            \n            injectable\n            RoleRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/role.resolver.ts\n            \n            class\n            RoleResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/args/get-user.args.ts\n            \n            class\n            GetUserArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/args/get-users.args.ts\n            \n            class\n            GetUsersArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/create-user.input.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/delete-user.input.ts\n            \n            class\n            DeleteUserInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/update-user.input.ts\n            \n            class\n            UpdateUserInput\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.entity.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.repository.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.resolver.ts\n            \n            class\n            UsersResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/gql-arg.abstract.ts\n            \n            class\n            GqlArg\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/id.args.ts\n            \n            class\n            IdArg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/id.args.ts\n            \n            class\n            IdArrayArg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-inputs/gql-input.abstract.ts\n            \n            class\n            GqlInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-inputs/id.input.ts\n            \n            class\n            IdInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/proxies/repository-proxy.service.ts\n            \n            injectable\n            RepositoryProxyService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/shared/proxies/simple.repository.ts\n            \n            injectable\n            SimpleRepository\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.1.0\n        \n            @angular/common : ~13.1.0\n        \n            @angular/compiler : ~13.1.0\n        \n            @angular/core : ~13.1.0\n        \n            @angular/forms : ~13.1.0\n        \n            @angular/platform-browser : ~13.1.0\n        \n            @angular/platform-browser-dynamic : ~13.1.0\n        \n            @angular/router : ~13.1.0\n        \n            @compodoc/compodoc : ^1.1.18\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.6\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/graphql : ^9.1.2\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mongoose : ^9.0.2\n        \n            @nestjs/passport : ^8.1.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nrwl/angular : 13.4.6\n        \n            apollo-server-express : ^3.6.1\n        \n            bcryptjs : ^2.4.3\n        \n            class-validator : ^0.13.2\n        \n            del-cli : ^4.0.1\n        \n            dotenv : ^14.2.0\n        \n            graphql : ^15.0.0\n        \n            graphql-tools : ^8.2.0\n        \n            joi : ^17.5.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^6.1.7\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.0.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSzakszolgNx\nThis project was generated using Nx.\n\n\n🔎 Smart, Fast and Extensible Build System\nQuick Start & Documentation\nNx Documentation\n10-minute video showing all Nx features\nInteractive Tutorial\nAdding capabilities to your workspace\nNx supports many plugins which add capabilities for developing different types of applications and different tools.\nThese capabilities include generating applications, libraries, etc as well as the devtools to test, and build projects as well.\nBelow are our core plugins:\n\nAngular\nng add @nrwl/angular\n\n\nReact\nng add @nrwl/react\n\n\nWeb (no framework frontends)\nng add @nrwl/web\n\n\nNest\nng add @nrwl/nest\n\n\nExpress\nng add @nrwl/express\n\n\nNode\nng add @nrwl/node\n\n\n\nThere are also many community plugins you could add.\nGenerate an application\nRun ng g @nrwl/angular:app my-app to generate an application.\n\nYou can use any of the plugins above to generate applications as well.\n\nWhen using Nx, you can create multiple applications and libraries in the same workspace.\nGenerate a library\nRun ng g @nrwl/angular:lib my-lib to generate a library.\n\nYou can also use any of the plugins above to generate libraries as well.\n\nLibraries are shareable across libraries and applications. They can be imported from @szakszolg-nx/mylib.\nDevelopment server\nRun ng serve my-app for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng g component my-component --project=my-app to generate a new component.\nBuild\nRun ng build my-app to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test my-app to execute the unit tests via Jest.\nRun nx affected:test to execute the unit tests affected by a change.\nRunning end-to-end tests\nRun ng e2e my-app to execute the end-to-end tests via Cypress.\nRun nx affected:e2e to execute the end-to-end tests affected by a change.\nUnderstand your workspace\nRun nx dep-graph to see a diagram of the dependencies of your projects.\nFurther help\nVisit the Nx Documentation to learn more.\n☁ Nx Cloud\nDistributed Computation Caching & Distributed Task Execution\n\n\nNx Cloud pairs with Nx in order to enable you to build and test code more rapidly, by up to 10 times. Even teams that are new to Nx can connect to Nx Cloud and start saving time instantly.\nTeams using Nx gain the advantage of building full-stack applications with their preferred framework alongside Nx’s advanced code generation and project dependency graph, plus a unified experience for both frontend and backend developers.\nVisit Nx Cloud to learn more.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nAuthModule->RoleModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoleRepository \n\nRoleRepository \n\nRoleRepository  -->\n\nRoleModule->RoleRepository \n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nRoleRepository\n\nRoleRepository\n\nRoleModule -->\n\nRoleRepository->RoleModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    23 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RoleDocument   (apps/.../role.entity.ts)\n                        \n                        \n                            UserDocument   (apps/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/role/entities/role.entity.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/users/entities/user.entity.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bcrypt   (apps/.../auth.service.ts)\n                        \n                        \n                            bcrypt   (apps/.../users.service.ts)\n                        \n                        \n                            bcrypt   (apps/.../user.repository.ts)\n                        \n                        \n                            configuration   (apps/.../configuration.ts)\n                        \n                        \n                            CurrentUser   (apps/.../current-user.decorator.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            mongooseConfig   (apps/.../mongo-config.factory.ts)\n                        \n                        \n                            Permission   (apps/.../permission.decorator.ts)\n                        \n                        \n                            Resource   (apps/.../permission.decorator.ts)\n                        \n                        \n                            RoleSchema   (apps/.../role.entity.ts)\n                        \n                        \n                            UserSchema   (apps/.../user.entity.ts)\n                        \n                        \n                            validationSchema   (apps/.../validation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/entities/user.repository.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/core/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => ({\n    environment: process.env.NODE_ENV,\n    port: parseInt(process.env.PORT || '3000', 10),\n})\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/auth/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_data: unknown, context: ExecutionContext) => {\n    if (context.getType() === 'http') return context.switchToHttp().getRequest().user\n    return GqlExecutionContext.create(context).getContext().req.user\n})\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/core/config/mongo-config.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mongooseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    imports: [ConfigModule],\n    providers: [ConfigService],\n    mongooseConfigFactory: async (configService: ConfigService): Promise => {\n        const uri = `mongodb+srv://${configService.get('DATABASE_USER')}@${configService.get(\n            'DATABASE_HOST',\n        )}/${configService.get(\n            'DATABASE_NAME',\n        )}?authMechanism=MONGODB-X509&ssl=true&retryWrites=true&w=majority`\n        const cert = configService.get('DATABASE_CERT')\n        return {\n            uri,\n            sslKey: cert,\n            sslCert: cert,\n        }\n    },\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/auth/decorators/permission.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Permission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...abilities: string[]) => SetMetadata('abilities', abilities)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Resource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...resources: string[]) => SetMetadata('resources', resources)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/role/entities/role.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/entities/user.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/core/config/validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n    NODE_ENV: Joi.string().valid('development', 'production', 'test').required(),\n    PORT: Joi.number().default(3000),\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
