var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,2.711,1,2.915]],["body/controllers/AppController.html",[0,4.398,1,4.728,2,3.29,3,0.147,4,0.129,5,0.129,6,4.543,7,0.303,8,1.815,9,6.519,10,0.892,11,0.013,12,6.533,13,0.388,14,5.213,15,1.448,16,6.219,17,0.227,18,1.102,19,1.308,20,1.353,21,1.353,22,4.504,23,5.213,24,0.147,25,0.363,26,2.662,27,2.239,28,1.663,29,5.213,30,0.01,31,0.01]],["title/modules/AppModule.html",[32,1.599,33,2.915]],["body/modules/AppModule.html",[1,4.444,2,3.374,3,0.109,4,0.095,5,0.095,11,0.013,17,0.247,18,0.814,22,4.555,24,0.109,25,0.268,30,0.008,31,0.008,32,2.122,33,5.952,34,1.877,35,2.607,36,3.353,37,3.353,38,3.353,39,4.296,40,4.859,41,4.859,42,4.859,43,4.859,44,4.555,45,4.296,46,3.013,47,2.169,48,2.169,49,3.848,50,2.864,51,2.864,52,3.848,53,3.848,54,3.848,55,3.028,56,3.028,57,3.353,58,1.877,59,2.59,60,5.345,61,1.877,62,2.59,63,1.877,64,2.59,65,3.848]],["title/injectables/AppService.html",[22,2.542,66,0.852]],["body/injectables/AppService.html",[3,0.153,4,0.134,5,0.134,7,0.314,8,1.858,9,6.607,11,0.013,13,0.403,15,1.504,16,6.607,17,0.213,18,1.145,19,1.358,20,1.405,21,1.405,22,4.222,24,0.153,25,0.377,28,1.727,30,0.011,31,0.011,66,1.414,67,2.069,68,4.717,69,5.413,70,5.413,71,5.413]],["title/controllers/AuthController.html",[0,2.711,72,2.915]],["body/controllers/AuthController.html",[0,3.138,2,2.943,3,0.132,4,0.115,5,0.115,7,0.271,8,1.69,10,0.798,11,0.013,13,0.347,15,1.295,17,0.237,18,0.986,19,1.169,20,1.21,21,1.21,24,0.132,25,0.325,26,2.38,27,2.002,28,1.487,30,0.01,31,0.01,72,4.402,73,4.063,74,4.661,75,4.661,76,3.16,77,5.301,78,4.661,79,7.176,80,4.661,81,4.661,82,1.436,83,1.093,84,0.347,85,0.741,86,6.77,87,3.374,88,4.661,89,2.943,90,4.03,91,3.668,92,3.374,93,4.661,94,2.943,95,3.668,96,3.429,97,4.661,98,4.661,99,4.661,100,4.661,101,2.498,102,4.661,103,4.661]],["title/modules/AuthModule.html",[32,1.599,39,2.397]],["body/modules/AuthModule.html",[2,3.584,3,0.119,4,0.104,5,0.104,11,0.013,17,0.248,18,0.889,24,0.119,25,0.293,30,0.009,31,0.009,32,2.254,34,2.05,35,2.77,39,4.699,45,3.38,46,3.201,47,2.37,48,2.37,50,3.042,51,2.252,55,3.307,72,4.654,90,4.412,91,3.307,104,3.663,105,3.663,106,4.991,107,4.991,108,4.203,109,3.823,110,4.203,111,3.307,112,4.468,113,3.042,114,4.203,115,2.502,116,4.203,117,4.203,118,4.203,119,4.203,120,4.203,121,3.307,122,4.203,123,3.663,124,3.663,125,4.203,126,3.663,127,4.203,128,3.663]],["title/injectables/AuthService.html",[66,0.852,90,2.397]],["body/injectables/AuthService.html",[3,0.089,4,0.078,5,0.078,7,0.183,8,1.285,11,0.013,13,0.451,15,1.525,17,0.205,18,0.665,19,0.789,20,0.816,21,0.816,24,0.089,25,0.219,27,2.357,28,1.751,30,0.007,31,0.007,66,0.978,67,1.202,76,3.409,77,4.032,82,1.864,83,1.418,84,0.451,85,0.963,87,3.348,90,2.754,96,3.412,101,2.941,109,2.117,111,2.474,113,2.276,123,4.032,126,2.74,128,2.74,129,2.474,130,3.64,131,4.626,132,1.529,133,2.74,134,3.636,135,6.973,136,6.077,137,3.144,138,4.032,139,4.626,140,3.144,141,3.736,142,4.032,143,1.343,144,3.464,145,3.144,146,3.412,147,1.909,148,4.626,149,3.144,150,3.144,151,2.474,152,2.74,153,2.474,154,2.474,155,2.474,156,2.474,157,2.474,158,2.474,159,2.474,160,2.474,161,2.662,162,2.117,163,2.276,164,2.74,165,4.319,166,4.032,167,3.144,168,2.74,169,1.407,170,2.74,171,3.144,172,2.74,173,3.144,174,3.144,175,3.144,176,4.626,177,3.144,178,3.144,179,3.144,180,3.144,181,2.474,182,1.985,183,2.74,184,2.74]],["title/modules/CoreModule.html",[32,1.599,40,2.711]],["body/modules/CoreModule.html",[2,2.982,3,0.133,4,0.117,5,0.117,11,0.013,17,0.251,18,0.999,24,0.133,25,0.329,30,0.01,31,0.01,32,2.436,34,2.304,40,4.13,50,2.531,51,3.287,112,3.717,113,3.419,151,3.717,185,4.724,186,4.828,187,4.724,188,4.828,189,4.724,190,4.724,191,0.724,192,4.44,193,4.724,194,2.982,195,1.805,196,3.717,197,4.724,198,4.724,199,4.724,200,4.724,201,1.768,202,4.724,203,4.724,204,4.724,205,4.724,206,4.724,207,4.724,208,4.724,209,4.724,210,4.724,211,2.982]],["title/classes/CoreResolver.html",[25,0.281,192,2.915]],["body/classes/CoreResolver.html",[3,0.156,4,0.137,5,0.137,7,0.321,8,1.88,10,0.945,11,0.013,13,0.411,15,1.533,17,0.175,24,0.156,25,0.384,28,1.76,30,0.011,31,0.011,191,0.846,192,4.898,212,0.783,213,4.81,214,7.632,215,3.484,216,5.518,217,6.768,218,4.272,219,4.272,220,5.518]],["title/classes/CreateGroupingItemInput.html",[25,0.281,221,2.542]],["body/classes/CreateGroupingItemInput.html",[3,0.133,4,0.116,5,0.116,7,0.273,10,1.163,11,0.013,13,0.506,17,0.194,24,0.133,25,0.327,30,0.01,31,0.01,63,3.509,84,0.506,143,1.432,191,0.719,212,0.666,221,3.856,222,3.219,223,6.27,224,3.396,225,0.972,226,3.639,227,1.337,228,5.344,229,5.344,230,5.344,231,1.732,232,4.09,233,2.19,234,4.692,235,4.692,236,2.521,237,1.349,238,2.793,239,2.962]],["title/classes/CreateHangmanWordInput.html",[25,0.281,240,2.542]],["body/classes/CreateHangmanWordInput.html",[3,0.137,4,0.12,5,0.12,7,0.282,10,1.069,11,0.013,13,0.465,17,0.219,24,0.137,25,0.435,30,0.01,31,0.01,61,3.367,84,0.465,143,1.34,191,0.744,212,0.689,225,0.993,226,3.698,227,1.367,231,1.564,236,2.577,237,1.396,238,2.889,239,3.064,240,3.941,241,3.089,242,5.432,243,2.889,244,4.357,245,4.109,246,2.479,247,4.23,248,4.23,249,2.638,250,1.444]],["title/classes/CreateMirrorWordInput.html",[25,0.281,251,2.542]],["body/classes/CreateMirrorWordInput.html",[3,0.144,4,0.126,5,0.126,7,0.296,10,0.873,11,0.013,13,0.38,17,0.225,24,0.144,25,0.449,30,0.01,31,0.01,58,3.143,84,0.38,143,1.185,191,0.781,212,0.724,225,1.025,226,3.785,227,1.41,231,1.46,236,2.659,237,1.466,238,3.036,239,3.219,242,5.07,243,3.036,245,4.205,246,2.024,248,4.444,249,2.463,250,1.518,251,4.067,252,2.883,253,3.982]],["title/classes/CreateRoleInput.html",[25,0.281,254,2.542]],["body/classes/CreateRoleInput.html",[3,0.132,4,0.115,5,0.115,7,0.271,10,1.159,11,0.013,13,0.504,17,0.215,24,0.132,25,0.424,30,0.01,31,0.01,83,1.587,84,0.504,143,1.43,191,0.714,212,0.661,225,0.967,226,3.627,227,1.331,231,1.625,236,2.51,237,1.34,238,2.775,239,2.943,246,2.415,249,2.587,250,1.387,254,3.839,255,6.254,256,3.374,257,4.9,258,5.327,259,4.661,260,4.661,261,4.661,262,4.661,263,3.259]],["title/classes/CreateUserInput.html",[25,0.281,264,2.542]],["body/classes/CreateUserInput.html",[3,0.117,4,0.102,5,0.102,7,0.24,10,1.224,11,0.013,13,0.532,17,0.203,24,0.117,25,0.391,30,0.009,31,0.009,84,0.532,85,1.087,143,1.46,144,4.023,146,3.593,191,0.633,212,0.586,225,0.892,226,3.414,227,1.228,231,1.709,233,1.928,236,2.315,237,1.187,238,2.458,239,2.607,246,2.227,249,2.613,250,1.229,264,3.542,265,6.426,266,2.988,267,5.015,268,4.612,269,5.015,270,4.129,271,4.129,272,4.129,273,4.129,274,1.559,275,3.777,276,4.129,277,4.129,278,4.89]],["title/classes/DeleteGroupingItemInput.html",[25,0.281,279,2.542]],["body/classes/DeleteGroupingItemInput.html",[3,0.147,4,0.129,5,0.129,7,0.302,10,0.889,11,0.013,13,0.387,17,0.226,24,0.147,25,0.454,30,0.01,31,0.01,63,2.533,84,0.387,143,1.199,191,0.796,212,0.737,222,2.324,224,3.759,225,1.037,227,1.427,231,1.476,236,2.69,237,1.493,246,2.062,249,2.491,250,1.545,279,4.114,280,4.526,281,3.083,282,2.439,283,1.395,284,3.278,285,2.424]],["title/classes/DeleteHangmanWordInput.html",[25,0.281,286,2.542]],["body/classes/DeleteHangmanWordInput.html",[3,0.147,4,0.129,5,0.129,7,0.302,10,0.889,11,0.013,13,0.387,17,0.226,24,0.147,25,0.454,30,0.01,31,0.01,61,2.533,84,0.387,143,1.199,191,0.796,212,0.737,225,1.037,227,1.427,231,1.476,236,2.69,237,1.493,241,2.324,243,3.091,246,2.062,249,2.491,250,1.545,281,3.083,282,2.439,283,1.395,284,3.278,285,2.424,286,4.114,287,4.087]],["title/classes/DeleteMirrorWordInput.html",[25,0.281,288,2.542]],["body/classes/DeleteMirrorWordInput.html",[3,0.147,4,0.129,5,0.129,7,0.302,10,0.889,11,0.013,13,0.387,17,0.226,24,0.147,25,0.454,30,0.01,31,0.01,58,2.533,84,0.387,143,1.199,191,0.796,212,0.737,225,1.037,227,1.427,231,1.476,236,2.69,237,1.493,243,3.091,246,2.062,249,2.491,250,1.545,252,2.324,281,3.083,282,2.439,283,1.395,284,3.278,285,2.424,287,4.087,288,4.114]],["title/classes/DeleteRoleInput.html",[25,0.281,289,2.542]],["body/classes/DeleteRoleInput.html",[3,0.148,4,0.13,5,0.13,7,0.304,10,0.896,11,0.013,13,0.39,17,0.227,24,0.148,25,0.456,30,0.01,31,0.01,84,0.39,143,1.204,191,0.802,212,0.742,225,1.042,227,1.433,231,1.483,236,2.702,237,1.504,246,2.077,249,2.503,250,1.557,256,3.787,281,3.091,282,2.447,283,1.405,284,3.303,285,2.442,289,4.133,290,4.56]],["title/classes/DeleteUserInput.html",[25,0.281,291,2.542]],["body/classes/DeleteUserInput.html",[3,0.148,4,0.13,5,0.13,7,0.304,10,0.896,11,0.013,13,0.39,17,0.227,24,0.148,25,0.456,30,0.01,31,0.01,84,0.39,143,1.204,191,0.802,212,0.742,225,1.042,227,1.433,231,1.483,236,2.702,237,1.504,246,2.077,249,2.503,250,1.557,266,3.787,281,3.091,282,2.447,283,1.405,284,3.303,285,2.442,291,4.133,292,4.56]],["title/classes/GetGroupingItemArgs.html",[25,0.281,293,2.542]],["body/classes/GetGroupingItemArgs.html",[3,0.148,4,0.13,5,0.13,7,0.305,10,0.899,11,0.013,13,0.391,17,0.209,24,0.148,25,0.366,30,0.01,31,0.01,63,2.562,84,0.391,143,1.207,191,0.805,201,1.703,212,0.745,222,2.35,225,1.044,227,1.437,231,1.487,237,1.51,274,1.459,282,2.451,283,1.41,293,4.143,294,4.132,295,4.577,296,3.83,297,2.35,298,4.132,299,2.562,300,3.201]],["title/classes/GetGroupingItemsArgs.html",[25,0.281,301,2.542]],["body/classes/GetGroupingItemsArgs.html",[3,0.141,4,0.124,5,0.124,7,0.291,10,0.857,11,0.013,13,0.373,17,0.223,24,0.141,25,0.444,30,0.01,31,0.01,63,2.443,84,0.373,85,1.013,143,1.288,191,0.767,201,1.3,212,0.711,222,2.241,225,1.013,227,1.395,231,1.443,233,2.338,237,1.44,250,1.491,263,3.413,274,1.77,283,1.345,294,3.942,299,2.443,300,3.107,301,4.021,302,4.366,303,3.596,304,4.17,305,3.162,306,3.372]],["title/classes/GetHangmanWordArgs.html",[25,0.281,307,2.542]],["body/classes/GetHangmanWordArgs.html",[3,0.134,4,0.118,5,0.118,7,0.276,10,1.055,11,0.013,13,0.459,17,0.196,24,0.134,25,0.331,30,0.01,31,0.01,61,3.006,84,0.459,85,0.98,143,1.33,191,0.729,201,1.877,212,0.675,225,0.98,227,1.349,231,1.697,237,1.367,241,2.757,244,4.315,274,1.712,282,2.341,283,1.277,296,3.692,297,2.757,298,3.742,299,2.32,300,3.006,307,3.89,308,4.149,309,3.742,310,4.756,311,5.37,312,5.37]],["title/classes/GetHangmanWordsArgs.html",[25,0.281,313,2.542]],["body/classes/GetHangmanWordsArgs.html",[3,0.13,4,0.114,5,0.114,7,0.266,10,1.03,11,0.013,13,0.448,17,0.214,24,0.13,25,0.419,30,0.009,31,0.009,61,2.935,84,0.448,85,1.134,143,1.398,191,0.703,201,1.743,212,0.651,225,0.957,227,1.317,231,1.521,233,2.809,237,1.318,241,2.692,244,4.24,250,1.365,263,3.224,274,1.981,283,1.231,299,2.237,300,2.935,303,3.478,304,3.998,305,2.895,306,3.087,308,4.051,313,3.798,314,3.609,315,4.586]],["title/classes/GetMirrorWordArgs.html",[25,0.281,316,2.542]],["body/classes/GetMirrorWordArgs.html",[3,0.145,4,0.127,5,0.127,7,0.298,10,0.879,11,0.013,13,0.382,17,0.206,24,0.145,25,0.358,30,0.01,31,0.01,58,2.506,84,0.382,143,1.19,191,0.787,201,1.68,212,0.729,225,1.03,227,1.417,231,1.685,237,1.477,252,2.298,274,1.427,282,2.427,283,1.379,296,3.8,297,2.298,298,4.042,299,2.506,300,3.157,308,3.458,309,4.042,311,5.641,312,5.641,316,4.086]],["title/classes/GetMirrorWordsArgs.html",[25,0.281,317,2.542]],["body/classes/GetMirrorWordsArgs.html",[3,0.141,4,0.124,5,0.124,7,0.291,10,0.857,11,0.013,13,0.373,17,0.223,24,0.141,25,0.444,30,0.01,31,0.01,58,2.443,84,0.373,85,1.013,143,1.288,191,0.767,201,1.3,212,0.711,225,1.013,227,1.395,231,1.443,233,2.338,237,1.44,250,1.491,252,2.241,263,3.413,274,1.77,283,1.345,299,2.443,300,3.107,303,3.596,304,4.17,305,3.162,306,3.372,308,3.372,314,3.942,317,4.021]],["title/classes/GetRoleArgs.html",[25,0.281,318,2.542]],["body/classes/GetRoleArgs.html",[3,0.148,4,0.13,5,0.13,7,0.304,10,0.896,11,0.013,13,0.39,17,0.227,24,0.148,25,0.456,30,0.01,31,0.01,84,0.39,143,1.204,191,0.802,212,0.742,225,1.042,227,1.433,231,1.483,237,1.504,246,2.077,249,2.503,250,1.557,282,2.447,283,1.405,296,3.825,299,2.552,300,3.194,318,4.133,319,4.117,320,4.56,321,5.232]],["title/classes/GetRolesArgs.html",[25,0.281,322,2.542]],["body/classes/GetRolesArgs.html",[3,0.143,4,0.125,5,0.125,7,0.293,10,0.864,11,0.013,13,0.376,17,0.223,24,0.143,25,0.446,30,0.01,31,0.01,84,0.376,85,1.018,143,1.293,191,0.773,201,1.309,212,0.716,225,1.018,227,1.401,231,1.45,233,2.355,237,1.45,250,1.501,263,3.429,274,1.778,283,1.355,299,2.461,300,3.121,303,3.606,304,4.184,305,3.185,306,3.397,319,3.97,322,4.04,323,4.397]],["title/classes/GetUserArgs.html",[25,0.281,324,2.542]],["body/classes/GetUserArgs.html",[3,0.134,4,0.118,5,0.118,7,0.276,10,1.055,11,0.013,13,0.459,17,0.217,24,0.134,25,0.429,30,0.01,31,0.01,84,0.459,85,1.15,143,1.33,146,3.854,191,0.729,201,1.599,212,0.675,225,0.98,227,1.349,231,1.548,237,1.367,250,1.415,274,1.712,282,2.341,297,2.757,300,3.006,324,3.89,325,5.379,326,4.145,327,4.315,328,6.162,329,4.756,330,4.756,331,5.957,332,3.742,333,3.742]],["title/classes/GetUsersArgs.html",[25,0.281,334,2.542]],["body/classes/GetUsersArgs.html",[3,0.143,4,0.125,5,0.125,7,0.293,10,0.864,11,0.013,13,0.376,17,0.223,24,0.143,25,0.446,30,0.01,31,0.01,84,0.376,85,1.018,143,1.293,191,0.773,201,1.309,212,0.716,225,1.018,227,1.401,231,1.45,233,2.355,237,1.45,250,1.501,263,3.429,274,1.778,283,1.355,299,2.461,300,3.121,303,3.606,304,4.184,305,3.185,306,3.397,325,3.97,334,4.04,335,4.397]],["title/classes/GqlArg.html",[25,0.281,327,2.542]],["body/classes/GqlArg.html",[3,0.17,4,0.149,5,0.149,11,0.013,17,0.191,24,0.17,25,0.419,30,0.011,31,0.011,191,0.921,212,0.853,300,3.476,327,4.499,332,4.731,336,3.795,337,5.24,338,5.24]],["title/classes/GqlAuthGuard.html",[25,0.281,339,2.27]],["body/classes/GqlAuthGuard.html",[3,0.151,4,0.132,5,0.132,7,0.311,8,1.845,11,0.013,13,0.398,15,1.487,17,0.23,18,1.132,24,0.151,25,0.373,28,1.707,30,0.01,31,0.01,82,1.648,83,1.254,84,0.398,85,0.851,115,3.185,191,0.82,212,0.759,225,0.851,339,3.744,340,5.787,341,3.873,342,6.64,343,6.64,344,5.941,345,5.351,346,4.211,347,4.211,348,4.664,349,4.664,350,5.351]],["title/classes/GqlInput.html",[25,0.281,226,2.158]],["body/classes/GqlInput.html",[3,0.174,4,0.153,5,0.153,11,0.012,24,0.174,25,0.43,30,0.011,31,0.011,212,0.876,226,3.878,238,3.673,336,3.895,338,5.378,351,5.378]],["title/classes/GroupingItem.html",[25,0.281,352,2.542]],["body/classes/GroupingItem.html",[3,0.098,4,0.086,5,0.086,7,0.202,10,1.23,11,0.013,13,0.535,17,0.201,19,0.87,20,0.9,21,0.9,24,0.164,25,0.242,30,0.008,31,0.008,84,0.565,85,1.008,143,1.376,161,1.432,191,0.532,195,1.326,201,0.9,212,0.492,222,3.289,227,1.088,228,4.567,229,4.567,230,4.567,231,1.665,274,0.964,297,1.552,352,3.136,353,4.949,354,2.511,355,2.423,356,4.987,357,3.455,358,3.664,359,3.455,360,2.831,361,3.345,362,3.345,363,3.469,364,4.267,365,3.469,366,3.258,367,3.469,368,2.336,369,3.469,370,3.469,371,3.469,372,3.469,373,3.345,374,4.949,375,2.964,376,2.336,377,2.336,378,3.136,379,1.619,380,2.73,381,2.336,382,2.511,383,3.023]],["title/modules/GroupingItemModule.html",[32,1.599,41,2.711]],["body/modules/GroupingItemModule.html",[3,0.123,4,0.108,5,0.108,11,0.013,17,0.238,18,0.922,24,0.123,25,0.304,30,0.009,31,0.009,32,2.31,34,2.126,35,2.838,41,5.351,46,3.281,47,2.458,48,2.458,50,3.118,51,2.336,63,2.838,64,2.935,83,1.022,194,2.752,195,1.666,211,3.673,222,1.95,352,2.752,375,2.226,382,4.211,384,3.799,385,3.799,386,3.799,387,5.095,388,5.095,389,4.359,390,3.799,391,4.211,392,4.359,393,4.579,394,3.43,395,3.799,396,2.935,397,4.359]],["title/injectables/GroupingItemRepository.html",[66,0.852,387,2.542]],["body/injectables/GroupingItemRepository.html",[3,0.088,4,0.077,5,0.077,7,0.18,8,1.273,11,0.013,13,0.5,15,1.782,17,0.239,18,0.656,19,0.778,20,0.805,21,0.805,24,0.088,25,0.216,28,0.99,30,0.007,31,0.007,63,3.274,66,0.969,67,1.186,76,3.504,82,2.068,83,1.573,84,0.478,85,1.068,101,1.663,132,1.025,147,2.77,161,1.891,169,2.05,195,1.186,221,1.959,222,2.05,225,0.729,253,4.018,279,1.959,283,1.722,293,3.796,301,1.959,352,1.959,353,3.084,356,2.442,379,1.448,380,2.442,387,2.892,394,2.442,398,2.704,399,4.018,400,2.138,401,2.05,402,2.138,403,2.138,404,2.138,405,3.103,406,3.796,407,3.103,408,4.581,409,3.992,410,2.442,411,2.704,412,1.448,413,2.339,414,2.246,415,2.298,416,1.448,417,2.339,418,2.246,419,1.448,420,2.455,421,2.442,422,1.448,423,2.246,424,2.089,425,1.959,426,1.281,427,4.285,428,1.281,429,1.891,430,2.442,431,2.442,432,1.281,433,2.246,434,3.103,435,3.103,436,2.442,437,3.605,438,2.442,439,2.442,440,2.442,441,2.442]],["title/classes/GroupingItemResolver.html",[25,0.281,391,2.915]],["body/classes/GroupingItemResolver.html",[3,0.074,4,0.065,5,0.065,7,0.152,8,1.117,10,1.018,11,0.013,13,0.468,15,1.653,17,0.235,18,0.552,19,0.655,20,0.677,21,0.677,24,0.074,25,0.182,26,1.332,27,1.121,28,1.898,30,0.006,31,0.006,63,3.065,64,4.408,82,1.936,83,1.473,84,0.468,85,1,89,1.647,94,1.647,132,0.862,147,2.923,169,2.194,191,0.4,201,1.43,212,0.37,215,2.537,218,3.095,219,2.537,221,3.477,222,2.93,274,1.746,279,3.477,293,3.477,301,3.477,339,1.471,352,4.378,356,2.053,388,3.477,390,2.274,391,2.909,393,2.053,394,2.053,415,2.707,425,3.477,426,1.077,427,3.858,428,1.077,429,1.659,430,2.053,431,2.053,432,1.077,442,2.274,443,4.02,444,4.02,445,4.02,446,4.02,447,2.274,448,2.609,449,3.503,450,2.609,451,3.548,452,1.888,453,2.609,454,2.609,455,1.888,456,2.609,457,2.609,458,2.609,459,2.609,460,1.888,461,3.543,462,2.609,463,2.609,464,1.888,465,2.609,466,3.709,467,1.757,468,1.757,469,1.553,470,1.471,471,1.757,472,1.757,473,1.757,474,2.609,475,2.706,476,2.609,477,2.274,478,1.757,479,3.709,480,2.609,481,2.274,482,1.757,483,2.609,484,2.274,485,1.757,486,2.609,487,2.274,488,1.757,489,2.609,490,2.274]],["title/injectables/GroupingItemService.html",[66,0.852,388,2.542]],["body/injectables/GroupingItemService.html",[3,0.101,4,0.089,5,0.089,7,0.209,8,1.415,11,0.013,13,0.526,15,1.889,17,0.236,18,0.76,24,0.101,25,0.25,30,0.008,31,0.008,63,3.316,64,3.429,66,1.077,67,1.373,82,2.175,83,1.655,84,0.526,85,1.123,132,1.187,221,2.268,222,2.279,225,0.81,279,2.268,283,1.825,293,2.268,301,2.268,387,4.064,388,3.215,393,2.827,395,3.131,400,2.378,401,2.279,402,2.378,403,2.378,404,2.378,412,1.677,413,2.601,415,2.598,416,1.677,417,2.601,419,1.677,420,2.729,422,1.677,425,2.268,426,1.483,427,4.657,428,1.483,429,2.102,430,2.827,431,2.827,432,1.483,491,3.131,492,4.416,493,3.686,494,3.593,495,2.6,496,2.6,497,2.6,498,2.6,499,1.835,500,3.032,501,2.6,502,3.215,503,2.6,504,2.6,505,2.6,506,2.827]],["title/classes/HangmanWord.html",[25,0.281,507,2.542]],["body/classes/HangmanWord.html",[3,0.104,4,0.091,5,0.091,7,0.213,10,1.217,11,0.013,13,0.529,17,0.207,19,0.92,20,0.952,21,0.952,24,0.169,25,0.255,30,0.008,31,0.008,84,0.555,85,1.034,143,1.26,161,1.514,191,0.562,195,1.402,201,0.952,212,0.52,227,1.131,231,1.654,241,3.268,244,3.778,245,3.563,274,1.019,297,1.641,355,2.521,357,3.563,358,3.778,359,3.563,360,2.919,361,2.469,362,2.469,364,4.375,366,3.318,368,2.469,373,3.48,374,4.917,375,3.056,376,2.469,377,2.469,378,3.263,379,1.712,381,2.469,507,3.263,508,4.917,509,2.469,510,5.113,511,3.196,512,3.196,513,3.196,514,3.668,515,3.196,516,3.196,517,2.886,518,2.654,519,3.196]],["title/modules/HangmanWordModule.html",[32,1.599,42,2.711]],["body/modules/HangmanWordModule.html",[3,0.123,4,0.108,5,0.108,11,0.013,17,0.238,18,0.922,24,0.123,25,0.304,30,0.009,31,0.009,32,2.31,34,2.126,35,2.838,42,5.351,46,3.281,47,2.458,48,2.458,50,3.118,51,2.336,61,2.838,62,2.935,83,1.022,194,2.752,195,1.666,211,3.673,241,1.95,375,2.226,396,2.935,507,2.752,518,4.211,520,3.799,521,3.799,522,3.799,523,5.095,524,5.095,525,3.799,526,3.155,527,4.211,528,3.799,529,4.579,530,2.752,531,3.155,532,4.359]],["title/injectables/HangmanWordRepository.html",[66,0.852,523,2.542]],["body/injectables/HangmanWordRepository.html",[3,0.076,4,0.067,5,0.067,7,0.156,8,1.145,11,0.013,13,0.474,15,1.677,17,0.231,18,0.57,19,0.676,20,0.699,21,0.699,24,0.076,25,0.188,28,1.787,30,0.006,31,0.006,61,3.104,66,0.871,67,1.03,76,3.44,82,1.961,83,1.492,84,0.449,85,1.012,101,2.68,132,0.89,147,2.733,161,2.312,169,2.238,195,1.03,225,0.655,240,1.701,241,1.843,244,2.6,253,3.588,283,1.621,286,1.701,307,3.536,313,3.536,379,1.258,399,3.851,400,1.923,401,1.843,402,1.923,403,1.923,404,1.923,406,3.536,410,2.12,412,1.258,413,2.104,414,1.95,415,2.307,416,1.258,417,2.104,418,1.95,419,1.923,422,1.258,423,1.95,424,1.814,426,1.112,428,1.112,429,1.7,432,1.112,433,1.95,436,3.242,437,3.242,438,2.12,439,2.12,440,2.12,441,2.12,499,2.104,507,1.701,508,2.773,510,2.12,517,2.12,523,2.6,530,1.701,533,2.12,534,2.694,535,2.348,536,4.119,537,2.694,538,1.701,539,3.157,540,1.701,541,1.701,542,2.694,543,2.694,544,4.119,545,2.694,546,2.694,547,5.26,548,2.694,549,5.002,550,2.694,551,4.119,552,4.119,553,2.694,554,2.694,555,1.814,556,2.694,557,2.694,558,2.694,559,2.694,560,2.348,561,2.694,562,2.694,563,2.12,564,2.694,565,2.348,566,2.694,567,2.348,568,2.694,569,2.694]],["title/classes/HangmanWordResolver.html",[25,0.281,527,2.915]],["body/classes/HangmanWordResolver.html",[3,0.073,4,0.064,5,0.064,7,0.149,8,1.104,10,1.012,11,0.013,13,0.465,15,1.642,17,0.235,18,0.544,19,0.645,20,0.667,21,0.667,24,0.073,25,0.179,26,1.313,27,1.104,28,1.885,30,0.006,31,0.006,61,3.282,62,4.385,82,1.924,83,1.464,84,0.465,85,0.994,89,1.623,94,1.623,132,0.85,147,2.911,169,2.174,191,0.394,201,1.419,212,0.365,215,2.509,218,3.067,219,2.509,240,3.45,241,2.914,245,2.366,257,2.876,274,1.736,286,3.45,307,3.45,313,3.45,339,1.45,415,2.696,426,1.061,428,1.061,429,1.64,432,1.061,447,2.241,449,3.464,451,3.516,452,1.861,455,1.861,460,1.861,461,3.522,464,1.861,466,3.68,467,1.731,468,1.731,469,1.531,470,1.45,471,1.731,472,1.731,473,1.731,475,1.731,477,2.241,478,1.731,479,3.68,481,2.241,482,1.731,484,2.241,485,1.731,487,2.241,488,1.731,490,2.241,507,4.359,510,2.023,524,3.45,526,1.861,527,2.876,529,2.023,530,1.623,538,3.45,539,3.067,540,1.623,541,1.623,563,2.023,570,2.023,571,3.974,572,3.974,573,3.974,574,3.974,575,2.241,576,2.571,577,2.241,578,2.571,579,2.241,580,2.571,581,3.974,582,2.241,583,2.571,584,2.241,585,2.571,586,2.241,587,2.571,588,2.571,589,2.571,590,2.571,591,2.571,592,2.571]],["title/injectables/HangmanWordService.html",[66,0.852,524,2.542]],["body/injectables/HangmanWordService.html",[3,0.101,4,0.089,5,0.089,7,0.209,8,1.415,11,0.013,13,0.526,15,1.889,17,0.236,18,0.76,24,0.101,25,0.25,30,0.008,31,0.008,61,3.316,62,3.429,66,1.077,67,1.373,82,2.175,83,1.655,84,0.526,85,1.123,132,1.187,225,0.81,240,2.268,241,2.279,283,1.825,286,2.268,307,2.268,313,2.268,400,2.378,401,2.279,402,2.378,403,2.378,404,2.378,412,1.677,413,2.601,415,2.598,416,1.677,417,2.601,419,1.677,420,2.729,422,1.677,426,1.483,428,1.483,429,2.102,432,1.483,492,4.416,493,3.686,495,2.6,496,2.6,497,2.6,498,2.6,499,1.835,500,3.032,501,2.6,502,3.215,503,2.6,504,2.6,505,2.6,506,2.827,523,4.064,524,3.215,529,2.827,531,2.6,538,2.268,539,3.736,540,2.268,541,2.268,593,2.827,594,3.131]],["title/classes/IdArg.html",[25,0.281,296,2.056]],["body/classes/IdArg.html",[3,0.14,4,0.123,5,0.123,7,0.288,10,0.848,11,0.013,13,0.369,17,0.222,24,0.179,25,0.486,30,0.01,31,0.01,84,0.369,143,1.351,191,0.759,201,1.286,212,0.703,225,1.109,227,1.385,231,1.579,246,1.968,249,2.418,250,1.475,263,3.39,274,1.377,282,2.387,296,3.231,303,2.418,304,2.95,327,4.636,333,3.9,336,3.994,595,3.9,596,4.956,597,3.337]],["title/classes/IdArrayArg.html",[25,0.281,303,1.964]],["body/classes/IdArrayArg.html",[3,0.138,4,0.121,5,0.121,7,0.284,10,0.837,11,0.013,13,0.364,17,0.22,24,0.177,25,0.482,30,0.01,31,0.01,84,0.364,85,0.998,143,1.344,191,0.749,201,1.269,212,0.694,225,1.102,227,1.373,231,1.569,233,2.282,249,2.397,250,1.454,263,3.36,274,1.742,282,1.674,296,2.496,303,3.059,304,4.122,305,3.085,327,4.612,333,3.846,336,3.959,595,3.846,597,3.291,598,4.888]],["title/classes/IdInput.html",[25,0.281,281,1.662]],["body/classes/IdInput.html",[3,0.159,4,0.139,5,0.139,7,0.327,11,0.013,13,0.419,17,0.179,24,0.159,25,0.392,30,0.011,31,0.011,84,0.419,143,1.26,212,0.799,225,1.09,226,3.957,227,1.499,239,3.553,281,2.827,282,2.528,336,4.324,597,3.79,599,4.906,600,5.629]],["title/classes/JwtAuthGuard.html",[25,0.281,601,3.169]],["body/classes/JwtAuthGuard.html",[3,0.172,4,0.151,5,0.151,11,0.012,17,0.194,24,0.172,25,0.424,30,0.011,31,0.011,115,3.625,212,0.864,225,0.969,341,4.408,347,4.793,349,5.308,601,5.651,602,5.308]],["title/injectables/JwtStrategy.html",[66,0.852,106,2.711]],["body/injectables/JwtStrategy.html",[3,0.124,4,0.108,5,0.108,7,0.254,8,1.62,11,0.013,13,0.434,15,1.215,17,0.222,18,0.925,24,0.124,25,0.305,27,1.878,28,1.395,30,0.009,31,0.009,66,1.233,67,1.671,76,3.062,82,1.796,83,1.367,84,0.521,85,0.927,87,3.164,106,3.926,109,2.944,115,2.603,121,3.441,124,3.811,130,4.588,132,1.927,133,3.811,134,4.11,138,5.082,143,1.072,146,3.287,151,3.441,152,3.811,164,3.811,165,3.441,166,3.811,170,3.811,172,3.811,225,0.695,603,3.811,604,4.372,605,5.831,606,5.831,607,4.372,608,4.372,609,3.811,610,3.441,611,3.811,612,3.811,613,3.811,614,4.372,615,4.372,616,4.372,617,3.164,618,4.372,619,4.372]],["title/classes/LocalAuthGuard.html",[25,0.281,92,2.915]],["body/classes/LocalAuthGuard.html",[3,0.171,4,0.15,5,0.15,11,0.012,17,0.193,24,0.171,25,0.422,30,0.011,31,0.011,92,5.184,115,3.61,212,0.861,225,0.965,341,4.389,347,5.637,620,5.285,621,4.772]],["title/injectables/LocalStrategy.html",[66,0.852,107,2.711]],["body/injectables/LocalStrategy.html",[3,0.121,4,0.106,5,0.106,7,0.249,8,1.597,11,0.013,13,0.428,15,1.189,17,0.23,18,0.905,19,1.074,20,1.111,21,1.111,24,0.121,25,0.298,26,2.185,27,1.838,28,1.365,30,0.009,31,0.009,66,1.216,67,1.636,76,3.029,82,1.771,83,1.347,84,0.428,85,0.914,90,4.436,91,3.368,96,2.413,101,2.293,107,3.87,115,2.547,130,4.523,132,1.414,141,3.717,142,5.009,143,1.37,144,4.379,146,3.24,147,2.372,161,1.766,181,3.368,182,2.701,225,0.681,609,3.73,610,3.368,611,3.73,612,3.73,613,3.73,621,3.368,622,3.73,623,4.28,624,4.28,625,4.28,626,5.748,627,4.28,628,4.28,629,4.28]],["title/classes/MirrorWord.html",[25,0.281,630,2.542]],["body/classes/MirrorWord.html",[3,0.108,4,0.095,5,0.095,7,0.222,10,1.191,11,0.013,13,0.518,17,0.21,19,0.96,20,0.993,21,0.993,24,0.173,25,0.267,30,0.008,31,0.008,84,0.55,85,1.053,143,1.126,161,1.579,191,0.586,195,1.463,201,0.993,212,0.543,227,1.166,231,1.632,245,3.645,252,3.224,274,1.063,297,1.712,355,2.597,357,3.645,358,3.865,359,3.645,360,2.987,361,2.576,362,2.576,364,4.123,366,3.363,368,2.576,373,3.585,374,4.85,375,3.127,376,2.576,377,2.576,378,3.361,379,1.786,381,2.576,509,2.576,511,3.335,512,3.335,513,3.335,515,3.335,516,3.335,630,3.361,631,4.85,632,5.209,633,3.011,634,2.77,635,3.335]],["title/modules/MirrorWordModule.html",[32,1.599,43,2.711]],["body/modules/MirrorWordModule.html",[3,0.123,4,0.108,5,0.108,11,0.013,17,0.238,18,0.922,24,0.123,25,0.304,30,0.009,31,0.009,32,2.31,34,2.126,35,2.838,43,5.351,46,3.281,47,2.458,48,2.458,50,3.118,51,2.336,58,2.838,59,2.935,83,1.022,194,2.752,195,1.666,211,3.673,252,1.95,375,2.226,396,2.935,525,3.799,526,3.155,528,3.799,530,2.752,531,3.155,630,2.752,634,4.211,636,3.799,637,3.799,638,3.799,639,5.095,640,5.095,641,4.211,642,4.579,643,4.359]],["title/injectables/MirrorWordRepository.html",[66,0.852,639,2.542]],["body/injectables/MirrorWordRepository.html",[3,0.088,4,0.077,5,0.077,7,0.18,8,1.273,11,0.013,13,0.5,15,1.782,17,0.239,18,0.656,19,0.778,20,0.805,21,0.805,24,0.088,25,0.216,28,0.99,30,0.007,31,0.007,58,3.274,66,0.969,67,1.186,76,3.504,82,2.068,83,1.573,84,0.478,85,1.068,101,1.663,132,1.025,147,2.77,161,1.891,169,2.05,195,1.186,225,0.729,251,1.959,252,2.05,253,4.018,283,1.722,288,1.959,316,3.796,317,1.959,379,1.448,399,4.018,400,2.138,401,2.05,402,2.138,403,2.138,404,2.138,406,3.796,409,3.992,410,2.442,411,2.704,412,1.448,413,2.339,414,2.246,415,2.298,416,1.448,417,2.339,418,2.246,419,1.448,420,2.455,421,2.442,422,1.448,423,2.246,424,2.089,426,1.281,428,1.281,429,1.891,432,1.281,433,2.246,436,2.442,437,3.605,438,2.442,439,2.442,440,2.442,441,2.442,530,1.959,533,2.442,535,2.704,539,3.438,540,1.959,541,1.959,630,1.959,631,3.084,632,2.442,633,2.442,639,2.892,644,3.103,645,4.581,646,1.959,647,3.103,648,3.103]],["title/classes/MirrorWordResolver.html",[25,0.281,641,2.915]],["body/classes/MirrorWordResolver.html",[3,0.074,4,0.065,5,0.065,7,0.152,8,1.117,10,1.018,11,0.013,13,0.468,15,1.653,17,0.235,18,0.552,19,0.655,20,0.677,21,0.677,24,0.074,25,0.182,26,1.332,27,1.121,28,1.898,30,0.006,31,0.006,58,3.065,59,4.408,82,1.936,83,1.473,84,0.468,85,1,89,1.647,94,1.647,132,0.862,147,2.923,169,2.194,191,0.4,201,1.43,212,0.37,215,2.537,218,3.095,219,2.537,251,3.477,252,2.93,274,1.746,288,3.477,316,3.477,317,3.477,339,1.471,415,2.707,426,1.077,428,1.077,429,1.659,432,1.077,451,3.548,452,1.888,455,1.888,460,1.888,461,3.543,464,1.888,466,3.709,467,1.757,468,1.757,469,1.553,470,1.471,471,1.757,472,1.757,473,1.757,475,1.757,478,1.757,479,3.709,482,1.757,485,1.757,488,1.757,526,1.888,530,1.647,539,3.095,540,1.647,541,1.647,563,2.053,570,2.053,575,2.274,577,2.274,579,2.274,582,2.274,584,2.274,586,2.274,630,4.378,632,2.053,640,3.967,641,2.909,642,2.053,646,3.477,649,4.02,650,4.02,651,4.02,652,4.02,653,2.609,654,2.609,655,2.609,656,2.609,657,2.609,658,2.609,659,2.609,660,2.609,661,2.609,662,2.609,663,2.609,664,2.609,665,2.609,666,2.609,667,2.609,668,2.609,669,2.609]],["title/injectables/MirrorWordService.html",[66,0.852,640,2.542]],["body/injectables/MirrorWordService.html",[3,0.101,4,0.089,5,0.089,7,0.209,8,1.415,11,0.013,13,0.526,15,1.889,17,0.236,18,0.76,24,0.101,25,0.25,30,0.008,31,0.008,58,3.316,59,3.429,66,1.077,67,1.373,82,2.175,83,1.655,84,0.526,85,1.123,132,1.187,225,0.81,251,2.268,252,2.279,283,1.825,288,2.268,316,2.268,317,2.268,400,2.378,401,2.279,402,2.378,403,2.378,404,2.378,412,1.677,413,2.601,415,2.598,416,1.677,417,2.601,419,1.677,420,2.729,422,1.677,426,1.483,428,1.483,429,2.102,432,1.483,492,4.416,493,3.686,495,2.6,496,2.6,497,2.6,498,2.6,499,1.835,500,3.032,501,2.6,502,3.215,503,2.6,504,2.6,505,2.6,506,2.827,531,2.6,539,3.736,540,2.268,541,2.268,593,2.827,594,3.131,639,4.064,640,3.215,642,2.827,646,2.268]],["title/guards/PermissionGuard.html",[461,2.27,670,3.169]],["body/guards/PermissionGuard.html",[3,0.113,4,0.099,5,0.099,7,0.233,8,1.528,11,0.013,13,0.41,15,1.115,17,0.215,18,0.849,19,1.006,20,1.041,21,1.041,24,0.113,25,0.279,26,2.049,28,2.003,30,0.009,31,0.009,66,1.163,82,1.695,83,1.289,84,0.41,85,0.875,96,3.101,132,1.326,141,3.619,143,0.738,161,2.788,191,0.615,201,1.041,344,5.315,346,3.157,348,3.496,355,1.957,461,3.101,555,3.704,617,2.903,671,4.012,672,5.471,673,3.496,674,6.755,675,4.012,676,7.31,677,4.012,678,5.501,679,4.012,680,4.012,681,3.496,682,4.012,683,4.012,684,4.012,685,5.501,686,4.012,687,4.012,688,4.012,689,4.012,690,4.012,691,4.012,692,3.496,693,3.496,694,3.496,695,3.496,696,4.012,697,4.012,698,4.012,699,4.012,700,4.012,701,4.012,702,4.012,703,4.012]],["title/injectables/RepositoryProxyService.html",[66,0.852,492,2.397]],["body/injectables/RepositoryProxyService.html",[3,0.1,4,0.088,5,0.088,7,0.207,8,1.405,11,0.013,13,0.524,15,1.881,17,0.204,18,0.752,24,0.1,25,0.248,27,1.528,28,2.16,30,0.008,31,0.008,66,1.07,67,1.359,82,2.168,83,1.649,84,0.524,85,1.119,132,1.175,225,1.019,281,2.429,285,1.66,296,2.582,299,1.735,303,2.467,399,2.005,400,2.361,401,2.263,402,2.361,403,2.361,404,2.361,412,2.361,413,3.273,415,2.588,416,2.361,417,3.273,419,2.361,420,3.434,422,2.361,492,3.01,493,2.574,495,3.66,499,2.582,500,3.815,502,4.046,597,3.405,704,6.309,705,3.1,706,5.885,707,3.557,708,3.557,709,3.557,710,3.557,711,3.557,712,3.557,713,3.557,714,3.1,715,3.557,716,3.557,717,3.557,718,3.557,719,3.557]],["title/classes/Role.html",[25,0.281,720,2.158]],["body/classes/Role.html",[3,0.102,4,0.089,5,0.089,7,0.21,10,1.245,11,0.013,13,0.541,17,0.205,19,0.906,20,0.937,21,0.937,24,0.168,25,0.252,30,0.008,31,0.008,83,1.391,84,0.57,85,1.026,143,1.389,161,1.49,191,0.553,195,1.38,201,0.937,212,0.512,227,1.119,231,1.683,257,4.295,258,4.67,274,1.003,297,1.616,355,2.494,357,3.533,358,3.746,359,3.533,360,2.895,361,3.442,362,3.442,364,4.345,366,3.301,368,2.431,373,3.442,374,5.001,375,3.03,376,2.431,377,2.431,378,3.227,379,1.686,381,2.431,720,2.739,721,2.614,722,4.345,723,3.611,724,3.611,725,3.611,726,3.611,727,3.611,728,3.611,729,3.611,730,2.614,731,2.431,732,3.147]],["title/modules/RoleModule.html",[32,1.599,44,2.542]],["body/modules/RoleModule.html",[3,0.117,4,0.102,5,0.102,11,0.013,17,0.244,18,0.873,24,0.117,25,0.288,30,0.009,31,0.009,32,2.227,34,2.014,35,2.737,39,4.389,44,5.052,45,3.34,46,3.163,47,2.328,48,2.328,50,3.006,51,3.006,55,3.249,56,3.249,83,0.968,109,3.777,194,2.607,195,1.578,211,3.542,375,2.109,396,2.78,720,2.213,731,3.777,733,3.599,734,4.129,735,3.599,736,3.599,737,5.052,738,5.052,739,4.129,740,3.599,741,4.06,742,4.129,743,3.599,744,3.599,745,3.249]],["title/injectables/RoleRepository.html",[66,0.852,737,2.542]],["body/injectables/RoleRepository.html",[3,0.093,4,0.082,5,0.082,7,0.192,8,1.333,11,0.013,13,0.511,15,1.829,17,0.242,18,0.699,19,0.83,20,0.858,21,0.858,24,0.093,25,0.23,30,0.008,31,0.008,66,1.015,67,1.264,76,3.507,82,2.115,83,1.609,84,0.49,85,1.092,132,1.093,147,2.716,169,2.147,195,1.264,225,0.763,253,4.235,254,2.087,283,1.767,289,2.087,318,2.087,322,2.087,379,1.544,399,4.091,400,2.24,401,2.147,402,2.24,403,2.24,404,2.24,406,3.913,412,1.544,413,2.451,414,2.393,415,2.516,416,1.544,417,2.451,418,2.393,419,1.544,420,2.571,421,2.602,422,1.544,423,2.393,424,2.226,426,1.365,428,1.365,429,1.981,432,1.365,433,2.393,499,1.688,500,2.857,720,1.772,722,2.226,730,2.393,737,3.029,746,2.882,747,3.306,748,3.306,749,4.183,750,3.306,751,3.306,752,2.087,753,4.446,754,2.602,755,2.602,756,3.306,757,3.306]],["title/classes/RoleResolver.html",[25,0.281,741,2.915]],["body/classes/RoleResolver.html",[3,0.077,4,0.068,5,0.068,7,0.159,8,1.16,10,1.041,11,0.013,13,0.477,15,1.69,17,0.238,18,0.58,19,0.688,20,0.711,21,0.711,24,0.077,25,0.191,26,1.4,27,1.177,28,1.94,30,0.007,31,0.007,82,1.974,83,1.502,84,0.477,85,1.019,89,1.73,94,1.73,132,0.906,147,2.962,169,2.262,191,0.42,201,1.312,212,0.389,215,2.635,218,3.191,219,2.635,254,3.568,268,3.021,274,1.78,289,3.568,318,3.568,322,3.568,339,1.545,415,2.743,426,1.131,428,1.131,429,1.723,432,1.131,460,1.984,461,2.85,466,3.805,467,1.845,468,1.845,469,1.632,470,1.545,471,1.845,472,1.845,473,1.845,475,1.845,478,1.845,479,4.095,482,1.845,485,1.845,488,1.845,720,3.77,722,1.845,738,4.045,740,2.389,741,3.021,743,2.389,752,3.568,753,3.978,754,2.157,755,2.157,758,2.389,759,4.174,760,4.174,761,4.174,762,2.741,763,2.741,764,2.741,765,2.741,766,2.741,767,2.741,768,2.741,769,2.741,770,2.741,771,2.741,772,2.741,773,2.741,774,2.741,775,2.741,776,2.741,777,2.741,778,2.741,779,2.389,780,2.741,781,2.741,782,2.741,783,2.741,784,2.741,785,2.741,786,2.741,787,2.741,788,2.741,789,2.741]],["title/injectables/RoleService.html",[66,0.852,738,2.542]],["body/injectables/RoleService.html",[3,0.104,4,0.091,5,0.091,7,0.214,8,1.441,11,0.013,13,0.53,15,1.907,17,0.237,18,0.78,24,0.104,25,0.257,30,0.008,31,0.008,66,1.097,67,1.409,82,2.193,83,1.669,84,0.53,85,1.132,132,1.218,225,0.825,254,2.327,283,1.843,289,2.327,318,2.327,322,2.327,400,2.422,401,2.321,402,2.422,403,2.422,404,2.422,412,1.721,413,2.649,415,2.623,416,1.721,417,2.649,419,1.721,420,2.78,422,1.721,426,1.522,428,1.522,429,2.141,432,1.522,492,4.445,496,2.668,497,2.668,498,2.668,499,1.883,500,3.088,501,2.668,502,3.275,503,2.668,504,2.668,505,2.668,737,4.333,738,3.275,744,3.213,752,2.327,753,4.723,754,2.901,755,2.901,790,3.213,791,5.187,792,3.687,793,3.687]],["title/injectables/SimpleRepository.html",[66,0.852,399,2.27]],["body/injectables/SimpleRepository.html",[3,0.079,4,0.069,5,0.069,7,0.163,8,1.181,11,0.013,13,0.481,15,1.708,17,0.195,18,0.594,19,0.704,20,0.728,21,0.728,24,0.079,25,0.195,27,1.205,28,2.063,30,0.007,31,0.007,66,0.899,67,1.073,76,3.579,82,1.992,83,1.516,84,0.458,85,1.029,101,1.504,132,0.927,147,2.98,161,1.754,169,2.75,182,4.082,253,4.322,281,1.158,282,1.455,285,1.31,296,1.433,299,1.369,303,1.369,357,1.671,358,1.772,359,3.053,360,1.369,366,2.394,378,1.772,379,1.31,399,2.396,400,1.984,401,1.902,402,2.394,403,1.984,404,2.394,406,4.082,412,1.984,413,2.619,415,2.707,416,1.984,417,2.619,419,1.984,420,2.748,422,1.984,470,1.582,499,2.17,500,3.405,502,1.772,547,3.704,555,1.89,567,2.446,597,2.861,617,2.031,714,2.446,794,2.446,795,2.807,796,2.807,797,2.807,798,2.807,799,2.807,800,2.807,801,2.807,802,2.446,803,4.25,804,2.031,805,2.807,806,2.683,807,2.446,808,2.446,809,2.446,810,2.807,811,2.807,812,2.807,813,4.25,814,2.807,815,2.209,816,2.446,817,3.704,818,2.807,819,2.807,820,2.807,821,2.807,822,2.807,823,2.807,824,2.807]],["title/classes/UpdateGroupingItemInput.html",[25,0.281,425,2.542]],["body/classes/UpdateGroupingItemInput.html",[3,0.109,4,0.095,5,0.095,7,0.223,10,1.136,11,0.013,13,0.519,17,0.211,19,0.965,20,0.999,21,0.999,24,0.109,25,0.372,30,0.008,31,0.008,63,3.401,84,0.519,85,1.2,143,1.41,191,0.59,201,1.722,212,0.546,222,3.12,224,2.785,225,0.85,227,1.17,228,4.833,229,4.833,230,4.833,231,1.579,232,3.353,233,1.796,236,2.206,237,1.106,246,1.527,249,2.043,250,1.145,274,1.844,275,3.598,281,2.739,282,2.103,283,1.033,285,1.796,297,2.391,355,2.607,360,2.995,366,2.495,425,3.374,806,3.877,825,6.077,826,3.848,827,3.848,828,2.785,829,3.848]],["title/classes/UpdateHangmanWordInput.html",[25,0.281,538,2.542]],["body/classes/UpdateHangmanWordInput.html",[3,0.117,4,0.103,5,0.103,7,0.241,10,1.092,11,0.013,13,0.51,17,0.218,19,1.039,20,1.075,21,1.075,24,0.117,25,0.392,30,0.009,31,0.009,61,3.339,84,0.51,85,1.174,143,1.357,191,0.635,201,1.777,212,0.588,225,0.894,227,1.231,231,1.551,236,2.32,237,1.191,241,3.063,243,2.465,244,4.029,245,3.799,246,1.644,247,3.609,249,2.149,250,1.232,274,1.562,281,2.825,282,2.185,283,1.112,285,1.933,297,2.515,355,2.742,360,3.113,366,2.624,538,3.549,806,4.029,828,2.997,830,5.386,831,3.609,832,4.141]],["title/classes/UpdateMirrorWordInput.html",[25,0.281,646,2.542]],["body/classes/UpdateMirrorWordInput.html",[3,0.127,4,0.111,5,0.111,7,0.261,10,1.017,11,0.013,13,0.495,17,0.225,19,1.128,20,1.167,21,1.167,24,0.127,25,0.414,30,0.009,31,0.009,58,3.245,84,0.495,85,0.945,143,1.302,191,0.689,212,0.638,225,0.945,227,1.301,231,1.507,236,2.452,237,1.293,243,2.677,245,3.96,246,2.359,249,2.543,250,1.338,252,2.977,281,2.921,282,2.278,283,1.208,285,2.1,355,2.898,360,3.245,366,2.773,646,3.75,806,4.2,828,3.255,830,5.235,831,3.92,833,4.498]],["title/classes/UpdateRoleInput.html",[25,0.281,752,2.542]],["body/classes/UpdateRoleInput.html",[3,0.109,4,0.096,5,0.096,7,0.225,10,1.139,11,0.013,13,0.52,17,0.211,19,0.971,20,1.004,21,1.004,24,0.109,25,0.374,30,0.008,31,0.008,83,1.444,84,0.52,85,1.202,143,1.411,191,0.593,201,1.392,212,0.549,225,0.853,227,1.174,231,1.583,233,1.806,236,2.214,237,1.112,246,1.536,249,2.542,250,1.151,256,2.8,257,4.457,258,4.847,263,2.875,274,1.848,275,2.605,281,2.745,282,2.109,283,1.039,285,1.806,297,2.401,331,5.797,355,2.617,360,3.004,366,2.504,752,3.387,806,3.888,828,2.8,834,6.089,835,5.365,836,3.869,837,3.869,838,3.869,839,3.869,840,3.869]],["title/classes/UpdateUserInput.html",[25,0.281,841,2.542]],["body/classes/UpdateUserInput.html",[3,0.091,4,0.08,5,0.08,7,0.188,10,1.234,11,0.013,13,0.547,17,0.195,19,0.811,20,0.839,21,0.839,24,0.091,25,0.329,30,0.007,31,0.007,84,0.547,85,1.24,143,1.462,144,3.519,146,3.143,191,0.495,201,1.966,212,0.458,225,0.751,227,1.033,231,1.666,233,1.508,236,1.948,237,0.929,246,1.283,249,1.804,250,0.961,266,2.338,267,4.387,268,4.035,269,4.387,274,2.003,275,3.177,278,4.113,281,2.53,282,1.909,283,0.868,284,2.039,285,1.508,297,3.047,355,2.302,360,2.719,366,2.203,806,3.519,841,2.979,842,6.409,843,5.575,844,5.575,845,3.231,846,3.231,847,3.231,848,3.231,849,3.231,850,3.231,851,3.231,852,3.231,853,3.231]],["title/classes/User.html",[25,0.281,141,2.158]],["body/classes/User.html",[3,0.088,4,0.077,5,0.077,7,0.181,10,1.248,11,0.013,13,0.543,17,0.214,19,0.784,20,0.811,21,0.811,24,0.154,25,0.218,30,0.007,31,0.007,84,0.566,85,1.136,96,3.082,141,2.929,143,1.341,144,3.451,146,3.082,161,1.289,191,0.479,195,1.194,201,1.195,212,0.443,227,1.008,231,1.651,233,1.458,267,4.302,268,3.956,269,4.302,274,1.676,275,2.103,297,2.06,355,2.245,357,3.254,358,3.451,359,3.254,360,2.667,361,2.103,362,3.681,364,4.061,366,3.141,368,3.099,373,3.099,374,5.061,375,2.792,376,2.103,377,2.103,378,2.906,379,2.149,381,2.103,720,2.467,722,3.681,745,2.458,804,2.261,815,3.623,854,2.261,855,3.123,856,3.123,857,3.123,858,3.123,859,3.123,860,3.123,861,3.123,862,4.603,863,3.123,864,3.123,865,3.123,866,2.458,867,3.123,868,2.458,869,3.123,870,2.261,871,2.722]],["title/injectables/UserRepository.html",[66,0.852,872,2.542]],["body/injectables/UserRepository.html",[3,0.069,4,0.06,5,0.06,7,0.142,8,1.059,11,0.013,13,0.455,15,1.602,17,0.229,18,0.516,19,0.612,20,0.633,21,0.633,24,0.069,25,0.17,27,1.638,28,1.95,30,0.006,31,0.006,66,0.807,67,0.932,76,3.483,82,1.883,83,1.432,84,0.455,85,0.972,96,1.374,101,2.043,132,1.26,141,2.846,144,1.539,146,2.15,147,2.868,153,1.918,154,1.918,155,1.918,156,1.918,157,1.918,158,1.918,159,1.918,160,1.918,161,1.938,162,1.641,163,1.764,165,3.001,168,2.125,169,2.101,181,4.18,182,4.289,183,2.125,184,2.125,195,0.932,253,4.206,264,3.353,282,1.608,291,3.353,324,3.353,334,3.353,357,1.451,359,1.451,366,1.78,379,1.78,400,1.78,401,1.706,402,2.192,403,1.78,404,1.78,406,4.032,412,1.78,415,2.526,416,1.78,419,1.78,422,1.78,424,1.641,426,1.006,428,1.006,429,1.574,432,1.006,499,1.947,555,1.641,720,1.306,722,1.641,730,1.764,749,4.093,802,2.125,804,1.764,807,2.125,808,2.125,809,2.125,815,1.918,816,2.125,817,4.093,841,3.353,866,1.918,868,1.918,872,2.407,873,1.918,874,2.438,875,2.438,876,3.813,877,2.438,878,2.438,879,2.438,880,2.438,881,2.438,882,2.438,883,3.696,884,1.918,885,1.918,886,2.438,887,2.438,888,2.438,889,2.438,890,3.813,891,2.438,892,2.438,893,2.438,894,2.438,895,2.438,896,2.438,897,2.438,898,2.438,899,2.438,900,2.438,901,3.813,902,2.438,903,2.438,904,2.438,905,2.438,906,2.438,907,2.438,908,2.438,909,2.438,910,2.438,911,2.438]],["title/modules/UsersModule.html",[32,1.599,45,2.397]],["body/modules/UsersModule.html",[3,0.118,4,0.103,5,0.103,11,0.013,17,0.248,18,0.881,24,0.118,25,0.29,30,0.009,31,0.009,32,2.241,34,2.032,35,2.753,39,3.36,44,3.563,45,4.64,46,3.182,47,2.349,48,2.349,50,3.024,51,2.232,56,3.278,57,3.631,83,1.323,109,4.31,134,4.518,141,2.232,194,2.63,195,1.592,211,3.563,375,2.882,396,2.805,720,2.232,731,3.8,745,3.278,866,3.278,870,4.085,872,4.667,912,3.631,913,3.631,914,3.631,915,4.166,916,3.631,917,4.085,918,4.166,919,3.631,920,3.631,921,4.166]],["title/classes/UsersResolver.html",[25,0.281,917,2.915]],["body/classes/UsersResolver.html",[3,0.077,4,0.067,5,0.067,7,0.158,8,1.151,10,1.037,11,0.013,13,0.475,15,1.683,17,0.238,18,0.574,19,0.681,20,0.705,21,0.705,24,0.077,25,0.189,26,1.386,27,1.166,28,1.932,30,0.007,31,0.007,82,1.967,83,1.496,84,0.475,85,1.015,89,1.714,94,1.714,96,1.531,132,0.897,134,3.599,141,3.759,147,2.954,169,2.249,191,0.416,201,1.075,212,0.385,215,2.616,218,3.172,219,2.616,264,3.55,274,1.683,291,3.55,324,3.55,334,3.55,339,1.531,415,2.736,426,1.12,428,1.12,429,1.71,432,1.12,451,3.637,452,1.965,455,1.965,461,3.599,464,1.965,466,3.786,467,1.828,468,1.828,469,1.616,470,1.531,471,1.828,472,1.828,473,1.828,475,1.828,478,1.828,479,4.077,482,1.828,485,1.828,488,1.828,779,2.366,841,3.55,883,3.955,884,2.136,885,2.136,916,2.366,917,2.999,920,2.366,922,2.366,923,4.144,924,4.144,925,4.144,926,4.144,927,2.715,928,2.715,929,2.715,930,2.715,931,2.715,932,2.715,933,2.715,934,2.715,935,2.715,936,2.715,937,2.715,938,2.715,939,2.715,940,2.715,941,2.715,942,2.715,943,2.715,944,2.715,945,2.715,946,2.715,947,2.715,948,2.715,949,2.715,950,2.715,951,2.715,952,2.715,953,2.715]],["title/injectables/UsersService.html",[66,0.852,134,2.27]],["body/injectables/UsersService.html",[3,0.087,4,0.076,5,0.076,7,0.179,8,1.267,11,0.013,13,0.499,15,1.777,17,0.226,18,0.652,19,0.773,20,0.8,21,0.8,24,0.087,25,0.215,26,1.574,27,1.324,28,2.041,30,0.007,31,0.007,66,0.964,67,1.178,76,3.391,82,2.063,83,1.57,84,0.499,85,1.065,96,1.738,101,1.652,132,1.019,134,2.57,147,3.05,153,2.426,154,2.426,155,2.426,156,2.426,157,2.426,158,2.426,159,2.426,160,2.426,161,1.272,162,2.075,163,2.231,169,2.427,253,4.394,264,3.784,291,3.784,324,3.784,334,3.784,400,2.128,401,2.04,402,2.128,403,2.128,404,2.128,412,2.128,415,2.445,416,2.128,419,2.128,422,2.128,426,1.272,428,1.272,429,1.881,432,1.272,499,2.328,841,3.784,872,4.227,883,4.269,884,2.426,885,2.426,919,2.687,954,2.426,955,3.082,956,3.082,957,3.082,958,3.082,959,3.082,960,3.082,961,3.082,962,3.082,963,3.082,964,3.082,965,3.082,966,2.426,967,3.082,968,3.082,969,3.082]],["title/coverage.html",[970,4.807]],["body/coverage.html",[0,1.969,1,1.27,5,0.043,6,1.53,11,0.013,22,1.108,25,0.559,30,0.005,31,0.005,58,2.375,59,1.969,61,2.375,62,1.969,63,2.375,64,1.969,66,1.481,68,1.53,72,1.27,73,1.53,84,0.131,90,1.045,92,1.27,106,1.182,107,1.182,129,2.301,134,0.99,141,0.941,162,2.53,182,1.108,186,1.381,188,1.381,192,1.27,196,1.381,213,1.53,221,1.108,222,2.799,223,1.53,224,2.72,226,0.941,238,1.045,240,1.108,241,2.799,242,2.301,243,3.13,251,1.108,252,2.799,254,1.108,255,1.53,256,2.72,264,1.108,265,1.53,266,2.72,279,1.108,280,1.53,281,0.724,286,1.108,287,2.301,288,1.108,289,1.108,290,1.53,291,1.108,292,1.53,293,1.108,294,2.301,295,1.53,296,0.896,301,1.108,302,1.53,303,0.856,307,1.108,308,2.951,309,2.301,313,1.108,314,2.301,316,1.108,317,1.108,318,1.108,319,2.301,320,1.53,322,1.108,323,1.53,324,1.108,325,2.301,326,1.53,327,1.108,332,1.381,334,1.108,335,1.53,336,3.074,337,1.53,339,0.99,340,1.53,341,2.72,351,1.53,352,1.108,353,2.53,354,2.116,382,1.27,387,1.108,388,1.108,391,1.27,398,1.53,399,0.99,425,1.108,442,1.53,461,0.99,469,1.045,470,0.99,491,1.53,492,1.045,507,1.108,508,2.53,509,2.951,518,1.27,523,1.108,524,1.108,527,1.27,533,2.301,538,1.108,555,5.611,570,2.301,593,2.301,595,2.301,599,1.53,601,1.381,602,1.53,603,1.53,620,1.53,622,1.53,630,1.108,631,2.53,634,1.27,639,1.108,640,1.108,641,1.27,646,1.108,670,1.381,672,1.53,673,1.53,704,1.53,705,1.53,720,0.941,721,2.116,731,1.182,737,1.108,738,1.108,741,1.27,746,1.53,752,1.108,758,1.53,790,1.53,794,1.53,825,1.53,830,2.301,834,1.53,841,1.108,842,1.53,854,2.116,870,1.27,872,1.108,873,2.301,917,1.27,922,1.53,954,2.301,970,1.53,971,1.53,972,1.755,973,1.755,974,7.353,975,2.924,976,7.004,977,7.353,978,1.53,979,1.53,980,1.53,981,2.548,982,5.575,983,1.53,984,1.53,985,1.53,986,1.53,987,3.758,988,4.383,989,2.924,990,7.163,991,2.924,992,1.53,993,2.548,994,1.53,995,1.53,996,1.755,997,1.53,998,1.755,999,1.755]],["title/dependencies.html",[35,2.365,1000,3.354]],["body/dependencies.html",[11,0.013,18,0.886,25,0.292,30,0.009,31,0.009,35,2.044,95,4.459,111,3.298,113,3.033,115,2.495,121,3.298,191,0.642,195,1.602,250,1.247,379,1.956,610,5.053,621,3.298,681,3.652,1001,4.191,1002,7.701,1003,4.191,1004,4.191,1005,4.191,1006,4.191,1007,5.667,1008,4.939,1009,4.191,1010,4.191,1011,4.191,1012,4.191,1013,6.878,1014,4.191,1015,4.191,1016,4.191,1017,4.191,1018,4.191,1019,3.652,1020,4.191,1021,4.191,1022,3.652,1023,4.191,1024,4.191,1025,4.191,1026,4.191,1027,4.191,1028,4.191,1029,4.191,1030,4.191,1031,4.191,1032,5.667,1033,4.191,1034,3.652,1035,4.191,1036,4.191,1037,4.191,1038,4.191,1039,4.191,1040,4.191,1041,4.191,1042,4.191,1043,4.191,1044,4.191,1045,4.191,1046,4.191,1047,4.191,1048,4.191,1049,4.191,1050,4.191,1051,4.191,1052,4.191,1053,4.191,1054,4.191]],["title/miscellaneous/functions.html",[1055,2.117,1056,4.226]],["body/miscellaneous/functions.html",[7,0.366,11,0.012,30,0.012,31,0.012,995,5.498,997,6.754,1055,3.982,1056,5.498,1057,6.308]],["title/index.html",[7,0.195,1058,3.354,1059,3.354]],["body/index.html",[4,0.068,11,0.01,19,0.685,30,0.007,31,0.007,35,1.332,95,2.149,182,2.627,401,1.222,560,4.395,565,4.395,804,1.976,966,3.275,971,4.395,1019,2.38,1022,3.627,1034,2.38,1060,2.73,1061,5.043,1062,2.73,1063,5.043,1064,7.689,1065,2.73,1066,2.73,1067,2.73,1068,6.859,1069,2.73,1070,2.73,1071,4.162,1072,2.73,1073,2.73,1074,2.73,1075,2.73,1076,2.73,1077,2.73,1078,2.73,1079,5.043,1080,5.043,1081,2.73,1082,4.162,1083,6.072,1084,6.859,1085,2.73,1086,4.162,1087,6.398,1088,2.73,1089,2.73,1090,6.072,1091,2.73,1092,5.64,1093,2.73,1094,5.043,1095,4.162,1096,2.73,1097,2.73,1098,2.73,1099,7.48,1100,2.73,1101,2.73,1102,2.73,1103,4.162,1104,2.73,1105,2.73,1106,2.73,1107,2.73,1108,2.73,1109,2.73,1110,2.73,1111,2.73,1112,6.654,1113,4.162,1114,7.168,1115,5.043,1116,2.73,1117,6.654,1118,4.162,1119,2.73,1120,2.73,1121,4.162,1122,2.73,1123,2.73,1124,2.73,1125,2.73,1126,2.73,1127,2.73,1128,2.73,1129,2.73,1130,2.73,1131,2.73,1132,2.73,1133,2.73,1134,5.043,1135,2.73,1136,5.043,1137,2.73,1138,5.043,1139,2.73,1140,2.73,1141,2.73,1142,2.73,1143,2.73,1144,2.73,1145,2.73,1146,2.38,1147,4.162,1148,5.043,1149,6.398,1150,5.64,1151,4.162,1152,2.73,1153,2.73,1154,4.162,1155,6.398,1156,2.73,1157,2.73,1158,2.73,1159,2.73,1160,2.73,1161,3.627,1162,2.73,1163,2.73,1164,2.73,1165,2.73,1166,4.162,1167,4.162,1168,5.64,1169,4.162,1170,2.73,1171,2.73,1172,2.73,1173,2.73,1174,2.73,1175,2.73,1176,2.73,1177,2.73,1178,2.73,1179,2.73,1180,2.73,1181,4.162,1182,2.73,1183,2.73,1184,2.73,1185,2.73,1186,2.73,1187,2.73,1188,2.73,1189,2.73,1190,2.73,1191,2.73,1192,2.73,1193,2.73,1194,2.73,1195,2.73,1196,2.73,1197,2.73,1198,2.73,1199,2.73,1200,2.73,1201,2.73,1202,2.73,1203,2.73]],["title/modules.html",[34,2.69]],["body/modules.html",[11,0.011,30,0.011,31,0.011,33,3.994,34,2.692,39,3.285,40,3.715,41,3.715,42,3.715,43,3.715,44,3.484,45,3.285,1008,7.036,1161,4.81,1204,8.073,1205,8.073,1206,8.152,1207,5.518]],["title/overview.html",[1208,4.807]],["body/overview.html",[2,2.03,11,0.013,22,3.51,30,0.007,31,0.007,33,5.779,34,1.569,35,2.294,36,2.803,37,2.803,38,2.803,39,4.443,40,3.743,41,4.945,42,4.945,43,4.945,44,4.776,45,4.286,46,2.652,47,1.813,48,1.813,67,1.229,90,3.31,104,2.803,105,2.803,106,3.743,107,3.743,134,3.959,212,0.456,384,2.803,385,2.803,386,2.803,387,4.433,388,4.433,520,2.803,521,2.803,522,2.803,523,4.433,524,4.433,636,2.803,637,2.803,638,2.803,639,4.433,640,4.433,670,2.531,733,2.803,735,2.803,736,2.803,737,4.433,738,4.433,872,3.51,912,2.803,913,2.803,914,2.803,1208,2.803,1209,3.216,1210,3.216,1211,3.216,1212,3.216,1213,3.216]],["title/miscellaneous/typealiases.html",[1055,2.117,1214,4.849]],["body/miscellaneous/typealiases.html",[7,0.33,11,0.011,30,0.011,31,0.011,84,0.422,222,2.539,241,2.539,252,2.539,353,3.82,354,4.982,380,5.417,508,3.82,509,5.187,517,5.417,631,3.82,633,5.417,721,4.106,730,4.982,854,4.106,868,5.417,1055,3.582,1215,5.674,1216,4.945,1217,4.945,1218,4.945,1219,4.945,1220,4.945]],["title/miscellaneous/variables.html",[1055,2.117,1221,4.226]],["body/miscellaneous/variables.html",[7,0.184,11,0.013,28,1.758,30,0.007,31,0.007,50,1.696,51,1.696,76,1.478,84,0.41,87,2.291,112,2.491,129,2.491,136,4.802,143,0.855,147,1.306,161,1.919,162,4.552,163,3.987,186,3.658,188,3.658,196,3.658,201,0.822,222,1.416,241,1.416,252,1.416,344,2.491,346,2.491,353,2.131,354,3.365,382,3.365,383,2.759,469,2.767,470,2.621,508,2.131,509,4.088,518,3.365,519,2.759,617,2.291,631,2.131,634,3.365,635,2.759,692,2.759,693,2.759,694,2.759,695,2.759,721,2.291,731,3.13,732,2.759,854,2.291,870,3.365,871,2.759,873,2.491,954,2.491,966,2.491,978,2.759,979,4.052,980,4.052,981,2.759,983,2.759,984,2.759,985,4.052,986,2.759,992,2.759,993,5.636,994,2.759,1055,1.998,1146,4.802,1216,2.759,1217,2.759,1218,2.759,1219,2.759,1220,2.759,1221,2.759,1222,3.166,1223,3.166,1224,3.166,1225,3.166,1226,3.166,1227,3.166,1228,3.166,1229,3.166,1230,4.649,1231,3.166,1232,7.88,1233,7.88,1234,3.166,1235,4.649,1236,3.166,1237,3.166,1238,3.166,1239,5.509,1240,3.166,1241,4.649,1242,3.166,1243,3.166,1244,3.166,1245,3.166,1246,3.166,1247,3.166,1248,5.509,1249,3.166,1250,3.166,1251,3.166,1252,4.649,1253,3.166,1254,4.649,1255,3.166,1256,3.166,1257,3.166,1258,3.166,1259,3.166,1260,3.166]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":555,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"guards/PermissionGuard.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["0.1.13",{"_index":1046,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":1054,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1026,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":1041,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1213,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["1.1.18",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":966,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["13.1.0",{"_index":1002,"title":{},"body":{"dependencies.html":{}}}],["13.4.6",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["14.2.0",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["15.0.0",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":1211,"title":{},"body":{"overview.html":{}}}],["17.5.0",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1210,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":1050,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1025,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":1237,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["44",{"_index":1212,"title":{},"body":{"overview.html":{}}}],["6.1.7",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":1048,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["8",{"_index":1209,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":1052,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["9.1.2",{"_index":1015,"title":{},"body":{"dependencies.html":{}}}],["__data",{"_index":411,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["_id",{"_index":357,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["abilities",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["above",{"_index":1118,"title":{},"body":{"index.html":{}}}],["abstract",{"_index":338,"title":{},"body":{"classes/GqlArg.html":{},"classes/GqlInput.html":{}}}],["access_token",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["add",{"_index":1084,"title":{},"body":{"index.html":{}}}],["adding",{"_index":1078,"title":{},"body":{"index.html":{}}}],["address",{"_index":895,"title":{},"body":{"injectables/UserRepository.html":{}}}],["advanced",{"_index":1194,"title":{},"body":{"index.html":{}}}],["advantage",{"_index":1187,"title":{},"body":{"index.html":{}}}],["affected",{"_index":1154,"title":{},"body":{"index.html":{}}}],["affected:e2e",{"_index":1158,"title":{},"body":{"index.html":{}}}],["affected:test",{"_index":1153,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":1215,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alongside",{"_index":1192,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1098,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1007,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["any).deletedat",{"_index":818,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["any).updatedat",{"_index":906,"title":{},"body":{"injectables/UserRepository.html":{}}}],["any).user",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["api",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["apollo",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":1117,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":1113,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1087,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":33,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/.../auth.service.ts",{"_index":1222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../configuration.ts",{"_index":1225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../current",{"_index":1226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":1227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":1228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../grouping",{"_index":1216,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../hangman",{"_index":1217,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":1057,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mirror",{"_index":1218,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../mongo",{"_index":1229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../permission.decorator.ts",{"_index":1230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../role.entity.ts",{"_index":1219,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../user.entity.ts",{"_index":1220,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../user.repository.ts",{"_index":1224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../users.service.ts",{"_index":1223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../validation.ts",{"_index":1231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/api/src/app/app.module.ts",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/app/auth/auth.controller.ts",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/auth.controller.ts:13",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/api/src/app/auth/auth.module.ts",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/api/src/app/auth/auth.service.ts",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/auth.service.ts:10",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:18",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:23",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:33",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/decorators/current",{"_index":978,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/decorators/permission.decorator.ts",{"_index":981,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/guards/gql",{"_index":340,"title":{},"body":{"classes/GqlAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/jwt",{"_index":602,"title":{},"body":{"classes/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/local",{"_index":620,"title":{},"body":{"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/permission",{"_index":672,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts",{"_index":603,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts:19",{"_index":607,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts:7",{"_index":604,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts",{"_index":622,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts:13",{"_index":625,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts:8",{"_index":624,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["apps/api/src/app/core/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["apps/api/src/app/core/app.controller.ts:12",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/api/src/app/core/app.service.ts",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["apps/api/src/app/core/app.service.ts:6",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/api/src/app/core/config/configuration.ts",{"_index":983,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/core/config/mongo",{"_index":984,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/core/config/validation.ts",{"_index":986,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/core/core.module.ts",{"_index":185,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/api/src/app/core/core.resolver.ts",{"_index":213,"title":{},"body":{"classes/CoreResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/core/core.resolver.ts:6",{"_index":216,"title":{},"body":{"classes/CoreResolver.html":{}}}],["apps/api/src/app/grouping",{"_index":222,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/hangman",{"_index":241,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/UpdateHangmanWordInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/mirror",{"_index":252,"title":{},"body":{"classes/CreateMirrorWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/role/dto/args/get",{"_index":319,"title":{},"body":{"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/create",{"_index":255,"title":{},"body":{"classes/CreateRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/delete",{"_index":290,"title":{},"body":{"classes/DeleteRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/update",{"_index":834,"title":{},"body":{"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts",{"_index":721,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:13",{"_index":723,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:17",{"_index":726,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:21",{"_index":727,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:25",{"_index":728,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:29",{"_index":724,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:33",{"_index":729,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:37",{"_index":725,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.repository.ts",{"_index":746,"title":{},"body":{"injectables/RoleRepository.html":{},"coverage.html":{}}}],["apps/api/src/app/role/entities/role.repository.ts:22",{"_index":748,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["apps/api/src/app/role/role.module.ts",{"_index":739,"title":{},"body":{"modules/RoleModule.html":{}}}],["apps/api/src/app/role/role.resolver.ts",{"_index":758,"title":{},"body":{"classes/RoleResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/role/role.resolver.ts:17",{"_index":763,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:23",{"_index":772,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:30",{"_index":774,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:37",{"_index":766,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:44",{"_index":777,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:51",{"_index":769,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.service.ts",{"_index":790,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["apps/api/src/app/role/role.service.ts:18",{"_index":792,"title":{},"body":{"injectables/RoleService.html":{}}}],["apps/api/src/app/users/dto/args/get",{"_index":325,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/create",{"_index":265,"title":{},"body":{"classes/CreateUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/delete",{"_index":292,"title":{},"body":{"classes/DeleteUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/update",{"_index":842,"title":{},"body":{"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts",{"_index":854,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:15",{"_index":855,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:19",{"_index":865,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:23",{"_index":859,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:26",{"_index":860,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:30",{"_index":858,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:34",{"_index":863,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:38",{"_index":856,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:42",{"_index":864,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:46",{"_index":857,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts",{"_index":873,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:17",{"_index":875,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:23",{"_index":879,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:29",{"_index":880,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:37",{"_index":877,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:41",{"_index":881,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:60",{"_index":878,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/users.module.ts",{"_index":915,"title":{},"body":{"modules/UsersModule.html":{}}}],["apps/api/src/app/users/users.resolver.ts",{"_index":922,"title":{},"body":{"classes/UsersResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/users/users.resolver.ts:17",{"_index":928,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:23",{"_index":938,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:30",{"_index":942,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:37",{"_index":930,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:44",{"_index":934,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:51",{"_index":932,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.service.ts",{"_index":954,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/users.service.ts:13",{"_index":956,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:16",{"_index":959,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:20",{"_index":960,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:24",{"_index":957,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:29",{"_index":961,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:33",{"_index":958,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/environments/environment.prod.ts",{"_index":992,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/environments/environment.ts",{"_index":994,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/main.ts",{"_index":995,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/api/src/shared/gql",{"_index":336,"title":{},"body":{"classes/GqlArg.html":{},"classes/GqlInput.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/repository",{"_index":704,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts",{"_index":794,"title":{},"body":{"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:16",{"_index":796,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:19",{"_index":799,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:25",{"_index":800,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:30",{"_index":797,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:40",{"_index":801,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:48",{"_index":798,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arg.abstract",{"_index":333,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{}}}],["arg.abstract.ts",{"_index":337,"title":{},"body":{"classes/GqlArg.html":{},"coverage.html":{}}}],["args",{"_index":467,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["args/gql",{"_index":332,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/GqlArg.html":{},"coverage.html":{}}}],["args/id.args",{"_index":299,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUsersArgs.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{}}}],["args/id.args.ts",{"_index":595,"title":{},"body":{"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"coverage.html":{}}}],["args/id.args.ts:14",{"_index":596,"title":{},"body":{"classes/IdArg.html":{}}}],["args/id.args.ts:8",{"_index":598,"title":{},"body":{"classes/IdArrayArg.html":{}}}],["argstype",{"_index":300,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{}}}],["artifacts",{"_index":1140,"title":{},"body":{"index.html":{}}}],["async",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["auth.guard.ts",{"_index":341,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":345,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["auth.service",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["auth/decorators/permission.decorator",{"_index":471,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["auth/guards/gql",{"_index":468,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["auth/guards/permission",{"_index":472,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["authcontroller",{"_index":72,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":347,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":349,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{}}}],["authmechanism=mongodb",{"_index":1246,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authmodule",{"_index":39,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":90,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":1132,"title":{},"body":{"index.html":{}}}],["autoschemafile",{"_index":204,"title":{},"body":{"modules/CoreModule.html":{}}}],["available",{"_index":1207,"title":{},"body":{"modules.html":{}}}],["await",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["backend",{"_index":1202,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":802,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["badrequestexception('cannot",{"_index":819,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["badrequestexception('current",{"_index":899,"title":{},"body":{"injectables/UserRepository.html":{}}}],["bcrypt",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare(data.password",{"_index":898,"title":{},"body":{"injectables/UserRepository.html":{}}}],["bcrypt.compare(password",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":965,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcryptjs",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["below",{"_index":1096,"title":{},"body":{"index.html":{}}}],["bootstrap",{"_index":997,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":1200,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1206,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1008,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":1068,"title":{},"body":{"index.html":{}}}],["building",{"_index":1188,"title":{},"body":{"index.html":{}}}],["caching",{"_index":1171,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":674,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["canactivate(context",{"_index":678,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["capabilities",{"_index":1079,"title":{},"body":{"index.html":{}}}],["category",{"_index":244,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/UpdateHangmanWordInput.html":{}}}],["cert",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":1134,"title":{},"body":{"index.html":{}}}],["class",{"_index":25,"title":{"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":212,"title":{},"body":{"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"overview.html":{}}}],["cli",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["cloud",{"_index":1168,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_groupingitemmodule",{"_index":384,"title":{},"body":{"modules/GroupingItemModule.html":{},"overview.html":{}}}],["cluster_groupingitemmodule_exports",{"_index":385,"title":{},"body":{"modules/GroupingItemModule.html":{},"overview.html":{}}}],["cluster_groupingitemmodule_providers",{"_index":386,"title":{},"body":{"modules/GroupingItemModule.html":{},"overview.html":{}}}],["cluster_hangmanwordmodule",{"_index":520,"title":{},"body":{"modules/HangmanWordModule.html":{},"overview.html":{}}}],["cluster_hangmanwordmodule_exports",{"_index":521,"title":{},"body":{"modules/HangmanWordModule.html":{},"overview.html":{}}}],["cluster_hangmanwordmodule_providers",{"_index":522,"title":{},"body":{"modules/HangmanWordModule.html":{},"overview.html":{}}}],["cluster_mirrorwordmodule",{"_index":636,"title":{},"body":{"modules/MirrorWordModule.html":{},"overview.html":{}}}],["cluster_mirrorwordmodule_exports",{"_index":638,"title":{},"body":{"modules/MirrorWordModule.html":{},"overview.html":{}}}],["cluster_mirrorwordmodule_providers",{"_index":637,"title":{},"body":{"modules/MirrorWordModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":733,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_exports",{"_index":735,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_imports",{"_index":734,"title":{},"body":{"modules/RoleModule.html":{}}}],["cluster_rolemodule_providers",{"_index":736,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":912,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":913,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":914,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":1136,"title":{},"body":{"index.html":{}}}],["community",{"_index":1111,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":1138,"title":{},"body":{"index.html":{}}}],["computation",{"_index":1170,"title":{},"body":{"index.html":{}}}],["config.factory",{"_index":198,"title":{},"body":{"modules/CoreModule.html":{}}}],["config.factory.ts",{"_index":985,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":187,"title":{},"body":{"modules/CoreModule.html":{}}}],["config/mongo",{"_index":197,"title":{},"body":{"modules/CoreModule.html":{}}}],["config/validation",{"_index":189,"title":{},"body":{"modules/CoreModule.html":{}}}],["configmodule",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":199,"title":{},"body":{"modules/CoreModule.html":{}}}],["configservice",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["configservice.get",{"_index":1244,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_cert",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":186,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":1182,"title":{},"body":{"index.html":{}}}],["console.log('user",{"_index":629,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["const",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"guards/PermissionGuard.html":{},"classes/Role.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(groupingitem.name",{"_index":434,"title":{},"body":{"injectables/GroupingItemRepository.html":{}}}],["constructor(@injectmodel(hangmanword.name",{"_index":542,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["constructor(@injectmodel(mirrorword.name",{"_index":647,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["constructor(@injectmodel(role.name",{"_index":756,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["constructor(authservice",{"_index":623,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(hangmanwordmodel",{"_index":534,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["constructor(mirrorwordmodel",{"_index":644,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["constructor(mirrorwordservice",{"_index":653,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["constructor(model",{"_index":795,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["constructor(private",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(protected",{"_index":714,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{}}}],["constructor(reflector",{"_index":675,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["constructor(repository",{"_index":493,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{}}}],["constructor(resourcemodel",{"_index":405,"title":{},"body":{"injectables/GroupingItemRepository.html":{}}}],["constructor(rolemodel",{"_index":747,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["constructor(rolerepository",{"_index":791,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(roleservice",{"_index":762,"title":{},"body":{"classes/RoleResolver.html":{}}}],["constructor(service",{"_index":447,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{}}}],["constructor(usermodel",{"_index":874,"title":{},"body":{"injectables/UserRepository.html":{}}}],["constructor(userrepository",{"_index":955,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(usersservice",{"_index":927,"title":{},"body":{"classes/UsersResolver.html":{}}}],["context",{"_index":346,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["context.getclass",{"_index":684,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["context.gethandler",{"_index":685,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["context.gettype",{"_index":692,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest().user",{"_index":694,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["core",{"_index":1097,"title":{},"body":{"index.html":{}}}],["core.resolver",{"_index":193,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/app.controller",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["core/app.service",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["core/core.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["coremodule",{"_index":40,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coreresolver",{"_index":192,"title":{"classes/CoreResolver.html":{}},"body":{"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"coverage.html":{}}}],["correct",{"_index":228,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/GroupingItem.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["count",{"_index":437,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["coverage",{"_index":970,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":401,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(data",{"_index":412,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["createdat",{"_index":358,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{}}}],["creategroupingitem",{"_index":443,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["creategroupingitem(@args('creategroupingitemdata",{"_index":483,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["creategroupingitem(data",{"_index":450,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["creategroupingiteminput",{"_index":221,"title":{"classes/CreateGroupingItemInput.html":{}},"body":{"classes/CreateGroupingItemInput.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["createhangmanword",{"_index":571,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["createhangmanword(@args('createhangmanworddata",{"_index":590,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["createhangmanword(data",{"_index":576,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["createhangmanwordinput",{"_index":240,"title":{"classes/CreateHangmanWordInput.html":{}},"body":{"classes/CreateHangmanWordInput.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["createmirrorword",{"_index":649,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["createmirrorword(@args('createmirrorworddata",{"_index":664,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["createmirrorword(data",{"_index":654,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["createmirrorwordinput",{"_index":251,"title":{"classes/CreateMirrorWordInput.html":{}},"body":{"classes/CreateMirrorWordInput.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["createparamdecorator((_data",{"_index":1238,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrole",{"_index":759,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createrole(@args('createroledata",{"_index":784,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createrole(data",{"_index":764,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createroleinput",{"_index":254,"title":{"classes/CreateRoleInput.html":{}},"body":{"classes/CreateRoleInput.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["createuser",{"_index":923,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(@args('createuserdata",{"_index":948,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(data",{"_index":929,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuserinput",{"_index":264,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["currentuser",{"_index":980,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cypress",{"_index":1157,"title":{},"body":{"index.html":{}}}],["data",{"_index":415,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["data.category",{"_index":549,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data.email",{"_index":890,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.id",{"_index":817,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["data.ids.includes(x._id.tostring",{"_index":557,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data.ids?.length",{"_index":554,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data.newpassword",{"_index":901,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.newpasswordconfirm",{"_index":902,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.password",{"_index":964,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.updatedat",{"_index":821,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["data?.category",{"_index":544,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data?.ids",{"_index":545,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data?.roles?.map((roleid",{"_index":908,"title":{},"body":{"injectables/UserRepository.html":{}}}],["database_host",{"_index":1243,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":1245,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":366,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["date.now",{"_index":824,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["decoded",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoded.email",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}}}],["default",{"_index":1232,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["del",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["delete",{"_index":402,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["delete(data",{"_index":416,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["deleted",{"_index":820,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["deletedat",{"_index":359,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["deletegroupingitem",{"_index":444,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["deletegroupingitem(@args('deletegroupingitemdata",{"_index":489,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["deletegroupingitem(data",{"_index":454,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["deletegroupingiteminput",{"_index":279,"title":{"classes/DeleteGroupingItemInput.html":{}},"body":{"classes/DeleteGroupingItemInput.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["deletehangmanword",{"_index":572,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["deletehangmanword(@args('deletehangmanworddata",{"_index":592,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["deletehangmanword(data",{"_index":578,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["deletehangmanwordinput",{"_index":286,"title":{"classes/DeleteHangmanWordInput.html":{}},"body":{"classes/DeleteHangmanWordInput.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["deletemirrorword",{"_index":650,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["deletemirrorword(@args('deletemirrorworddata",{"_index":668,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["deletemirrorword(data",{"_index":655,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["deletemirrorwordinput",{"_index":288,"title":{"classes/DeleteMirrorWordInput.html":{}},"body":{"classes/DeleteMirrorWordInput.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["deleterole",{"_index":760,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleterole(@args('deleteroledata",{"_index":788,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleterole(data",{"_index":767,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleteroleinput",{"_index":289,"title":{"classes/DeleteRoleInput.html":{}},"body":{"classes/DeleteRoleInput.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["deleteuser",{"_index":924,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuser(@args('deleteuserdata",{"_index":952,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuser(data",{"_index":931,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuserinput",{"_index":291,"title":{"classes/DeleteUserInput.html":{}},"body":{"classes/DeleteUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["dep",{"_index":1160,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":35,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":1196,"title":{},"body":{"index.html":{}}}],["deprecationreason",{"_index":311,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{}}}],["description",{"_index":257,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/HangmanWordResolver.html":{},"classes/Role.html":{},"classes/UpdateRoleInput.html":{}}}],["dev",{"_index":1129,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1203,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1085,"title":{},"body":{"index.html":{}}}],["development",{"_index":1127,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1093,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":1163,"title":{},"body":{"index.html":{}}}],["different",{"_index":1086,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1143,"title":{},"body":{"index.html":{}}}],["disable",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["dist",{"_index":1142,"title":{},"body":{"index.html":{}}}],["distributed",{"_index":1169,"title":{},"body":{"index.html":{}}}],["document",{"_index":378,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{}}}],["documentation",{"_index":971,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["dto/args/get",{"_index":429,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/create",{"_index":428,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/delete",{"_index":432,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/update",{"_index":426,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dynamic",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1156,"title":{},"body":{"index.html":{}}}],["email",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserArgs.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["enable",{"_index":1176,"title":{},"body":{"index.html":{}}}],["end",{"_index":1155,"title":{},"body":{"index.html":{}}}],["entities/grouping",{"_index":393,"title":{},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["entities/hangman",{"_index":529,"title":{},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{}}}],["entities/mirror",{"_index":642,"title":{},"body":{"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["entities/role.entity",{"_index":743,"title":{},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{}}}],["entities/role.repository",{"_index":744,"title":{},"body":{"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["entities/user.entity",{"_index":920,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["entities/user.repository",{"_index":919,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["environment",{"_index":993,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eq",{"_index":810,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["error('new",{"_index":903,"title":{},"body":{"injectables/UserRepository.html":{}}}],["error('please",{"_index":893,"title":{},"body":{"injectables/UserRepository.html":{}}}],["error('user",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{}}}],["eslint",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["eslint/no",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["etc",{"_index":1091,"title":{},"body":{"index.html":{}}}],["even",{"_index":1180,"title":{},"body":{"index.html":{}}}],["execute",{"_index":1150,"title":{},"body":{"index.html":{}}}],["execution",{"_index":1173,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":344,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["experience",{"_index":1199,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":211,"title":{},"body":{"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{},"index.html":{}}}],["extends",{"_index":225,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{}}}],["extensible",{"_index":1067,"title":{},"body":{"index.html":{}}}],["extractjwt",{"_index":608,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":615,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":617,"title":{},"body":{"injectables/JwtStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/SimpleRepository.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1066,"title":{},"body":{"index.html":{}}}],["features",{"_index":1075,"title":{},"body":{"index.html":{}}}],["few",{"_index":561,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["field",{"_index":231,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["field()@isnotempty",{"_index":246,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/IdArg.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{}}}],["field()@isnotempty()@isemail",{"_index":270,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["field()@prop",{"_index":364,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["field(undefined",{"_index":233,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateUserInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArrayArg.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["field(undefined)@isarray",{"_index":261,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["field(undefined)@prop({type",{"_index":361,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["field({nullable",{"_index":297,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetUserArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":1135,"title":{},"body":{"index.html":{}}}],["findall",{"_index":403,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findall(data",{"_index":419,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":400,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findone().skip",{"_index":566,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["findone(__data",{"_index":409,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["findone(data",{"_index":499,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["flag",{"_index":1145,"title":{},"body":{"index.html":{}}}],["flatten",{"_index":680,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["flatten(user.roles.map((role",{"_index":697,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["float",{"_index":217,"title":{},"body":{"classes/CoreResolver.html":{}}}],["forwardref",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["found",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{}}}],["framework",{"_index":1103,"title":{},"body":{"index.html":{}}}],["frontend",{"_index":1201,"title":{},"body":{"index.html":{}}}],["frontends",{"_index":1104,"title":{},"body":{"index.html":{}}}],["full",{"_index":1189,"title":{},"body":{"index.html":{}}}],["function",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1056,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1164,"title":{},"body":{"index.html":{}}}],["g",{"_index":1115,"title":{},"body":{"index.html":{}}}],["gain",{"_index":1186,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1112,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1062,"title":{},"body":{"index.html":{}}}],["generating",{"_index":1089,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1195,"title":{},"body":{"index.html":{}}}],["get('hello",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["getdata",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getgroupingitemargs",{"_index":293,"title":{"classes/GetGroupingItemArgs.html":{}},"body":{"classes/GetGroupingItemArgs.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["getgroupingitemsargs",{"_index":301,"title":{"classes/GetGroupingItemsArgs.html":{}},"body":{"classes/GetGroupingItemsArgs.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["gethangmanwordargs",{"_index":307,"title":{"classes/GetHangmanWordArgs.html":{}},"body":{"classes/GetHangmanWordArgs.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["gethangmanwordsargs",{"_index":313,"title":{"classes/GetHangmanWordsArgs.html":{}},"body":{"classes/GetHangmanWordsArgs.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["getmirrorwordargs",{"_index":316,"title":{"classes/GetMirrorWordArgs.html":{}},"body":{"classes/GetMirrorWordArgs.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["getmirrorwordsargs",{"_index":317,"title":{"classes/GetMirrorWordsArgs.html":{}},"body":{"classes/GetMirrorWordsArgs.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["getrequest",{"_index":342,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["getrequest(context",{"_index":343,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["getroleargs",{"_index":318,"title":{"classes/GetRoleArgs.html":{}},"body":{"classes/GetRoleArgs.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["getrolesargs",{"_index":322,"title":{"classes/GetRolesArgs.html":{}},"body":{"classes/GetRolesArgs.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["getting",{"_index":1058,"title":{"index.html":{}},"body":{}}],["getuserargs",{"_index":324,"title":{"classes/GetUserArgs.html":{}},"body":{"classes/GetUserArgs.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["getusersargs",{"_index":334,"title":{"classes/GetUsersArgs.html":{}},"body":{"classes/GetUsersArgs.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["gql",{"_index":597,"title":{},"body":{"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{}}}],["gqlarg",{"_index":327,"title":{"classes/GqlArg.html":{}},"body":{"classes/GetUserArgs.html":{},"classes/GqlArg.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"coverage.html":{}}}],["gqlauthguard",{"_index":339,"title":{"classes/GqlAuthGuard.html":{}},"body":{"classes/GqlAuthGuard.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["gqlexecutioncontext",{"_index":348,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext().req",{"_index":350,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext().req.user",{"_index":695,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["gqlinput",{"_index":226,"title":{"classes/GqlInput.html":{}},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/GqlInput.html":{},"classes/IdInput.html":{},"coverage.html":{}}}],["graph",{"_index":1161,"title":{},"body":{"index.html":{},"modules.html":{}}}],["graphql",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["graphqlmodule",{"_index":190,"title":{},"body":{"modules/CoreModule.html":{}}}],["graphqlmodule.forroot",{"_index":203,"title":{},"body":{"modules/CoreModule.html":{}}}],["grouping",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateGroupingItemInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["groupingitem",{"_index":352,"title":{"classes/GroupingItem.html":{}},"body":{"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"coverage.html":{}}}],["groupingitem(@args",{"_index":476,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitem(data",{"_index":457,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitem.name",{"_index":397,"title":{},"body":{"modules/GroupingItemModule.html":{}}}],["groupingitemdocument",{"_index":380,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"miscellaneous/typealiases.html":{}}}],["groupingitemmodule",{"_index":41,"title":{"modules/GroupingItemModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GroupingItemModule.html":{},"modules.html":{},"overview.html":{}}}],["groupingitemrepository",{"_index":387,"title":{"injectables/GroupingItemRepository.html":{}},"body":{"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{},"overview.html":{}}}],["groupingitemresolver",{"_index":391,"title":{"classes/GroupingItemResolver.html":{}},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"coverage.html":{}}}],["groupingitems",{"_index":445,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitems(@args",{"_index":480,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitems(data",{"_index":459,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitemschema",{"_index":382,"title":{},"body":{"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["groupingitemservice",{"_index":388,"title":{"injectables/GroupingItemService.html":{}},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{},"overview.html":{}}}],["groups",{"_index":229,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/GroupingItem.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["guard",{"_index":670,"title":{"guards/PermissionGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":473,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["guard.service.ts",{"_index":673,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["guard.service.ts:10",{"_index":679,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guard.service.ts:7",{"_index":677,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guards",{"_index":671,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guards/local",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["hangman",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateHangmanWordInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/UpdateHangmanWordInput.html":{},"coverage.html":{}}}],["hangmanword",{"_index":507,"title":{"classes/HangmanWord.html":{}},"body":{"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"coverage.html":{}}}],["hangmanword(@args",{"_index":588,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanword(data",{"_index":580,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanword.name",{"_index":532,"title":{},"body":{"modules/HangmanWordModule.html":{}}}],["hangmanworddocument",{"_index":517,"title":{},"body":{"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"miscellaneous/typealiases.html":{}}}],["hangmanwordmodel",{"_index":536,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["hangmanwordmodule",{"_index":42,"title":{"modules/HangmanWordModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HangmanWordModule.html":{},"modules.html":{},"overview.html":{}}}],["hangmanwordrepository",{"_index":523,"title":{"injectables/HangmanWordRepository.html":{}},"body":{"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{},"overview.html":{}}}],["hangmanwordresolver",{"_index":527,"title":{"classes/HangmanWordResolver.html":{}},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"coverage.html":{}}}],["hangmanwords",{"_index":573,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanwords(@args",{"_index":589,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanwords(data",{"_index":583,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanwordschema",{"_index":518,"title":{},"body":{"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hangmanwordservice",{"_index":524,"title":{"injectables/HangmanWordService.html":{}},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":1165,"title":{},"body":{"index.html":{}}}],["http",{"_index":693,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1131,"title":{},"body":{"index.html":{}}}],["hundred",{"_index":562,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["iapiresource",{"_index":805,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["id",{"_index":282,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetUserArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"injectables/UserRepository.html":{}}}],["idarg",{"_index":296,"title":{"classes/IdArg.html":{}},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetRoleArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["idarg:7",{"_index":298,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{}}}],["idarg:9",{"_index":321,"title":{},"body":{"classes/GetRoleArgs.html":{}}}],["idarrayarg",{"_index":303,"title":{"classes/IdArrayArg.html":{}},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["idarrayarg:9",{"_index":306,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUsersArgs.html":{}}}],["identifier",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["idinput",{"_index":281,"title":{"classes/IdInput.html":{}},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/IdInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["idinput:10",{"_index":828,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{}}}],["idinput:9",{"_index":284,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["ids",{"_index":304,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{}}}],["ignoreexpiration",{"_index":616,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["igroupingitem",{"_index":356,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{}}}],["ihangmanword",{"_index":510,"title":{},"body":{"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{}}}],["imirrorword",{"_index":632,"title":{},"body":{"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{}}}],["implements",{"_index":355,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"guards/PermissionGuard.html":{},"classes/Role.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["imported",{"_index":1125,"title":{},"body":{"index.html":{}}}],["imports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["include",{"_index":1088,"title":{},"body":{"index.html":{}}}],["incorrect",{"_index":900,"title":{},"body":{"injectables/UserRepository.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":283,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUsersArgs.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{}}}],["inject",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/JwtStrategy.html":{}}}],["inject(forwardref",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["injectable",{"_index":66,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":67,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":424,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["injectmodel(role.name",{"_index":887,"title":{},"body":{"injectables/UserRepository.html":{}}}],["injectmodel(user.name",{"_index":886,"title":{},"body":{"injectables/UserRepository.html":{}}}],["input.abstract",{"_index":239,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/IdInput.html":{}}}],["input.abstract.ts",{"_index":351,"title":{},"body":{"classes/GqlInput.html":{},"coverage.html":{}}}],["inputs/gql",{"_index":238,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/GqlInput.html":{},"coverage.html":{}}}],["inputs/id.input",{"_index":285,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{}}}],["inputs/id.input.ts",{"_index":599,"title":{},"body":{"classes/IdInput.html":{},"coverage.html":{}}}],["inputs/id.input.ts:4",{"_index":600,"title":{},"body":{"classes/IdInput.html":{}}}],["inputtype",{"_index":236,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{}}}],["instantly",{"_index":1185,"title":{},"body":{"index.html":{}}}],["interactive",{"_index":1076,"title":{},"body":{"index.html":{}}}],["interfaces",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["irole",{"_index":722,"title":{},"body":{"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["isarray",{"_index":263,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateRoleInput.html":{}}}],["isemail",{"_index":278,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["isglobal",{"_index":200,"title":{},"body":{"modules/CoreModule.html":{}}}],["isnotempty",{"_index":249,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetRoleArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{}}}],["isoptional",{"_index":331,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/UpdateRoleInput.html":{}}}],["item",{"_index":230,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/GroupingItem.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["item.args",{"_index":431,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["item.args.ts",{"_index":295,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"coverage.html":{}}}],["item.entity",{"_index":394,"title":{},"body":{"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{}}}],["item.entity.ts",{"_index":354,"title":{},"body":{"classes/GroupingItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["item.entity.ts:13",{"_index":363,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:17",{"_index":371,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:21",{"_index":370,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:25",{"_index":365,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:29",{"_index":367,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:33",{"_index":372,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:37",{"_index":369,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.input",{"_index":427,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["item.input.ts",{"_index":224,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["item.input.ts:10",{"_index":234,"title":{},"body":{"classes/CreateGroupingItemInput.html":{}}}],["item.input.ts:13",{"_index":232,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:16",{"_index":827,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:19",{"_index":826,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:21",{"_index":829,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:7",{"_index":235,"title":{},"body":{"classes/CreateGroupingItemInput.html":{}}}],["item.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["item.module.ts",{"_index":389,"title":{},"body":{"modules/GroupingItemModule.html":{}}}],["item.repository",{"_index":395,"title":{},"body":{"modules/GroupingItemModule.html":{},"injectables/GroupingItemService.html":{}}}],["item.repository.ts",{"_index":398,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"coverage.html":{}}}],["item.repository.ts:22",{"_index":407,"title":{},"body":{"injectables/GroupingItemRepository.html":{}}}],["item.resolver",{"_index":392,"title":{},"body":{"modules/GroupingItemModule.html":{}}}],["item.resolver.ts",{"_index":442,"title":{},"body":{"classes/GroupingItemResolver.html":{},"coverage.html":{}}}],["item.resolver.ts:17",{"_index":448,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:21",{"_index":458,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:28",{"_index":462,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:35",{"_index":453,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:42",{"_index":465,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:49",{"_index":456,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.service",{"_index":390,"title":{},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{}}}],["item.service.ts",{"_index":491,"title":{},"body":{"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["item.service.ts:18",{"_index":494,"title":{},"body":{"injectables/GroupingItemService.html":{}}}],["item/dto/args/get",{"_index":294,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"coverage.html":{}}}],["item/dto/inputs/create",{"_index":223,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"coverage.html":{}}}],["item/dto/inputs/delete",{"_index":280,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"coverage.html":{}}}],["item/dto/inputs/update",{"_index":825,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["item/entities/grouping",{"_index":353,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["item/grouping",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["items",{"_index":475,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["items'})@permission('browse')@useguards(gqlauthguard",{"_index":460,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{}}}],["items'})@useguards(gqlauthguard",{"_index":940,"title":{},"body":{"classes/UsersResolver.html":{}}}],["items.args",{"_index":430,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["items.args.ts",{"_index":302,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"coverage.html":{}}}],["itemsandlist",{"_index":275,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["itemsandlist'})@isoptional()@isarray",{"_index":838,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["itemsandlist'})@prop({type",{"_index":861,"title":{},"body":{"classes/User.html":{}}}],["iupdatedat",{"_index":806,"title":{},"body":{"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{}}}],["iuser",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["jest",{"_index":1152,"title":{},"body":{"index.html":{}}}],["joi",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["joi.number().default(3000",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('development",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":601,"title":{"classes/JwtAuthGuard.html":{}},"body":{"classes/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":614,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":106,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["learn",{"_index":1167,"title":{},"body":{"index.html":{}}}],["lib",{"_index":1123,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1090,"title":{},"body":{"index.html":{}}}],["library",{"_index":1121,"title":{},"body":{"index.html":{}}}],["line",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["literal",{"_index":606,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["load",{"_index":202,"title":{},"body":{"modules/CoreModule.html":{}}}],["local",{"_index":621,"title":{},"body":{"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":92,"title":{"classes/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":107,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@req",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["many",{"_index":1082,"title":{},"body":{"index.html":{}}}],["map((permission",{"_index":699,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["match",{"_index":905,"title":{},"body":{"injectables/UserRepository.html":{}}}],["matching",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":440,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["message",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["metadata",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["minute",{"_index":1072,"title":{},"body":{"index.html":{}}}],["mirror",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateMirrorWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["mirrorword",{"_index":630,"title":{"classes/MirrorWord.html":{}},"body":{"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"coverage.html":{}}}],["mirrorword(@args",{"_index":660,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorword(data",{"_index":656,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorword.name",{"_index":643,"title":{},"body":{"modules/MirrorWordModule.html":{}}}],["mirrorworddocument",{"_index":633,"title":{},"body":{"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"miscellaneous/typealiases.html":{}}}],["mirrorwordmodel",{"_index":645,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["mirrorwordmodule",{"_index":43,"title":{"modules/MirrorWordModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MirrorWordModule.html":{},"modules.html":{},"overview.html":{}}}],["mirrorwordrepository",{"_index":639,"title":{"injectables/MirrorWordRepository.html":{}},"body":{"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{},"overview.html":{}}}],["mirrorwordresolver",{"_index":641,"title":{"classes/MirrorWordResolver.html":{}},"body":{"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"coverage.html":{}}}],["mirrorwords",{"_index":651,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorwords(@args",{"_index":662,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorwords(data",{"_index":657,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorwordschema",{"_index":634,"title":{},"body":{"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mirrorwordservice",{"_index":640,"title":{"injectables/MirrorWordService.html":{}},"body":{"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{},"overview.html":{}}}],["miscellaneous",{"_index":1055,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":406,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["module",{"_index":32,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":34,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb+srv://${configservice.get('database_user')}@${configservice.get",{"_index":1242,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose",{"_index":379,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"dependencies.html":{}}}],["mongooseconfig",{"_index":196,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongooseconfig.imports",{"_index":207,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseconfig.mongooseconfigfactory",{"_index":209,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseconfig.providers",{"_index":210,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseconfigfactory",{"_index":1240,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":194,"title":{},"body":{"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":396,"title":{},"body":{"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":206,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseschema",{"_index":377,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["mongooseschema.types.objectid",{"_index":381,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["more",{"_index":560,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"index.html":{}}}],["multiple",{"_index":1119,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":466,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard",{"_index":451,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/UsersResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('create",{"_index":765,"title":{},"body":{"classes/RoleResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('delete",{"_index":768,"title":{},"body":{"classes/RoleResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('update",{"_index":776,"title":{},"body":{"classes/RoleResolver.html":{}}}],["name",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateRoleInput.html":{},"classes/GqlAuthGuard.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["navigate",{"_index":1130,"title":{},"body":{"index.html":{}}}],["nest",{"_index":1106,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/GqlAuthGuard.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":681,"title":{},"body":{"guards/PermissionGuard.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":191,"title":{},"body":{"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":195,"title":{},"body":{"modules/CoreModule.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"index.html":{}}}],["newpassword",{"_index":843,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["newpasswordconfirm",{"_index":844,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["next",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["ng",{"_index":1099,"title":{},"body":{"index.html":{}}}],["node",{"_index":1109,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":558,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["notfoundexception",{"_index":803,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["nrwl/angular",{"_index":1019,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nrwl/angular:app",{"_index":1116,"title":{},"body":{"index.html":{}}}],["nrwl/angular:lib",{"_index":1122,"title":{},"body":{"index.html":{}}}],["nrwl/express",{"_index":1108,"title":{},"body":{"index.html":{}}}],["nrwl/nest",{"_index":1107,"title":{},"body":{"index.html":{}}}],["nrwl/node",{"_index":1110,"title":{},"body":{"index.html":{}}}],["nrwl/react",{"_index":1101,"title":{},"body":{"index.html":{}}}],["nrwl/web",{"_index":1105,"title":{},"body":{"index.html":{}}}],["null",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["nullable",{"_index":274,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}}}],["nx",{"_index":1064,"title":{},"body":{"index.html":{}}}],["nx/api",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["nx/mylib",{"_index":1126,"title":{},"body":{"index.html":{}}}],["nx’s",{"_index":1193,"title":{},"body":{"index.html":{}}}],["object",{"_index":1239,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(data).length",{"_index":807,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["objecttype",{"_index":373,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["om",{"_index":267,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["optional",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArrayArg.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":552,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["order",{"_index":1175,"title":{},"body":{"index.html":{}}}],["out",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["override",{"_index":436,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["overview",{"_index":1208,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1000,"title":{"dependencies.html":{}},"body":{}}],["pairs",{"_index":1174,"title":{},"body":{"index.html":{}}}],["param",{"_index":548,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["param['category",{"_index":550,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["parameters",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["parseint(process.env.port",{"_index":1236,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":610,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":611,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":612,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["passwords",{"_index":904,"title":{},"body":{"injectables/UserRepository.html":{}}}],["payload",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":619,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["per",{"_index":564,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["permission",{"_index":469,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission('browse",{"_index":478,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('create",{"_index":482,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('delete",{"_index":488,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('read",{"_index":779,"title":{},"body":{"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('update",{"_index":485,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["permission.replace(/^\\*::/g",{"_index":700,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["permissionguard",{"_index":461,"title":{"guards/PermissionGuard.html":{}},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["permissionguard)@permission('browse",{"_index":941,"title":{},"body":{"classes/UsersResolver.html":{}}}],["permissionguard)@permission('create",{"_index":452,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/UsersResolver.html":{}}}],["permissionguard)@permission('delete",{"_index":455,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/UsersResolver.html":{}}}],["permissionguard)@permission('read",{"_index":937,"title":{},"body":{"classes/UsersResolver.html":{}}}],["permissionguard)@permission('update",{"_index":464,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/UsersResolver.html":{}}}],["permissions",{"_index":258,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/Role.html":{},"classes/UpdateRoleInput.html":{}}}],["playground",{"_index":205,"title":{},"body":{"modules/CoreModule.html":{}}}],["plugins",{"_index":1083,"title":{},"body":{"index.html":{}}}],["plus",{"_index":1197,"title":{},"body":{"index.html":{}}}],["populate('roles",{"_index":892,"title":{},"body":{"injectables/UserRepository.html":{}}}],["port",{"_index":1235,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["preferred",{"_index":1191,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["private",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserRepository.html":{}}}],["process.env.jwt_expires",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_secret",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.node_env",{"_index":1234,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.uptime",{"_index":220,"title":{},"body":{"classes/CoreResolver.html":{}}}],["prod",{"_index":1144,"title":{},"body":{"index.html":{}}}],["production",{"_index":1146,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1061,"title":{},"body":{"index.html":{}}}],["project=my",{"_index":1139,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1095,"title":{},"body":{"index.html":{}}}],["promise",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["promise.all(data.ids.map((id",{"_index":808,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["promise.reject(new",{"_index":813,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["prop",{"_index":374,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["properties",{"_index":227,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["provide",{"_index":894,"title":{},"body":{"injectables/UserRepository.html":{}}}],["providers",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["proxy.service",{"_index":505,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/RoleService.html":{}}}],["proxy.service.ts",{"_index":705,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"coverage.html":{}}}],["proxy.service.ts:22",{"_index":707,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:25",{"_index":708,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:29",{"_index":710,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:33",{"_index":711,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:37",{"_index":712,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:41",{"_index":709,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["public",{"_index":253,"title":{},"body":{"classes/CreateMirrorWordInput.html":{},"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["query",{"_index":218,"title":{},"body":{"classes/CoreResolver.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["query(undefined",{"_index":215,"title":{},"body":{"classes/CoreResolver.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["quick",{"_index":1070,"title":{},"body":{"index.html":{}}}],["random",{"_index":439,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["randomly",{"_index":581,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["rapidly",{"_index":1177,"title":{},"body":{"index.html":{}}}],["react",{"_index":1100,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWordResolver.html":{},"injectables/RepositoryProxyService.html":{},"classes/RoleResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["ref",{"_index":862,"title":{},"body":{"classes/User.html":{}}}],["reflect",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":676,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["regex",{"_index":551,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["reload",{"_index":1133,"title":{},"body":{"index.html":{}}}],["repository",{"_index":495,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{}}}],["repositoryproxyservice",{"_index":492,"title":{"injectables/RepositoryProxyService.html":{}},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["repositoryproxyservice:25",{"_index":496,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/RoleService.html":{}}}],["repositoryproxyservice:29",{"_index":498,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/RoleService.html":{}}}],["repositoryproxyservice:33",{"_index":501,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/RoleService.html":{}}}],["repositoryproxyservice:37",{"_index":503,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/RoleService.html":{}}}],["repositoryproxyservice:41",{"_index":497,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/RoleService.html":{}}}],["req",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{}}}],["require('bcryptjs",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":690,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities",{"_index":686,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities?.length",{"_index":688,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities[0]}::${requiredresource[0",{"_index":691,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities[0]}::`).replace(/::\\*$/g",{"_index":701,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource",{"_index":682,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource?.length",{"_index":689,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource[0",{"_index":702,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requires",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["res",{"_index":547,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/SimpleRepository.html":{}}}],["res.filter((x",{"_index":556,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["res.length",{"_index":569,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["res?.deletedat",{"_index":812,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["res[math.floor(math.random",{"_index":568,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["reset",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolver",{"_index":219,"title":{},"body":{"classes/CoreResolver.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["resource",{"_index":470,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UsersResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resource('grouping",{"_index":474,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["resource('hangman",{"_index":587,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["resource('mirror",{"_index":659,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["resource('roles",{"_index":778,"title":{},"body":{"classes/RoleResolver.html":{}}}],["resource('users",{"_index":943,"title":{},"body":{"classes/UsersResolver.html":{}}}],["resourcemodel",{"_index":408,"title":{},"body":{"injectables/GroupingItemRepository.html":{}}}],["resources",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["results",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/RoleResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":720,"title":{"classes/Role.html":{}},"body":{"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["role(@args",{"_index":780,"title":{},"body":{"classes/RoleResolver.html":{}}}],["role(data",{"_index":770,"title":{},"body":{"classes/RoleResolver.html":{}}}],["role.args",{"_index":755,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["role.args.ts",{"_index":320,"title":{},"body":{"classes/GetRoleArgs.html":{},"coverage.html":{}}}],["role.entity",{"_index":751,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["role.input",{"_index":753,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["role.input.ts",{"_index":256,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/DeleteRoleInput.html":{},"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["role.input.ts:13",{"_index":259,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.input.ts:15",{"_index":837,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:17",{"_index":262,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.input.ts:20",{"_index":836,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:25",{"_index":839,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:27",{"_index":840,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:9",{"_index":260,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.name",{"_index":745,"title":{},"body":{"modules/RoleModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["role.permissions",{"_index":698,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["role.resolver",{"_index":742,"title":{},"body":{"modules/RoleModule.html":{}}}],["role.service",{"_index":740,"title":{},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{}}}],["role/entities/role.entity",{"_index":866,"title":{},"body":{"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{}}}],["role/role.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["roledocument",{"_index":730,"title":{},"body":{"classes/Role.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":749,"title":{},"body":{"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["rolemodule",{"_index":44,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["rolerepository",{"_index":737,"title":{"injectables/RoleRepository.html":{}},"body":{"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["roleresolver",{"_index":741,"title":{"classes/RoleResolver.html":{}},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{},"coverage.html":{}}}],["roles",{"_index":268,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RoleResolver.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["roles(@args",{"_index":782,"title":{},"body":{"classes/RoleResolver.html":{}}}],["roles(data",{"_index":773,"title":{},"body":{"classes/RoleResolver.html":{}}}],["roles.args",{"_index":754,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["roles.args.ts",{"_index":323,"title":{},"body":{"classes/GetRolesArgs.html":{},"coverage.html":{}}}],["roleschema",{"_index":731,"title":{},"body":{"classes/Role.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleservice",{"_index":738,"title":{"injectables/RoleService.html":{}},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":1114,"title":{},"body":{"index.html":{}}}],["running",{"_index":1147,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1047,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":1120,"title":{},"body":{"index.html":{}}}],["save",{"_index":816,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["saving",{"_index":1183,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":1137,"title":{},"body":{"index.html":{}}}],["schema",{"_index":375,"title":{},"body":{"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":376,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(groupingitem",{"_index":383,"title":{},"body":{"classes/GroupingItem.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(hangmanword",{"_index":519,"title":{},"body":{"classes/HangmanWord.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(mirrorword",{"_index":635,"title":{},"body":{"classes/MirrorWord.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":732,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":871,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schematypes",{"_index":867,"title":{},"body":{"classes/User.html":{}}}],["schematypes.objectid",{"_index":869,"title":{},"body":{"classes/User.html":{}}}],["secret",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":618,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["see",{"_index":1162,"title":{},"body":{"index.html":{}}}],["serve",{"_index":1128,"title":{},"body":{"index.html":{}}}],["server",{"_index":1022,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["service",{"_index":449,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{}}}],["setmetadata('abilities",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata('resources",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shareable",{"_index":1124,"title":{},"body":{"index.html":{}}}],["shared/gql",{"_index":237,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{}}}],["shared/proxies/repository",{"_index":504,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/RoleService.html":{}}}],["shared/proxies/simple.repository",{"_index":433,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/RoleRepository.html":{}}}],["showing",{"_index":1074,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple.repository",{"_index":713,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["simplerepository",{"_index":399,"title":{"injectables/SimpleRepository.html":{}},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["simplerepository:19",{"_index":421,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/RoleRepository.html":{}}}],["simplerepository:25",{"_index":750,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["simplerepository:27",{"_index":410,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["simplerepository:30",{"_index":414,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/RoleRepository.html":{}}}],["simplerepository:37",{"_index":537,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["simplerepository:40",{"_index":423,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/RoleRepository.html":{}}}],["simplerepository:48",{"_index":418,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/RoleRepository.html":{}}}],["smart",{"_index":1065,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sslcert",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sslkey",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stack",{"_index":1190,"title":{},"body":{"index.html":{}}}],["start",{"_index":1071,"title":{},"body":{"index.html":{}}}],["started",{"_index":1059,"title":{"index.html":{}},"body":{}}],["statements",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":1141,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":609,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"guards/PermissionGuard.html":{},"classes/Role.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["super",{"_index":613,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(hangmanwordmodel",{"_index":543,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["super(mirrorwordmodel",{"_index":648,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["super(repository",{"_index":506,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{}}}],["super(resourcemodel",{"_index":435,"title":{},"body":{"injectables/GroupingItemRepository.html":{}}}],["super(rolemodel",{"_index":757,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["super(rolerepository",{"_index":793,"title":{},"body":{"injectables/RoleService.html":{}}}],["super.findall(data",{"_index":546,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["support",{"_index":1204,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1081,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1205,"title":{},"body":{"modules.html":{}}}],["system",{"_index":1069,"title":{},"body":{"index.html":{}}}],["szakszolg",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["szakszolgnx",{"_index":1060,"title":{},"body":{"index.html":{}}}],["table",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":1172,"title":{},"body":{"index.html":{}}}],["tcreateinput",{"_index":413,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{}}}],["tdeleteinput",{"_index":417,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{}}}],["teams",{"_index":1181,"title":{},"body":{"index.html":{}}}],["test",{"_index":1094,"title":{},"body":{"index.html":{}}}],["test').required",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":1149,"title":{},"body":{"index.html":{}}}],["tfindmanyargs",{"_index":420,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{}}}],["tfindoneargs",{"_index":500,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{}}}],["this.appservice.getdata",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login((req",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validate(email",{"_index":628,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.configservice.get('jwt_expires",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_secret",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.findone",{"_index":809,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["this.jwtservice.sign(payload",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mirrorwordservice.create(data",{"_index":665,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.delete(data",{"_index":669,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.findall(data",{"_index":663,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.findone(data",{"_index":661,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.update(data",{"_index":667,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.model",{"_index":814,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.estimateddocumentcount",{"_index":438,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["this.model.find",{"_index":567,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/SimpleRepository.html":{}}}],["this.model.find(param",{"_index":553,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["this.model.findbyid(data.id",{"_index":811,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findbyidandupdate(data.id",{"_index":823,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findbyidandupdate(id",{"_index":822,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findone().skip(random).limit(1",{"_index":441,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["this.reflector.get('abilities",{"_index":687,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.reflector.getallandmerge('resources",{"_index":683,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.repository.create(data",{"_index":715,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.delete(data",{"_index":719,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.findall(data",{"_index":716,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.findone(data",{"_index":717,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.update(data",{"_index":718,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.roleservice.create(data",{"_index":785,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.delete(data",{"_index":789,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.findall(data",{"_index":783,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.findone(data",{"_index":781,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.update(data",{"_index":787,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.service.create(data",{"_index":484,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{}}}],["this.service.delete(data",{"_index":490,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{}}}],["this.service.findall(data",{"_index":481,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{}}}],["this.service.findone(data",{"_index":477,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{}}}],["this.service.update(data",{"_index":487,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{}}}],["this.usermodel",{"_index":896,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.find",{"_index":888,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyid(data.id",{"_index":897,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyid(data.id).populate('roles",{"_index":889,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyidandupdate(data.id",{"_index":911,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findone",{"_index":891,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.userrepository.create(data",{"_index":967,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.delete(data",{"_index":969,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findall(data",{"_index":962,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone(data",{"_index":963,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.update(data",{"_index":968,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.findone",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.usersservice.create(data",{"_index":949,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.delete(data",{"_index":953,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findall(data",{"_index":947,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findone(data",{"_index":945,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.update(data",{"_index":951,"title":{},"body":{"classes/UsersResolver.html":{}}}],["throw",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserRepository.html":{}}}],["time",{"_index":1184,"title":{},"body":{"index.html":{}}}],["times",{"_index":1179,"title":{},"body":{"index.html":{}}}],["token",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["tools",{"_index":1034,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["trepository",{"_index":706,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["true",{"_index":201,"title":{},"body":{"modules/CoreModule.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"miscellaneous/variables.html":{}}}],["true})@isarray",{"_index":305,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArrayArg.html":{}}}],["true})@isemail",{"_index":845,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["true})@isoptional",{"_index":328,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["true})@isoptional()@isnotempty",{"_index":835,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["true})@prop",{"_index":368,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["true})@useguards(gqlauthguard",{"_index":936,"title":{},"body":{"classes/UsersResolver.html":{}}}],["true})@useguards(gqlauthguard)@permission('read",{"_index":771,"title":{},"body":{"classes/RoleResolver.html":{}}}],["tslib",{"_index":1049,"title":{},"body":{"dependencies.html":{}}}],["tupdateinput",{"_index":502,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{}}}],["tutorial",{"_index":1077,"title":{},"body":{"index.html":{}}}],["type",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1214,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":804,"title":{},"body":{"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"index.html":{}}}],["types.objectid",{"_index":815,"title":{},"body":{"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["types.objectid(roleid",{"_index":909,"title":{},"body":{"injectables/UserRepository.html":{}}}],["typescript",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":626,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":362,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["understand",{"_index":1159,"title":{},"body":{"index.html":{}}}],["unified",{"_index":1198,"title":{},"body":{"index.html":{}}}],["unit",{"_index":1148,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["unused",{"_index":312,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{}}}],["up",{"_index":1178,"title":{},"body":{"index.html":{}}}],["update",{"_index":404,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["update(data",{"_index":422,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["updatedat",{"_index":360,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Role.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["updategroupingitem",{"_index":446,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["updategroupingitem(@args('updategroupingitemdata",{"_index":486,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["updategroupingitem(data",{"_index":463,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["updategroupingiteminput",{"_index":425,"title":{"classes/UpdateGroupingItemInput.html":{}},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["updatehangmanword",{"_index":574,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["updatehangmanword(@args('updatehangmanworddata",{"_index":591,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["updatehangmanword(data",{"_index":585,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["updatehangmanwordinput",{"_index":538,"title":{"classes/UpdateHangmanWordInput.html":{}},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/UpdateHangmanWordInput.html":{},"coverage.html":{}}}],["updatemirrorword",{"_index":652,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["updatemirrorword(@args('updatemirrorworddata",{"_index":666,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["updatemirrorword(data",{"_index":658,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["updatemirrorwordinput",{"_index":646,"title":{"classes/UpdateMirrorWordInput.html":{}},"body":{"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["updaterole",{"_index":761,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updaterole(@args('updateroledata",{"_index":786,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updaterole(data",{"_index":775,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updateroleinput",{"_index":752,"title":{"classes/UpdateRoleInput.html":{}},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["updateuser",{"_index":925,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuser(@args('updateuserdata",{"_index":950,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuser(data",{"_index":933,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuserinput",{"_index":841,"title":{"classes/UpdateUserInput.html":{}},"body":{"classes/UpdateUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uptime",{"_index":214,"title":{},"body":{"classes/CoreResolver.html":{}}}],["uri",{"_index":1241,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":565,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"index.html":{}}}],["usefactory",{"_index":208,"title":{},"body":{"modules/CoreModule.html":{}}}],["useguards",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["useguards(gqlauthguard",{"_index":479,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["useguards(localauthguard",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":141,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["user(@args",{"_index":944,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user(data",{"_index":935,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user._id",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.args",{"_index":884,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.args.ts",{"_index":326,"title":{},"body":{"classes/GetUserArgs.html":{},"coverage.html":{}}}],["user.args.ts:13",{"_index":329,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["user.args.ts:9",{"_index":330,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["user.decorator.ts",{"_index":979,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.entity",{"_index":882,"title":{},"body":{"injectables/UserRepository.html":{}}}],["user.input",{"_index":883,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.input.ts",{"_index":266,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["user.input.ts:10",{"_index":271,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:13",{"_index":846,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:14",{"_index":277,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:16",{"_index":853,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:18",{"_index":273,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:20",{"_index":850,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:21",{"_index":272,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:23",{"_index":847,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:24",{"_index":276,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:26",{"_index":848,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:29",{"_index":849,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:32",{"_index":851,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:34",{"_index":852,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.name",{"_index":921,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{}}}],["user.roles",{"_index":907,"title":{},"body":{"injectables/UserRepository.html":{}}}],["user.save",{"_index":910,"title":{},"body":{"injectables/UserRepository.html":{}}}],["userdocument",{"_index":868,"title":{},"body":{"classes/User.html":{},"injectables/UserRepository.html":{},"miscellaneous/typealiases.html":{}}}],["usermodel",{"_index":876,"title":{},"body":{"injectables/UserRepository.html":{}}}],["username",{"_index":269,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["usernamefield",{"_index":627,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userpermissions",{"_index":696,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["userpermissions.includes(required",{"_index":703,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["userrepository",{"_index":872,"title":{"injectables/UserRepository.html":{}},"body":{"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":926,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users(@args",{"_index":946,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users(data",{"_index":939,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users.args",{"_index":885,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["users.args.ts",{"_index":335,"title":{},"body":{"classes/GetUsersArgs.html":{},"coverage.html":{}}}],["users.resolver",{"_index":918,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":916,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["users/users.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{}}}],["users/users.service",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userschema",{"_index":870,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["usersmodule",{"_index":45,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersresolver",{"_index":917,"title":{"classes/UsersResolver.html":{}},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["usersservice",{"_index":134,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":1063,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["validate",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":605,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationschema",{"_index":188,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":250,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateUserInput.html":{},"dependencies.html":{}}}],["value",{"_index":1233,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["variable",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1221,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["verify(token",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["via",{"_index":1151,"title":{},"body":{"index.html":{}}}],["video",{"_index":1073,"title":{},"body":{"index.html":{}}}],["visit",{"_index":1166,"title":{},"body":{"index.html":{}}}],["want",{"_index":559,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["web",{"_index":1102,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["well",{"_index":1092,"title":{},"body":{"index.html":{}}}],["word",{"_index":245,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWord.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{}}}],["word.args",{"_index":541,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["word.args.ts",{"_index":309,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"coverage.html":{}}}],["word.args.ts:10",{"_index":310,"title":{},"body":{"classes/GetHangmanWordArgs.html":{}}}],["word.entity",{"_index":530,"title":{},"body":{"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{}}}],["word.entity.ts",{"_index":509,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["word.entity.ts:13",{"_index":511,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:17",{"_index":516,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:21",{"_index":512,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:25",{"_index":513,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:29",{"_index":515,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:33",{"_index":514,"title":{},"body":{"classes/HangmanWord.html":{}}}],["word.input",{"_index":539,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["word.input.ts",{"_index":243,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["word.input.ts:13",{"_index":247,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/UpdateHangmanWordInput.html":{}}}],["word.input.ts:14",{"_index":833,"title":{},"body":{"classes/UpdateMirrorWordInput.html":{}}}],["word.input.ts:16",{"_index":831,"title":{},"body":{"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{}}}],["word.input.ts:18",{"_index":832,"title":{},"body":{"classes/UpdateHangmanWordInput.html":{}}}],["word.input.ts:9",{"_index":248,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{}}}],["word.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["word.module.ts",{"_index":525,"title":{},"body":{"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{}}}],["word.repository",{"_index":531,"title":{},"body":{"modules/HangmanWordModule.html":{},"injectables/HangmanWordService.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordService.html":{}}}],["word.repository.ts",{"_index":533,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"coverage.html":{}}}],["word.repository.ts:22",{"_index":535,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["word.resolver",{"_index":528,"title":{},"body":{"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{}}}],["word.resolver.ts",{"_index":570,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"coverage.html":{}}}],["word.resolver.ts:17",{"_index":575,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:21",{"_index":582,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:28",{"_index":584,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:35",{"_index":577,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:42",{"_index":586,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:49",{"_index":579,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.service",{"_index":526,"title":{},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{}}}],["word.service.ts",{"_index":593,"title":{},"body":{"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["word.service.ts:18",{"_index":594,"title":{},"body":{"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{}}}],["word/dto/args/get",{"_index":308,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"coverage.html":{}}}],["word/dto/inputs/create",{"_index":242,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"coverage.html":{}}}],["word/dto/inputs/delete",{"_index":287,"title":{},"body":{"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"coverage.html":{}}}],["word/dto/inputs/update",{"_index":830,"title":{},"body":{"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["word/entities/hangman",{"_index":508,"title":{},"body":{"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["word/entities/mirror",{"_index":631,"title":{},"body":{"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["word/hangman",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["word/mirror",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["words",{"_index":563,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["words.args",{"_index":540,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["words.args.ts",{"_index":314,"title":{},"body":{"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"coverage.html":{}}}],["words.args.ts:12",{"_index":315,"title":{},"body":{"classes/GetHangmanWordsArgs.html":{}}}],["workspace",{"_index":1080,"title":{},"body":{"index.html":{}}}],["x509&ssl=true&retrywrites=true&w=majority",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":1053,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/core/app.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Message\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\nimport { Message } from '@szakszolg-nx/api-interfaces'\n\nimport { AppService } from './app.service'\n\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get('hello')\n    getData(): Message {\n        return this.appService.getData()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nGroupingItemModule\n\nGroupingItemModule\n\nAppModule -->\n\nGroupingItemModule->AppModule\n\n\n\n\n\nHangmanWordModule\n\nHangmanWordModule\n\nAppModule -->\n\nHangmanWordModule->AppModule\n\n\n\n\n\nMirrorWordModule\n\nMirrorWordModule\n\nAppModule -->\n\nMirrorWordModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            GroupingItemModule\n                        \n                        \n                            HangmanWordModule\n                        \n                        \n                            MirrorWordModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { AppController } from './core/app.controller'\nimport { AppService } from './core/app.service'\nimport { CoreModule } from './core/core.module'\nimport { UsersModule } from './users/users.module'\nimport { AuthModule } from './auth/auth.module'\nimport { RoleModule } from './role/role.module'\nimport { MirrorWordModule } from './mirror-word/mirror-word.module'\nimport { HangmanWordModule } from './hangman-word/hangman-word.module'\nimport { GroupingItemModule } from './grouping-item/grouping-item.module'\n\n@Module({\n    imports: [CoreModule, UsersModule, AuthModule, RoleModule, MirrorWordModule, HangmanWordModule, GroupingItemModule],\n    controllers: [AppController],\n    providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/core/app.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Message\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { Message } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class AppService {\n    getData(): Message {\n        return { message: 'Welcome to api!' }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Req, UseGuards } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { LocalAuthGuard } from './guards/local-auth.guard'\nimport { Request } from 'express'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService) {}\n\n    @UseGuards(LocalAuthGuard)\n    @Post('login')\n    async login(@Req() req: Request) {\n        return await this.authService.login((req as any).user as IUser)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { UsersModule } from '../users/users.module'\nimport { JwtModule } from '@nestjs/jwt'\nimport { ConfigModule } from '@nestjs/config'\nimport { PassportModule } from '@nestjs/passport'\nimport { JwtStrategy } from './strategies/jwt.strategy'\nimport { LocalStrategy } from './strategies/local.strategy'\nimport { AuthController } from './auth.controller'\n\n@Module({\n    imports: [\n        ConfigModule,\n        forwardRef(() => UsersModule),\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        JwtModule.register({\n            secret: process.env.JWT_SECRET,\n            signOptions: {\n                expiresIn: process.env.JWT_EXPIRES || '7d',\n            },\n        }),\n    ],\n    controllers: [AuthController],\n    providers: [AuthService, JwtStrategy, LocalStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Async\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verify\n                        \n                    \n                \n            \n            \n                \n                    \n                    verify(token: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\nimport { UsersService } from '../users/users.service'\nimport { JwtService } from '@nestjs/jwt'\nimport { ConfigService } from '@nestjs/config'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        @Inject(forwardRef(() => UsersService))\n        private readonly userService: UsersService,\n        private readonly jwtService: JwtService,\n        private readonly configService: ConfigService,\n    ) {}\n\n    async validate(email: string, password: string): Promise {\n        const user = await this.userService.findOne({ email })\n        return user && (await bcrypt.compare(password, user.password)) ? user : null\n    }\n\n    async login(user: IUser) {\n        const payload = { email: user.email, sub: user._id }\n        return {\n            access_token: this.jwtService.sign(payload, {\n                secret: this.configService.get('JWT_SECRET'),\n                expiresIn: this.configService.get('JWT_EXPIRES') || '7d',\n            }),\n        }\n    }\n\n    async verify(token: string) {\n        const decoded = this.jwtService.verify(token, { secret: this.configService.get('JWT_SECRET')! })\n        const user = await this.userService.findOne({ email: decoded.email })\n        if (!user) throw new Error('User not found')\n        return user\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { configuration } from './config/configuration'\nimport { validationSchema } from './config/validation'\nimport { GraphQLModule } from '@nestjs/graphql'\nimport { CoreResolver } from './core.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { mongooseConfig } from './config/mongo-config.factory'\n\n@Module({\n    imports: [\n        ConfigModule.forRoot({\n            isGlobal: true,\n            load: [configuration],\n            validationSchema,\n        }),\n        GraphQLModule.forRoot({\n            autoSchemaFile: true,\n            playground: true,\n        }),\n        MongooseModule.forRootAsync({\n            imports: mongooseConfig.imports,\n            useFactory: mongooseConfig.mongooseConfigFactory,\n            inject: mongooseConfig.providers,\n        }),\n    ],\n    controllers: [],\n    providers: [CoreResolver],\n    exports: [],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoreResolver.html":{"url":"classes/CoreResolver.html","title":"class - CoreResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoreResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/core.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                uptime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        uptime\n                        \n                    \n                \n            \n            \n                \nuptime()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/core/core.resolver.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Float, Query, Resolver } from '@nestjs/graphql'\n\n@Resolver()\nexport class CoreResolver {\n    @Query(() => Float)\n    uptime() {\n        return process.uptime()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGroupingItemInput.html":{"url":"classes/CreateGroupingItemInput.html","title":"class - CreateGroupingItemInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGroupingItemInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                correct\n                            \n                            \n                                groups\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateGroupingItemInput extends GqlInput {\n    @Field()\n    item: string\n\n    @Field(() => [String])\n    groups: string[]\n\n    @Field()\n    correct: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateHangmanWordInput.html":{"url":"classes/CreateHangmanWordInput.html","title":"class - CreateHangmanWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateHangmanWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class CreateHangmanWordInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    word: string\n\n    @Field()\n    @IsNotEmpty()\n    category: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMirrorWordInput.html":{"url":"classes/CreateMirrorWordInput.html","title":"class - CreateMirrorWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMirrorWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/inputs/create-mirror-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/dto/inputs/create-mirror-word.input.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateMirrorWordInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    public word: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleInput.html":{"url":"classes/CreateRoleInput.html","title":"class - CreateRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/create-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateRoleInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    name: string\n\n    @Field()\n    @IsNotEmpty()\n    description: string\n\n    @Field(() => [String])\n    @IsArray()\n    permissions: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/create-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsEmail, IsNotEmpty } from 'class-validator'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateUserInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @Field()\n    @IsNotEmpty()\n    username: string\n\n    @Field()\n    @IsNotEmpty()\n    password: string\n\n    @Field()\n    om?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    roles?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteGroupingItemInput.html":{"url":"classes/DeleteGroupingItemInput.html","title":"class - DeleteGroupingItemInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteGroupingItemInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/inputs/delete-grouping-item.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteGroupingItemInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteHangmanWordInput.html":{"url":"classes/DeleteHangmanWordInput.html","title":"class - DeleteHangmanWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteHangmanWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/inputs/delete-hangman-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteHangmanWordInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMirrorWordInput.html":{"url":"classes/DeleteMirrorWordInput.html","title":"class - DeleteMirrorWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMirrorWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/inputs/delete-mirror-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteMirrorWordInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteRoleInput.html":{"url":"classes/DeleteRoleInput.html","title":"class - DeleteRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/delete-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteRoleInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserInput.html":{"url":"classes/DeleteUserInput.html","title":"class - DeleteUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/delete-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteUserInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetGroupingItemArgs.html":{"url":"classes/GetGroupingItemArgs.html","title":"class - GetGroupingItemArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetGroupingItemArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/args/get-grouping-item.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\n\n@ArgsType()\nexport class GetGroupingItemArgs extends IdArg {\n    @Field({ nullable: true })\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetGroupingItemsArgs.html":{"url":"classes/GetGroupingItemsArgs.html","title":"class - GetGroupingItemsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetGroupingItemsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/args/get-grouping-items.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetGroupingItemsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetHangmanWordArgs.html":{"url":"classes/GetHangmanWordArgs.html","title":"class - GetHangmanWordArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetHangmanWordArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/args/get-hangman-word.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/args/get-hangman-word.args.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true, deprecationReason: 'This field is unused'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\n\n@ArgsType()\nexport class GetHangmanWordArgs extends IdArg {\n    @Field({ nullable: true, deprecationReason: 'This field is unused' })\n    id: string\n\n    @Field({ nullable: true })\n    category?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetHangmanWordsArgs.html":{"url":"classes/GetHangmanWordsArgs.html","title":"class - GetHangmanWordsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetHangmanWordsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/args/get-hangman-words.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/args/get-hangman-words.args.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetHangmanWordsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n\n    @Field(() => String, { nullable: true })\n    category?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetMirrorWordArgs.html":{"url":"classes/GetMirrorWordArgs.html","title":"class - GetMirrorWordArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetMirrorWordArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/args/get-mirror-word.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true, deprecationReason: 'This field is unused.'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\n\n@ArgsType()\nexport class GetMirrorWordArgs extends IdArg {\n    @Field({ nullable: true, deprecationReason: 'This field is unused.' })\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetMirrorWordsArgs.html":{"url":"classes/GetMirrorWordsArgs.html","title":"class - GetMirrorWordsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetMirrorWordsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/args/get-mirror-words.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetMirrorWordsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRoleArgs.html":{"url":"classes/GetRoleArgs.html","title":"class - GetRoleArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRoleArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/args/get-role.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetRoleArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRolesArgs.html":{"url":"classes/GetRolesArgs.html","title":"class - GetRolesArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRolesArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/args/get-roles.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetRolesArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserArgs.html":{"url":"classes/GetUserArgs.html","title":"class - GetUserArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/args/get-user.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/args/get-user.args.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/args/get-user.args.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field } from '@nestjs/graphql'\nimport { IsOptional } from 'class-validator'\nimport { GqlArg } from '../../../../shared/gql-args/gql-arg.abstract'\n\n@ArgsType()\nexport class GetUserArgs extends GqlArg {\n    @Field({ nullable: true })\n    @IsOptional()\n    id?: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    email?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersArgs.html":{"url":"classes/GetUsersArgs.html","title":"class - GetUsersArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/args/get-users.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetUsersArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlArg.html":{"url":"classes/GqlArg.html","title":"class - GqlArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/gql-arg.abstract.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType } from '@nestjs/graphql'\n\n@ArgsType()\nexport abstract class GqlArg {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlAuthGuard.html":{"url":"classes/GqlAuthGuard.html","title":"class - GqlAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/gql-auth.guard.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRequest\n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/guards/gql-auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\nimport {ExecutionContext} from \"@nestjs/common\";\nimport {GqlExecutionContext} from \"@nestjs/graphql\";\n\nexport class GqlAuthGuard extends AuthGuard('jwt') {\n    getRequest(context: ExecutionContext) {\n        return GqlExecutionContext.create(context).getContext().req\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlInput.html":{"url":"classes/GqlInput.html","title":"class - GqlInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-inputs/gql-input.abstract.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class GqlInput {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupingItem.html":{"url":"classes/GroupingItem.html","title":"class - GroupingItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupingItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGroupingItem\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                correct\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                groups\n                            \n                            \n                                item\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IGroupingItem } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type GroupingItemDocument = IGroupingItem & Document\n\n@ObjectType()\n@Schema()\nexport class GroupingItem implements IGroupingItem {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    item: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    groups: string[]\n\n    @Field()\n    @Prop()\n    correct: string\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const GroupingItemSchema = SchemaFactory.createForClass(GroupingItem)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupingItemModule.html":{"url":"modules/GroupingItemModule.html","title":"module - GroupingItemModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupingItemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GroupingItemModule\n\n\n\ncluster_GroupingItemModule_exports\n\n\n\ncluster_GroupingItemModule_providers\n\n\n\n\nGroupingItemRepository \n\nGroupingItemRepository \n\n\n\nGroupingItemService \n\nGroupingItemService \n\n\n\nGroupingItemModule\n\nGroupingItemModule\n\nGroupingItemRepository  -->\n\nGroupingItemModule->GroupingItemRepository \n\n\n\nGroupingItemService  -->\n\nGroupingItemModule->GroupingItemService \n\n\n\n\n\nGroupingItemRepository\n\nGroupingItemRepository\n\nGroupingItemModule -->\n\nGroupingItemRepository->GroupingItemModule\n\n\n\n\n\nGroupingItemService\n\nGroupingItemService\n\nGroupingItemModule -->\n\nGroupingItemService->GroupingItemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/grouping-item.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GroupingItemRepository\n                        \n                        \n                            GroupingItemService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GroupingItemRepository\n                        \n                        \n                            GroupingItemService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { GroupingItemService } from './grouping-item.service'\nimport { GroupingItemResolver } from './grouping-item.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { GroupingItem, GroupingItemSchema } from './entities/grouping-item.entity'\nimport { GroupingItemRepository } from './entities/grouping-item.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: GroupingItem.name,\n                schema: GroupingItemSchema,\n            },\n        ]),\n    ],\n    providers: [GroupingItemResolver, GroupingItemService, GroupingItemRepository],\n    exports: [GroupingItemService, GroupingItemRepository],\n})\nexport class GroupingItemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupingItemRepository.html":{"url":"injectables/GroupingItemRepository.html","title":"injectable - GroupingItemRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupingItemRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/entities/grouping-item.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(__data: GetGroupingItemArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    __data\n                                    \n                                                GetGroupingItemArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { GroupingItem, GroupingItemDocument } from './grouping-item.entity'\nimport { Model } from 'mongoose'\nimport { UpdateGroupingItemInput } from '../dto/inputs/update-grouping-item.input'\nimport { CreateGroupingItemInput } from '../dto/inputs/create-grouping-item.input'\nimport { GetGroupingItemsArgs } from '../dto/args/get-grouping-items.args'\nimport { GetGroupingItemArgs } from '../dto/args/get-grouping-item.args'\nimport { IGroupingItem } from '@szakszolg-nx/api-interfaces'\nimport { DeleteGroupingItemInput } from '../dto/inputs/delete-grouping-item.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class GroupingItemRepository extends SimpleRepository {\n    constructor(@InjectModel(GroupingItem.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    override async findOne(__data: GetGroupingItemArgs): Promise {\n        const count = await this.model.estimatedDocumentCount()\n        const random = Math.floor(Math.random() * count)\n        return this.model.findOne().skip(random).limit(1)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupingItemResolver.html":{"url":"classes/GroupingItemResolver.html","title":"class - GroupingItemResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupingItemResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/grouping-item.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGroupingItem\n                            \n                            \n                                deleteGroupingItem\n                            \n                            \n                                groupingItem\n                            \n                            \n                                groupingItems\n                            \n                            \n                                updateGroupingItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: GroupingItemService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        GroupingItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createGroupingItem\n                        \n                    \n                \n            \n            \n                \ncreateGroupingItem(data: CreateGroupingItemInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateGroupingItemInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroupingItem\n                        \n                    \n                \n            \n            \n                \ndeleteGroupingItem(data: DeleteGroupingItemInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteGroupingItemInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupingItem\n                        \n                    \n                \n            \n            \n                \ngroupingItem(data: GetGroupingItemArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetGroupingItemArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupingItems\n                        \n                    \n                \n            \n            \n                \ngroupingItems(data: GetGroupingItemsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetGroupingItemsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateGroupingItem\n                        \n                    \n                \n            \n            \n                \nupdateGroupingItem(data: UpdateGroupingItemInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateGroupingItemInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { GroupingItemService } from './grouping-item.service'\nimport { GroupingItem } from './entities/grouping-item.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetGroupingItemArgs } from './dto/args/get-grouping-item.args'\nimport { IGroupingItem } from '@szakszolg-nx/api-interfaces'\nimport { GetGroupingItemsArgs } from './dto/args/get-grouping-items.args'\nimport { CreateGroupingItemInput } from './dto/inputs/create-grouping-item.input'\nimport { UpdateGroupingItemInput } from './dto/inputs/update-grouping-item.input'\nimport { DeleteGroupingItemInput } from './dto/inputs/delete-grouping-item.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => GroupingItem)\n@Resource('grouping-items')\nexport class GroupingItemResolver {\n    constructor(private readonly service: GroupingItemService) {}\n\n    @Query(() => GroupingItem, { nullable: true })\n    groupingItem(@Args({ nullable: true }) data: GetGroupingItemArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [GroupingItem], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    groupingItems(@Args({ nullable: true }) data: GetGroupingItemsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => GroupingItem)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createGroupingItem(@Args('createGroupingItemData') data: CreateGroupingItemInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => GroupingItem)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateGroupingItem(@Args('updateGroupingItemData') data: UpdateGroupingItemInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => GroupingItem)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteGroupingItem(@Args('deleteGroupingItemData') data: DeleteGroupingItemInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupingItemService.html":{"url":"injectables/GroupingItemService.html","title":"injectable - GroupingItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupingItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/grouping-item.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: GroupingItemRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/grouping-item/grouping-item.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        GroupingItemRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateGroupingItemInput } from './dto/inputs/create-grouping-item.input'\nimport { UpdateGroupingItemInput } from './dto/inputs/update-grouping-item.input'\nimport { GroupingItemRepository } from './entities/grouping-item.repository'\nimport { GetGroupingItemsArgs } from './dto/args/get-grouping-items.args'\nimport { GetGroupingItemArgs } from './dto/args/get-grouping-item.args'\nimport { DeleteGroupingItemInput } from './dto/inputs/delete-grouping-item.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class GroupingItemService extends RepositoryProxyService {\n    constructor(repository: GroupingItemRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HangmanWord.html":{"url":"classes/HangmanWord.html","title":"class - HangmanWord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HangmanWord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IHangmanWord\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                category\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IHangmanWord } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type HangmanWordDocument = IHangmanWord & Document\n\n@ObjectType()\n@Schema()\nexport class HangmanWord implements IHangmanWord {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    word: string\n\n    @Field()\n    @Prop()\n    category: string\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const HangmanWordSchema = SchemaFactory.createForClass(HangmanWord)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HangmanWordModule.html":{"url":"modules/HangmanWordModule.html","title":"module - HangmanWordModule","body":"\n                   \n\n\n\n\n    Modules\n    HangmanWordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HangmanWordModule\n\n\n\ncluster_HangmanWordModule_exports\n\n\n\ncluster_HangmanWordModule_providers\n\n\n\n\nHangmanWordRepository \n\nHangmanWordRepository \n\n\n\nHangmanWordService \n\nHangmanWordService \n\n\n\nHangmanWordModule\n\nHangmanWordModule\n\nHangmanWordRepository  -->\n\nHangmanWordModule->HangmanWordRepository \n\n\n\nHangmanWordService  -->\n\nHangmanWordModule->HangmanWordService \n\n\n\n\n\nHangmanWordRepository\n\nHangmanWordRepository\n\nHangmanWordModule -->\n\nHangmanWordRepository->HangmanWordModule\n\n\n\n\n\nHangmanWordService\n\nHangmanWordService\n\nHangmanWordModule -->\n\nHangmanWordService->HangmanWordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/hangman-word.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HangmanWordRepository\n                        \n                        \n                            HangmanWordService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HangmanWordRepository\n                        \n                        \n                            HangmanWordService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { HangmanWordService } from './hangman-word.service'\nimport { HangmanWordResolver } from './hangman-word.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { HangmanWord, HangmanWordSchema } from './entities/hangman-word.entity'\nimport { HangmanWordRepository } from './entities/hangman-word.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: HangmanWord.name,\n                schema: HangmanWordSchema,\n            },\n        ]),\n    ],\n    providers: [HangmanWordResolver, HangmanWordService, HangmanWordRepository],\n    exports: [HangmanWordService, HangmanWordRepository],\n})\nexport class HangmanWordModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HangmanWordRepository.html":{"url":"injectables/HangmanWordRepository.html","title":"injectable - HangmanWordRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HangmanWordRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/entities/hangman-word.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(hangmanWordModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hangmanWordModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetHangmanWordsArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetHangmanWordsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetHangmanWordArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetHangmanWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { HangmanWord, HangmanWordDocument } from './hangman-word.entity'\nimport { Model } from 'mongoose'\nimport { UpdateHangmanWordInput } from '../dto/inputs/update-hangman-word.input'\nimport { CreateHangmanWordInput } from '../dto/inputs/create-hangman-word.input'\nimport { GetHangmanWordsArgs } from '../dto/args/get-hangman-words.args'\nimport { GetHangmanWordArgs } from '../dto/args/get-hangman-word.args'\nimport { IHangmanWord } from '@szakszolg-nx/api-interfaces'\nimport { DeleteHangmanWordInput } from '../dto/inputs/delete-hangman-word.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class HangmanWordRepository extends SimpleRepository {\n    constructor(@InjectModel(HangmanWord.name) hangmanWordModel: Model) {\n        super(hangmanWordModel)\n    }\n\n    override async findAll(data: GetHangmanWordsArgs | null): Promise {\n        if (!data?.category && !data?.ids) return super.findAll(data)\n        let res: any[]\n        const param = {}\n        if (data.category) param['category'] = { $regex: data.category, $options: 'i' }\n        res = await this.model.find(param)\n        if (data.ids?.length > 0) res = res.filter((x) => data.ids.includes(x._id.toString()))\n        return res\n    }\n\n    override async findOne(data: GetHangmanWordArgs): Promise {\n        if (data?.category) {\n            // Note: If we want more than a few hundred words per category, we should use findOne().skip()\n            const res = await this.model.find({ category: { $regex: data.category, $options: 'i' } })\n            return res[Math.floor(Math.random() * res.length)]\n        }\n\n        const count = await this.model.estimatedDocumentCount()\n        const random = Math.floor(Math.random() * count)\n        return this.model.findOne().skip(random).limit(1)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HangmanWordResolver.html":{"url":"classes/HangmanWordResolver.html","title":"class - HangmanWordResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HangmanWordResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/hangman-word.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createHangmanWord\n                            \n                            \n                                deleteHangmanWord\n                            \n                            \n                                hangmanWord\n                            \n                            \n                                hangmanWords\n                            \n                            \n                                updateHangmanWord\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: HangmanWordService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        HangmanWordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createHangmanWord\n                        \n                    \n                \n            \n            \n                \ncreateHangmanWord(data: CreateHangmanWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateHangmanWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteHangmanWord\n                        \n                    \n                \n            \n            \n                \ndeleteHangmanWord(data: DeleteHangmanWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteHangmanWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hangmanWord\n                        \n                    \n                \n            \n            \n                \nhangmanWord(data: GetHangmanWordArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true, description: 'Get a hangman word randomly'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetHangmanWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hangmanWords\n                        \n                    \n                \n            \n            \n                \nhangmanWords(data: GetHangmanWordsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetHangmanWordsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateHangmanWord\n                        \n                    \n                \n            \n            \n                \nupdateHangmanWord(data: UpdateHangmanWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateHangmanWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { HangmanWordService } from './hangman-word.service'\nimport { HangmanWord } from './entities/hangman-word.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetHangmanWordArgs } from './dto/args/get-hangman-word.args'\nimport { IHangmanWord } from '@szakszolg-nx/api-interfaces'\nimport { GetHangmanWordsArgs } from './dto/args/get-hangman-words.args'\nimport { CreateHangmanWordInput } from './dto/inputs/create-hangman-word.input'\nimport { UpdateHangmanWordInput } from './dto/inputs/update-hangman-word.input'\nimport { DeleteHangmanWordInput } from './dto/inputs/delete-hangman-word.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => HangmanWord)\n@Resource('hangman-words')\nexport class HangmanWordResolver {\n    constructor(private readonly service: HangmanWordService) {}\n\n    @Query(() => HangmanWord, { nullable: true, description: 'Get a hangman word randomly' })\n    hangmanWord(@Args({ nullable: true }) data: GetHangmanWordArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [HangmanWord], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    hangmanWords(@Args({ nullable: true }) data: GetHangmanWordsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => HangmanWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createHangmanWord(@Args('createHangmanWordData') data: CreateHangmanWordInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => HangmanWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateHangmanWord(@Args('updateHangmanWordData') data: UpdateHangmanWordInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => HangmanWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteHangmanWord(@Args('deleteHangmanWordData') data: DeleteHangmanWordInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HangmanWordService.html":{"url":"injectables/HangmanWordService.html","title":"injectable - HangmanWordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HangmanWordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/hangman-word.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: HangmanWordRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/hangman-word/hangman-word.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        HangmanWordRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateHangmanWordInput } from './dto/inputs/create-hangman-word.input'\nimport { UpdateHangmanWordInput } from './dto/inputs/update-hangman-word.input'\nimport { HangmanWordRepository } from './entities/hangman-word.repository'\nimport { GetHangmanWordsArgs } from './dto/args/get-hangman-words.args'\nimport { GetHangmanWordArgs } from './dto/args/get-hangman-word.args'\nimport { DeleteHangmanWordInput } from './dto/inputs/delete-hangman-word.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class HangmanWordService extends RepositoryProxyService {\n    constructor(repository: HangmanWordRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdArg.html":{"url":"classes/IdArg.html","title":"class - IdArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/id.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-args/id.args.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlArg } from './gql-arg.abstract'\n\nexport class IdArrayArg extends GqlArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\nexport class IdArg extends GqlArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdArrayArg.html":{"url":"classes/IdArrayArg.html","title":"class - IdArrayArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdArrayArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/id.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-args/id.args.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlArg } from './gql-arg.abstract'\n\nexport class IdArrayArg extends GqlArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\nexport class IdArg extends GqlArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdInput.html":{"url":"classes/IdInput.html","title":"class - IdInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-inputs/id.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-inputs/id.input.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GqlInput } from './gql-input.abstract'\n\nexport class IdInput extends GqlInput {\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtAuthGuard.html":{"url":"classes/JwtAuthGuard.html","title":"class - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\n\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/strategies/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/strategies/jwt.strategy.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { forwardRef, Inject, Injectable } from '@nestjs/common'\nimport { UsersService } from '../../users/users.service'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        @Inject(forwardRef(() => UsersService))\n        private readonly userService: UsersService,\n    ) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: process.env.JWT_SECRET,\n        })\n    }\n\n    async validate(payload: { email: string; sub: string }) {\n        return this.userService.findOne({ email: payload.email })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalAuthGuard.html":{"url":"classes/LocalAuthGuard.html","title":"class - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\n\nexport class LocalAuthGuard extends AuthGuard\n('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/strategies/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/strategies/local.strategy.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport'\nimport { Strategy } from 'passport-local'\nimport { AuthService } from '../auth.service'\nimport { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private readonly authService: AuthService) {\n        super({ usernameField: 'email' })\n    }\n\n    async validate(email: string, password: string): Promise {\n        const user = await this.authService.validate(email, password)\n        console.log('user', user)\n        if (!user) {\n            throw new UnauthorizedException()\n        }\n        return user\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MirrorWord.html":{"url":"classes/MirrorWord.html","title":"class - MirrorWord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MirrorWord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IMirrorWord\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IMirrorWord } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type MirrorWordDocument = IMirrorWord & Document\n\n@ObjectType()\n@Schema()\nexport class MirrorWord implements IMirrorWord {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    word: string\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const MirrorWordSchema = SchemaFactory.createForClass(MirrorWord)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MirrorWordModule.html":{"url":"modules/MirrorWordModule.html","title":"module - MirrorWordModule","body":"\n                   \n\n\n\n\n    Modules\n    MirrorWordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MirrorWordModule\n\n\n\ncluster_MirrorWordModule_providers\n\n\n\ncluster_MirrorWordModule_exports\n\n\n\n\nMirrorWordRepository \n\nMirrorWordRepository \n\n\n\nMirrorWordService \n\nMirrorWordService \n\n\n\nMirrorWordModule\n\nMirrorWordModule\n\nMirrorWordRepository  -->\n\nMirrorWordModule->MirrorWordRepository \n\n\n\nMirrorWordService  -->\n\nMirrorWordModule->MirrorWordService \n\n\n\n\n\nMirrorWordRepository\n\nMirrorWordRepository\n\nMirrorWordModule -->\n\nMirrorWordRepository->MirrorWordModule\n\n\n\n\n\nMirrorWordService\n\nMirrorWordService\n\nMirrorWordModule -->\n\nMirrorWordService->MirrorWordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/mirror-word.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MirrorWordRepository\n                        \n                        \n                            MirrorWordService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MirrorWordRepository\n                        \n                        \n                            MirrorWordService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { MirrorWordService } from './mirror-word.service'\nimport { MirrorWordResolver } from './mirror-word.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { MirrorWord, MirrorWordSchema } from './entities/mirror-word.entity'\nimport { MirrorWordRepository } from './entities/mirror-word.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: MirrorWord.name,\n                schema: MirrorWordSchema,\n            },\n        ]),\n    ],\n    providers: [MirrorWordResolver, MirrorWordService, MirrorWordRepository],\n    exports: [MirrorWordService, MirrorWordRepository],\n})\nexport class MirrorWordModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MirrorWordRepository.html":{"url":"injectables/MirrorWordRepository.html","title":"injectable - MirrorWordRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MirrorWordRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/entities/mirror-word.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mirrorWordModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mirrorWordModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(__data: GetMirrorWordArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    __data\n                                    \n                                                GetMirrorWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { MirrorWord, MirrorWordDocument } from './mirror-word.entity'\nimport { Model } from 'mongoose'\nimport { UpdateMirrorWordInput } from '../dto/inputs/update-mirror-word.input'\nimport { CreateMirrorWordInput } from '../dto/inputs/create-mirror-word.input'\nimport { GetMirrorWordsArgs } from '../dto/args/get-mirror-words.args'\nimport { GetMirrorWordArgs } from '../dto/args/get-mirror-word.args'\nimport { IMirrorWord } from '@szakszolg-nx/api-interfaces'\nimport { DeleteMirrorWordInput } from '../dto/inputs/delete-mirror-word.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class MirrorWordRepository extends SimpleRepository {\n    constructor(@InjectModel(MirrorWord.name) mirrorWordModel: Model) {\n        super(mirrorWordModel)\n    }\n\n    override async findOne(__data: GetMirrorWordArgs): Promise {\n        const count = await this.model.estimatedDocumentCount()\n        const random = Math.floor(Math.random() * count)\n        return this.model.findOne().skip(random).limit(1)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MirrorWordResolver.html":{"url":"classes/MirrorWordResolver.html","title":"class - MirrorWordResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MirrorWordResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/mirror-word.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMirrorWord\n                            \n                            \n                                deleteMirrorWord\n                            \n                            \n                                mirrorWord\n                            \n                            \n                                mirrorWords\n                            \n                            \n                                updateMirrorWord\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mirrorWordService: MirrorWordService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mirrorWordService\n                                                  \n                                                        \n                                                                        MirrorWordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMirrorWord\n                        \n                    \n                \n            \n            \n                \ncreateMirrorWord(data: CreateMirrorWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateMirrorWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMirrorWord\n                        \n                    \n                \n            \n            \n                \ndeleteMirrorWord(data: DeleteMirrorWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteMirrorWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mirrorWord\n                        \n                    \n                \n            \n            \n                \nmirrorWord(data: GetMirrorWordArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetMirrorWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mirrorWords\n                        \n                    \n                \n            \n            \n                \nmirrorWords(data: GetMirrorWordsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetMirrorWordsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMirrorWord\n                        \n                    \n                \n            \n            \n                \nupdateMirrorWord(data: UpdateMirrorWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateMirrorWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { MirrorWordService } from './mirror-word.service'\nimport { MirrorWord } from './entities/mirror-word.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetMirrorWordArgs } from './dto/args/get-mirror-word.args'\nimport { IMirrorWord } from '@szakszolg-nx/api-interfaces'\nimport { GetMirrorWordsArgs } from './dto/args/get-mirror-words.args'\nimport { CreateMirrorWordInput } from './dto/inputs/create-mirror-word.input'\nimport { UpdateMirrorWordInput } from './dto/inputs/update-mirror-word.input'\nimport { DeleteMirrorWordInput } from './dto/inputs/delete-mirror-word.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => MirrorWord)\n@Resource('mirror-words')\nexport class MirrorWordResolver {\n    constructor(private readonly mirrorWordService: MirrorWordService) {}\n\n    @Query(() => MirrorWord, { nullable: true })\n    mirrorWord(@Args({ nullable: true }) data: GetMirrorWordArgs): Promise {\n        return this.mirrorWordService.findOne(data)\n    }\n\n    @Query(() => [MirrorWord], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    mirrorWords(@Args({ nullable: true }) data: GetMirrorWordsArgs | null): Promise {\n        return this.mirrorWordService.findAll(data)\n    }\n\n    @Mutation(() => MirrorWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createMirrorWord(@Args('createMirrorWordData') data: CreateMirrorWordInput): Promise {\n        return this.mirrorWordService.create(data)\n    }\n\n    @Mutation(() => MirrorWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateMirrorWord(@Args('updateMirrorWordData') data: UpdateMirrorWordInput): Promise {\n        return this.mirrorWordService.update(data)\n    }\n\n    @Mutation(() => MirrorWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteMirrorWord(@Args('deleteMirrorWordData') data: DeleteMirrorWordInput): Promise {\n        return this.mirrorWordService.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MirrorWordService.html":{"url":"injectables/MirrorWordService.html","title":"injectable - MirrorWordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MirrorWordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/mirror-word.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: MirrorWordRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/mirror-word/mirror-word.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        MirrorWordRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateMirrorWordInput } from './dto/inputs/create-mirror-word.input'\nimport { UpdateMirrorWordInput } from './dto/inputs/update-mirror-word.input'\nimport { MirrorWordRepository } from './entities/mirror-word.repository'\nimport { GetMirrorWordsArgs } from './dto/args/get-mirror-words.args'\nimport { GetMirrorWordArgs } from './dto/args/get-mirror-word.args'\nimport { DeleteMirrorWordInput } from './dto/inputs/delete-mirror-word.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class MirrorWordService extends RepositoryProxyService {\n    constructor(repository: MirrorWordRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PermissionGuard.html":{"url":"guards/PermissionGuard.html","title":"guard - PermissionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PermissionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/api/src/app/auth/guards/permission-guard.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/guards/permission-guard.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/guards/permission-guard.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, flatten, Injectable } from '@nestjs/common'\nimport { Reflector } from '@nestjs/core'\nimport { GqlExecutionContext } from '@nestjs/graphql'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class PermissionGuard implements CanActivate {\n    constructor(private reflector: Reflector) {}\n\n    canActivate(context: ExecutionContext) {\n        const requiredResource = this.reflector.getAllAndMerge('resources', [\n            context.getClass(),\n            context.getHandler(),\n        ])\n        const requiredAbilities = this.reflector.get('abilities', context.getHandler())\n        if (requiredAbilities?.length == 0 && requiredResource?.length == 0) return true\n        const required = `${requiredAbilities[0]}::${requiredResource[0]}`\n        let user: IUser\n        if (context.getType() === 'http') user = context.switchToHttp().getRequest().user\n        user = GqlExecutionContext.create(context).getContext().req.user\n        if (!user) return false\n        const userPermissions = flatten(user.roles.map((role) => role.permissions ?? [])).map((permission: string) =>\n            permission.replace(/^\\*::/g, `${requiredAbilities[0]}::`).replace(/::\\*$/g, `::${requiredResource[0]}`),\n        )\n\n        return userPermissions.includes(required)\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepositoryProxyService.html":{"url":"injectables/RepositoryProxyService.html","title":"injectable - RepositoryProxyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepositoryProxyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/proxies/repository-proxy.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: TRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    TRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { SimpleRepository } from './simple.repository'\nimport { IdArg, IdArrayArg } from '../gql-args/id.args'\nimport { IdInput } from '../gql-inputs/id.input'\n\n@Injectable()\nexport class RepositoryProxyService,\n    TFindOneArgs extends IdArg,\n    TFindManyArgs extends IdArrayArg,\n    TCreateInput,\n    TUpdateInput extends IdInput,\n    TDeleteInput extends IdInput,\n> {\n    constructor(protected readonly repository: TRepository) {}\n\n    create(data: TCreateInput) {\n        return this.repository.create(data)\n    }\n\n    findAll(data: TFindManyArgs) {\n        return this.repository.findAll(data)\n    }\n\n    findOne(data: TFindOneArgs) {\n        return this.repository.findOne(data)\n    }\n\n    update(data: TUpdateInput) {\n        return this.repository.update(data)\n    }\n\n    delete(data: TDeleteInput) {\n        return this.repository.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/entities/role.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IRole\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type RoleDocument = IRole & Document\n\n@ObjectType()\n@Schema()\nexport class Role implements IRole {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    description: string\n\n    @Field()\n    @Prop()\n    name: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    permissions: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_imports\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nAuthModule->RoleModule\n\n\n\n\n\nRoleRepository \n\nRoleRepository \n\nRoleRepository  -->\n\nRoleModule->RoleRepository \n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nRoleRepository\n\nRoleRepository\n\nRoleModule -->\n\nRoleRepository->RoleModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepository\n                        \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleRepository\n                        \n                        \n                            RoleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common'\nimport { RoleService } from './role.service'\nimport { RoleResolver } from './role.resolver'\nimport { AuthModule } from '../auth/auth.module'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Role, RoleSchema } from './entities/role.entity'\nimport { RoleRepository } from './entities/role.repository'\nimport { UsersModule } from '../users/users.module'\n\n@Module({\n    imports: [\n        AuthModule,\n        forwardRef(() => UsersModule),\n        MongooseModule.forFeature([\n            {\n                name: Role.name,\n                schema: RoleSchema,\n            },\n        ]),\n    ],\n    providers: [RoleResolver, RoleService, RoleRepository],\n    exports: [RoleService, RoleRepository],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepository.html":{"url":"injectables/RoleRepository.html","title":"injectable - RoleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/entities/role.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/entities/role.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:30\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Role, RoleDocument } from './role.entity'\nimport { Model } from 'mongoose'\nimport { UpdateRoleInput } from '../dto/inputs/update-role.input'\nimport { CreateRoleInput } from '../dto/inputs/create-role.input'\nimport { GetRolesArgs } from '../dto/args/get-roles.args'\nimport { GetRoleArgs } from '../dto/args/get-role.args'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { DeleteRoleInput } from '../dto/inputs/delete-role.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class RoleRepository extends SimpleRepository {\n    constructor(@InjectModel(Role.name) roleModel: Model) {\n        super(roleModel)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleResolver.html":{"url":"classes/RoleResolver.html","title":"class - RoleResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/role.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createRole\n                            \n                            \n                                deleteRole\n                            \n                            \n                                role\n                            \n                            \n                                roles\n                            \n                            \n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/role.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createRole\n                        \n                    \n                \n            \n            \n                \ncreateRole(data: CreateRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRole\n                        \n                    \n                \n            \n            \n                \ndeleteRole(data: DeleteRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n            \n                \nrole(data: GetRoleArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetRoleArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n            \n                \nroles(data: GetRolesArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetRolesArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRole\n                        \n                    \n                \n            \n            \n                \nupdateRole(data: UpdateRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { RoleService } from './role.service'\nimport { Role } from './entities/role.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetRoleArgs } from './dto/args/get-role.args'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { GetRolesArgs } from './dto/args/get-roles.args'\nimport { CreateRoleInput } from './dto/inputs/create-role.input'\nimport { UpdateRoleInput } from './dto/inputs/update-role.input'\nimport { DeleteRoleInput } from './dto/inputs/delete-role.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => Role)\n@Resource('roles')\nexport class RoleResolver {\n    constructor(private readonly roleService: RoleService) {}\n\n    @Query(() => Role, { nullable: true })\n    @UseGuards(GqlAuthGuard)\n    @Permission('read')\n    role(@Args({ nullable: true }) data: GetRoleArgs): Promise {\n        return this.roleService.findOne(data)\n    }\n\n    @Query(() => [Role], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    roles(@Args({ nullable: true }) data: GetRolesArgs | null): Promise {\n        return this.roleService.findAll(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('create')\n    createRole(@Args('createRoleData') data: CreateRoleInput): Promise {\n        return this.roleService.create(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('update')\n    updateRole(@Args('updateRoleData') data: UpdateRoleInput): Promise {\n        return this.roleService.update(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('delete')\n    deleteRole(@Args('deleteRoleData') data: DeleteRoleInput): Promise {\n        return this.roleService.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/role.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: RoleRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/role.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        RoleRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateRoleInput } from './dto/inputs/create-role.input'\nimport { UpdateRoleInput } from './dto/inputs/update-role.input'\nimport { RoleRepository } from './entities/role.repository'\nimport { GetRolesArgs } from './dto/args/get-roles.args'\nimport { GetRoleArgs } from './dto/args/get-role.args'\nimport { DeleteRoleInput } from './dto/inputs/delete-role.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class RoleService extends RepositoryProxyService {\n    constructor(roleRepository: RoleRepository) {\n        super(roleRepository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SimpleRepository.html":{"url":"injectables/SimpleRepository.html","title":"injectable - SimpleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SimpleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/proxies/simple.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/shared/proxies/simple.repository.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common'\nimport { Document, Model, Types } from 'mongoose'\nimport { IdArg, IdArrayArg } from '../gql-args/id.args'\nimport { IdInput } from '../gql-inputs/id.input'\nimport { IApiResource, IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class SimpleRepository {\n    constructor(protected readonly model: Model) {}\n\n    public async findAll(data: TFindManyArgs | null): Promise {\n        return data && Object.keys(data).length > 0\n            ? Promise.all(data.ids.map((id) => this.findOne({ id } as TFindOneArgs)))\n            : (this.model.find({ deletedAt: { $eq: null } }) as any)\n    }\n\n    public async findOne(data: TFindOneArgs): Promise {\n        const res = this.model.findById(data.id) as any\n        return res?.deletedAt ? Promise.reject(new NotFoundException()) : res\n    }\n\n    public async create(data: TCreateInput): Promise {\n        return (await new this.model({\n            ...data,\n            _id: new Types.ObjectId(),\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            deletedAt: null,\n        }).save()) as any\n    }\n\n    public async update(data: TUpdateInput & IUpdatedAt): Promise {\n        const id = data.id\n        delete data.id\n        if ((data as any).deletedAt) return Promise.reject(new BadRequestException('Cannot update deleted resource'))\n        data.updatedAt = new Date()\n        return this.model.findByIdAndUpdate(id, data, { new: false }) as any\n    }\n\n    public async delete(data: TDeleteInput): Promise {\n        return this.model.findByIdAndUpdate(data.id, { deletedAt: Date.now() }) as any\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGroupingItemInput.html":{"url":"classes/UpdateGroupingItemInput.html","title":"class - UpdateGroupingItemInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGroupingItemInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                correct\n                            \n                            \n                                    Optional\n                                groups\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                item\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateGroupingItemInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    item?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    groups?: string[]\n\n    @Field({ nullable: true })\n    correct?: string\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateHangmanWordInput.html":{"url":"classes/UpdateHangmanWordInput.html","title":"class - UpdateHangmanWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateHangmanWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateHangmanWordInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    word?: string\n\n    @Field({ nullable: true })\n    category?: string\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMirrorWordInput.html":{"url":"classes/UpdateMirrorWordInput.html","title":"class - UpdateMirrorWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMirrorWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class UpdateMirrorWordInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field()\n    @IsNotEmpty()\n    word: string\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleInput.html":{"url":"classes/UpdateRoleInput.html","title":"class - UpdateRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/update-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                permissions\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty, IsOptional } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateRoleInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    @IsNotEmpty()\n    name?: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    @IsNotEmpty()\n    description?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @IsOptional()\n    @IsArray()\n    permissions?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserInput.html":{"url":"classes/UpdateUserInput.html","title":"class - UpdateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/update-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                newPassword\n                            \n                            \n                                    Optional\n                                newPasswordConfirm\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newPasswordConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsEmail, IsNotEmpty } from 'class-validator'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateUserInput extends IdInput implements IUpdatedAt {\n    @Field({ nullable: true })\n    id: string\n\n    @Field({ nullable: true })\n    @IsEmail()\n    email?: string\n\n    @Field({ nullable: true })\n    username?: string\n\n    @Field()\n    @IsNotEmpty()\n    password: string\n\n    @Field({ nullable: true })\n    newPassword?: string\n\n    @Field({ nullable: true })\n    newPasswordConfirm?: string\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    roles?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/entities/user.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Types.ObjectId[] | IRole[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { Document, Schema as MongooseSchema, Types } from 'mongoose'\nimport { IRole, IUser } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Role } from '../../role/entities/role.entity'\nimport { SchemaTypes } from 'mongoose'\n\nexport type UserDocument = User & Document\n\n@ObjectType()\n@Schema()\nexport class User implements IUser {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    username: string\n\n    @Field({ nullable: true })\n    @Prop()\n    om?: string\n\n    @Prop()\n    password?: string\n\n    @Field()\n    @Prop()\n    email: string\n\n    @Field(() => [Role], { nullable: 'itemsAndList' })\n    @Prop({ type: [SchemaTypes.ObjectId], ref: Role.name })\n    roles: Types.ObjectId[] | IRole[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/entities/user.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, roleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/entities/user.repository.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: DeleteUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetUsersArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetUserArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: UpdateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { User, UserDocument } from './user.entity'\nimport { CreateUserInput } from '../dto/inputs/create-user.input'\nimport { UpdateUserInput } from '../dto/inputs/update-user.input'\nimport { DeleteUserInput } from '../dto/inputs/delete-user.input'\nimport { GetUserArgs } from '../dto/args/get-user.args'\nimport { GetUsersArgs } from '../dto/args/get-users.args'\nimport { BadRequestException, Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\nimport { IRole, IUser } from '@szakszolg-nx/api-interfaces'\nimport { Types } from 'mongoose'\nimport { Role, RoleDocument } from '../../role/entities/role.entity'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class UserRepository {\n    constructor(\n        @InjectModel(User.name) private readonly userModel: Model,\n        @InjectModel(Role.name) private readonly roleModel: Model,\n    ) {}\n\n    public async findAll(data: GetUsersArgs | null): Promise {\n        return data && Object.keys(data).length > 0\n            ? Promise.all(data.ids.map((id) => this.findOne({ id })))\n            : this.userModel.find()\n    }\n\n    public async findOne(data: GetUserArgs): Promise {\n        if (data.id) return this.userModel.findById(data.id).populate('roles')\n\n        if (data.email) return this.userModel.findOne({ email: data.email }).populate('roles')\n\n        throw new Error('Please provide either an id or an email address')\n    }\n\n    public async create(data: CreateUserInput): Promise {\n        return new this.userModel({ ...data, _id: new Types.ObjectId() }).save()\n    }\n\n    public async update(data: UpdateUserInput): Promise {\n        const user = await this.userModel.findById(data.id)\n\n        if (!user) throw new Error('User not found')\n        if (!(await bcrypt.compare(data.password, user.password)))\n            throw new BadRequestException('Current password is incorrect')\n\n        if (data.newPassword && data.newPassword !== data.newPasswordConfirm)\n            throw new Error('New passwords do not match')\n        // const id = data.id\n        delete data.id\n        ;(data as any).updatedAt = new Date()\n\n        user.roles = data?.roles?.map((roleId) => new Types.ObjectId(roleId))\n\n        user.save()\n        return user\n    }\n\n    public async delete(data: DeleteUserInput): Promise {\n        return this.userModel.findByIdAndUpdate(data.id, { deletedAt: new Date() })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserRepository\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common'\nimport { UsersService } from './users.service'\nimport { UsersResolver } from './users.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { UserRepository } from './entities/user.repository'\nimport { AuthModule } from '../auth/auth.module'\nimport { User, UserSchema } from './entities/user.entity'\nimport { RoleModule } from '../role/role.module'\nimport { Role, RoleSchema } from '../role/entities/role.entity'\n\n@Module({\n    imports: [\n        forwardRef(() => AuthModule),\n        forwardRef(() => RoleModule),\n        MongooseModule.forFeature([\n            {\n                name: Role.name,\n                schema: RoleSchema,\n            },\n            {\n                name: User.name,\n                schema: UserSchema,\n            },\n        ]),\n    ],\n    providers: [UsersResolver, UsersService, UserRepository],\n    exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersResolver.html":{"url":"classes/UsersResolver.html","title":"class - UsersResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/users.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                updateUser\n                            \n                            \n                                user\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/users.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(data: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(data: DeleteUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(data: UpdateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n            \n                \nuser(data: GetUserArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n            \n                \nusers(data: GetUsersArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('browse')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Args, Mutation } from '@nestjs/graphql'\nimport { UsersService } from './users.service'\nimport { User } from './entities/user.entity'\nimport { GetUserArgs } from './dto/args/get-user.args'\nimport { GetUsersArgs } from './dto/args/get-users.args'\nimport { CreateUserInput } from './dto/inputs/create-user.input'\nimport { UpdateUserInput } from './dto/inputs/update-user.input'\nimport { DeleteUserInput } from './dto/inputs/delete-user.input'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => User)\n@Resource('users')\nexport class UsersResolver {\n    constructor(private readonly usersService: UsersService) {}\n\n    @Query(() => User, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    user(@Args() data: GetUserArgs): Promise {\n        return this.usersService.findOne(data)\n    }\n\n    @Query(() => [User], { nullable: 'items' })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('browse')\n    users(@Args({ nullable: true }) data: GetUsersArgs | null): Promise {\n        return this.usersService.findAll(data)\n    }\n\n    @Mutation(() => User)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createUser(@Args('createUserData') data: CreateUserInput): Promise {\n        return this.usersService.create(data)\n    }\n\n    @Mutation(() => User)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateUser(@Args('updateUserData') data: UpdateUserInput): Promise {\n        return this.usersService.update(data)\n    }\n\n    @Mutation(() => User)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteUser(@Args('deleteUserData') data: DeleteUserInput): Promise {\n        return this.usersService.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/users.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: DeleteUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetUsersArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetUserArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: UpdateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateUserInput } from './dto/inputs/create-user.input'\nimport { UpdateUserInput } from './dto/inputs/update-user.input'\nimport { DeleteUserInput } from './dto/inputs/delete-user.input'\nimport { GetUserArgs } from './dto/args/get-user.args'\nimport { GetUsersArgs } from './dto/args/get-users.args'\nimport { UserRepository } from './entities/user.repository'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class UsersService {\n    constructor(private readonly userRepository: UserRepository) {}\n\n    public findAll(data: GetUsersArgs | null): Promise {\n        return this.userRepository.findAll(data)\n    }\n\n    public findOne(data: GetUserArgs): Promise {\n        return this.userRepository.findOne(data)\n    }\n\n    public async create(data: CreateUserInput): Promise {\n        data.password = await bcrypt.hash(data.password, 10)\n        return this.userRepository.create(data)\n    }\n\n    public async update(data: UpdateUserInput): Promise {\n        return this.userRepository.update(data)\n    }\n\n    public async delete(data: DeleteUserInput): Promise {\n        return this.userRepository.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/auth.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/permission.decorator.ts\n            \n            variable\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/permission.decorator.ts\n            \n            variable\n            Resource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/gql-auth.guard.ts\n            \n            class\n            GqlAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/jwt-auth.guard.ts\n            \n            class\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/local-auth.guard.ts\n            \n            class\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/permission-guard.service.ts\n            \n            guard\n            PermissionGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/config/mongo-config.factory.ts\n            \n            variable\n            mongooseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/config/validation.ts\n            \n            variable\n            validationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/core.resolver.ts\n            \n            class\n            CoreResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/args/get-grouping-item.args.ts\n            \n            class\n            GetGroupingItemArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/args/get-grouping-items.args.ts\n            \n            class\n            GetGroupingItemsArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts\n            \n            class\n            CreateGroupingItemInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/inputs/delete-grouping-item.input.ts\n            \n            class\n            DeleteGroupingItemInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts\n            \n            class\n            UpdateGroupingItemInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n            \n            class\n            GroupingItem\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n            \n            variable\n            GroupingItemSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/entities/grouping-item.repository.ts\n            \n            injectable\n            GroupingItemRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/grouping-item.resolver.ts\n            \n            class\n            GroupingItemResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/grouping-item.service.ts\n            \n            injectable\n            GroupingItemService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/args/get-hangman-word.args.ts\n            \n            class\n            GetHangmanWordArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/args/get-hangman-words.args.ts\n            \n            class\n            GetHangmanWordsArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts\n            \n            class\n            CreateHangmanWordInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/inputs/delete-hangman-word.input.ts\n            \n            class\n            DeleteHangmanWordInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts\n            \n            class\n            UpdateHangmanWordInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n            \n            class\n            HangmanWord\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n            \n            variable\n            HangmanWordSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/entities/hangman-word.repository.ts\n            \n            injectable\n            HangmanWordRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/hangman-word.resolver.ts\n            \n            class\n            HangmanWordResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/hangman-word.service.ts\n            \n            injectable\n            HangmanWordService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/args/get-mirror-word.args.ts\n            \n            class\n            GetMirrorWordArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/args/get-mirror-words.args.ts\n            \n            class\n            GetMirrorWordsArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/inputs/create-mirror-word.input.ts\n            \n            class\n            CreateMirrorWordInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/inputs/delete-mirror-word.input.ts\n            \n            class\n            DeleteMirrorWordInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts\n            \n            class\n            UpdateMirrorWordInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n            \n            class\n            MirrorWord\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n            \n            variable\n            MirrorWordSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/entities/mirror-word.repository.ts\n            \n            injectable\n            MirrorWordRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/mirror-word.resolver.ts\n            \n            class\n            MirrorWordResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/mirror-word.service.ts\n            \n            injectable\n            MirrorWordService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/args/get-role.args.ts\n            \n            class\n            GetRoleArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/args/get-roles.args.ts\n            \n            class\n            GetRolesArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/create-role.input.ts\n            \n            class\n            CreateRoleInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/delete-role.input.ts\n            \n            class\n            DeleteRoleInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/update-role.input.ts\n            \n            class\n            UpdateRoleInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.entity.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.repository.ts\n            \n            injectable\n            RoleRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/role.resolver.ts\n            \n            class\n            RoleResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/args/get-user.args.ts\n            \n            class\n            GetUserArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/args/get-users.args.ts\n            \n            class\n            GetUsersArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/create-user.input.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/delete-user.input.ts\n            \n            class\n            DeleteUserInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/update-user.input.ts\n            \n            class\n            UpdateUserInput\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.entity.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.repository.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.resolver.ts\n            \n            class\n            UsersResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/gql-arg.abstract.ts\n            \n            class\n            GqlArg\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/id.args.ts\n            \n            class\n            IdArg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/id.args.ts\n            \n            class\n            IdArrayArg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-inputs/gql-input.abstract.ts\n            \n            class\n            GqlInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-inputs/id.input.ts\n            \n            class\n            IdInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/proxies/repository-proxy.service.ts\n            \n            injectable\n            RepositoryProxyService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/shared/proxies/simple.repository.ts\n            \n            injectable\n            SimpleRepository\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.1.0\n        \n            @angular/common : ~13.1.0\n        \n            @angular/compiler : ~13.1.0\n        \n            @angular/core : ~13.1.0\n        \n            @angular/forms : ~13.1.0\n        \n            @angular/platform-browser : ~13.1.0\n        \n            @angular/platform-browser-dynamic : ~13.1.0\n        \n            @angular/router : ~13.1.0\n        \n            @compodoc/compodoc : ^1.1.18\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.6\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/graphql : ^9.1.2\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mongoose : ^9.0.2\n        \n            @nestjs/passport : ^8.1.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nrwl/angular : 13.4.6\n        \n            apollo-server-express : ^3.6.1\n        \n            bcryptjs : ^2.4.3\n        \n            class-validator : ^0.13.2\n        \n            del-cli : ^4.0.1\n        \n            dotenv : ^14.2.0\n        \n            graphql : ^15.0.0\n        \n            graphql-tools : ^8.2.0\n        \n            joi : ^17.5.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^6.1.7\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.0.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSzakszolgNx\nThis project was generated using Nx.\n\n\n🔎 Smart, Fast and Extensible Build System\nQuick Start & Documentation\nNx Documentation\n10-minute video showing all Nx features\nInteractive Tutorial\nAdding capabilities to your workspace\nNx supports many plugins which add capabilities for developing different types of applications and different tools.\nThese capabilities include generating applications, libraries, etc as well as the devtools to test, and build projects as well.\nBelow are our core plugins:\n\nAngular\nng add @nrwl/angular\n\n\nReact\nng add @nrwl/react\n\n\nWeb (no framework frontends)\nng add @nrwl/web\n\n\nNest\nng add @nrwl/nest\n\n\nExpress\nng add @nrwl/express\n\n\nNode\nng add @nrwl/node\n\n\n\nThere are also many community plugins you could add.\nGenerate an application\nRun ng g @nrwl/angular:app my-app to generate an application.\n\nYou can use any of the plugins above to generate applications as well.\n\nWhen using Nx, you can create multiple applications and libraries in the same workspace.\nGenerate a library\nRun ng g @nrwl/angular:lib my-lib to generate a library.\n\nYou can also use any of the plugins above to generate libraries as well.\n\nLibraries are shareable across libraries and applications. They can be imported from @szakszolg-nx/mylib.\nDevelopment server\nRun ng serve my-app for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng g component my-component --project=my-app to generate a new component.\nBuild\nRun ng build my-app to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test my-app to execute the unit tests via Jest.\nRun nx affected:test to execute the unit tests affected by a change.\nRunning end-to-end tests\nRun ng e2e my-app to execute the end-to-end tests via Cypress.\nRun nx affected:e2e to execute the end-to-end tests affected by a change.\nUnderstand your workspace\nRun nx dep-graph to see a diagram of the dependencies of your projects.\nFurther help\nVisit the Nx Documentation to learn more.\n☁ Nx Cloud\nDistributed Computation Caching & Distributed Task Execution\n\n\nNx Cloud pairs with Nx in order to enable you to build and test code more rapidly, by up to 10 times. Even teams that are new to Nx can connect to Nx Cloud and start saving time instantly.\nTeams using Nx gain the advantage of building full-stack applications with their preferred framework alongside Nx’s advanced code generation and project dependency graph, plus a unified experience for both frontend and backend developers.\nVisit Nx Cloud to learn more.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupingItemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HangmanWordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MirrorWordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GroupingItemModule\n\n\n\ncluster_GroupingItemModule_exports\n\n\n\ncluster_GroupingItemModule_providers\n\n\n\ncluster_HangmanWordModule\n\n\n\ncluster_HangmanWordModule_exports\n\n\n\ncluster_HangmanWordModule_providers\n\n\n\ncluster_MirrorWordModule\n\n\n\ncluster_MirrorWordModule_exports\n\n\n\ncluster_MirrorWordModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nAuthModule->RoleModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nGroupingItemModule\n\nGroupingItemModule\n\nAppModule -->\n\nGroupingItemModule->AppModule\n\n\n\n\n\nGroupingItemRepository \n\nGroupingItemRepository \n\nGroupingItemRepository  -->\n\nGroupingItemModule->GroupingItemRepository \n\n\n\n\n\nGroupingItemService \n\nGroupingItemService \n\nGroupingItemService  -->\n\nGroupingItemModule->GroupingItemService \n\n\n\n\n\nHangmanWordModule\n\nHangmanWordModule\n\nAppModule -->\n\nHangmanWordModule->AppModule\n\n\n\n\n\nHangmanWordRepository \n\nHangmanWordRepository \n\nHangmanWordRepository  -->\n\nHangmanWordModule->HangmanWordRepository \n\n\n\n\n\nHangmanWordService \n\nHangmanWordService \n\nHangmanWordService  -->\n\nHangmanWordModule->HangmanWordService \n\n\n\n\n\nMirrorWordModule\n\nMirrorWordModule\n\nAppModule -->\n\nMirrorWordModule->AppModule\n\n\n\n\n\nMirrorWordRepository \n\nMirrorWordRepository \n\nMirrorWordRepository  -->\n\nMirrorWordModule->MirrorWordRepository \n\n\n\n\n\nMirrorWordService \n\nMirrorWordService \n\nMirrorWordService  -->\n\nMirrorWordModule->MirrorWordService \n\n\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoleRepository \n\nRoleRepository \n\nRoleRepository  -->\n\nRoleModule->RoleRepository \n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nGroupingItemRepository\n\nGroupingItemRepository\n\nGroupingItemModule -->\n\nGroupingItemRepository->GroupingItemModule\n\n\n\n\n\nGroupingItemService\n\nGroupingItemService\n\nGroupingItemModule -->\n\nGroupingItemService->GroupingItemModule\n\n\n\n\n\nHangmanWordRepository\n\nHangmanWordRepository\n\nHangmanWordModule -->\n\nHangmanWordRepository->HangmanWordModule\n\n\n\n\n\nHangmanWordService\n\nHangmanWordService\n\nHangmanWordModule -->\n\nHangmanWordService->HangmanWordModule\n\n\n\n\n\nMirrorWordRepository\n\nMirrorWordRepository\n\nMirrorWordModule -->\n\nMirrorWordRepository->MirrorWordModule\n\n\n\n\n\nMirrorWordService\n\nMirrorWordService\n\nMirrorWordModule -->\n\nMirrorWordService->MirrorWordModule\n\n\n\n\n\nRoleRepository\n\nRoleRepository\n\nRoleModule -->\n\nRoleRepository->RoleModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    44 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GroupingItemDocument   (apps/.../grouping-item.entity.ts)\n                        \n                        \n                            HangmanWordDocument   (apps/.../hangman-word.entity.ts)\n                        \n                        \n                            MirrorWordDocument   (apps/.../mirror-word.entity.ts)\n                        \n                        \n                            RoleDocument   (apps/.../role.entity.ts)\n                        \n                        \n                            UserDocument   (apps/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n    \n    \n        \n            \n                \n                    \n                    GroupingItemDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n    \n    \n        \n            \n                \n                    \n                    HangmanWordDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n    \n    \n        \n            \n                \n                    \n                    MirrorWordDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/role/entities/role.entity.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/users/entities/user.entity.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bcrypt   (apps/.../auth.service.ts)\n                        \n                        \n                            bcrypt   (apps/.../users.service.ts)\n                        \n                        \n                            bcrypt   (apps/.../user.repository.ts)\n                        \n                        \n                            configuration   (apps/.../configuration.ts)\n                        \n                        \n                            CurrentUser   (apps/.../current-user.decorator.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            GroupingItemSchema   (apps/.../grouping-item.entity.ts)\n                        \n                        \n                            HangmanWordSchema   (apps/.../hangman-word.entity.ts)\n                        \n                        \n                            MirrorWordSchema   (apps/.../mirror-word.entity.ts)\n                        \n                        \n                            mongooseConfig   (apps/.../mongo-config.factory.ts)\n                        \n                        \n                            Permission   (apps/.../permission.decorator.ts)\n                        \n                        \n                            Resource   (apps/.../permission.decorator.ts)\n                        \n                        \n                            RoleSchema   (apps/.../role.entity.ts)\n                        \n                        \n                            UserSchema   (apps/.../user.entity.ts)\n                        \n                        \n                            validationSchema   (apps/.../validation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/entities/user.repository.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/core/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => ({\n    environment: process.env.NODE_ENV,\n    port: parseInt(process.env.PORT || '3000', 10),\n})\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/auth/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_data: unknown, context: ExecutionContext) => {\n    if (context.getType() === 'http') return context.switchToHttp().getRequest().user\n    return GqlExecutionContext.create(context).getContext().req.user\n})\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GroupingItemSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(GroupingItem)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HangmanWordSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(HangmanWord)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MirrorWordSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(MirrorWord)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/core/config/mongo-config.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mongooseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    imports: [ConfigModule],\n    providers: [ConfigService],\n    mongooseConfigFactory: async (configService: ConfigService): Promise => {\n        const uri = `mongodb+srv://${configService.get('DATABASE_USER')}@${configService.get(\n            'DATABASE_HOST',\n        )}/${configService.get(\n            'DATABASE_NAME',\n        )}?authMechanism=MONGODB-X509&ssl=true&retryWrites=true&w=majority`\n        const cert = configService.get('DATABASE_CERT')\n        return {\n            uri,\n            sslKey: cert,\n            sslCert: cert,\n        }\n    },\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/auth/decorators/permission.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Permission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...abilities: string[]) => SetMetadata('abilities', abilities)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Resource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...resources: string[]) => SetMetadata('resources', resources)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/role/entities/role.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/entities/user.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/core/config/validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n    NODE_ENV: Joi.string().valid('development', 'production', 'test').required(),\n    PORT: Joi.number().default(3000),\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
