var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,3.109,1,3.311]],["body/controllers/AppController.html",[0,5.121,1,5.454,2,3.891,3,0.098,4,0.086,5,0.086,6,5.166,7,0.25,8,1.889,9,7.328,10,0.748,11,0.009,12,7.279,13,0.305,14,5.847,15,1.517,16,7.003,17,0.149,18,1.155,19,1.265,20,1.294,21,1.294,22,5.274,23,5.847,24,0.098,25,0.404,26,2.82,27,2.425,28,1.872,29,5.847,30,0.007,31,0.007]],["title/modules/AppModule.html",[32,1.602,33,3.311]],["body/modules/AppModule.html",[1,4.877,2,3.726,3,0.066,4,0.058,5,0.058,11,0.009,17,0.163,18,0.779,22,5.171,24,0.066,25,0.272,30,0.005,31,0.005,32,2.03,33,6.844,34,1.843,35,2.615,36,3.486,37,3.486,38,3.486,39,4.917,40,5.467,41,5.467,42,5.467,43,5.467,44,5.467,45,5.171,46,5.171,47,5.467,48,4.917,49,2.89,50,2.037,51,2.037,52,3.946,53,2.792,54,2.792,55,3.946,56,3.946,57,3.946,58,3.183,59,3.183,60,3.486,61,2.112,62,2.776,63,5.6,64,2.112,65,2.776,66,2.112,67,2.776,68,3.946,69,3.946,70,3.486,71,1.327,72,2.776,73,3.946]],["title/injectables/AppService.html",[22,2.94,74,0.873]],["body/injectables/AppService.html",[3,0.102,4,0.089,5,0.089,7,0.259,8,1.93,9,7.419,11,0.009,13,0.316,15,1.571,16,7.419,17,0.14,18,1.196,19,1.311,20,1.341,21,1.341,22,4.95,24,0.102,25,0.418,28,1.94,30,0.007,31,0.007,74,1.47,75,2.141,76,5.351,77,6.057,78,6.057,79,6.057]],["title/controllers/AuthController.html",[0,3.109,80,3.311]],["body/controllers/AuthController.html",[0,3.703,2,3.502,3,0.088,4,0.078,5,0.078,7,0.225,8,1.767,10,0.673,11,0.009,13,0.274,15,1.366,17,0.156,18,1.04,19,1.139,20,1.165,21,1.165,24,0.088,25,0.363,26,2.538,27,2.183,28,1.685,30,0.006,31,0.006,80,5.102,81,4.65,82,5.263,83,5.263,84,3.418,85,6.015,86,5.263,87,7.981,88,5.263,89,5.263,90,1.463,91,1.016,92,0.274,93,0.673,94,7.548,95,3.944,96,5.263,97,2.926,98,4.776,99,4.246,100,3.944,101,5.263,102,2.926,103,4.246,104,4.114,105,5.263,106,5.263,107,5.263,108,5.263,109,2.926,110,5.263,111,5.263]],["title/modules/AuthModule.html",[32,1.602,39,2.796]],["body/modules/AuthModule.html",[2,4.248,3,0.08,4,0.07,5,0.07,11,0.009,17,0.163,18,0.943,24,0.08,25,0.329,30,0.006,31,0.006,32,2.315,34,2.229,35,2.982,39,5.535,48,4.039,49,3.295,50,2.463,51,2.463,53,3.183,54,2.379,58,3.849,80,5.39,98,5.213,99,3.849,112,4.216,113,4.216,114,5.796,115,5.796,116,4.772,117,4.491,118,4.772,119,3.849,120,5.15,121,3.576,122,4.772,123,3.019,124,4.772,125,4.772,126,4.772,127,4.772,128,4.772,129,3.849,130,4.772,131,4.216,132,4.216,133,4.772,134,4.216,135,4.772,136,4.216]],["title/injectables/AuthService.html",[74,0.873,98,2.796]],["body/injectables/AuthService.html",[3,0.061,4,0.053,5,0.053,7,0.155,8,1.364,11,0.009,13,0.355,15,1.608,17,0.136,18,0.714,19,0.782,20,0.8,21,0.8,24,0.061,25,0.25,27,2.57,28,1.985,30,0.005,31,0.005,74,1.039,75,1.278,84,3.683,85,4.646,90,1.892,91,1.314,92,0.355,93,0.871,95,3.941,98,3.328,104,4.112,109,3.446,117,2.544,119,2.917,121,2.709,131,4.646,134,3.194,136,3.194,137,2.917,138,4.242,139,5.259,140,1.531,141,3.194,142,4.369,143,7.787,144,6.879,145,3.616,146,4.646,147,5.259,148,3.616,149,4.507,150,4.646,151,1.211,152,4.124,153,3.616,154,4.112,155,1.957,156,5.259,157,3.616,158,3.616,159,2.917,160,3.194,161,2.917,162,2.917,163,2.917,164,2.917,165,2.917,166,2.917,167,2.917,168,2.917,169,2.837,170,2.544,171,2.709,172,3.194,173,4.644,174,4.646,175,3.616,176,3.194,177,1.345,178,3.194,179,3.616,180,3.194,181,3.616,182,3.616,183,3.616,184,5.259,185,3.616,186,3.616,187,3.616,188,3.616,189,2.709,190,2.288,191,3.194,192,2.709]],["title/modules/CoreModule.html",[32,1.602,40,3.109]],["body/modules/CoreModule.html",[2,3.459,3,0.087,4,0.077,5,0.077,11,0.009,17,0.166,18,1.027,24,0.087,25,0.359,30,0.006,31,0.006,32,2.449,34,2.428,40,4.752,53,2.592,54,3.368,120,4.193,121,3.895,159,4.193,193,5.199,194,5.449,195,5.199,196,5.449,197,5.199,198,5.199,199,0.614,200,5.061,201,5.199,202,2.89,203,1.665,204,4.193,205,5.199,206,5.199,207,6.755,208,5.199,209,4.593,210,5.199,211,5.199,212,1.699,213,5.199,214,5.199,215,5.199,216,5.199,217,5.199,218,5.199,219,5.199,220,5.199,221,5.199,222,5.199,223,2.89]],["title/classes/CoreResolver.html",[25,0.305,200,3.311]],["body/classes/CoreResolver.html",[3,0.103,4,0.091,5,0.091,7,0.264,8,1.952,10,0.789,11,0.009,13,0.321,15,1.6,17,0.116,24,0.103,25,0.426,28,1.975,30,0.007,31,0.007,199,0.729,200,5.637,224,0.69,225,5.449,226,8.451,227,3.429,228,6.168,229,7.523,230,4.182,231,4.182,232,6.168]],["title/classes/CreateGroupingItemInput.html",[25,0.305,233,2.94]],["body/classes/CreateGroupingItemInput.html",[3,0.089,4,0.078,5,0.078,7,0.226,10,0.969,11,0.009,13,0.395,17,0.129,24,0.089,25,0.366,30,0.007,31,0.007,66,4.281,92,0.395,151,1.285,199,0.626,224,0.593,233,4.549,234,3.989,235,7.068,236,3.969,237,0.83,238,3.775,239,1.148,240,6.107,241,6.107,242,6.107,243,1.458,244,4.679,245,1.872,246,5.297,247,5.297,248,2.299,249,1.172,250,2.835,251,2.945]],["title/classes/CreateHangmanWordInput.html",[25,0.305,252,2.94]],["body/classes/CreateHangmanWordInput.html",[3,0.092,4,0.081,5,0.081,7,0.234,10,0.893,11,0.009,13,0.364,17,0.145,24,0.092,25,0.482,30,0.007,31,0.007,64,4.113,92,0.364,151,1.205,199,0.646,224,0.612,237,0.847,238,3.832,239,1.172,243,1.321,248,2.346,249,1.21,250,2.926,251,3.04,252,4.643,253,3.832,254,6.2,255,3.46,256,4.863,257,4.863,258,2.234,259,4.831,260,4.831,261,2.402,262,1.325]],["title/classes/CreateMirrorWordInput.html",[25,0.305,263,2.94]],["body/classes/CreateMirrorWordInput.html",[3,0.096,4,0.084,5,0.084,7,0.245,10,0.733,11,0.009,13,0.299,17,0.148,24,0.096,25,0.496,30,0.007,31,0.007,61,3.846,92,0.299,151,1.07,199,0.677,224,0.641,237,0.872,238,3.915,239,1.207,243,1.235,248,2.416,249,1.268,250,3.066,251,3.185,254,5.797,255,3.624,257,4.969,258,1.834,260,5.06,261,2.246,262,1.388,263,4.782,264,3.583,265,4.053]],["title/classes/CreateQuizAnswerInput.html",[25,0.305,266,2.94]],["body/classes/CreateQuizAnswerInput.html",[3,0.076,4,0.067,5,0.067,7,0.194,10,1.007,11,0.009,13,0.423,17,0.116,24,0.076,25,0.313,30,0.006,31,0.006,71,2.793,92,0.423,93,0.963,151,1.209,177,2.297,199,0.537,224,0.508,237,0.749,238,3.497,239,1.037,243,1.49,245,1.605,248,2.076,249,1.005,250,2.43,251,2.524,266,4.108,267,3.091,268,7.339,269,3.402,270,5.658,271,5.658,272,6.197,273,3.9,274,5.658,275,4.935,276,4.011,277,2.422,278,4.011,279,5.454,280,4.541,281,4.011,282,4.98,283,4.541,284,4.541,285,4.98]],["title/classes/CreateQuizInput.html",[25,0.305,286,2.94]],["body/classes/CreateQuizInput.html",[3,0.083,4,0.073,5,0.073,7,0.211,10,0.996,11,0.009,13,0.406,17,0.147,19,1.069,20,1.093,21,1.093,24,0.083,25,0.341,30,0.006,31,0.006,71,2.196,92,0.406,151,1.263,199,0.584,224,0.553,237,0.793,238,3.649,239,1.097,243,1.459,245,2.309,248,2.196,249,1.093,250,2.644,251,2.746,286,4.346,287,7.155,288,3.701,289,5.484,290,4.631,291,5.484,292,5.904,293,4.94,294,4.94,295,4.631,296,4.94,297,4.94,298,4.133,299,3.985,300,3.475]],["title/classes/CreateQuizQuestionInput.html",[25,0.305,298,2.796]],["body/classes/CreateQuizQuestionInput.html",[3,0.08,4,0.07,5,0.07,7,0.205,10,0.984,11,0.009,13,0.401,17,0.12,24,0.08,25,0.33,30,0.006,31,0.006,71,2.695,92,0.439,93,0.984,151,1.303,199,0.565,224,0.535,237,0.776,238,3.592,239,1.074,243,1.447,245,2.261,248,2.15,249,1.059,250,2.561,251,2.66,267,2.982,298,4.047,299,6.465,301,3.586,302,5.398,303,5.811,304,5.398,305,1.781,306,4.275,307,4.228,308,4.228,309,4.786,310,4.786]],["title/classes/CreateRoleInput.html",[25,0.305,311,2.94]],["body/classes/CreateRoleInput.html",[3,0.088,4,0.078,5,0.078,7,0.225,10,0.966,11,0.009,13,0.393,17,0.142,24,0.088,25,0.47,30,0.006,31,0.006,91,1.457,92,0.393,151,1.283,199,0.622,224,0.589,237,0.826,238,3.763,239,1.143,243,1.372,248,2.289,249,1.165,250,2.817,251,2.926,258,2.18,261,2.359,262,1.275,290,4.776,311,4.531,312,7.051,313,3.944,314,6.089,315,5.263,316,5.263,317,5.263,318,5.263,319,3.18]],["title/classes/CreateSchoolInput.html",[25,0.305,320,2.94]],["body/classes/CreateSchoolInput.html",[3,0.08,4,0.07,5,0.07,7,0.205,10,1.025,11,0.009,13,0.418,17,0.136,24,0.08,25,0.441,30,0.006,31,0.006,91,1.391,92,0.418,151,1.314,199,0.565,224,0.535,237,0.776,238,3.592,239,1.074,243,1.417,248,2.15,249,1.059,250,2.561,251,2.66,258,2.462,261,2.505,262,1.16,273,4.005,319,2.987,320,4.256,321,7.285,322,3.586,323,5.068,324,5.398,325,4.558,326,4.786,327,4.786,328,4.228,329,4.786,330,4.786,331,4.786,332,5.65]],["title/classes/CreateUserInput.html",[25,0.305,333,2.94]],["body/classes/CreateUserInput.html",[3,0.079,4,0.069,5,0.069,7,0.201,10,1.019,11,0.009,13,0.415,17,0.134,24,0.079,25,0.436,30,0.006,31,0.006,92,0.415,93,0.976,151,1.31,152,4.746,154,4.31,199,0.554,224,0.525,237,0.766,238,3.556,239,1.06,243,1.44,245,1.658,248,2.122,249,1.038,250,2.511,251,2.609,258,2.021,261,2.385,262,1.137,273,3.966,305,1.462,306,3.509,333,4.2,334,7.244,335,3.516,336,5.345,337,5.754,338,4.692,339,4.692,340,4.692,341,4.692,342,4.692,343,4.692,344,5.576]],["title/classes/DeleteGroupingItemInput.html",[25,0.305,345,2.94]],["body/classes/DeleteGroupingItemInput.html",[3,0.098,4,0.086,5,0.086,7,0.249,10,0.746,11,0.009,13,0.304,17,0.149,24,0.098,25,0.501,30,0.007,31,0.007,66,3.119,92,0.304,151,1.081,199,0.689,224,0.652,234,2.905,236,4.366,237,0.882,239,1.22,243,1.249,248,2.442,249,1.29,258,1.866,261,2.271,262,1.412,345,4.833,346,5.148,347,3.083,348,2.304,349,1.125,350,3.24,351,2.35]],["title/classes/DeleteHangmanWordInput.html",[25,0.305,352,2.94]],["body/classes/DeleteHangmanWordInput.html",[3,0.098,4,0.086,5,0.086,7,0.249,10,0.746,11,0.009,13,0.304,17,0.149,24,0.098,25,0.501,30,0.007,31,0.007,64,3.119,92,0.304,151,1.081,199,0.689,224,0.652,237,0.882,239,1.22,243,1.249,248,2.442,249,1.29,253,2.905,255,3.687,258,1.866,261,2.271,262,1.412,347,3.083,348,2.304,349,1.125,350,3.24,351,2.35,352,4.833,353,4.7]],["title/classes/DeleteMirrorWordInput.html",[25,0.305,354,2.94]],["body/classes/DeleteMirrorWordInput.html",[3,0.098,4,0.086,5,0.086,7,0.249,10,0.746,11,0.009,13,0.304,17,0.149,24,0.098,25,0.501,30,0.007,31,0.007,61,3.119,92,0.304,151,1.081,199,0.689,224,0.652,237,0.882,239,1.22,243,1.249,248,2.442,249,1.29,255,3.687,258,1.866,261,2.271,262,1.412,264,2.905,347,3.083,348,2.304,349,1.125,350,3.24,351,2.35,353,4.7,354,4.833]],["title/classes/DeleteQuizAnswerInput.html",[25,0.305,355,2.94]],["body/classes/DeleteQuizAnswerInput.html",[3,0.098,4,0.086,5,0.086,7,0.249,10,0.746,11,0.009,13,0.304,17,0.149,24,0.098,25,0.501,30,0.007,31,0.007,71,1.959,92,0.304,151,1.081,199,0.689,224,0.652,237,0.882,239,1.22,243,1.249,248,2.442,249,1.29,258,1.866,261,2.271,262,1.412,267,2.168,269,4.366,347,3.083,348,2.304,349,1.125,350,3.24,351,2.35,355,4.833,356,5.148]],["title/classes/DeleteQuizInput.html",[25,0.305,357,2.94]],["body/classes/DeleteQuizInput.html",[3,0.098,4,0.086,5,0.086,7,0.251,10,0.751,11,0.009,13,0.306,17,0.149,24,0.098,25,0.503,30,0.007,31,0.007,92,0.306,151,1.086,199,0.693,224,0.656,237,0.885,239,1.225,243,1.254,248,2.453,249,1.299,258,1.879,261,2.28,262,1.422,288,4.397,347,3.09,348,2.312,349,1.133,350,3.262,351,2.366,357,4.854,358,5.184]],["title/classes/DeleteQuizQuestionInput.html",[25,0.305,359,2.94]],["body/classes/DeleteQuizQuestionInput.html",[3,0.098,4,0.086,5,0.086,7,0.249,10,0.746,11,0.009,13,0.304,17,0.149,24,0.098,25,0.501,30,0.007,31,0.007,71,1.959,92,0.304,151,1.081,199,0.689,224,0.652,237,0.882,239,1.22,243,1.249,248,2.442,249,1.29,258,1.866,261,2.271,262,1.412,267,2.168,301,4.366,347,3.083,348,2.304,349,1.125,350,3.24,351,2.35,359,4.833,360,5.148]],["title/classes/DeleteRoleInput.html",[25,0.305,361,2.94]],["body/classes/DeleteRoleInput.html",[3,0.098,4,0.086,5,0.086,7,0.251,10,0.751,11,0.009,13,0.306,17,0.149,24,0.098,25,0.503,30,0.007,31,0.007,92,0.306,151,1.086,199,0.693,224,0.656,237,0.885,239,1.225,243,1.254,248,2.453,249,1.299,258,1.879,261,2.28,262,1.422,313,4.397,347,3.09,348,2.312,349,1.133,350,3.262,351,2.366,361,4.854,362,5.184]],["title/classes/DeleteSchoolInput.html",[25,0.305,363,2.94]],["body/classes/DeleteSchoolInput.html",[3,0.098,4,0.086,5,0.086,7,0.251,10,0.751,11,0.009,13,0.306,17,0.149,24,0.098,25,0.503,30,0.007,31,0.007,92,0.306,151,1.086,199,0.693,224,0.656,237,0.885,239,1.225,243,1.254,248,2.453,249,1.299,258,1.879,261,2.28,262,1.422,322,4.397,347,3.09,348,2.312,349,1.133,350,3.262,351,2.366,363,4.854,364,5.184]],["title/classes/DeleteUserInput.html",[25,0.305,365,2.94]],["body/classes/DeleteUserInput.html",[3,0.098,4,0.086,5,0.086,7,0.251,10,0.751,11,0.009,13,0.306,17,0.149,24,0.098,25,0.503,30,0.007,31,0.007,92,0.306,151,1.086,199,0.693,224,0.656,237,0.885,239,1.225,243,1.254,248,2.453,249,1.299,258,1.879,261,2.28,262,1.422,335,4.397,347,3.09,348,2.312,349,1.133,350,3.262,351,2.366,365,4.854,366,5.184]],["title/classes/GetGroupingItemArgs.html",[25,0.305,367,2.94]],["body/classes/GetGroupingItemArgs.html",[3,0.099,4,0.087,5,0.087,7,0.252,10,0.753,11,0.009,13,0.307,17,0.138,24,0.099,25,0.406,30,0.007,31,0.007,66,3.151,92,0.307,151,1.088,199,0.696,212,1.655,224,0.659,234,2.936,237,0.887,239,1.227,243,1.257,249,1.303,305,1.364,348,2.315,349,1.137,367,4.865,368,4.75,369,5.202,370,4.01,371,2.135,372,4.75,373,2.442,374,3.032]],["title/classes/GetGroupingItemsArgs.html",[25,0.305,375,2.94]],["body/classes/GetGroupingItemsArgs.html",[3,0.094,4,0.083,5,0.083,7,0.241,10,0.721,11,0.009,13,0.294,17,0.147,24,0.094,25,0.491,30,0.007,31,0.007,66,3.014,92,0.294,93,0.91,151,1.16,199,0.666,212,1.275,224,0.63,234,2.808,237,0.863,239,1.194,243,1.222,245,1.991,249,1.247,262,1.365,305,1.647,319,3.321,349,1.087,368,4.543,373,2.336,374,2.949,375,4.731,376,4.976,377,3.823,378,4.17,379,3.131,380,3.26]],["title/classes/GetHangmanWordArgs.html",[25,0.305,381,2.94]],["body/classes/GetHangmanWordArgs.html",[3,0.09,4,0.079,5,0.079,7,0.229,10,0.882,11,0.009,13,0.359,17,0.13,24,0.09,25,0.37,30,0.007,31,0.007,64,3.689,92,0.359,93,0.882,151,1.197,199,0.634,212,1.82,224,0.6,237,0.837,239,1.157,243,1.429,249,1.187,253,3.437,256,4.819,305,1.596,348,2.218,349,1.035,370,3.877,371,2.499,372,4.327,373,2.224,374,2.858,381,4.586,382,4.849,383,4.327,384,5.364,385,6.089,386,6.089]],["title/classes/GetHangmanWordsArgs.html",[25,0.305,387,2.94]],["body/classes/GetHangmanWordsArgs.html",[3,0.087,4,0.076,5,0.076,7,0.222,10,0.863,11,0.009,13,0.351,17,0.141,24,0.087,25,0.465,30,0.006,31,0.006,64,3.608,92,0.351,93,1.015,151,1.255,199,0.612,212,1.696,224,0.58,237,0.818,239,1.132,243,1.288,245,2.383,249,1.147,253,3.361,256,4.74,262,1.256,305,1.837,319,3.149,349,1,373,2.149,374,2.795,377,3.706,378,4.01,379,2.881,380,3,382,4.742,387,4.485,388,4.18,389,5.183]],["title/classes/GetMirrorWordArgs.html",[25,0.305,390,2.94]],["body/classes/GetMirrorWordArgs.html",[3,0.097,4,0.085,5,0.085,7,0.247,10,0.738,11,0.009,13,0.301,17,0.136,24,0.097,25,0.398,30,0.007,31,0.007,61,3.087,92,0.301,151,1.074,199,0.681,212,1.634,224,0.645,237,0.876,239,1.212,243,1.419,249,1.276,264,2.876,305,1.336,348,2.294,349,1.113,370,3.981,371,2.091,372,4.652,373,2.392,374,2.993,382,4.057,383,4.652,385,6.376,386,6.376,390,4.802]],["title/classes/GetMirrorWordsArgs.html",[25,0.305,391,2.94]],["body/classes/GetMirrorWordsArgs.html",[3,0.094,4,0.083,5,0.083,7,0.241,10,0.721,11,0.009,13,0.294,17,0.147,24,0.094,25,0.491,30,0.007,31,0.007,61,3.014,92,0.294,93,0.91,151,1.16,199,0.666,212,1.275,224,0.63,237,0.863,239,1.194,243,1.222,245,1.991,249,1.247,262,1.365,264,2.808,305,1.647,319,3.321,349,1.087,373,2.336,374,2.949,377,3.823,378,4.17,379,3.131,380,3.26,382,3.963,388,4.543,391,4.731]],["title/classes/GetQuizAnswerArgs.html",[25,0.305,392,2.94]],["body/classes/GetQuizAnswerArgs.html",[3,0.098,4,0.086,5,0.086,7,0.249,10,0.746,11,0.009,13,0.304,17,0.149,24,0.098,25,0.501,30,0.007,31,0.007,71,1.959,92,0.304,151,1.081,199,0.689,224,0.652,237,0.882,239,1.22,243,1.249,249,1.29,258,1.866,261,2.271,262,1.412,267,2.168,348,2.304,349,1.125,370,3.996,373,2.416,374,3.012,392,4.833,393,4.7,394,5.148,395,4.099]],["title/classes/GetQuizAnswersArgs.html",[25,0.305,396,2.94]],["body/classes/GetQuizAnswersArgs.html",[3,0.088,4,0.077,5,0.077,7,0.224,10,0.869,11,0.009,13,0.354,17,0.142,24,0.088,25,0.469,30,0.006,31,0.006,71,2.285,92,0.354,93,1.02,151,1.229,199,0.62,212,1.706,224,0.587,237,0.825,239,1.141,243,1.296,245,1.855,249,1.161,262,1.271,267,2.529,275,5.302,305,1.745,319,3.174,349,1.013,371,1.902,373,2.176,374,2.818,377,3.723,378,4.034,379,2.917,380,3.037,393,5.482,396,4.522,397,4.635,398,5.247]],["title/classes/GetQuizArgs.html",[25,0.305,399,2.94]],["body/classes/GetQuizArgs.html",[3,0.098,4,0.086,5,0.086,7,0.251,10,0.751,11,0.009,13,0.306,17,0.149,24,0.098,25,0.503,30,0.007,31,0.007,92,0.306,151,1.086,199,0.693,224,0.656,237,0.885,239,1.225,243,1.254,249,1.299,258,1.879,261,2.28,262,1.422,348,2.312,349,1.133,370,4.006,373,2.433,374,3.025,395,4.128,399,4.854,400,4.733,401,5.184]],["title/classes/GetQuizQuestionArgs.html",[25,0.305,402,2.94]],["body/classes/GetQuizQuestionArgs.html",[3,0.098,4,0.086,5,0.086,7,0.249,10,0.746,11,0.009,13,0.304,17,0.149,24,0.098,25,0.501,30,0.007,31,0.007,71,1.959,92,0.304,151,1.081,199,0.689,224,0.652,237,0.882,239,1.22,243,1.249,249,1.29,258,1.866,261,2.271,262,1.412,267,2.168,348,2.304,349,1.125,370,3.996,373,2.416,374,3.012,395,4.099,402,4.833,403,4.7,404,5.148]],["title/classes/GetQuizQuestionsArgs.html",[25,0.305,405,2.94]],["body/classes/GetQuizQuestionsArgs.html",[3,0.094,4,0.083,5,0.083,7,0.241,10,0.721,11,0.009,13,0.294,17,0.147,24,0.094,25,0.491,30,0.007,31,0.007,71,1.894,92,0.294,93,0.91,151,1.16,199,0.666,212,1.275,224,0.63,237,0.863,239,1.194,243,1.222,245,1.991,249,1.247,262,1.365,267,2.096,305,1.647,319,3.321,349,1.087,373,2.336,374,2.949,377,3.823,378,4.17,379,3.131,380,3.26,403,4.543,405,4.731,406,4.976]],["title/classes/GetQuizzesArgs.html",[25,0.305,407,2.94]],["body/classes/GetQuizzesArgs.html",[3,0.089,4,0.078,5,0.078,7,0.227,10,0.877,11,0.009,13,0.357,17,0.143,24,0.089,25,0.473,30,0.007,31,0.007,92,0.357,93,1.025,151,1.234,199,0.628,212,1.716,224,0.594,237,0.832,239,1.15,243,1.303,245,1.878,249,1.176,256,4.797,262,1.287,305,1.756,319,3.2,349,1.026,371,1.926,373,2.203,374,2.841,377,3.741,378,4.058,379,2.954,380,3.075,400,5.526,407,4.558,408,4.694,409,5.313]],["title/classes/GetRoleArgs.html",[25,0.305,410,2.94]],["body/classes/GetRoleArgs.html",[3,0.098,4,0.086,5,0.086,7,0.251,10,0.751,11,0.009,13,0.306,17,0.149,24,0.098,25,0.503,30,0.007,31,0.007,92,0.306,151,1.086,199,0.693,224,0.656,237,0.885,239,1.225,243,1.254,249,1.299,258,1.879,261,2.28,262,1.422,348,2.312,349,1.133,370,4.006,373,2.433,374,3.025,395,4.128,410,4.854,411,4.733,412,5.184]],["title/classes/GetRolesArgs.html",[25,0.305,413,2.94]],["body/classes/GetRolesArgs.html",[3,0.095,4,0.084,5,0.084,7,0.242,10,0.726,11,0.009,13,0.296,17,0.147,24,0.095,25,0.493,30,0.007,31,0.007,92,0.296,93,0.914,151,1.164,199,0.67,212,1.284,224,0.634,237,0.867,239,1.199,243,1.227,245,2.004,249,1.255,262,1.374,305,1.654,319,3.335,349,1.095,373,2.351,374,2.961,377,3.832,378,4.183,379,3.152,380,3.282,411,4.574,413,4.751,414,5.009]],["title/classes/GetSchoolArgs.html",[25,0.305,415,2.94]],["body/classes/GetSchoolArgs.html",[3,0.098,4,0.086,5,0.086,7,0.251,10,0.751,11,0.009,13,0.306,17,0.149,24,0.098,25,0.503,30,0.007,31,0.007,92,0.306,151,1.086,199,0.693,224,0.656,237,0.885,239,1.225,243,1.254,249,1.299,258,1.879,261,2.28,262,1.422,348,2.312,349,1.133,370,4.006,373,2.433,374,3.025,395,4.128,415,4.854,416,4.733,417,5.184]],["title/classes/GetSchoolsArgs.html",[25,0.305,418,2.94]],["body/classes/GetSchoolsArgs.html",[3,0.072,4,0.063,5,0.063,7,0.182,10,1.019,11,0.009,13,0.415,17,0.128,24,0.072,25,0.408,30,0.006,31,0.006,91,1.31,92,0.441,93,1.095,151,1.308,199,0.504,212,1.958,224,0.477,237,0.718,239,0.993,243,1.404,245,1.508,249,0.944,262,1.033,273,3.774,305,1.892,319,2.762,323,4.776,324,5.087,349,0.823,371,2.792,373,1.769,374,2.452,377,3.424,378,3.633,379,2.371,380,2.469,416,6.427,418,3.935,419,3.768,420,4.265,421,4.265,422,4.265,423,4.265,424,4.265]],["title/classes/GetUserArgs.html",[25,0.305,425,2.94]],["body/classes/GetUserArgs.html",[3,0.09,4,0.079,5,0.079,7,0.229,10,0.882,11,0.009,13,0.359,17,0.143,24,0.09,25,0.476,30,0.007,31,0.007,92,0.359,93,1.028,151,1.197,154,4.601,199,0.634,212,1.56,224,0.6,237,0.837,239,1.157,243,1.309,249,1.187,262,1.3,305,1.596,348,2.218,371,2.499,374,2.858,425,4.586,426,6.144,427,4.739,428,5.068,429,6.893,430,5.364,431,5.364,432,6.144,433,4.327,434,4.327]],["title/classes/GetUsersArgs.html",[25,0.305,435,2.94]],["body/classes/GetUsersArgs.html",[3,0.095,4,0.084,5,0.084,7,0.242,10,0.726,11,0.009,13,0.296,17,0.147,24,0.095,25,0.493,30,0.007,31,0.007,92,0.296,93,0.914,151,1.164,199,0.67,212,1.284,224,0.634,237,0.867,239,1.199,243,1.227,245,2.004,249,1.255,262,1.374,305,1.654,319,3.335,349,1.095,373,2.351,374,2.961,377,3.832,378,4.183,379,3.152,380,3.282,426,4.574,435,4.751,436,5.009]],["title/classes/GqlArg.html",[25,0.305,428,2.94]],["body/classes/GqlArg.html",[3,0.112,4,0.098,5,0.098,11,0.008,17,0.126,24,0.112,25,0.461,30,0.008,31,0.008,199,0.789,224,0.747,374,3.273,428,5.252,433,5.389,437,4.446,438,5.902,439,5.902]],["title/classes/GqlAuthGuard.html",[25,0.305,440,2.281]],["body/classes/GqlAuthGuard.html",[3,0.1,4,0.088,5,0.088,7,0.256,8,1.917,11,0.009,13,0.312,15,1.555,17,0.151,18,1.184,24,0.1,25,0.414,28,1.919,30,0.007,31,0.007,90,1.666,91,1.157,92,0.312,93,0.767,123,3.792,199,0.708,224,0.67,237,0.727,440,3.815,441,6.53,442,4.49,443,7.391,444,7.391,445,6.749,446,5.993,447,4.834,448,4.834,449,5.294,450,5.294,451,5.993]],["title/classes/GqlInput.html",[25,0.305,238,2.203]],["body/classes/GqlInput.html",[3,0.115,4,0.101,5,0.101,11,0.008,24,0.115,25,0.472,30,0.008,31,0.008,224,0.766,238,3.991,250,3.663,437,4.554,439,6.046,452,6.046]],["title/classes/GroupingItem.html",[25,0.305,453,2.94]],["body/classes/GroupingItem.html",[3,0.067,4,0.059,5,0.059,7,0.17,10,1.025,11,0.009,13,0.417,17,0.134,19,0.86,20,0.879,21,0.879,24,0.11,25,0.274,30,0.005,31,0.005,92,0.44,93,0.909,151,1.239,169,1.559,199,0.47,203,1.272,212,0.9,224,0.445,234,4.079,239,0.945,240,5.271,241,5.271,242,5.271,243,1.406,277,3.056,305,0.92,371,1.441,453,3.745,454,5.756,455,2.977,456,2.334,457,5.733,458,3.373,459,3.633,460,3.497,461,2.71,462,3.257,463,3.257,464,3.974,465,4.113,466,3.974,467,3.974,468,2.3,469,3.974,470,3.974,471,3.974,472,3.974,473,3.257,474,4.736,475,2.788,476,2.3,477,2.3,478,3.129,479,1.602,480,3.205,481,2.3,482,2.977,483,3.511]],["title/modules/GroupingItemModule.html",[32,1.602,41,3.109]],["body/modules/GroupingItemModule.html",[3,0.083,4,0.073,5,0.073,11,0.009,17,0.157,18,0.976,24,0.083,25,0.341,30,0.006,31,0.006,32,2.368,34,2.307,35,3.051,41,6.193,49,3.372,50,2.55,51,2.55,53,3.257,54,2.463,66,3.496,67,3.475,91,0.954,202,2.746,203,1.582,223,3.632,234,2.463,453,3.287,475,2.108,482,4.895,484,4.364,485,4.364,486,4.364,487,5.943,488,5.943,489,4.94,490,4.364,491,4.895,492,4.94,493,5.269,494,3.985,495,4.364,496,2.859,497,4.94]],["title/injectables/GroupingItemRepository.html",[74,0.873,487,2.94]],["body/injectables/GroupingItemRepository.html",[3,0.06,4,0.053,5,0.053,7,0.153,8,1.352,11,0.009,13,0.391,15,1.866,17,0.157,18,0.705,19,0.772,20,0.79,21,0.79,24,0.06,25,0.246,28,1.143,30,0.005,31,0.005,66,4.02,74,1.029,75,1.262,84,3.781,90,2.088,91,1.45,92,0.375,93,0.961,109,1.985,140,1.04,155,2.795,169,2.045,177,1.939,203,1.143,233,2.375,234,2.598,237,0.632,265,4.104,345,2.375,349,1.389,367,4.501,375,2.375,453,2.375,454,3.666,457,2.88,479,1.44,480,2.88,487,3.467,494,2.88,498,3.154,499,4.104,500,2.101,501,2.045,502,2.101,503,2.101,504,2.101,505,2.511,506,3.761,507,3.57,508,3.666,509,4.603,510,2.511,511,3.154,512,1.44,513,2.359,514,2.375,515,2.166,516,1.44,517,2.223,518,2.157,519,1.44,520,2.513,521,2.675,522,1.44,523,2.157,524,2.066,525,2.375,526,1.2,527,4.963,528,1.2,529,1.752,530,2.88,531,2.88,532,1.2,533,2.157,534,3.57,535,2.511,536,2.375,537,4.203,538,2.88,539,2.88,540,2.88,541,2.88]],["title/classes/GroupingItemResolver.html",[25,0.305,491,3.311]],["body/classes/GroupingItemResolver.html",[3,0.051,4,0.044,5,0.044,7,0.129,8,1.193,10,0.858,11,0.009,13,0.368,15,1.739,17,0.155,18,0.597,19,0.653,20,0.668,21,0.668,24,0.051,25,0.208,26,1.457,27,1.252,28,2.146,30,0.004,31,0.004,66,3.779,67,5.165,90,1.963,91,1.363,92,0.368,93,0.903,97,1.679,102,1.679,140,0.879,155,2.942,177,2.073,199,0.357,212,1.41,224,0.338,227,2.557,230,3.097,231,2.557,233,4.144,234,3.66,305,1.635,345,4.144,367,4.144,375,4.144,440,1.559,453,5.158,457,2.436,488,4.144,490,2.668,491,3.446,493,2.436,494,2.436,515,2.532,525,4.144,526,1.015,527,4.493,528,1.015,529,1.546,530,2.436,531,2.436,532,1.015,542,2.668,543,4.599,544,4.599,545,4.599,546,4.599,547,2.01,548,3.02,549,3.06,550,3.02,551,3.365,552,1.911,553,3.02,554,3.02,555,1.825,556,3.02,557,3.02,558,3.02,559,3.02,560,1.911,561,3.644,562,3.02,563,3.02,564,1.825,565,3.02,566,3.604,567,1.748,568,1.748,569,1.616,570,1.559,571,1.748,572,1.748,573,1.748,574,3.02,575,2.662,576,3.02,577,2.01,578,1.825,579,3.604,580,3.02,581,2.01,582,1.825,583,3.02,584,2.01,585,1.748,586,3.02,587,2.01,588,1.748,589,3.02,590,2.01]],["title/injectables/GroupingItemService.html",[74,0.873,488,2.94]],["body/injectables/GroupingItemService.html",[3,0.069,4,0.061,5,0.061,7,0.176,8,1.495,11,0.009,13,0.41,15,1.971,17,0.155,18,0.812,24,0.069,25,0.284,30,0.005,31,0.005,66,4.065,67,4.054,74,1.138,75,1.452,90,2.189,91,1.52,92,0.41,93,1.007,140,1.197,233,2.734,234,2.873,237,0.699,345,2.734,349,1.466,367,2.734,375,2.734,487,4.799,488,3.834,493,3.315,495,3.63,500,2.324,501,2.261,502,2.324,503,2.324,504,2.324,512,1.657,513,2.609,515,2.432,516,1.657,517,2.459,519,1.657,520,2.779,522,1.657,525,2.734,526,1.382,527,5.368,528,1.382,529,1.937,530,3.315,531,3.315,532,1.382,591,3.63,592,4.416,593,3.481,594,4.109,595,2.483,596,2.483,597,2.483,598,2.483,599,1.753,600,2.691,601,2.483,602,3.203,603,2.483,604,2.483,605,2.483,606,2.6]],["title/classes/HangmanWord.html",[25,0.305,607,2.94]],["body/classes/HangmanWord.html",[3,0.07,4,0.062,5,0.062,7,0.179,10,1.014,11,0.009,13,0.413,17,0.137,19,0.907,20,0.927,21,0.927,24,0.113,25,0.289,30,0.006,31,0.006,92,0.432,93,0.931,151,1.139,169,1.644,199,0.495,203,1.342,212,0.949,224,0.469,239,0.981,243,1.398,253,4.054,256,4.255,257,4.255,277,3.109,305,0.97,371,1.52,456,2.423,458,3.471,459,3.739,460,3.599,461,2.789,462,2.426,463,2.426,465,4.211,468,2.426,473,3.381,474,4.706,475,2.87,476,2.426,477,2.426,478,3.248,479,1.69,481,2.426,607,3.887,608,5.72,609,2.948,610,5.869,611,3.702,612,3.702,613,3.702,614,4.191,615,3.702,616,3.702,617,3.381,618,3.14,619,3.702]],["title/modules/HangmanWordModule.html",[32,1.602,42,3.109]],["body/modules/HangmanWordModule.html",[3,0.083,4,0.073,5,0.073,11,0.009,17,0.157,18,0.976,24,0.083,25,0.341,30,0.006,31,0.006,32,2.368,34,2.307,35,3.051,42,6.193,49,3.372,50,2.55,51,2.55,53,3.257,54,2.463,64,3.496,65,3.475,91,0.954,202,2.746,203,1.582,223,3.632,253,2.463,475,2.108,496,2.859,607,3.287,618,4.895,620,4.364,621,4.364,622,4.364,623,5.943,624,5.943,625,4.364,626,3.701,627,4.895,628,4.364,629,5.269,630,3.287,631,3.701,632,4.94]],["title/injectables/HangmanWordRepository.html",[74,0.873,623,2.94]],["body/injectables/HangmanWordRepository.html",[3,0.052,4,0.046,5,0.046,7,0.133,8,1.222,11,0.009,13,0.372,15,1.763,17,0.152,18,0.615,19,0.674,20,0.689,21,0.689,24,0.052,25,0.215,28,2.026,30,0.004,31,0.004,64,3.824,74,0.93,75,1.101,84,3.716,90,1.986,91,1.379,92,0.354,93,0.914,109,3.156,140,0.907,155,2.761,169,2.483,177,2.112,203,0.997,237,0.572,252,2.073,253,2.348,256,2.979,265,3.688,349,1.312,352,2.073,381,4.21,387,4.21,479,1.256,499,3.943,500,1.899,501,1.848,502,1.899,503,1.899,504,1.899,506,3.517,510,2.191,512,1.256,513,2.132,514,2.073,515,2.175,516,1.256,517,2.009,518,1.882,519,1.899,522,1.256,523,1.882,524,1.803,526,1.047,528,1.047,529,1.583,532,1.047,533,1.882,536,3.133,537,3.798,538,2.513,539,2.513,540,2.513,541,2.513,599,2.009,607,2.073,608,3.313,610,2.513,617,2.513,623,3.133,630,2.073,633,2.513,634,3.115,635,2.752,636,4.709,637,3.115,638,2.073,639,3.777,640,2.073,641,2.073,642,3.115,643,3.115,644,4.709,645,3.115,646,2.334,647,6.002,648,3.115,649,5.015,650,3.115,651,3.798,652,3.798,653,3.115,654,2.752,655,2.073,656,3.115,657,3.115,658,3.115,659,3.115,660,2.752,661,3.115,662,3.115,663,2.513,664,3.115,665,2.752,666,3.115,667,2.334,668,3.115,669,3.115]],["title/classes/HangmanWordResolver.html",[25,0.305,627,3.311]],["body/classes/HangmanWordResolver.html",[3,0.05,4,0.044,5,0.044,7,0.127,8,1.18,10,0.852,11,0.009,13,0.366,15,1.728,17,0.155,18,0.588,19,0.644,20,0.659,21,0.659,24,0.05,25,0.205,26,1.436,27,1.235,28,2.132,30,0.004,31,0.004,64,4.032,65,5.139,90,1.952,91,1.355,92,0.366,93,0.898,97,1.655,102,1.655,140,0.867,155,2.931,177,2.055,199,0.352,212,1.399,224,0.333,227,2.529,230,3.07,231,2.529,252,4.113,253,3.642,257,2.879,290,2.879,305,1.626,352,4.113,381,4.113,387,4.113,440,1.537,515,2.522,526,1.001,528,1.001,529,1.53,532,1.001,547,1.981,549,3.027,551,3.336,552,1.884,555,1.799,560,1.884,561,3.624,564,1.799,566,3.578,567,1.723,568,1.723,569,1.594,570,1.537,571,1.723,572,1.723,573,1.723,575,1.723,577,1.981,578,1.799,579,3.578,581,1.981,582,1.799,584,1.981,585,1.723,587,1.981,588,1.723,590,1.981,607,5.137,610,2.402,624,4.113,626,2.231,627,3.409,629,2.402,630,1.981,638,4.113,639,3.674,640,1.981,641,1.981,663,2.402,670,2.402,671,4.55,672,4.55,673,4.55,674,4.55,675,2.63,676,2.978,677,2.63,678,2.978,679,2.63,680,2.978,681,4.55,682,2.63,683,2.978,684,2.63,685,2.978,686,2.63,687,2.978,688,2.978,689,2.978,690,2.978,691,2.978,692,2.978]],["title/injectables/HangmanWordService.html",[74,0.873,624,2.94]],["body/injectables/HangmanWordService.html",[3,0.069,4,0.061,5,0.061,7,0.176,8,1.495,11,0.009,13,0.41,15,1.971,17,0.155,18,0.812,24,0.069,25,0.284,30,0.005,31,0.005,64,4.065,65,4.054,74,1.138,75,1.452,90,2.189,91,1.52,92,0.41,93,1.007,140,1.197,237,0.699,252,2.734,253,2.873,349,1.466,352,2.734,381,2.734,387,2.734,500,2.324,501,2.261,502,2.324,503,2.324,504,2.324,512,1.657,513,2.609,515,2.432,516,1.657,517,2.459,519,1.657,520,2.779,522,1.657,526,1.382,528,1.382,529,1.937,532,1.382,592,4.416,593,3.481,595,2.483,596,2.483,597,2.483,598,2.483,599,1.753,600,2.691,601,2.483,602,3.203,603,2.483,604,2.483,605,2.483,606,2.6,623,4.799,624,3.834,629,3.315,631,3.079,638,2.734,639,4.428,640,2.734,641,2.734,693,3.315,694,3.63]],["title/classes/IdArg.html",[25,0.305,370,2.131]],["body/classes/IdArg.html",[3,0.093,4,0.082,5,0.082,7,0.238,10,0.714,11,0.009,13,0.291,17,0.146,24,0.118,25,0.535,30,0.007,31,0.007,92,0.291,151,1.214,199,0.659,212,1.262,224,0.624,237,0.941,239,1.186,243,1.333,258,1.786,261,2.209,262,1.351,305,1.291,319,3.3,348,2.258,370,3.408,377,2.605,378,2.985,428,5.426,434,4.498,437,4.702,695,4.498,696,5.577,697,3.923]],["title/classes/IdArrayArg.html",[25,0.305,377,2.064]],["body/classes/IdArrayArg.html",[3,0.092,4,0.081,5,0.081,7,0.235,10,0.704,11,0.009,13,0.287,17,0.145,24,0.117,25,0.532,30,0.007,31,0.007,92,0.287,93,0.897,151,1.208,199,0.65,212,1.246,224,0.616,237,0.936,239,1.176,243,1.325,245,1.945,261,2.19,262,1.334,305,1.623,319,3.273,348,1.603,370,2.654,377,3.273,378,4.126,379,3.06,428,5.4,434,4.44,437,4.662,695,4.44,697,3.872,698,5.504]],["title/classes/IdInput.html",[25,0.305,347,1.644]],["body/classes/IdInput.html",[3,0.105,4,0.093,5,0.093,7,0.269,11,0.009,13,0.327,17,0.118,24,0.105,25,0.434,30,0.007,31,0.007,92,0.327,151,1.133,224,0.703,237,0.923,238,4.08,239,1.277,251,3.493,347,2.831,348,2.383,437,5.062,697,4.42,699,5.551,700,6.283]],["title/classes/JwtAuthGuard.html",[25,0.305,701,3.565]],["body/classes/JwtAuthGuard.html",[3,0.113,4,0.1,5,0.1,11,0.008,17,0.127,24,0.113,25,0.467,30,0.008,31,0.008,123,4.278,224,0.756,237,0.821,442,5.066,448,5.454,450,5.973,701,6.412,702,5.973]],["title/injectables/JwtStrategy.html",[74,0.873,114,3.109]],["body/injectables/JwtStrategy.html",[3,0.083,4,0.073,5,0.073,7,0.212,8,1.698,11,0.009,13,0.341,15,1.285,17,0.147,18,0.979,24,0.083,25,0.342,27,2.054,28,1.586,30,0.006,31,0.006,74,1.293,75,1.751,84,3.319,90,1.819,91,1.263,92,0.406,93,0.837,95,3.712,114,4.604,117,3.485,123,3.135,129,3.996,132,4.377,138,5.279,140,1.906,141,4.377,142,4.898,146,5.782,151,0.974,154,3.954,159,3.996,160,4.377,172,4.377,173,3.712,174,4.377,178,4.377,180,4.377,237,0.601,703,4.377,704,4.954,705,6.545,706,6.545,707,4.954,708,4.954,709,4.377,710,3.996,711,4.377,712,4.377,713,4.377,714,4.954,715,4.954,716,4.954,717,3.712,718,4.954,719,4.954]],["title/classes/LocalAuthGuard.html",[25,0.305,100,3.311]],["body/classes/LocalAuthGuard.html",[3,0.113,4,0.099,5,0.099,11,0.008,17,0.127,24,0.113,25,0.465,30,0.008,31,0.008,100,5.942,123,4.261,224,0.753,237,0.817,442,5.046,448,6.396,720,5.95,721,5.432]],["title/injectables/LocalStrategy.html",[74,0.873,115,3.109]],["body/injectables/LocalStrategy.html",[3,0.081,4,0.071,5,0.071,7,0.208,8,1.675,11,0.009,13,0.337,15,1.259,17,0.152,18,0.959,19,1.05,20,1.074,21,1.074,24,0.081,25,0.335,26,2.341,27,2.013,28,1.554,30,0.006,31,0.006,74,1.275,75,1.716,84,3.285,90,1.795,91,1.247,92,0.337,93,0.826,98,5.239,99,3.916,104,2.933,109,2.699,115,4.543,123,3.071,138,5.209,140,1.413,149,4.476,150,5.705,151,1.233,152,5.146,154,3.901,155,2.403,169,1.905,189,3.637,190,3.071,237,0.589,709,4.289,710,3.916,711,4.289,712,4.289,713,4.289,721,3.916,722,4.289,723,4.854,724,4.854,725,4.854,726,6.457,727,4.854,728,4.854,729,4.854]],["title/classes/MirrorWord.html",[25,0.305,730,2.94]],["body/classes/MirrorWord.html",[3,0.073,4,0.064,5,0.064,7,0.187,10,0.993,11,0.009,13,0.405,17,0.139,19,0.944,20,0.966,21,0.966,24,0.115,25,0.301,30,0.006,31,0.006,92,0.428,93,0.947,151,1.023,169,1.713,199,0.516,203,1.397,212,0.988,224,0.488,239,1.009,243,1.379,257,4.348,264,4.001,277,3.148,305,1.011,371,1.582,456,2.492,458,3.547,459,3.82,460,3.677,461,2.849,462,2.526,463,2.526,465,3.977,468,2.526,473,3.478,474,4.644,475,2.932,476,2.526,477,2.526,478,3.34,479,1.76,481,2.526,609,3.07,611,3.856,612,3.856,613,3.856,615,3.856,616,3.856,730,3.998,731,5.645,732,5.972,733,3.521,734,3.27,735,3.856]],["title/modules/MirrorWordModule.html",[32,1.602,43,3.109]],["body/modules/MirrorWordModule.html",[3,0.083,4,0.073,5,0.073,11,0.009,17,0.157,18,0.976,24,0.083,25,0.341,30,0.006,31,0.006,32,2.368,34,2.307,35,3.051,43,6.193,49,3.372,50,2.55,51,2.55,53,3.257,54,2.463,61,3.496,62,3.475,91,0.954,202,2.746,203,1.582,223,3.632,264,2.463,475,2.108,496,2.859,625,4.364,626,3.701,628,4.364,630,3.287,631,3.701,730,3.287,734,4.895,736,4.364,737,4.364,738,4.364,739,5.943,740,5.943,741,4.895,742,5.269,743,4.94]],["title/injectables/MirrorWordRepository.html",[74,0.873,739,2.94]],["body/injectables/MirrorWordRepository.html",[3,0.06,4,0.053,5,0.053,7,0.153,8,1.352,11,0.009,13,0.391,15,1.866,17,0.157,18,0.705,19,0.772,20,0.79,21,0.79,24,0.06,25,0.246,28,1.143,30,0.005,31,0.005,61,4.02,74,1.029,75,1.262,84,3.781,90,2.088,91,1.45,92,0.375,93,0.961,109,1.985,140,1.04,155,2.795,169,2.045,177,1.939,203,1.143,237,0.632,263,2.375,264,2.598,265,4.104,349,1.389,354,2.375,390,4.501,391,2.375,479,1.44,499,4.104,500,2.101,501,2.045,502,2.101,503,2.101,504,2.101,506,3.761,509,4.603,510,2.511,511,3.154,512,1.44,513,2.359,514,2.375,515,2.166,516,1.44,517,2.223,518,2.157,519,1.44,520,2.513,521,2.675,522,1.44,523,2.157,524,2.066,526,1.2,528,1.2,529,1.752,532,1.2,533,2.157,536,2.375,537,4.203,538,2.88,539,2.88,540,2.88,541,2.88,630,2.375,633,2.88,635,3.154,639,4.094,640,2.375,641,2.375,730,2.375,731,3.666,732,2.88,733,2.88,739,3.467,744,3.57,745,5.21,746,2.375,747,3.57,748,3.57]],["title/classes/MirrorWordResolver.html",[25,0.305,741,3.311]],["body/classes/MirrorWordResolver.html",[3,0.051,4,0.044,5,0.044,7,0.129,8,1.193,10,0.858,11,0.009,13,0.368,15,1.739,17,0.155,18,0.597,19,0.653,20,0.668,21,0.668,24,0.051,25,0.208,26,1.457,27,1.252,28,2.146,30,0.004,31,0.004,61,3.779,62,5.165,90,1.963,91,1.363,92,0.368,93,0.903,97,1.679,102,1.679,140,0.879,155,2.942,177,2.073,199,0.357,212,1.41,224,0.338,227,2.557,230,3.097,231,2.557,263,4.144,264,3.66,305,1.635,354,4.144,390,4.144,391,4.144,440,1.559,515,2.532,526,1.015,528,1.015,529,1.546,532,1.015,551,3.365,552,1.911,555,1.825,560,1.911,561,3.644,564,1.825,566,3.604,567,1.748,568,1.748,569,1.616,570,1.559,571,1.748,572,1.748,573,1.748,575,1.748,578,1.825,579,3.604,582,1.825,585,1.748,588,1.748,626,2.263,630,2.01,639,3.706,640,2.01,641,2.01,663,2.436,670,2.436,675,2.668,677,2.668,679,2.668,682,2.668,684,2.668,686,2.668,730,5.158,732,2.436,740,4.698,741,3.446,742,2.436,746,4.144,749,4.599,750,4.599,751,4.599,752,4.599,753,3.02,754,3.02,755,3.02,756,3.02,757,3.02,758,3.02,759,3.02,760,3.02,761,3.02,762,3.02,763,3.02,764,3.02,765,3.02,766,3.02,767,3.02,768,3.02,769,3.02]],["title/injectables/MirrorWordService.html",[74,0.873,740,2.94]],["body/injectables/MirrorWordService.html",[3,0.069,4,0.061,5,0.061,7,0.176,8,1.495,11,0.009,13,0.41,15,1.971,17,0.155,18,0.812,24,0.069,25,0.284,30,0.005,31,0.005,61,4.065,62,4.054,74,1.138,75,1.452,90,2.189,91,1.52,92,0.41,93,1.007,140,1.197,237,0.699,263,2.734,264,2.873,349,1.466,354,2.734,390,2.734,391,2.734,500,2.324,501,2.261,502,2.324,503,2.324,504,2.324,512,1.657,513,2.609,515,2.432,516,1.657,517,2.459,519,1.657,520,2.779,522,1.657,526,1.382,528,1.382,529,1.937,532,1.382,592,4.416,593,3.481,595,2.483,596,2.483,597,2.483,598,2.483,599,1.753,600,2.691,601,2.483,602,3.203,603,2.483,604,2.483,605,2.483,606,2.6,631,3.079,639,4.428,640,2.734,641,2.734,693,3.315,694,3.63,739,4.799,740,3.834,742,3.315,746,2.734]],["title/guards/PermissionGuard.html",[561,2.281,770,3.565]],["body/guards/PermissionGuard.html",[3,0.077,4,0.067,5,0.067,7,0.195,8,1.608,11,0.009,13,0.323,15,1.184,17,0.142,18,0.902,19,0.988,20,1.01,21,1.01,24,0.077,25,0.315,26,2.202,28,2.252,30,0.006,31,0.006,74,1.224,90,1.722,91,1.196,92,0.323,93,0.793,104,3.744,140,1.329,149,4.366,151,0.68,169,2.96,199,0.539,212,1.033,445,6.085,447,3.683,449,4.033,456,1.893,561,3.198,655,4.123,717,3.421,771,4.565,772,6.214,773,4.033,774,7.544,775,4.565,776,8.134,777,4.565,778,6.196,779,4.565,780,4.565,781,4.033,782,4.565,783,4.565,784,4.565,785,6.196,786,4.565,787,4.565,788,4.565,789,4.565,790,4.565,791,4.565,792,4.033,793,4.033,794,4.033,795,4.033,796,4.565,797,4.565,798,4.565,799,4.565,800,4.565,801,4.565,802,4.565,803,4.565]],["title/classes/Quiz.html",[25,0.305,71,1.486]],["body/classes/Quiz.html",[3,0.062,4,0.054,5,0.054,7,0.158,10,1.046,11,0.009,13,0.426,17,0.137,19,0.799,20,0.818,21,0.818,24,0.105,25,0.255,30,0.005,31,0.005,71,2.11,92,0.451,93,0.88,151,1.277,169,1.45,199,0.437,203,1.183,212,0.837,224,0.413,239,0.897,243,1.427,277,2.983,289,4.702,290,3.97,291,4.702,292,5.062,295,3.97,305,0.856,371,1.34,456,2.215,458,3.239,459,3.489,460,3.358,461,2.602,462,3.979,463,3.979,465,3.979,468,2.139,473,3.092,474,4.806,475,2.677,476,2.139,477,2.139,478,2.97,479,1.49,481,2.139,804,2.769,805,5.151,806,6.275,807,3.695,808,3.695,809,3.695,810,3.695,811,3.695,812,3.695,813,3.695,814,3.695,815,3.695,816,3.228,817,2.338,818,2.6,819,2.981,820,3.695,821,2.769,822,3.264]],["title/classes/QuizAnswer.html",[25,0.305,823,2.94]],["body/classes/QuizAnswer.html",[3,0.058,4,0.051,5,0.051,7,0.147,10,1.046,11,0.009,13,0.426,17,0.125,19,0.746,20,0.763,21,0.763,24,0.101,25,0.238,30,0.005,31,0.005,92,0.437,93,1.007,151,1.142,169,1.352,177,1.889,199,0.407,203,1.103,212,1.506,224,0.385,239,0.852,243,1.424,245,1.218,267,3.083,270,4.863,271,4.863,272,5.326,273,3.351,274,4.863,275,4.241,277,3.089,279,5.326,282,4.095,285,4.095,305,1.54,371,1.249,456,2.105,458,3.111,459,3.351,460,3.226,461,2.5,462,1.994,463,1.994,465,4.293,468,1.994,473,2.939,474,4.796,475,2.572,476,1.994,477,1.994,478,2.823,479,1.39,481,1.994,823,3.378,824,5.829,825,2.582,826,5.365,827,3.446,828,3.446,829,3.446,830,3.446,831,3.446,832,3.446,833,3.446,834,3.446,835,3.446,836,3.446,837,3.446,838,3.446,839,2.78,840,2.582,841,3.044]],["title/modules/QuizAnswerModule.html",[32,1.602,44,3.109]],["body/modules/QuizAnswerModule.html",[3,0.079,4,0.07,5,0.07,11,0.009,17,0.158,18,0.935,24,0.079,25,0.327,30,0.006,31,0.006,32,2.302,34,2.21,35,2.965,44,6.242,45,5.469,49,3.276,50,2.442,51,2.442,53,3.165,54,3.165,70,4.18,71,2.134,72,3.329,91,0.913,202,2.631,203,1.515,223,3.529,267,1.761,475,2.019,496,2.739,823,3.148,840,4.756,842,4.18,843,4.18,844,4.18,845,4.732,846,5.904,847,5.904,848,4.732,849,4.18,850,4.756,851,4.732,852,4.224,853,3.817,854,4.18,855,4.732]],["title/injectables/QuizAnswerRepository.html",[74,0.873,846,2.94]],["body/injectables/QuizAnswerRepository.html",[3,0.053,4,0.047,5,0.047,7,0.135,8,1.237,11,0.009,13,0.375,15,1.775,17,0.155,18,0.626,19,0.685,20,0.701,21,0.701,24,0.053,25,0.219,27,1.314,28,1.836,30,0.005,31,0.005,71,2.418,74,0.942,75,1.12,84,3.73,90,1.999,91,1.388,92,0.357,93,0.92,109,1.761,140,1.388,155,2.777,169,1.871,173,2.374,177,2.134,189,2.374,190,2.004,192,2.374,203,1.014,237,0.579,265,3.712,266,4.246,267,1.774,275,2.228,295,2.004,348,0.922,349,1.321,355,2.108,392,2.108,396,4.246,479,1.277,499,3.964,500,1.923,501,1.871,502,1.923,503,1.923,504,1.923,505,2.228,506,3.547,508,3.355,512,1.923,515,2.191,516,1.277,517,2.035,518,1.914,519,1.923,522,1.277,523,1.914,524,1.833,526,1.065,528,1.065,529,1.603,532,1.065,533,1.914,535,2.228,536,3.173,599,1.352,600,2.227,646,2.374,654,2.798,655,2.108,667,2.374,805,3.573,823,2.108,824,3.355,826,2.555,839,2.555,846,3.173,853,2.555,856,2.798,857,4.721,858,3.168,859,3.168,860,3.168,861,2.228,862,2.798,863,2.108,864,4.626,865,2.555,866,2.555,867,3.168,868,3.168,869,4.769,870,3.168,871,3.168,872,4.769,873,3.168,874,3.168,875,3.168,876,3.168,877,3.168,878,3.168,879,3.168,880,3.168,881,3.168,882,3.168,883,2.798]],["title/classes/QuizAnswerResolver.html",[25,0.305,850,3.311]],["body/classes/QuizAnswerResolver.html",[3,0.05,4,0.044,5,0.044,7,0.128,8,1.187,10,0.855,11,0.009,13,0.367,15,1.733,17,0.155,18,0.592,19,0.649,20,0.664,21,0.664,24,0.05,25,0.207,26,1.446,27,1.243,28,2.139,30,0.004,31,0.004,71,2.367,72,5.152,90,1.957,91,1.359,92,0.367,93,0.901,97,1.667,102,1.667,140,0.873,155,2.937,177,2.064,199,0.354,212,1.255,224,0.335,227,2.543,230,3.083,231,2.543,266,4.129,267,2.725,302,2.247,305,1.631,355,4.129,392,4.129,396,4.129,440,1.548,515,2.527,526,1.008,528,1.008,529,1.538,532,1.008,547,1.995,549,3.044,551,3.351,552,1.897,555,1.812,560,1.897,561,3.78,564,1.812,566,3.591,567,1.736,568,1.736,569,1.605,570,1.548,571,1.736,572,1.736,573,1.736,575,1.736,577,1.995,578,1.812,579,3.867,581,1.995,582,1.812,584,1.995,585,1.736,587,1.995,588,1.736,590,1.995,823,5.148,826,2.419,847,4.129,849,2.649,850,3.428,852,1.995,853,2.419,863,4.129,864,4.474,865,2.419,866,2.419,884,2.649,885,4.575,886,4.575,887,4.575,888,4.575,889,2.999,890,2.999,891,2.999,892,2.999,893,2.999,894,2.999,895,2.11,896,2.11,897,2.999,898,2.999,899,2.999,900,2.999,901,2.999,902,2.649,903,1.995,904,2.999,905,2.999,906,2.999,907,2.999,908,2.999]],["title/injectables/QuizAnswerService.html",[74,0.873,847,2.94]],["body/injectables/QuizAnswerService.html",[3,0.069,4,0.061,5,0.061,7,0.176,8,1.495,11,0.009,13,0.41,15,1.971,17,0.155,18,0.812,24,0.069,25,0.284,30,0.005,31,0.005,71,2.554,72,4.054,74,1.138,75,1.452,90,2.189,91,1.52,92,0.41,93,1.007,140,1.197,237,0.699,266,2.734,267,2.144,349,1.466,355,2.734,392,2.734,396,2.734,500,2.324,501,2.261,502,2.324,503,2.324,504,2.324,512,1.657,513,2.609,515,2.432,516,1.657,517,2.459,519,1.657,520,2.779,522,1.657,526,1.382,528,1.382,529,1.937,532,1.382,592,4.416,593,3.481,595,2.483,596,2.483,597,2.483,598,2.483,599,1.753,600,2.691,601,2.483,602,3.203,603,2.483,604,2.483,605,2.483,606,2.6,846,4.799,847,3.834,852,2.734,854,3.63,863,2.734,864,5.368,865,3.315,866,3.315,909,3.63,910,4.109]],["title/modules/QuizModule.html",[32,1.602,45,2.94]],["body/modules/QuizModule.html",[3,0.081,4,0.071,5,0.071,11,0.009,17,0.159,18,0.953,24,0.081,25,0.333,30,0.006,31,0.006,32,2.332,34,2.254,35,3.004,45,5.833,49,3.32,50,2.491,51,2.491,53,3.207,54,2.406,71,2.163,91,1.242,202,2.683,203,1.545,223,3.576,475,2.745,496,2.794,816,2.916,817,3.054,818,3.396,821,4.82,857,5.632,911,4.264,912,4.264,913,4.264,914,5.922,915,4.827,916,4.264,917,4.82,918,4.827,919,4.264,920,4.264,921,4.525,922,4.264,923,4.827]],["title/classes/QuizQuestion.html",[25,0.305,816,2.67]],["body/classes/QuizQuestion.html",[3,0.061,4,0.054,5,0.054,7,0.156,10,1.023,11,0.009,13,0.417,17,0.129,19,0.789,20,0.807,21,0.807,24,0.104,25,0.252,30,0.005,31,0.005,92,0.453,93,1.023,151,1.274,169,1.431,199,0.431,203,1.168,212,0.826,224,0.408,239,0.889,243,1.401,245,1.871,267,3.033,277,2.969,295,4.324,302,4.667,303,5.024,304,4.667,305,1.68,306,2.942,371,1.322,456,2.195,458,3.215,459,3.463,460,3.333,461,2.583,462,2.111,463,3.605,465,3.955,468,2.111,473,3.063,474,4.718,475,2.658,476,2.111,477,2.111,478,2.942,479,1.471,481,2.111,816,3.197,817,5.158,921,2.566,924,2.733,925,3.647,926,4.675,927,3.647,928,3.647,929,3.647,930,3.647,931,3.647,932,3.647,933,3.647,934,2.942,935,3.222]],["title/modules/QuizQuestionModule.html",[32,1.602,936,3.311]],["body/modules/QuizQuestionModule.html",[3,0.083,4,0.073,5,0.073,11,0.009,17,0.157,18,0.976,24,0.083,25,0.341,30,0.006,31,0.006,32,2.368,34,2.307,35,3.051,49,3.372,50,2.55,51,2.55,53,3.257,54,2.463,71,2.196,91,0.954,202,2.746,203,1.582,223,3.632,267,1.838,475,2.108,496,2.859,816,2.984,818,3.475,852,4.346,921,4.595,922,4.364,936,6.596,937,4.364,938,4.364,939,4.364,940,5.943,941,5.943,942,3.701,943,4.94,944,4.364,945,4.895,946,4.94,947,4.364]],["title/injectables/QuizQuestionRepository.html",[74,0.873,940,2.94]],["body/injectables/QuizQuestionRepository.html",[3,0.061,4,0.054,5,0.054,7,0.157,8,1.377,11,0.009,13,0.395,15,1.886,17,0.158,18,0.724,19,0.792,20,0.811,21,0.811,24,0.061,25,0.253,30,0.005,31,0.005,71,2.548,74,1.049,75,1.295,84,3.753,90,2.107,91,1.463,92,0.379,93,0.97,140,1.067,155,2.704,177,1.975,203,1.173,237,0.644,265,4.278,267,1.975,295,2.318,298,2.318,300,4.393,349,1.403,359,2.437,402,2.437,405,2.437,479,1.477,499,4.133,500,2.141,501,2.083,502,2.141,503,2.141,504,2.141,505,2.577,506,3.807,508,3.735,512,1.477,513,2.404,514,2.437,515,2.327,516,1.477,517,2.265,518,2.213,519,1.477,520,2.56,521,2.745,522,1.477,523,2.213,524,2.12,526,1.232,528,1.232,529,1.785,532,1.232,533,2.213,535,2.577,599,1.563,600,2.48,816,2.213,817,3.359,818,2.577,861,2.577,934,2.955,940,3.532,948,3.236,949,3.663,950,2.318,951,2.955,952,2.955,953,3.663,954,3.663,955,3.663,956,3.663,957,3.663,958,3.663]],["title/classes/QuizQuestionResolver.html",[25,0.305,945,3.311]],["body/classes/QuizQuestionResolver.html",[3,0.05,4,0.044,5,0.044,7,0.128,8,1.187,10,0.855,11,0.009,13,0.367,15,1.733,17,0.155,18,0.592,19,0.649,20,0.664,21,0.664,24,0.05,25,0.207,26,1.446,27,1.243,28,2.139,30,0.004,31,0.004,71,2.367,90,1.957,91,1.359,92,0.367,93,0.901,97,1.667,102,1.667,140,0.873,155,2.937,177,2.064,199,0.354,212,1.255,224,0.335,227,2.543,230,3.083,231,2.543,267,2.725,291,2.247,295,1.897,298,3.926,300,3.902,305,1.631,359,4.129,402,4.129,405,4.129,440,1.548,515,2.527,526,1.008,528,1.008,529,1.538,532,1.008,547,1.995,549,3.044,551,3.351,552,1.897,555,1.812,560,1.897,561,3.78,564,1.812,566,3.591,567,1.736,568,1.736,569,1.605,570,1.548,571,1.736,572,1.736,573,1.736,575,1.736,577,1.995,578,1.812,579,3.867,581,1.995,582,1.812,584,1.995,585,1.736,587,1.995,588,1.736,590,1.995,816,4.674,818,2.11,852,1.995,895,2.11,896,2.11,902,2.649,903,1.995,941,4.129,942,5.487,944,2.649,945,3.428,950,3.926,951,2.419,952,2.419,959,2.649,960,4.575,961,4.575,962,4.575,963,4.575,964,2.999,965,2.999,966,2.999,967,2.999,968,2.999,969,2.999,970,2.999,971,2.999,972,2.999,973,2.999,974,2.999,975,2.999,976,2.999,977,2.999,978,2.999,979,2.999]],["title/injectables/QuizQuestionService.html",[74,0.873,941,2.94]],["body/injectables/QuizQuestionService.html",[3,0.069,4,0.061,5,0.061,7,0.176,8,1.495,11,0.009,13,0.41,15,1.971,17,0.155,18,0.812,24,0.069,25,0.284,30,0.005,31,0.005,71,2.554,74,1.138,75,1.452,90,2.189,91,1.52,92,0.41,93,1.007,140,1.197,237,0.699,267,2.144,298,2.6,300,4.682,349,1.466,359,2.734,402,2.734,405,2.734,500,2.324,501,2.261,502,2.324,503,2.324,504,2.324,512,1.657,513,2.609,515,2.432,516,1.657,517,2.459,519,1.657,520,2.779,522,1.657,526,1.382,528,1.382,529,1.937,532,1.382,592,4.416,593,3.481,595,2.483,596,2.483,597,2.483,598,2.483,599,1.753,600,2.691,601,2.483,602,3.203,603,2.483,604,2.483,605,2.483,606,2.6,852,2.734,940,4.799,941,3.834,942,4.318,947,3.63,950,2.6,951,3.315,952,3.315,980,3.63,981,4.109]],["title/injectables/QuizRepository.html",[74,0.873,914,2.94]],["body/injectables/QuizRepository.html",[3,0.059,4,0.051,5,0.051,7,0.26,8,1.331,11,0.009,13,0.389,15,1.851,17,0.156,18,0.691,19,0.756,20,0.774,21,0.774,24,0.059,25,0.241,28,1.946,30,0.005,31,0.005,71,1.175,74,1.013,75,1.236,84,3.807,90,2.072,91,1.439,92,0.372,93,0.954,140,1.018,155,2.867,177,2.262,203,1.119,237,0.623,265,3.849,286,4.456,289,2.62,304,2.62,349,1.377,357,2.326,399,2.326,407,4.456,458,1.804,479,1.41,499,4.08,500,2.069,501,2.013,502,2.069,503,2.069,504,2.069,505,2.459,506,3.723,508,3.61,510,2.459,512,2.069,515,2.284,516,1.41,517,2.189,518,2.112,519,2.069,522,1.41,523,2.112,524,2.023,526,1.175,528,1.175,529,1.725,532,1.175,533,2.112,535,2.459,536,3.414,599,1.492,600,2.397,646,2.62,649,4.533,651,2.82,652,2.82,667,2.62,805,2.62,819,2.82,861,2.459,883,3.088,914,3.414,982,3.088,983,3.496,984,3.496,985,3.496,986,2.326,987,4.904,988,2.82,989,2.82,990,3.496,991,3.088,992,3.496,993,3.496,994,3.496]],["title/classes/QuizResolver.html",[25,0.305,917,3.311]],["body/classes/QuizResolver.html",[3,0.052,4,0.046,5,0.046,7,0.133,8,1.223,10,0.87,11,0.009,13,0.373,15,1.764,17,0.156,18,0.616,19,0.675,20,0.691,21,0.691,24,0.052,25,0.215,26,1.505,27,1.294,28,2.177,30,0.004,31,0.004,71,2.631,90,1.987,91,1.38,92,0.373,93,0.915,97,1.735,102,1.735,140,0.909,155,2.967,177,2.115,199,0.369,212,1.287,224,0.349,227,2.621,230,3.159,231,2.621,286,4.214,305,1.656,357,4.214,399,4.214,407,4.214,440,1.611,515,2.553,526,1.049,528,1.049,529,1.585,532,1.049,547,2.077,549,3.137,551,3.433,552,1.975,555,1.885,560,1.975,561,3.832,564,1.885,566,3.665,567,1.806,568,1.806,569,1.67,570,1.611,571,1.806,572,1.806,573,1.806,575,1.806,577,2.077,578,1.885,579,3.935,581,2.077,582,1.885,584,2.077,585,1.806,587,2.077,588,1.806,590,2.077,805,2.338,857,4.007,895,2.195,896,2.195,903,2.077,916,2.757,917,3.533,919,2.757,986,4.214,987,4.584,988,2.517,989,2.517,995,2.757,996,4.715,997,4.715,998,4.715,999,4.715,1000,3.121,1001,3.121,1002,3.121,1003,3.121,1004,3.121,1005,3.121,1006,3.121,1007,3.121,1008,3.121,1009,3.121,1010,3.121,1011,3.121,1012,3.121,1013,3.121,1014,3.121,1015,3.121,1016,3.121]],["title/injectables/QuizService.html",[74,0.873,857,2.796]],["body/injectables/QuizService.html",[3,0.071,4,0.062,5,0.062,7,0.18,8,1.521,11,0.009,13,0.414,15,1.988,17,0.156,18,0.832,24,0.071,25,0.291,30,0.006,31,0.006,74,1.158,75,1.489,90,2.206,91,1.532,92,0.414,93,1.015,140,1.226,237,0.712,286,2.802,349,1.48,357,2.802,399,2.802,407,2.802,500,2.364,501,2.3,502,2.364,503,2.364,504,2.364,512,1.698,513,2.654,515,2.454,516,1.698,517,2.501,519,1.698,520,2.827,522,1.698,526,1.416,528,1.416,529,1.971,532,1.416,592,4.443,593,3.542,595,2.545,596,2.545,597,2.545,598,2.545,599,1.797,600,2.738,601,2.545,602,3.259,603,2.545,604,2.545,605,2.545,606,2.665,857,3.709,914,4.851,920,3.721,986,2.802,987,5.439,988,3.397,989,3.397,1017,3.721,1018,4.212]],["title/injectables/RepositoryProxyService.html",[74,0.873,592,2.365]],["body/injectables/RepositoryProxyService.html",[3,0.068,4,0.06,5,0.06,7,0.174,8,1.485,11,0.009,13,0.409,15,1.963,17,0.135,18,0.804,24,0.068,25,0.281,27,1.688,28,2.423,30,0.005,31,0.005,74,1.13,75,1.438,90,2.182,91,1.515,92,0.409,93,1.004,140,1.185,237,0.872,347,2.463,351,1.641,370,2.76,373,1.688,377,2.673,499,2.101,500,2.308,501,2.246,502,2.308,503,2.308,504,2.308,512,2.308,513,3.252,515,2.423,516,2.308,517,3.065,519,2.308,520,3.464,522,2.308,592,3.063,593,2.459,595,3.458,599,2.442,600,3.355,602,3.993,697,4.026,1019,7.124,1020,3.595,1021,6.62,1022,4.07,1023,4.07,1024,4.07,1025,4.07,1026,4.07,1027,4.07,1028,4.07,1029,3.595,1030,4.07,1031,4.07,1032,4.07,1033,4.07,1034,4.07]],["title/classes/Role.html",[25,0.305,1035,2.558]],["body/classes/Role.html",[3,0.069,4,0.061,5,0.061,7,0.177,10,1.036,11,0.009,13,0.422,17,0.136,19,0.893,20,0.914,21,0.914,24,0.112,25,0.285,30,0.006,31,0.006,91,1.288,92,0.443,93,0.925,151,1.25,169,1.62,199,0.488,203,1.322,212,0.935,224,0.462,239,0.971,243,1.42,277,3.094,290,4.222,305,0.956,314,5.382,371,1.497,456,2.398,458,3.444,459,3.709,460,3.571,461,2.767,462,3.347,463,3.347,465,4.184,468,2.39,473,3.347,474,4.782,475,2.847,476,2.39,477,2.39,478,3.214,479,1.665,481,2.39,1035,3.347,1036,3.094,1037,5.085,1038,4.129,1039,4.129,1040,4.129,1041,4.129,1042,4.129,1043,4.129,1044,4.129,1045,3.094,1046,2.905,1047,3.648]],["title/modules/RoleModule.html",[32,1.602,46,2.94]],["body/modules/RoleModule.html",[3,0.079,4,0.069,5,0.069,11,0.009,17,0.16,18,0.927,24,0.079,25,0.324,30,0.006,31,0.006,32,2.289,34,2.192,35,2.948,39,5.188,46,5.896,48,3.994,49,3.258,50,2.422,51,2.422,53,3.147,54,3.147,58,3.785,59,3.785,91,0.906,117,4.441,202,2.609,203,1.502,223,3.509,475,2.002,496,2.716,1035,2.716,1046,4.441,1048,4.145,1049,4.145,1050,4.145,1051,4.692,1052,5.896,1053,5.896,1054,4.692,1055,4.145,1056,4.73,1057,4.692,1058,4.145,1059,4.145,1060,3.785]],["title/injectables/RoleRepository.html",[74,0.873,1052,2.94]],["body/injectables/RoleRepository.html",[3,0.064,4,0.056,5,0.056,7,0.162,8,1.413,11,0.009,13,0.4,15,1.912,17,0.159,18,0.75,19,0.821,20,0.84,21,0.84,24,0.064,25,0.262,30,0.005,31,0.005,74,1.076,75,1.341,84,3.782,90,2.132,91,1.481,92,0.384,93,0.981,140,1.105,155,2.742,177,2.026,203,1.215,237,0.661,265,4.312,311,2.525,349,1.423,361,2.525,410,2.525,413,2.525,479,1.53,499,4.172,500,2.196,501,2.137,502,2.196,503,2.196,504,2.196,506,3.869,512,1.53,513,2.466,514,2.525,515,2.36,516,1.53,517,2.324,518,2.293,519,1.53,520,2.626,521,2.843,522,1.53,523,2.293,524,2.196,526,1.276,528,1.276,529,1.831,532,1.276,533,2.293,599,1.619,600,2.544,861,2.67,1035,2.196,1037,2.67,1045,2.843,1052,3.624,1061,3.353,1062,3.795,1063,3.795,1064,4.811,1065,3.795,1066,2.525,1067,5.138,1068,3.061,1069,3.061,1070,3.795,1071,3.795]],["title/classes/RoleResolver.html",[25,0.305,1056,3.311]],["body/classes/RoleResolver.html",[3,0.053,4,0.047,5,0.047,7,0.135,8,1.237,10,0.876,11,0.009,13,0.375,15,1.775,17,0.157,18,0.626,19,0.685,20,0.701,21,0.701,24,0.053,25,0.219,26,1.528,27,1.314,28,2.191,30,0.005,31,0.005,90,1.999,91,1.388,92,0.375,93,0.92,97,1.761,102,1.761,140,0.922,155,2.978,177,2.134,199,0.374,212,1.298,224,0.354,227,2.651,230,3.188,231,2.651,305,1.665,311,4.246,336,3.573,361,4.246,410,4.246,413,4.246,440,1.635,515,2.563,526,1.065,528,1.065,529,1.603,532,1.065,560,2.004,561,2.96,566,3.693,567,1.833,568,1.833,569,1.695,570,1.635,571,1.833,572,1.833,573,1.833,575,1.833,578,1.914,579,3.961,582,1.914,585,1.833,588,1.833,903,2.108,1035,4.547,1037,2.228,1053,4.785,1055,2.798,1056,3.573,1058,2.798,1066,4.246,1067,4.626,1068,2.555,1069,2.555,1072,2.798,1073,4.769,1074,4.769,1075,4.769,1076,3.168,1077,3.168,1078,3.168,1079,3.168,1080,3.168,1081,3.168,1082,3.168,1083,3.168,1084,3.168,1085,3.168,1086,3.168,1087,3.168,1088,3.168,1089,3.168,1090,3.168,1091,3.168,1092,3.168,1093,3.168,1094,3.168,1095,3.168,1096,3.168,1097,3.168,1098,3.168,1099,3.168,1100,3.168,1101,3.168,1102,3.168]],["title/injectables/RoleService.html",[74,0.873,1053,2.94]],["body/injectables/RoleService.html",[3,0.071,4,0.062,5,0.062,7,0.18,8,1.521,11,0.009,13,0.414,15,1.988,17,0.156,18,0.832,24,0.071,25,0.291,30,0.006,31,0.006,74,1.158,75,1.489,90,2.206,91,1.532,92,0.414,93,1.015,140,1.226,237,0.712,311,2.802,349,1.48,361,2.802,410,2.802,413,2.802,500,2.364,501,2.3,502,2.364,503,2.364,504,2.364,512,1.698,513,2.654,515,2.454,516,1.698,517,2.501,519,1.698,520,2.827,522,1.698,526,1.416,528,1.416,529,1.971,532,1.416,592,4.443,596,2.545,597,2.545,598,2.545,599,1.797,600,2.738,601,2.545,602,3.259,603,2.545,604,2.545,605,2.545,1052,5.1,1053,3.901,1059,3.721,1066,2.802,1067,5.439,1068,3.397,1069,3.397,1103,3.721,1104,5.862,1105,4.212,1106,4.212]],["title/classes/School.html",[25,0.305,1107,2.94]],["body/classes/School.html",[3,0.065,4,0.057,5,0.057,7,0.165,10,1.058,11,0.009,13,0.431,17,0.132,19,0.836,20,0.855,21,0.855,24,0.108,25,0.267,30,0.005,31,0.005,91,1.242,92,0.447,93,0.898,151,1.287,169,1.516,199,0.457,203,1.237,212,0.875,224,0.432,239,0.926,243,1.442,273,3.577,277,3.028,305,0.895,323,4.527,324,4.821,325,4.071,371,1.401,456,2.288,458,3.321,459,3.577,460,3.444,461,2.668,462,3.193,463,3.193,465,4.467,468,2.237,473,3.193,474,4.854,475,2.746,476,2.237,477,2.237,478,3.067,479,1.558,481,2.237,1107,3.671,1108,2.896,1109,5.661,1110,3.864,1111,3.864,1112,3.864,1113,3.864,1114,3.864,1115,3.864,1116,3.864,1117,3.864,1118,3.864,1119,3.117,1120,2.896,1121,3.414]],["title/modules/SchoolModule.html",[32,1.602,47,3.109]],["body/modules/SchoolModule.html",[3,0.084,4,0.074,5,0.074,11,0.009,17,0.157,18,0.993,24,0.084,25,0.347,30,0.006,31,0.006,32,2.396,34,2.348,35,3.087,47,6.212,49,3.411,50,2.595,51,2.595,53,3.295,54,2.507,91,0.971,202,2.795,203,1.61,223,3.674,475,2.145,496,2.91,1107,3.346,1120,4.952,1122,4.442,1123,4.442,1124,4.442,1125,5.959,1126,5.959,1127,5.028,1128,4.442,1129,4.952,1130,5.028,1131,4.442,1132,4.442,1133,5.028]],["title/injectables/SchoolRepository.html",[74,0.873,1125,2.94]],["body/injectables/SchoolRepository.html",[3,0.057,4,0.05,5,0.05,7,0.145,8,1.301,11,0.009,13,0.384,15,1.827,17,0.155,18,0.67,19,0.734,20,0.75,21,0.75,24,0.057,25,0.234,28,1.606,30,0.005,31,0.005,74,0.991,75,1.198,84,3.739,90,2.05,91,1.424,92,0.384,93,0.944,140,0.987,155,2.744,169,1.968,177,2.222,203,1.086,237,0.609,265,4.044,320,2.256,349,1.36,363,2.256,415,2.256,418,4.391,479,1.367,499,4.044,500,2.023,501,1.968,502,2.023,503,2.408,504,2.023,505,2.385,506,3.669,508,3.529,510,2.385,512,1.367,513,2.272,514,2.256,515,2.361,516,1.367,517,2.141,518,2.048,519,2.023,522,1.367,523,2.048,524,1.962,526,1.14,528,1.14,529,1.687,532,1.14,533,2.048,535,2.385,536,2.256,599,1.447,600,2.343,646,2.541,651,4.047,652,4.047,861,2.385,991,2.995,1107,2.256,1109,2.735,1119,2.735,1125,3.338,1134,2.995,1135,3.391,1136,3.391,1137,2.256,1138,4.817,1139,2.735,1140,2.735,1141,3.391,1142,3.391,1143,3.391,1144,3.391,1145,3.391,1146,5.971,1147,3.391,1148,3.391,1149,3.391,1150,5.971,1151,3.391,1152,3.391,1153,3.391]],["title/classes/SchoolResolver.html",[25,0.305,1129,3.311]],["body/classes/SchoolResolver.html",[3,0.053,4,0.047,5,0.047,7,0.135,8,1.237,10,0.876,11,0.009,13,0.375,15,1.775,17,0.157,18,0.626,19,0.685,20,0.701,21,0.701,24,0.053,25,0.219,26,1.528,27,1.314,28,2.191,30,0.005,31,0.005,90,1.999,91,1.388,92,0.375,93,0.92,97,1.761,102,1.761,140,0.922,155,2.978,177,2.134,199,0.374,212,1.298,224,0.354,227,2.651,230,3.188,231,2.651,305,1.665,320,4.246,363,4.246,415,4.246,418,4.246,440,1.635,515,2.563,526,1.065,528,1.065,529,1.603,532,1.065,547,2.108,549,3.173,551,2.881,555,1.914,561,3.293,564,1.914,566,3.693,567,1.833,568,1.833,569,1.695,570,1.635,571,1.833,572,1.833,573,1.833,575,2.76,577,2.108,579,3.319,581,2.108,584,2.108,585,1.833,587,2.108,588,1.833,590,2.108,895,2.228,896,2.228,903,2.108,1107,5.228,1109,2.555,1126,4.246,1128,2.798,1129,3.573,1131,2.798,1137,4.246,1138,4.626,1139,2.555,1140,2.555,1154,2.798,1155,4.769,1156,4.769,1157,4.769,1158,4.769,1159,3.168,1160,3.168,1161,3.168,1162,3.168,1163,3.168,1164,3.168,1165,3.168,1166,3.168,1167,3.168,1168,3.168,1169,3.168,1170,3.168,1171,3.168,1172,3.168,1173,3.168,1174,3.168,1175,3.168,1176,3.168]],["title/injectables/SchoolService.html",[74,0.873,1126,2.94]],["body/injectables/SchoolService.html",[3,0.071,4,0.062,5,0.062,7,0.18,8,1.521,11,0.009,13,0.414,15,1.988,17,0.156,18,0.832,24,0.071,25,0.291,30,0.006,31,0.006,74,1.158,75,1.489,90,2.206,91,1.532,92,0.414,93,1.015,140,1.226,237,0.712,320,2.802,349,1.48,363,2.802,415,2.802,418,2.802,500,2.364,501,2.3,502,2.364,503,2.364,504,2.364,512,1.698,513,2.654,515,2.454,516,1.698,517,2.501,519,1.698,520,2.827,522,1.698,526,1.416,528,1.416,529,1.971,532,1.416,592,4.443,593,3.542,595,2.545,596,2.545,597,2.545,598,2.545,599,1.797,600,2.738,601,2.545,602,3.259,603,2.545,604,2.545,605,2.545,606,2.665,1125,4.851,1126,3.901,1132,3.721,1137,2.802,1138,5.439,1139,3.397,1140,3.397,1177,3.721,1178,4.212]],["title/injectables/SimpleRepository.html",[74,0.873,499,2.281]],["body/injectables/SimpleRepository.html",[3,0.054,4,0.047,5,0.047,7,0.137,8,1.251,11,0.009,13,0.377,15,1.787,17,0.13,18,0.635,19,0.696,20,0.712,21,0.712,24,0.054,25,0.222,27,1.334,28,2.316,30,0.005,31,0.005,74,0.953,75,1.137,84,3.852,90,2.01,91,1.396,92,0.359,93,0.925,109,1.788,140,0.936,155,2.99,169,1.892,177,2.563,190,4.576,192,2.41,265,4.391,277,2.271,325,2.035,347,1.197,348,1.685,351,1.297,370,1.551,373,1.334,377,1.502,458,1.66,459,1.788,460,3.097,461,1.334,478,1.788,479,1.297,499,2.489,500,1.945,501,1.892,502,2.334,503,1.945,504,2.334,506,4.021,512,1.945,513,2.62,515,2.526,516,1.945,517,2.469,519,1.945,520,2.791,522,1.945,570,1.66,599,2.058,600,3.003,602,1.788,647,4.261,655,2.14,667,2.41,697,3.393,717,2.41,862,2.841,1029,2.841,1179,2.841,1180,3.216,1181,3.216,1182,3.216,1183,3.216,1184,3.216,1185,3.216,1186,3.216,1187,2.841,1188,3.216,1189,2.681,1190,2.841,1191,2.841,1192,2.841,1193,3.216,1194,3.216,1195,3.216,1196,4.823,1197,3.216,1198,5.112,1199,4.823,1200,3.216,1201,2.594,1202,2.841,1203,3.216,1204,3.216,1205,3.216,1206,3.216,1207,3.216,1208,3.216]],["title/classes/UpdateGroupingItemInput.html",[25,0.305,525,2.94]],["body/classes/UpdateGroupingItemInput.html",[3,0.074,4,0.065,5,0.065,7,0.188,10,0.949,11,0.009,13,0.405,17,0.14,19,0.949,20,0.971,21,0.971,24,0.074,25,0.416,30,0.006,31,0.006,66,4.162,92,0.405,93,1.073,151,1.267,199,0.518,212,1.68,224,0.491,234,3.878,236,3.287,237,0.732,239,1.012,240,5.558,241,5.558,242,5.558,243,1.337,244,3.876,245,1.551,248,2.027,249,0.971,258,1.405,261,1.885,262,1.063,277,2.366,305,1.718,306,3.352,347,2.761,348,2.006,349,0.847,351,1.769,371,2.186,456,2.501,461,2.857,525,4.012,1189,3.831,1209,6.871,1210,4.387,1211,4.387,1212,2.776,1213,4.387]],["title/classes/UpdateHangmanWordInput.html",[25,0.305,638,2.94]],["body/classes/UpdateHangmanWordInput.html",[3,0.079,4,0.069,5,0.069,7,0.201,10,0.914,11,0.009,13,0.398,17,0.144,19,1.018,20,1.041,21,1.041,24,0.079,25,0.436,30,0.006,31,0.006,64,4.088,92,0.398,93,1.05,151,1.222,199,0.556,212,1.729,224,0.526,237,0.768,239,1.062,243,1.313,248,2.126,249,1.041,253,3.808,255,2.977,256,4.52,257,4.52,258,1.507,259,4.157,261,1.977,262,1.14,277,2.481,305,1.464,347,2.842,348,2.08,349,0.908,351,1.897,371,2.293,456,2.622,461,2.962,638,4.208,1189,3.971,1212,2.977,1214,6.161,1215,4.157,1216,4.705]],["title/classes/UpdateMirrorWordInput.html",[25,0.305,746,2.94]],["body/classes/UpdateMirrorWordInput.html",[3,0.085,4,0.075,5,0.075,7,0.218,10,0.852,11,0.009,13,0.387,17,0.148,19,1.101,20,1.126,21,1.126,24,0.085,25,0.46,30,0.006,31,0.006,61,3.974,92,0.387,93,0.852,151,1.173,199,0.601,224,0.569,237,0.809,239,1.118,243,1.277,248,2.24,249,1.126,255,3.22,257,4.699,258,2.133,261,2.321,262,1.233,264,3.703,277,2.614,347,2.932,348,2.162,349,0.982,351,2.052,456,2.762,461,3.079,746,4.432,1189,4.129,1212,3.22,1214,5.99,1215,4.496,1217,5.089]],["title/classes/UpdateQuizAnswerInput.html",[25,0.305,863,2.94]],["body/classes/UpdateQuizAnswerInput.html",[3,0.066,4,0.058,5,0.058,7,0.168,10,0.993,11,0.009,13,0.416,17,0.133,19,0.85,20,0.869,21,0.869,24,0.066,25,0.385,30,0.005,31,0.005,71,2.684,92,0.416,93,1.1,151,1.214,199,0.464,212,1.905,224,0.439,237,0.677,239,0.937,243,1.372,245,1.388,248,1.876,249,0.869,258,1.258,261,1.745,262,0.952,267,2.97,269,2.943,270,5.237,271,5.237,273,3.609,274,5.237,275,4.567,276,3.47,277,2.774,278,3.47,281,3.47,282,4.502,285,4.502,305,1.797,347,2.63,348,1.89,349,0.758,351,1.584,371,2.563,456,2.314,461,2.692,863,3.714,1189,3.609,1212,2.485,1218,7.051,1219,3.927,1220,3.927,1221,3.927]],["title/classes/UpdateQuizInput.html",[25,0.305,986,2.94]],["body/classes/UpdateQuizInput.html",[3,0.071,4,0.062,5,0.062,7,0.181,10,0.982,11,0.009,13,0.414,17,0.144,19,0.914,20,0.934,21,0.934,24,0.071,25,0.405,30,0.006,31,0.006,71,1.974,92,0.414,93,0.751,151,1.256,199,0.499,212,1.652,224,0.472,237,0.713,239,0.986,243,1.365,245,2.076,248,1.974,249,0.934,258,1.352,261,1.836,262,1.023,277,2.304,288,3.164,289,5.059,290,4.272,291,5.059,292,5.447,295,4.272,300,2.97,305,1.839,306,4.058,347,2.716,348,1.966,349,0.815,351,1.703,371,2.129,456,2.435,461,2.8,950,3.716,986,3.908,1189,3.754,1222,7.016,1223,4.222,1224,4.222,1225,4.222,1226,4.222,1227,4.222,1228,4.222,1229,3.406]],["title/classes/UpdateQuizQuestionInput.html",[25,0.305,950,2.796]],["body/classes/UpdateQuizQuestionInput.html",[3,0.07,4,0.061,5,0.061,7,0.177,10,0.975,11,0.009,13,0.412,17,0.136,19,0.898,20,0.918,21,0.918,24,0.07,25,0.4,30,0.006,31,0.006,71,2.656,92,0.438,93,1.011,151,1.293,199,0.49,212,1.64,224,0.464,237,0.704,239,0.974,243,1.358,245,2.051,248,1.951,249,0.918,258,1.329,261,1.814,262,1.006,267,2.939,277,2.277,301,3.109,302,5.013,303,5.396,304,5.013,305,1.829,306,4.027,307,3.666,308,3.666,347,2.695,348,1.948,349,0.801,351,1.673,371,2.104,456,2.406,461,2.774,950,3.671,1189,3.719,1212,2.626,1229,6.371,1230,4.15,1231,4.15,1232,4.15]],["title/classes/UpdateRoleInput.html",[25,0.305,1066,2.94]],["body/classes/UpdateRoleInput.html",[3,0.074,4,0.065,5,0.065,7,0.189,10,0.951,11,0.009,13,0.406,17,0.14,19,0.954,20,0.976,21,0.976,24,0.074,25,0.418,30,0.006,31,0.006,91,1.334,92,0.406,93,1.074,151,1.268,199,0.521,212,1.37,224,0.493,237,0.735,239,1.016,243,1.339,245,1.559,248,2.035,249,0.976,258,1.412,261,2.324,262,1.069,277,2.375,290,4.372,305,1.722,306,2.452,313,3.304,314,5.573,319,2.827,347,2.767,348,2.012,349,0.851,351,1.778,371,2.194,432,5.998,456,2.509,461,2.865,1066,4.027,1189,3.841,1212,2.79,1233,6.884,1234,6.052,1235,4.41,1236,4.41,1237,4.41,1238,4.41,1239,4.41]],["title/classes/UpdateSchoolInput.html",[25,0.305,1137,2.94]],["body/classes/UpdateSchoolInput.html",[3,0.067,4,0.059,5,0.059,7,0.171,10,1,11,0.009,13,0.419,17,0.134,19,0.868,20,0.888,21,0.888,24,0.067,25,0.391,30,0.005,31,0.005,91,1.268,92,0.419,93,1.104,151,1.295,199,0.474,212,1.857,224,0.449,237,0.688,239,0.951,243,1.38,245,1.418,248,1.905,249,0.888,258,1.284,261,1.771,262,0.972,273,3.652,277,2.223,305,1.809,306,2.23,319,2.646,322,3.006,323,4.621,324,4.922,325,4.156,328,3.544,332,5.005,347,2.656,348,1.913,349,0.774,351,1.618,371,2.588,432,4.57,456,2.349,461,2.724,1137,3.77,1189,3.652,1212,2.538,1240,7.095,1241,4.012,1242,4.012,1243,4.012,1244,4.012,1245,4.012,1246,4.012]],["title/classes/UpdateUserInput.html",[25,0.305,1247,2.94]],["body/classes/UpdateUserInput.html",[3,0.062,4,0.055,5,0.055,7,0.159,10,1.028,11,0.009,13,0.427,17,0.13,19,0.803,20,0.821,21,0.821,24,0.062,25,0.37,30,0.005,31,0.005,92,0.427,93,1.107,151,1.312,152,4.186,154,3.801,199,0.439,212,1.906,224,0.415,237,0.651,239,0.9,243,1.407,245,1.312,248,1.802,249,0.821,258,1.188,261,1.675,262,0.899,273,3.497,277,2.103,305,1.861,306,2.98,335,2.781,336,4.714,337,5.074,344,4.735,347,2.563,348,1.832,349,0.716,350,2.063,351,1.497,371,2.76,456,2.222,461,2.609,1189,3.497,1247,3.566,1248,7.233,1249,6.291,1250,6.291,1251,3.711,1252,3.711,1253,3.711,1254,3.711,1255,3.711,1256,3.711,1257,3.711,1258,3.711,1259,3.711]],["title/classes/User.html",[25,0.305,149,2.558]],["body/classes/User.html",[3,0.06,4,0.053,5,0.053,7,0.154,10,1.039,11,0.009,13,0.423,17,0.142,19,0.777,20,0.795,21,0.795,24,0.104,25,0.248,30,0.005,31,0.005,92,0.441,93,1.019,104,3.731,149,3.574,151,1.209,152,4.109,154,3.731,169,1.41,199,0.425,203,1.15,212,1.185,224,0.402,239,0.879,243,1.396,245,1.27,273,3.433,277,2.954,305,1.571,306,1.997,325,2.273,336,4.627,337,4.981,371,1.898,456,2.171,458,3.187,459,3.433,460,3.305,461,2.561,462,2.079,463,3.574,465,3.927,468,3.03,473,3.03,474,4.839,475,2.635,476,2.079,477,2.079,478,2.91,479,2.111,481,2.079,926,3.174,1035,3.03,1037,4.344,1060,2.898,1201,4.223,1260,2.692,1261,3.593,1262,3.593,1263,3.593,1264,3.593,1265,3.593,1266,3.593,1267,5.235,1268,3.593,1269,3.593,1270,3.593,1271,2.898,1272,3.593,1273,2.898,1274,3.593,1275,2.692,1276,3.174]],["title/injectables/UserRepository.html",[74,0.873,1277,2.94]],["body/injectables/UserRepository.html",[3,0.047,4,0.042,5,0.042,7,0.121,8,1.134,11,0.009,13,0.358,15,1.688,17,0.151,18,0.559,19,0.612,20,0.626,21,0.626,24,0.047,25,0.195,27,1.813,28,2.202,30,0.004,31,0.004,74,0.864,75,0.999,84,3.761,90,1.912,91,1.328,92,0.358,93,0.88,104,1.708,109,2.431,140,1.273,149,3.482,152,1.882,154,2.642,155,2.891,161,2.281,162,2.281,163,2.281,164,2.281,165,2.281,166,2.281,167,2.281,168,2.281,169,2.098,170,1.989,171,2.119,173,3.277,176,2.498,177,1.989,189,4.508,190,4.812,191,2.498,192,2.119,203,0.905,265,4.287,277,1.716,323,1.989,325,1.789,333,4.003,348,1.557,365,4.003,425,4.003,435,4.003,458,1.46,460,1.513,479,1.763,500,1.763,501,1.716,502,2.156,503,1.763,504,1.763,506,3.987,512,1.763,515,2.372,516,1.763,519,1.763,522,1.763,524,1.637,526,0.951,528,0.951,529,1.47,532,0.951,599,1.866,655,1.882,1035,1.637,1037,1.989,1045,2.119,1064,4.723,1187,2.498,1190,2.498,1191,2.498,1192,2.498,1198,4.723,1201,2.281,1202,2.498,1247,4.003,1271,2.281,1273,2.281,1277,2.91,1278,2.281,1279,2.828,1280,2.828,1281,4.373,1282,2.828,1283,2.828,1284,2.828,1285,2.828,1286,2.828,1287,2.828,1288,4.313,1289,2.281,1290,2.281,1291,2.828,1292,2.828,1293,2.828,1294,2.828,1295,4.373,1296,2.828,1297,2.828,1298,2.828,1299,2.828,1300,2.828,1301,2.828,1302,2.828,1303,2.828,1304,2.828,1305,4.373,1306,2.828,1307,2.828,1308,2.828,1309,2.828,1310,2.828,1311,2.828,1312,2.828,1313,2.828,1314,2.828,1315,2.828]],["title/modules/UsersModule.html",[32,1.602,48,2.796]],["body/modules/UsersModule.html",[3,0.079,4,0.07,5,0.07,11,0.009,17,0.163,18,0.935,24,0.079,25,0.327,30,0.006,31,0.006,32,2.302,34,2.21,35,2.965,39,4.016,46,4.224,48,5.469,49,3.276,50,2.442,51,2.442,53,3.165,54,2.359,59,3.817,60,4.18,91,1.225,117,5.039,142,5.361,149,2.739,202,2.631,203,1.515,223,3.529,475,2.709,496,2.739,1035,2.739,1046,4.466,1060,3.817,1271,3.817,1275,4.756,1277,5.469,1316,4.18,1317,4.18,1318,4.18,1319,4.732,1320,4.18,1321,4.756,1322,4.732,1323,4.18,1324,4.18,1325,4.732]],["title/classes/UsersResolver.html",[25,0.305,1321,3.311]],["body/classes/UsersResolver.html",[3,0.053,4,0.046,5,0.046,7,0.134,8,1.228,10,0.872,11,0.009,13,0.373,15,1.768,17,0.157,18,0.62,19,0.679,20,0.695,21,0.695,24,0.053,25,0.217,26,1.513,27,1.301,28,2.182,30,0.005,31,0.005,90,1.992,91,1.383,92,0.373,93,0.917,97,1.745,102,1.745,104,1.896,140,0.914,142,4.329,149,4.535,155,2.971,177,2.122,199,0.371,212,1.072,224,0.351,227,2.632,230,3.17,231,2.632,305,1.578,333,4.226,365,4.226,425,4.226,435,4.226,440,1.62,515,2.557,526,1.055,528,1.055,529,1.592,532,1.055,551,3.445,552,1.986,555,1.896,561,3.699,564,1.896,566,3.676,567,1.816,568,1.816,569,1.679,570,1.62,571,1.816,572,1.816,573,1.816,575,1.816,578,1.896,579,3.945,582,1.896,585,1.816,588,1.816,895,2.208,896,2.208,903,2.088,1247,4.226,1288,4.6,1289,2.531,1290,2.531,1320,2.772,1321,3.548,1324,2.772,1326,2.772,1327,4.735,1328,4.735,1329,4.735,1330,4.735,1331,3.138,1332,3.138,1333,3.138,1334,3.138,1335,3.138,1336,3.138,1337,3.138,1338,3.138,1339,3.138,1340,3.138,1341,3.138,1342,3.138,1343,3.138,1344,3.138,1345,3.138,1346,3.138,1347,3.138,1348,3.138,1349,3.138,1350,3.138,1351,3.138,1352,3.138,1353,3.138,1354,3.138,1355,3.138]],["title/injectables/UsersService.html",[74,0.873,142,2.67]],["body/injectables/UsersService.html",[3,0.059,4,0.052,5,0.052,7,0.152,8,1.346,11,0.009,13,0.391,15,1.862,17,0.149,18,0.701,19,0.767,20,0.785,21,0.785,24,0.059,25,0.245,26,1.711,27,1.471,28,2.298,30,0.005,31,0.005,74,1.024,75,1.254,84,3.666,90,2.083,91,1.447,92,0.391,93,0.959,104,2.143,109,1.972,140,1.033,142,3.133,155,3.061,161,2.862,162,2.862,163,2.862,164,2.862,165,2.862,166,2.862,167,2.862,168,2.862,169,1.392,170,2.496,171,2.658,177,2.281,265,4.465,333,4.488,365,4.488,425,4.488,435,4.488,500,2.091,501,2.035,502,2.091,503,2.091,504,2.091,512,2.091,515,2.298,516,2.091,519,2.091,522,2.091,526,1.193,528,1.193,529,1.744,532,1.193,599,2.213,1247,4.488,1277,4.987,1288,4.945,1289,2.862,1290,2.862,1323,3.134,1356,2.862,1357,3.547,1358,3.547,1359,3.547,1360,3.547,1361,3.547,1362,3.547,1363,3.547,1364,3.547,1365,3.547,1366,3.547,1367,3.547,1368,2.862,1369,3.547,1370,3.547,1371,3.547]],["title/coverage.html",[1372,5.354]],["body/coverage.html",[0,1.822,1,1.121,5,0.022,6,1.322,11,0.009,22,0.995,25,0.619,30,0.002,31,0.002,61,2.47,62,1.822,64,2.47,65,1.822,66,2.47,67,1.822,71,2.168,72,1.822,74,1.552,76,1.322,80,1.121,81,1.322,92,0.078,98,0.947,100,1.121,114,1.052,115,1.052,137,2.089,142,0.904,149,0.866,170,2.409,190,0.947,194,1.207,196,1.207,200,1.121,204,1.207,225,1.322,233,0.995,234,3.112,235,1.322,236,2.566,238,0.746,250,0.801,252,0.995,253,3.112,254,2.089,255,3.198,263,0.995,264,3.112,266,0.995,267,2.82,268,1.322,269,2.566,286,0.995,287,1.322,288,2.566,298,0.947,299,1.207,301,2.566,311,0.995,312,1.322,313,2.566,320,0.995,321,1.322,322,2.566,333,0.995,334,1.322,335,2.566,345,0.995,346,1.322,347,0.557,352,0.995,353,2.089,354,0.995,355,0.995,356,1.322,357,0.995,358,1.322,359,0.995,360,1.322,361,0.995,362,1.322,363,0.995,364,1.322,365,0.995,366,1.322,367,0.995,368,2.089,369,1.322,370,0.721,375,0.995,376,1.322,377,0.699,381,0.995,382,2.872,383,2.089,387,0.995,388,2.089,390,0.995,391,0.995,392,0.995,393,2.089,394,1.322,396,0.995,397,1.322,399,0.995,400,2.089,401,1.322,402,0.995,403,2.089,404,1.322,405,0.995,406,1.322,407,0.995,408,1.322,410,0.995,411,2.089,412,1.322,413,0.995,414,1.322,415,0.995,416,2.089,417,1.322,418,0.995,419,1.322,425,0.995,426,2.089,427,1.322,428,0.995,433,1.207,435,0.995,436,1.322,437,3.071,438,1.322,440,0.772,441,1.322,442,2.566,452,1.322,453,0.995,454,2.409,455,1.941,482,1.121,487,0.995,488,0.995,491,1.121,498,1.322,499,0.772,525,0.995,542,1.322,561,0.772,569,0.801,570,0.772,591,1.322,592,0.801,607,0.995,608,2.409,609,2.872,618,1.121,623,0.995,624,0.995,627,1.121,633,2.089,638,0.995,655,6.138,670,2.089,693,2.089,695,2.089,699,1.322,701,1.207,702,1.322,703,1.322,720,1.322,722,1.322,730,0.995,731,2.409,734,1.121,739,0.995,740,0.995,741,1.121,746,0.995,770,1.207,772,1.322,773,1.322,804,1.941,816,0.904,817,2.167,821,1.121,823,0.995,824,2.409,825,1.941,840,1.121,846,0.995,847,0.995,850,1.121,856,1.322,857,0.947,863,0.995,884,1.322,909,1.322,914,0.995,917,1.121,921,1.052,924,1.941,940,0.995,941,0.995,942,1.941,945,1.121,948,1.322,950,0.947,959,1.322,980,1.322,982,1.322,986,0.995,995,1.322,1017,1.322,1019,1.322,1020,1.322,1035,0.866,1036,1.941,1046,1.052,1052,0.995,1053,0.995,1056,1.121,1061,1.322,1066,0.995,1072,1.322,1103,1.322,1107,0.995,1108,1.941,1120,1.121,1125,0.995,1126,0.995,1129,1.121,1134,1.322,1137,0.995,1154,1.322,1177,1.322,1179,1.322,1209,1.322,1214,2.089,1218,1.322,1222,1.322,1229,1.207,1233,1.322,1240,1.322,1247,0.995,1248,1.322,1260,1.941,1275,1.121,1277,0.995,1278,2.089,1321,1.121,1326,1.322,1356,2.089,1372,1.322,1373,1.322,1374,1.496,1375,1.496,1376,8.16,1377,4.083,1378,7.578,1379,7.971,1380,1.322,1381,1.322,1382,1.322,1383,2.288,1384,6.007,1385,1.322,1386,1.322,1387,1.322,1388,1.322,1389,3.425,1390,4.615,1391,4.083,1392,8.31,1393,1.496,1394,1.496,1395,4.083,1396,1.322,1397,2.288,1398,1.322,1399,2.288,1400,2.59,1401,1.322,1402,1.322,1403,1.496,1404,1.496]],["title/dependencies.html",[35,2.486,1405,3.676]],["body/dependencies.html",[11,0.009,18,0.806,25,0.282,30,0.005,31,0.005,35,1.905,103,4.624,119,3.291,121,3.057,123,2.581,129,4.624,199,0.482,203,1.306,209,3.604,262,0.988,479,1.645,710,5.347,721,3.291,781,3.604,1406,4.079,1407,8.372,1408,4.079,1409,4.079,1410,4.079,1411,4.079,1412,4.079,1413,5.733,1414,5.065,1415,4.079,1416,4.079,1417,4.079,1418,4.079,1419,4.079,1420,4.079,1421,4.079,1422,4.079,1423,4.079,1424,4.079,1425,4.079,1426,4.079,1427,4.079,1428,5.856,1429,4.079,1430,5.733,1431,6.629,1432,4.079,1433,4.079,1434,4.079,1435,4.079,1436,4.079,1437,5.733,1438,4.079,1439,4.079,1440,4.079,1441,4.079,1442,4.079,1443,3.604,1444,4.079,1445,4.079,1446,5.733,1447,4.079,1448,3.604,1449,4.079,1450,5.733,1451,4.079,1452,3.604,1453,4.079,1454,4.079,1455,4.079,1456,4.079,1457,4.079,1458,4.079,1459,4.079,1460,4.079,1461,4.079,1462,5.733,1463,4.079,1464,3.604,1465,4.079,1466,4.079,1467,4.079,1468,4.079,1469,4.079,1470,4.079,1471,4.079,1472,4.079,1473,4.079,1474,4.079,1475,4.079,1476,4.079,1477,4.079,1478,4.079,1479,4.079,1480,4.079,1481,4.079,1482,4.079,1483,4.079,1484,4.079,1485,4.079,1486,4.079,1487,4.079,1488,4.079,1489,4.079,1490,4.079,1491,4.079,1492,4.079,1493,4.079]],["title/miscellaneous/functions.html",[1494,2.446,1495,4.702]],["body/miscellaneous/functions.html",[7,0.294,11,0.008,30,0.008,31,0.008,1399,6.071,1401,7.508,1402,7.508,1494,4.572,1495,6.071,1496,8.024]],["title/index.html",[7,0.157,1497,3.676,1498,3.676]],["body/index.html",[4,0.046,11,0.007,19,0.683,30,0.005,31,0.005,35,1.474,103,2.546,190,3.009,325,1.997,501,1.238,660,5.055,665,5.055,1368,3.836,1373,5.055,1428,2.788,1443,2.788,1448,6.776,1452,4.201,1464,2.788,1499,3.156,1500,5.722,1501,3.156,1502,5.722,1503,8.543,1504,3.156,1505,3.156,1506,3.156,1507,7.67,1508,3.156,1509,3.156,1510,4.755,1511,3.156,1512,3.156,1513,3.156,1514,3.156,1515,3.156,1516,3.156,1517,3.156,1518,5.722,1519,5.722,1520,3.156,1521,4.755,1522,6.833,1523,3.156,1524,4.755,1525,7.181,1526,3.156,1527,3.156,1528,6.833,1529,3.156,1530,6.369,1531,3.156,1532,5.722,1533,4.755,1534,3.156,1535,3.156,1536,8.325,1537,3.156,1538,3.156,1539,3.156,1540,4.755,1541,3.156,1542,3.156,1543,3.156,1544,3.156,1545,3.156,1546,3.156,1547,3.156,1548,3.156,1549,7.453,1550,4.755,1551,7.997,1552,5.722,1553,3.156,1554,7.453,1555,4.755,1556,3.156,1557,3.156,1558,4.755,1559,3.156,1560,3.156,1561,3.156,1562,3.156,1563,3.156,1564,3.156,1565,3.156,1566,3.156,1567,3.156,1568,3.156,1569,3.156,1570,3.156,1571,5.722,1572,3.156,1573,5.722,1574,3.156,1575,5.722,1576,3.156,1577,3.156,1578,3.156,1579,3.156,1580,3.156,1581,3.156,1582,3.156,1583,2.788,1584,4.755,1585,5.722,1586,7.181,1587,6.369,1588,4.755,1589,3.156,1590,3.156,1591,4.755,1592,7.181,1593,3.156,1594,3.156,1595,3.156,1596,3.156,1597,3.156,1598,4.201,1599,3.156,1600,3.156,1601,3.156,1602,3.156,1603,4.755,1604,4.755,1605,6.369,1606,4.755,1607,3.156,1608,3.156,1609,3.156,1610,3.156,1611,3.156,1612,3.156,1613,3.156,1614,3.156,1615,3.156,1616,3.156,1617,3.156,1618,4.755,1619,3.156,1620,3.156,1621,3.156,1622,3.156,1623,3.156,1624,3.156,1625,3.156,1626,3.156,1627,3.156,1628,3.156,1629,3.156,1630,3.156,1631,3.156,1632,3.156,1633,3.156,1634,3.156,1635,3.156,1636,3.156,1637,3.156,1638,3.156,1639,3.156,1640,3.156]],["title/modules.html",[34,2.831]],["body/modules.html",[11,0.007,30,0.007,31,0.007,33,4.307,34,2.685,39,3.637,40,4.044,41,4.044,42,4.044,43,4.044,44,4.044,45,3.824,46,3.824,47,4.044,48,3.637,936,4.307,1414,8.023,1598,5.078,1641,9.081,1642,9.081,1643,9.125,1644,5.748]],["title/overview.html",[1645,5.354]],["body/overview.html",[2,1.907,11,0.009,22,3.588,30,0.004,31,0.004,33,6.576,34,1.339,35,2.064,36,2.532,37,2.532,38,2.532,39,4.934,40,3.793,41,5.371,42,5.371,43,5.371,44,5.583,45,5.188,46,5.28,47,5.371,48,4.709,49,2.281,50,1.479,51,1.479,75,1.013,98,3.412,112,2.532,113,2.532,114,3.793,115,3.793,142,4.354,224,0.321,484,2.532,485,2.532,486,2.532,487,4.795,488,4.795,620,2.532,621,2.532,622,2.532,623,4.795,624,4.795,736,2.532,737,2.532,738,2.532,739,4.795,740,4.795,770,2.312,842,2.532,843,2.532,844,2.532,846,4.795,847,4.795,857,4.56,911,2.532,912,2.532,913,2.532,914,4.795,936,5.576,937,2.532,938,2.532,939,2.532,940,4.795,941,4.795,1048,2.532,1049,2.532,1050,2.532,1052,4.795,1053,4.795,1122,2.532,1123,2.532,1124,2.532,1125,4.795,1126,4.795,1277,3.588,1316,2.532,1317,2.532,1318,2.532,1645,2.532,1646,2.866,1647,2.866,1648,2.866,1649,2.866,1650,2.866]],["title/miscellaneous/typealiases.html",[1494,2.446,1651,5.323]],["body/miscellaneous/typealiases.html",[7,0.25,11,0.007,30,0.007,31,0.007,92,0.305,234,2.915,253,2.915,264,2.915,267,2.709,454,4.114,455,5.454,480,5.872,608,4.114,609,5.836,617,5.872,731,4.114,733,5.872,804,4.381,817,3.7,819,5.872,824,4.114,825,5.454,839,5.872,924,5.454,934,5.872,1036,4.381,1045,5.454,1108,4.381,1119,5.872,1260,4.381,1273,5.872,1494,3.891,1652,5.847,1653,5.166,1654,5.166,1655,5.166,1656,6.431,1657,5.166,1658,5.166,1659,5.166,1660,5.166]],["title/miscellaneous/variables.html",[1494,2.446,1661,4.702]],["body/miscellaneous/variables.html",[7,0.144,11,0.009,28,1.903,30,0.005,31,0.005,53,1.677,54,1.677,84,1.523,92,0.31,95,2.52,120,2.713,137,2.713,144,5.251,151,0.742,155,1.252,169,1.957,170,5.173,171,4.453,194,4.023,196,4.023,204,4.023,212,0.761,234,1.677,253,1.677,264,1.677,267,1.856,445,2.713,447,2.713,454,2.366,455,3.737,482,3.737,483,2.971,569,2.669,570,2.574,608,2.366,609,4.625,618,3.737,619,2.971,717,2.52,731,2.366,734,3.737,735,2.971,792,2.971,793,2.971,794,2.971,795,2.971,804,2.52,817,2.128,821,3.737,822,2.971,824,2.366,825,3.737,840,3.737,841,2.971,921,3.508,924,3.737,935,2.971,1036,2.52,1046,3.508,1047,2.971,1108,2.52,1120,3.737,1121,2.971,1260,2.52,1275,3.737,1276,2.971,1278,2.713,1356,2.713,1368,2.713,1380,2.971,1381,4.406,1382,4.406,1383,2.971,1385,2.971,1386,2.971,1387,4.406,1388,2.971,1396,2.971,1397,6.202,1398,2.971,1494,2.238,1583,5.251,1653,2.971,1654,2.971,1655,2.971,1656,4.406,1657,2.971,1658,2.971,1659,2.971,1660,2.971,1661,2.971,1662,3.364,1663,3.364,1664,3.364,1665,3.364,1666,3.364,1667,3.364,1668,3.364,1669,3.364,1670,4.987,1671,3.364,1672,8.818,1673,8.818,1674,3.364,1675,4.987,1676,3.364,1677,3.364,1678,3.364,1679,5.943,1680,3.364,1681,4.987,1682,3.364,1683,3.364,1684,3.364,1685,3.364,1686,3.364,1687,3.364,1688,5.943,1689,3.364,1690,3.364,1691,3.364,1692,4.987,1693,3.364,1694,4.987,1695,3.364,1696,3.364,1697,3.364,1698,3.364,1699,3.364,1700,3.364]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":655,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"guards/PermissionGuard.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["0.1.13",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1456,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":1471,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1379,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1395,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1393,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1376,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1384,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1389,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1377,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1390,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1392,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1391,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1394,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1650,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":1473,"title":{},"body":{"dependencies.html":{}}}],["1.1.12",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["1.1.18",{"_index":1424,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1432,"title":{},"body":{"dependencies.html":{}}}],["1.22.17",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1368,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["10.0.4",{"_index":1430,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":1646,"title":{},"body":{"overview.html":{}}}],["13.0.0",{"_index":1446,"title":{},"body":{"dependencies.html":{}}}],["13.2.0",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["13.2.3",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["13.8.3",{"_index":1444,"title":{},"body":{"dependencies.html":{}}}],["14.0.0",{"_index":1439,"title":{},"body":{"dependencies.html":{}}}],["16.0.0",{"_index":1461,"title":{},"body":{"dependencies.html":{}}}],["16.3.0",{"_index":1463,"title":{},"body":{"dependencies.html":{}}}],["17.6.0",{"_index":1467,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1647,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["2.0.6",{"_index":1449,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1455,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":1648,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":1451,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":1429,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":1422,"title":{},"body":{"dependencies.html":{}}}],["3.5.9",{"_index":1418,"title":{},"body":{"dependencies.html":{}}}],["3.6.3",{"_index":1453,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1472,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1459,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":1475,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":1420,"title":{},"body":{"dependencies.html":{}}}],["6.0.8",{"_index":1426,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":1442,"title":{},"body":{"dependencies.html":{}}}],["7.5.4",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["72",{"_index":1649,"title":{},"body":{"overview.html":{}}}],["7d",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["8.0.0",{"_index":1433,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1465,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":1435,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":1431,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1469,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":1434,"title":{},"body":{"dependencies.html":{}}}],["__data",{"_index":511,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["_id",{"_index":458,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"injectables/QuizRepository.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["abilities",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["above",{"_index":1555,"title":{},"body":{"index.html":{}}}],["abstract",{"_index":439,"title":{},"body":{"classes/GqlArg.html":{},"classes/GqlInput.html":{}}}],["access_token",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["add",{"_index":1448,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["adding",{"_index":1517,"title":{},"body":{"index.html":{}}}],["address",{"_index":323,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/GetSchoolsArgs.html":{},"classes/School.html":{},"classes/UpdateSchoolInput.html":{},"injectables/UserRepository.html":{}}}],["advanced",{"_index":1631,"title":{},"body":{"index.html":{}}}],["advantage",{"_index":1624,"title":{},"body":{"index.html":{}}}],["affected",{"_index":1591,"title":{},"body":{"index.html":{}}}],["affected:e2e",{"_index":1595,"title":{},"body":{"index.html":{}}}],["affected:test",{"_index":1590,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":1652,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alongside",{"_index":1629,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1428,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1408,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1416,"title":{},"body":{"dependencies.html":{}}}],["answer",{"_index":270,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["answer.args",{"_index":866,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{}}}],["answer.args.ts",{"_index":394,"title":{},"body":{"classes/GetQuizAnswerArgs.html":{},"coverage.html":{}}}],["answer.entity",{"_index":853,"title":{},"body":{"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{}}}],["answer.entity.ts",{"_index":825,"title":{},"body":{"classes/QuizAnswer.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["answer.entity.ts:13",{"_index":827,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:17",{"_index":837,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:21",{"_index":836,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:25",{"_index":828,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:29",{"_index":834,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:33",{"_index":833,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:37",{"_index":829,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:41",{"_index":830,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:45",{"_index":838,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:49",{"_index":831,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.input",{"_index":864,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{}}}],["answer.input.ts",{"_index":269,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"coverage.html":{}}}],["answer.input.ts:10",{"_index":283,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{}}}],["answer.input.ts:13",{"_index":276,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:16",{"_index":281,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:19",{"_index":278,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:21",{"_index":280,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{}}}],["answer.input.ts:22",{"_index":1220,"title":{},"body":{"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:25",{"_index":1219,"title":{},"body":{"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:27",{"_index":1221,"title":{},"body":{"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:7",{"_index":284,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{}}}],["answer.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["answer.module.ts",{"_index":848,"title":{},"body":{"modules/QuizAnswerModule.html":{}}}],["answer.repository",{"_index":854,"title":{},"body":{"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerService.html":{}}}],["answer.repository.ts",{"_index":856,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"coverage.html":{}}}],["answer.repository.ts:23",{"_index":858,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["answer.resolver",{"_index":851,"title":{},"body":{"modules/QuizAnswerModule.html":{}}}],["answer.resolver.ts",{"_index":884,"title":{},"body":{"classes/QuizAnswerResolver.html":{},"coverage.html":{}}}],["answer.resolver.ts:17",{"_index":889,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.resolver.ts:23",{"_index":897,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.resolver.ts:30",{"_index":899,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.resolver.ts:37",{"_index":891,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.resolver.ts:44",{"_index":901,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.resolver.ts:51",{"_index":893,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.service",{"_index":849,"title":{},"body":{"modules/QuizAnswerModule.html":{},"classes/QuizAnswerResolver.html":{}}}],["answer.service.ts",{"_index":909,"title":{},"body":{"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["answer.service.ts:18",{"_index":910,"title":{},"body":{"injectables/QuizAnswerService.html":{}}}],["answer/dto/args/get",{"_index":393,"title":{},"body":{"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"coverage.html":{}}}],["answer/dto/inputs/create",{"_index":268,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"coverage.html":{}}}],["answer/dto/inputs/delete",{"_index":356,"title":{},"body":{"classes/DeleteQuizAnswerInput.html":{},"coverage.html":{}}}],["answer/dto/inputs/update",{"_index":1218,"title":{},"body":{"classes/UpdateQuizAnswerInput.html":{},"coverage.html":{}}}],["answer/entities/quiz",{"_index":824,"title":{},"body":{"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["answer/quiz",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/QuizAnswerModule.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["answeredat",{"_index":271,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["answers",{"_index":302,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["answers.args",{"_index":865,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{}}}],["answers.args.ts",{"_index":397,"title":{},"body":{"classes/GetQuizAnswersArgs.html":{},"coverage.html":{}}}],["answers.args.ts:12",{"_index":398,"title":{},"body":{"classes/GetQuizAnswersArgs.html":{}}}],["any).deletedat",{"_index":1203,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["any).updatedat",{"_index":1310,"title":{},"body":{"injectables/UserRepository.html":{}}}],["any).user",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["anything",{"_index":956,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["api",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["apollo",{"_index":1450,"title":{},"body":{"dependencies.html":{}}}],["apollo/client",{"_index":1417,"title":{},"body":{"dependencies.html":{}}}],["apollodriver",{"_index":207,"title":{},"body":{"modules/CoreModule.html":{}}}],["apollodriverconfig",{"_index":208,"title":{},"body":{"modules/CoreModule.html":{}}}],["app",{"_index":1554,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":1550,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1525,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":33,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/.../auth.service.ts",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../configuration.ts",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../current",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../grouping",{"_index":1653,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../hangman",{"_index":1654,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":1496,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mirror",{"_index":1655,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../mongo",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../permission.decorator.ts",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../quiz",{"_index":1656,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../quiz.entity.ts",{"_index":1657,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../role.entity.ts",{"_index":1658,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../school.entity.ts",{"_index":1659,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../user.entity.ts",{"_index":1660,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../user.repository.ts",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../users.service.ts",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../validation.ts",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/api/src/app/app.module.ts",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/app/auth/auth.controller.ts",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/auth.controller.ts:13",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/api/src/app/auth/auth.module.ts",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/api/src/app/auth/auth.service.ts",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/auth.service.ts:10",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:18",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:23",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:33",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/decorators/current",{"_index":1380,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/decorators/permission.decorator.ts",{"_index":1383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/guards/gql",{"_index":441,"title":{},"body":{"classes/GqlAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/jwt",{"_index":702,"title":{},"body":{"classes/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/local",{"_index":720,"title":{},"body":{"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/permission",{"_index":772,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts",{"_index":703,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts:19",{"_index":707,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts:7",{"_index":704,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts",{"_index":722,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts:13",{"_index":725,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts:8",{"_index":724,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["apps/api/src/app/core/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["apps/api/src/app/core/app.controller.ts:12",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/api/src/app/core/app.service.ts",{"_index":76,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["apps/api/src/app/core/app.service.ts:6",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/api/src/app/core/config/configuration.ts",{"_index":1385,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/core/config/mongo",{"_index":1386,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/core/config/validation.ts",{"_index":1388,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/core/core.module.ts",{"_index":193,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/api/src/app/core/core.resolver.ts",{"_index":225,"title":{},"body":{"classes/CoreResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/core/core.resolver.ts:6",{"_index":228,"title":{},"body":{"classes/CoreResolver.html":{}}}],["apps/api/src/app/grouping",{"_index":234,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/hangman",{"_index":253,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/UpdateHangmanWordInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/mirror",{"_index":264,"title":{},"body":{"classes/CreateMirrorWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/quiz",{"_index":267,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/quiz/dto/args/get",{"_index":400,"title":{},"body":{"classes/GetQuizArgs.html":{},"classes/GetQuizzesArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/dto/inputs/create",{"_index":287,"title":{},"body":{"classes/CreateQuizInput.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/dto/inputs/delete",{"_index":358,"title":{},"body":{"classes/DeleteQuizInput.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/dto/inputs/update",{"_index":1222,"title":{},"body":{"classes/UpdateQuizInput.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts",{"_index":804,"title":{},"body":{"classes/Quiz.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:14",{"_index":807,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:18",{"_index":813,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:22",{"_index":811,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:26",{"_index":808,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:30",{"_index":812,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:34",{"_index":814,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:38",{"_index":809,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:42",{"_index":815,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:46",{"_index":810,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.repository.ts",{"_index":982,"title":{},"body":{"injectables/QuizRepository.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/entities/quiz.repository.ts:22",{"_index":983,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["apps/api/src/app/quiz/quiz.module.ts",{"_index":915,"title":{},"body":{"modules/QuizModule.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts",{"_index":995,"title":{},"body":{"classes/QuizResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:17",{"_index":1000,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:23",{"_index":1006,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:30",{"_index":1008,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:37",{"_index":1002,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:44",{"_index":1010,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:51",{"_index":1004,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.service.ts",{"_index":1017,"title":{},"body":{"injectables/QuizService.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/quiz.service.ts:18",{"_index":1018,"title":{},"body":{"injectables/QuizService.html":{}}}],["apps/api/src/app/role/dto/args/get",{"_index":411,"title":{},"body":{"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/create",{"_index":312,"title":{},"body":{"classes/CreateRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/delete",{"_index":362,"title":{},"body":{"classes/DeleteRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/update",{"_index":1233,"title":{},"body":{"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts",{"_index":1036,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:13",{"_index":1038,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:17",{"_index":1041,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:21",{"_index":1042,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:25",{"_index":1043,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:29",{"_index":1039,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:33",{"_index":1044,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:37",{"_index":1040,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.repository.ts",{"_index":1061,"title":{},"body":{"injectables/RoleRepository.html":{},"coverage.html":{}}}],["apps/api/src/app/role/entities/role.repository.ts:22",{"_index":1063,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["apps/api/src/app/role/role.module.ts",{"_index":1054,"title":{},"body":{"modules/RoleModule.html":{}}}],["apps/api/src/app/role/role.resolver.ts",{"_index":1072,"title":{},"body":{"classes/RoleResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/role/role.resolver.ts:17",{"_index":1077,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:23",{"_index":1086,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:30",{"_index":1088,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:37",{"_index":1080,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:44",{"_index":1091,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:51",{"_index":1083,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.service.ts",{"_index":1103,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["apps/api/src/app/role/role.service.ts:18",{"_index":1105,"title":{},"body":{"injectables/RoleService.html":{}}}],["apps/api/src/app/school/dto/args/get",{"_index":416,"title":{},"body":{"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/school/dto/inputs/create",{"_index":321,"title":{},"body":{"classes/CreateSchoolInput.html":{},"coverage.html":{}}}],["apps/api/src/app/school/dto/inputs/delete",{"_index":364,"title":{},"body":{"classes/DeleteSchoolInput.html":{},"coverage.html":{}}}],["apps/api/src/app/school/dto/inputs/update",{"_index":1240,"title":{},"body":{"classes/UpdateSchoolInput.html":{},"coverage.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts",{"_index":1108,"title":{},"body":{"classes/School.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:13",{"_index":1110,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:17",{"_index":1116,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:21",{"_index":1115,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:25",{"_index":1111,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:29",{"_index":1112,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:33",{"_index":1117,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:37",{"_index":1113,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:41",{"_index":1118,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:45",{"_index":1114,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.repository.ts",{"_index":1134,"title":{},"body":{"injectables/SchoolRepository.html":{},"coverage.html":{}}}],["apps/api/src/app/school/entities/school.repository.ts:22",{"_index":1135,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["apps/api/src/app/school/school.module.ts",{"_index":1127,"title":{},"body":{"modules/SchoolModule.html":{}}}],["apps/api/src/app/school/school.resolver.ts",{"_index":1154,"title":{},"body":{"classes/SchoolResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/school/school.resolver.ts:17",{"_index":1159,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:23",{"_index":1166,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:28",{"_index":1168,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:33",{"_index":1162,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:40",{"_index":1170,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:47",{"_index":1164,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.service.ts",{"_index":1177,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["apps/api/src/app/school/school.service.ts:18",{"_index":1178,"title":{},"body":{"injectables/SchoolService.html":{}}}],["apps/api/src/app/users/dto/args/get",{"_index":426,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/create",{"_index":334,"title":{},"body":{"classes/CreateUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/delete",{"_index":366,"title":{},"body":{"classes/DeleteUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/update",{"_index":1248,"title":{},"body":{"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts",{"_index":1260,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:15",{"_index":1261,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:19",{"_index":1270,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:23",{"_index":1265,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:26",{"_index":1266,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:30",{"_index":1264,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:34",{"_index":1268,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:38",{"_index":1262,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:42",{"_index":1269,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:46",{"_index":1263,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts",{"_index":1278,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:17",{"_index":1280,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:23",{"_index":1284,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:29",{"_index":1285,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:37",{"_index":1282,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:41",{"_index":1286,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:60",{"_index":1283,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/users.module.ts",{"_index":1319,"title":{},"body":{"modules/UsersModule.html":{}}}],["apps/api/src/app/users/users.resolver.ts",{"_index":1326,"title":{},"body":{"classes/UsersResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/users/users.resolver.ts:17",{"_index":1332,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:23",{"_index":1340,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:30",{"_index":1344,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:37",{"_index":1334,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:44",{"_index":1338,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:51",{"_index":1336,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.service.ts",{"_index":1356,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/users.service.ts:13",{"_index":1358,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:16",{"_index":1361,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:20",{"_index":1362,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:24",{"_index":1359,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:29",{"_index":1363,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:33",{"_index":1360,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/environments/environment.prod.ts",{"_index":1396,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/environments/environment.ts",{"_index":1398,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/main.ts",{"_index":1399,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/api/src/shared/gql",{"_index":437,"title":{},"body":{"classes/GqlArg.html":{},"classes/GqlInput.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/repository",{"_index":1019,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts",{"_index":1179,"title":{},"body":{"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:16",{"_index":1181,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:19",{"_index":1184,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:25",{"_index":1185,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:32",{"_index":1182,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:42",{"_index":1186,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:50",{"_index":1183,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arg.abstract",{"_index":434,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{}}}],["arg.abstract.ts",{"_index":438,"title":{},"body":{"classes/GqlArg.html":{},"coverage.html":{}}}],["args",{"_index":567,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["args/gql",{"_index":433,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/GqlArg.html":{},"coverage.html":{}}}],["args/id.args",{"_index":373,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{}}}],["args/id.args.ts",{"_index":695,"title":{},"body":{"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"coverage.html":{}}}],["args/id.args.ts:14",{"_index":696,"title":{},"body":{"classes/IdArg.html":{}}}],["args/id.args.ts:8",{"_index":698,"title":{},"body":{"classes/IdArrayArg.html":{}}}],["argstype",{"_index":374,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{}}}],["arraynotempty",{"_index":332,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["artifacts",{"_index":1577,"title":{},"body":{"index.html":{}}}],["async",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["auth.guard.ts",{"_index":442,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":446,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["auth.service",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["auth/decorators/permission.decorator",{"_index":571,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["auth/guards/gql",{"_index":568,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["auth/guards/permission",{"_index":572,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["auth0/angular",{"_index":1419,"title":{},"body":{"dependencies.html":{}}}],["authcontroller",{"_index":80,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":448,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":450,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{}}}],["authmechanism=mongodb",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authmodule",{"_index":39,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":98,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":1569,"title":{},"body":{"index.html":{}}}],["autoschemafile",{"_index":216,"title":{},"body":{"modules/CoreModule.html":{}}}],["available",{"_index":1644,"title":{},"body":{"modules.html":{}}}],["await",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["backend",{"_index":1639,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":1187,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["badrequestexception('cannot",{"_index":1204,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["badrequestexception('current",{"_index":1303,"title":{},"body":{"injectables/UserRepository.html":{}}}],["bcrypt",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare(data.password",{"_index":1302,"title":{},"body":{"injectables/UserRepository.html":{}}}],["bcrypt.compare(password",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":1367,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcryptjs",{"_index":1454,"title":{},"body":{"dependencies.html":{}}}],["below",{"_index":1534,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":279,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{}}}],["bootstrap",{"_index":1401,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":1637,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1643,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1414,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":1507,"title":{},"body":{"index.html":{}}}],["building",{"_index":1625,"title":{},"body":{"index.html":{}}}],["caching",{"_index":1608,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":774,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["canactivate(context",{"_index":778,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["capabilities",{"_index":1518,"title":{},"body":{"index.html":{}}}],["capacitor/core",{"_index":1421,"title":{},"body":{"dependencies.html":{}}}],["categories",{"_index":289,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/Quiz.html":{},"injectables/QuizRepository.html":{},"classes/UpdateQuizInput.html":{}}}],["category",{"_index":256,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/UpdateHangmanWordInput.html":{}}}],["cert",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":1571,"title":{},"body":{"index.html":{}}}],["check",{"_index":955,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["class",{"_index":25,"title":{"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":224,"title":{},"body":{"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"overview.html":{}}}],["cli",{"_index":1458,"title":{},"body":{"dependencies.html":{}}}],["cloud",{"_index":1605,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_groupingitemmodule",{"_index":484,"title":{},"body":{"modules/GroupingItemModule.html":{},"overview.html":{}}}],["cluster_groupingitemmodule_exports",{"_index":486,"title":{},"body":{"modules/GroupingItemModule.html":{},"overview.html":{}}}],["cluster_groupingitemmodule_providers",{"_index":485,"title":{},"body":{"modules/GroupingItemModule.html":{},"overview.html":{}}}],["cluster_hangmanwordmodule",{"_index":620,"title":{},"body":{"modules/HangmanWordModule.html":{},"overview.html":{}}}],["cluster_hangmanwordmodule_exports",{"_index":622,"title":{},"body":{"modules/HangmanWordModule.html":{},"overview.html":{}}}],["cluster_hangmanwordmodule_providers",{"_index":621,"title":{},"body":{"modules/HangmanWordModule.html":{},"overview.html":{}}}],["cluster_mirrorwordmodule",{"_index":736,"title":{},"body":{"modules/MirrorWordModule.html":{},"overview.html":{}}}],["cluster_mirrorwordmodule_exports",{"_index":737,"title":{},"body":{"modules/MirrorWordModule.html":{},"overview.html":{}}}],["cluster_mirrorwordmodule_providers",{"_index":738,"title":{},"body":{"modules/MirrorWordModule.html":{},"overview.html":{}}}],["cluster_quizanswermodule",{"_index":842,"title":{},"body":{"modules/QuizAnswerModule.html":{},"overview.html":{}}}],["cluster_quizanswermodule_exports",{"_index":843,"title":{},"body":{"modules/QuizAnswerModule.html":{},"overview.html":{}}}],["cluster_quizanswermodule_imports",{"_index":845,"title":{},"body":{"modules/QuizAnswerModule.html":{}}}],["cluster_quizanswermodule_providers",{"_index":844,"title":{},"body":{"modules/QuizAnswerModule.html":{},"overview.html":{}}}],["cluster_quizmodule",{"_index":911,"title":{},"body":{"modules/QuizModule.html":{},"overview.html":{}}}],["cluster_quizmodule_exports",{"_index":912,"title":{},"body":{"modules/QuizModule.html":{},"overview.html":{}}}],["cluster_quizmodule_providers",{"_index":913,"title":{},"body":{"modules/QuizModule.html":{},"overview.html":{}}}],["cluster_quizquestionmodule",{"_index":937,"title":{},"body":{"modules/QuizQuestionModule.html":{},"overview.html":{}}}],["cluster_quizquestionmodule_exports",{"_index":938,"title":{},"body":{"modules/QuizQuestionModule.html":{},"overview.html":{}}}],["cluster_quizquestionmodule_providers",{"_index":939,"title":{},"body":{"modules/QuizQuestionModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":1048,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_exports",{"_index":1050,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_imports",{"_index":1051,"title":{},"body":{"modules/RoleModule.html":{}}}],["cluster_rolemodule_providers",{"_index":1049,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":1122,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_exports",{"_index":1123,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_providers",{"_index":1124,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1316,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1317,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1318,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":1573,"title":{},"body":{"index.html":{}}}],["community",{"_index":1548,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":1423,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":1575,"title":{},"body":{"index.html":{}}}],["computation",{"_index":1607,"title":{},"body":{"index.html":{}}}],["config.factory",{"_index":206,"title":{},"body":{"modules/CoreModule.html":{}}}],["config.factory.ts",{"_index":1387,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":195,"title":{},"body":{"modules/CoreModule.html":{}}}],["config/mongo",{"_index":205,"title":{},"body":{"modules/CoreModule.html":{}}}],["config/validation",{"_index":197,"title":{},"body":{"modules/CoreModule.html":{}}}],["configmodule",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":210,"title":{},"body":{"modules/CoreModule.html":{}}}],["configservice",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["configservice.get",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_cert",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":194,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":1619,"title":{},"body":{"index.html":{}}}],["console.log('user",{"_index":729,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["const",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(groupingitem.name",{"_index":534,"title":{},"body":{"injectables/GroupingItemRepository.html":{}}}],["constructor(@injectmodel(hangmanword.name",{"_index":642,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["constructor(@injectmodel(mirrorword.name",{"_index":747,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["constructor(@injectmodel(quiz.name",{"_index":990,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["constructor(@injectmodel(quizquestion.name",{"_index":953,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["constructor(@injectmodel(role.name",{"_index":1070,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["constructor(@injectmodel(school.name",{"_index":1141,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["constructor(authservice",{"_index":723,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(hangmanwordmodel",{"_index":634,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["constructor(mirrorwordmodel",{"_index":744,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["constructor(mirrorwordservice",{"_index":753,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["constructor(model",{"_index":1180,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["constructor(private",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(protected",{"_index":1029,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{}}}],["constructor(reflector",{"_index":775,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["constructor(repository",{"_index":593,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SchoolService.html":{}}}],["constructor(resourcemodel",{"_index":505,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["constructor(rolemodel",{"_index":1062,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["constructor(rolerepository",{"_index":1104,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(roleservice",{"_index":1076,"title":{},"body":{"classes/RoleResolver.html":{}}}],["constructor(service",{"_index":547,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["constructor(usermodel",{"_index":1279,"title":{},"body":{"injectables/UserRepository.html":{}}}],["constructor(userrepository",{"_index":1357,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(usersservice",{"_index":1331,"title":{},"body":{"classes/UsersResolver.html":{}}}],["context",{"_index":447,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["context.getclass",{"_index":784,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["context.gethandler",{"_index":785,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["context.gettype",{"_index":792,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest().user",{"_index":794,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["core",{"_index":1535,"title":{},"body":{"index.html":{}}}],["core.resolver",{"_index":201,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/app.controller",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["core/app.service",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["core/core.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["coremodule",{"_index":40,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coreresolver",{"_index":200,"title":{"classes/CoreResolver.html":{}},"body":{"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"coverage.html":{}}}],["correct",{"_index":240,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/GroupingItem.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["correctanswers",{"_index":303,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/QuizQuestion.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["count",{"_index":537,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["county",{"_index":324,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/GetSchoolsArgs.html":{},"classes/School.html":{},"classes/UpdateSchoolInput.html":{}}}],["coverage",{"_index":1372,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":501,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(data",{"_index":512,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["createdat",{"_index":459,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{}}}],["creategroupingitem",{"_index":543,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["creategroupingitem(@args('creategroupingitemdata",{"_index":583,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["creategroupingitem(data",{"_index":550,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["creategroupingiteminput",{"_index":233,"title":{"classes/CreateGroupingItemInput.html":{}},"body":{"classes/CreateGroupingItemInput.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["createhangmanword",{"_index":671,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["createhangmanword(@args('createhangmanworddata",{"_index":690,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["createhangmanword(data",{"_index":676,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["createhangmanwordinput",{"_index":252,"title":{"classes/CreateHangmanWordInput.html":{}},"body":{"classes/CreateHangmanWordInput.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["createmirrorword",{"_index":749,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["createmirrorword(@args('createmirrorworddata",{"_index":764,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["createmirrorword(data",{"_index":754,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["createmirrorwordinput",{"_index":263,"title":{"classes/CreateMirrorWordInput.html":{}},"body":{"classes/CreateMirrorWordInput.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["createparamdecorator((_data",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquiz",{"_index":996,"title":{},"body":{"classes/QuizResolver.html":{}}}],["createquiz(@args('createquizdata",{"_index":1014,"title":{},"body":{"classes/QuizResolver.html":{}}}],["createquiz(data",{"_index":1001,"title":{},"body":{"classes/QuizResolver.html":{}}}],["createquizanswer",{"_index":885,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["createquizanswer(@args('createquizanswerdata",{"_index":906,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["createquizanswer(data",{"_index":890,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["createquizanswerinput",{"_index":266,"title":{"classes/CreateQuizAnswerInput.html":{}},"body":{"classes/CreateQuizAnswerInput.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["createquizinput",{"_index":286,"title":{"classes/CreateQuizInput.html":{}},"body":{"classes/CreateQuizInput.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["createquizquestion",{"_index":960,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["createquizquestion(@args('createquizquestiondata",{"_index":977,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["createquizquestion(data",{"_index":965,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["createquizquestioninput",{"_index":298,"title":{"classes/CreateQuizQuestionInput.html":{}},"body":{"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["createrole",{"_index":1073,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createrole(@args('createroledata",{"_index":1097,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createrole(data",{"_index":1078,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createroleinput",{"_index":311,"title":{"classes/CreateRoleInput.html":{}},"body":{"classes/CreateRoleInput.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["createschool",{"_index":1155,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["createschool(@args('createschooldata",{"_index":1174,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["createschool(data",{"_index":1160,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["createschoolinput",{"_index":320,"title":{"classes/CreateSchoolInput.html":{}},"body":{"classes/CreateSchoolInput.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["createuser",{"_index":1327,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(@args('createuserdata",{"_index":1350,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(data",{"_index":1333,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuserinput",{"_index":333,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["currentuser",{"_index":1382,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cypress",{"_index":1594,"title":{},"body":{"index.html":{}}}],["data",{"_index":515,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["data.address",{"_index":1144,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.category",{"_index":649,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizRepository.html":{}}}],["data.county",{"_index":1145,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.email",{"_index":1295,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.id",{"_index":1198,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["data.ids.includes(x._id.tostring",{"_index":657,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data.ids?.length",{"_index":654,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizAnswerRepository.html":{}}}],["data.iscorrect",{"_index":881,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["data.name",{"_index":1143,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.newpassword",{"_index":1305,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.newpasswordconfirm",{"_index":1306,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.om",{"_index":1142,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.password",{"_index":1366,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.questionid",{"_index":875,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["data.questions",{"_index":993,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["data.questions.map((question",{"_index":994,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["data.quizid",{"_index":869,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["data.quizid}/${data.questionid",{"_index":877,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["data.type",{"_index":1146,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.updatedat",{"_index":1205,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["data?.category",{"_index":644,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data?.ids",{"_index":645,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data?.roles?.map((roleid",{"_index":1312,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data[filterkey",{"_index":1150,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["database_host",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":277,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["date.now",{"_index":1208,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["decoded",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoded.email",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}}}],["default",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["del",{"_index":1457,"title":{},"body":{"dependencies.html":{}}}],["delete",{"_index":502,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["delete(data",{"_index":516,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["deleted",{"_index":1199,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["deletedat",{"_index":460,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["deletegroupingitem",{"_index":544,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["deletegroupingitem(@args('deletegroupingitemdata",{"_index":589,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["deletegroupingitem(data",{"_index":554,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["deletegroupingiteminput",{"_index":345,"title":{"classes/DeleteGroupingItemInput.html":{}},"body":{"classes/DeleteGroupingItemInput.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["deletehangmanword",{"_index":672,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["deletehangmanword(@args('deletehangmanworddata",{"_index":692,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["deletehangmanword(data",{"_index":678,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["deletehangmanwordinput",{"_index":352,"title":{"classes/DeleteHangmanWordInput.html":{}},"body":{"classes/DeleteHangmanWordInput.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["deletemirrorword",{"_index":750,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["deletemirrorword(@args('deletemirrorworddata",{"_index":768,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["deletemirrorword(data",{"_index":755,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["deletemirrorwordinput",{"_index":354,"title":{"classes/DeleteMirrorWordInput.html":{}},"body":{"classes/DeleteMirrorWordInput.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["deletequiz",{"_index":997,"title":{},"body":{"classes/QuizResolver.html":{}}}],["deletequiz(@args('deletequizdata",{"_index":1016,"title":{},"body":{"classes/QuizResolver.html":{}}}],["deletequiz(data",{"_index":1003,"title":{},"body":{"classes/QuizResolver.html":{}}}],["deletequizanswer",{"_index":886,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["deletequizanswer(@args('deletequizanswerdata",{"_index":908,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["deletequizanswer(data",{"_index":892,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["deletequizanswerinput",{"_index":355,"title":{"classes/DeleteQuizAnswerInput.html":{}},"body":{"classes/DeleteQuizAnswerInput.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["deletequizinput",{"_index":357,"title":{"classes/DeleteQuizInput.html":{}},"body":{"classes/DeleteQuizInput.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["deletequizquestion",{"_index":961,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["deletequizquestion(@args('deletequizquestiondata",{"_index":979,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["deletequizquestion(data",{"_index":967,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["deletequizquestioninput",{"_index":359,"title":{"classes/DeleteQuizQuestionInput.html":{}},"body":{"classes/DeleteQuizQuestionInput.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["deleterole",{"_index":1074,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleterole(@args('deleteroledata",{"_index":1101,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleterole(data",{"_index":1081,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleteroleinput",{"_index":361,"title":{"classes/DeleteRoleInput.html":{}},"body":{"classes/DeleteRoleInput.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["deleteschool",{"_index":1156,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["deleteschool(@args('deleteschooldata",{"_index":1176,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["deleteschool(data",{"_index":1163,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["deleteschoolinput",{"_index":363,"title":{"classes/DeleteSchoolInput.html":{}},"body":{"classes/DeleteSchoolInput.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["deleteuser",{"_index":1328,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuser(@args('deleteuserdata",{"_index":1354,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuser(data",{"_index":1335,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuserinput",{"_index":365,"title":{"classes/DeleteUserInput.html":{}},"body":{"classes/DeleteUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["dep",{"_index":1597,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":35,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":1633,"title":{},"body":{"index.html":{}}}],["deprecationreason",{"_index":385,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{}}}],["description",{"_index":290,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/CreateRoleInput.html":{},"classes/HangmanWordResolver.html":{},"classes/Quiz.html":{},"classes/Role.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateRoleInput.html":{}}}],["dev",{"_index":1566,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1640,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1523,"title":{},"body":{"index.html":{}}}],["development",{"_index":1564,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1531,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":1600,"title":{},"body":{"index.html":{}}}],["different",{"_index":1524,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1580,"title":{},"body":{"index.html":{}}}],["disable",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["dist",{"_index":1579,"title":{},"body":{"index.html":{}}}],["distributed",{"_index":1606,"title":{},"body":{"index.html":{}}}],["document",{"_index":478,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{}}}],["documentation",{"_index":1373,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":1460,"title":{},"body":{"dependencies.html":{}}}],["driver",{"_index":215,"title":{},"body":{"modules/CoreModule.html":{}}}],["dto/args/get",{"_index":529,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/create",{"_index":528,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/delete",{"_index":532,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/update",{"_index":526,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dynamic",{"_index":1415,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1593,"title":{},"body":{"index.html":{}}}],["email",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserArgs.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["enable",{"_index":1613,"title":{},"body":{"index.html":{}}}],["end",{"_index":1592,"title":{},"body":{"index.html":{}}}],["entities/grouping",{"_index":493,"title":{},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["entities/hangman",{"_index":629,"title":{},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{}}}],["entities/mirror",{"_index":742,"title":{},"body":{"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["entities/quiz",{"_index":852,"title":{},"body":{"modules/QuizAnswerModule.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{}}}],["entities/quiz.entity",{"_index":919,"title":{},"body":{"modules/QuizModule.html":{},"classes/QuizResolver.html":{}}}],["entities/quiz.repository",{"_index":920,"title":{},"body":{"modules/QuizModule.html":{},"injectables/QuizService.html":{}}}],["entities/role.entity",{"_index":1058,"title":{},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{}}}],["entities/role.repository",{"_index":1059,"title":{},"body":{"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["entities/school.entity",{"_index":1131,"title":{},"body":{"modules/SchoolModule.html":{},"classes/SchoolResolver.html":{}}}],["entities/school.repository",{"_index":1132,"title":{},"body":{"modules/SchoolModule.html":{},"injectables/SchoolService.html":{}}}],["entities/user.entity",{"_index":1324,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["entities/user.repository",{"_index":1323,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["environment",{"_index":1397,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eq",{"_index":1193,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["error('new",{"_index":1307,"title":{},"body":{"injectables/UserRepository.html":{}}}],["error('please",{"_index":1298,"title":{},"body":{"injectables/UserRepository.html":{}}}],["error('user",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{}}}],["eslint",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["eslint/no",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["etc",{"_index":1529,"title":{},"body":{"index.html":{}}}],["even",{"_index":1617,"title":{},"body":{"index.html":{}}}],["exec",{"_index":992,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["execute",{"_index":1587,"title":{},"body":{"index.html":{}}}],["execution",{"_index":1610,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":445,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["experience",{"_index":1636,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":223,"title":{},"body":{"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{},"index.html":{}}}],["extends",{"_index":237,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["extensible",{"_index":1506,"title":{},"body":{"index.html":{}}}],["extractjwt",{"_index":708,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":715,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":717,"title":{},"body":{"injectables/JwtStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/SimpleRepository.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1505,"title":{},"body":{"index.html":{}}}],["features",{"_index":1514,"title":{},"body":{"index.html":{}}}],["few",{"_index":661,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["field",{"_index":243,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["field()@isnotempty",{"_index":258,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/IdArg.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["field()@isnotempty()@isemail",{"_index":338,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["field()@prop",{"_index":465,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["field(undefined",{"_index":245,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateUserInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArrayArg.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["field(undefined)@isarray",{"_index":317,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["field(undefined)@isarray()@arraynotempty",{"_index":330,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["field(undefined)@prop",{"_index":835,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["field(undefined)@prop({type",{"_index":462,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["field({nullable",{"_index":371,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":1572,"title":{},"body":{"index.html":{}}}],["filtering",{"_index":991,"title":{},"body":{"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["filterkey",{"_index":1149,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["filters",{"_index":1148,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["filters['types",{"_index":1152,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["filters[filterkey",{"_index":1151,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["findall",{"_index":503,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findall(data",{"_index":519,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":500,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findone().skip",{"_index":666,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["findone(__data",{"_index":509,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["findone(data",{"_index":599,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["flag",{"_index":1582,"title":{},"body":{"index.html":{}}}],["flatten",{"_index":780,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["flatten(user.roles.map((role",{"_index":797,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["float",{"_index":229,"title":{},"body":{"classes/CoreResolver.html":{}}}],["forwardref",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["found",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["framework",{"_index":1540,"title":{},"body":{"index.html":{}}}],["free",{"_index":879,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["frontend",{"_index":1638,"title":{},"body":{"index.html":{}}}],["frontends",{"_index":1541,"title":{},"body":{"index.html":{}}}],["full",{"_index":1626,"title":{},"body":{"index.html":{}}}],["function",{"_index":1400,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1495,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1601,"title":{},"body":{"index.html":{}}}],["g",{"_index":1552,"title":{},"body":{"index.html":{}}}],["gain",{"_index":1623,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1549,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1501,"title":{},"body":{"index.html":{}}}],["generateschema",{"_index":1402,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["generating",{"_index":1527,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1632,"title":{},"body":{"index.html":{}}}],["get('hello",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["getdata",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getgroupingitemargs",{"_index":367,"title":{"classes/GetGroupingItemArgs.html":{}},"body":{"classes/GetGroupingItemArgs.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["getgroupingitemsargs",{"_index":375,"title":{"classes/GetGroupingItemsArgs.html":{}},"body":{"classes/GetGroupingItemsArgs.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["gethangmanwordargs",{"_index":381,"title":{"classes/GetHangmanWordArgs.html":{}},"body":{"classes/GetHangmanWordArgs.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["gethangmanwordsargs",{"_index":387,"title":{"classes/GetHangmanWordsArgs.html":{}},"body":{"classes/GetHangmanWordsArgs.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["getmirrorwordargs",{"_index":390,"title":{"classes/GetMirrorWordArgs.html":{}},"body":{"classes/GetMirrorWordArgs.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["getmirrorwordsargs",{"_index":391,"title":{"classes/GetMirrorWordsArgs.html":{}},"body":{"classes/GetMirrorWordsArgs.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["getquizanswerargs",{"_index":392,"title":{"classes/GetQuizAnswerArgs.html":{}},"body":{"classes/GetQuizAnswerArgs.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["getquizanswersargs",{"_index":396,"title":{"classes/GetQuizAnswersArgs.html":{}},"body":{"classes/GetQuizAnswersArgs.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["getquizargs",{"_index":399,"title":{"classes/GetQuizArgs.html":{}},"body":{"classes/GetQuizArgs.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["getquizquestionargs",{"_index":402,"title":{"classes/GetQuizQuestionArgs.html":{}},"body":{"classes/GetQuizQuestionArgs.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["getquizquestionsargs",{"_index":405,"title":{"classes/GetQuizQuestionsArgs.html":{}},"body":{"classes/GetQuizQuestionsArgs.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["getquizzesargs",{"_index":407,"title":{"classes/GetQuizzesArgs.html":{}},"body":{"classes/GetQuizzesArgs.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["getrequest",{"_index":443,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["getrequest(context",{"_index":444,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["getroleargs",{"_index":410,"title":{"classes/GetRoleArgs.html":{}},"body":{"classes/GetRoleArgs.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["getrolesargs",{"_index":413,"title":{"classes/GetRolesArgs.html":{}},"body":{"classes/GetRolesArgs.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["getschoolargs",{"_index":415,"title":{"classes/GetSchoolArgs.html":{}},"body":{"classes/GetSchoolArgs.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["getschoolsargs",{"_index":418,"title":{"classes/GetSchoolsArgs.html":{}},"body":{"classes/GetSchoolsArgs.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["getting",{"_index":1497,"title":{"index.html":{}},"body":{}}],["getuserargs",{"_index":425,"title":{"classes/GetUserArgs.html":{}},"body":{"classes/GetUserArgs.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["getusersargs",{"_index":435,"title":{"classes/GetUsersArgs.html":{}},"body":{"classes/GetUsersArgs.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["gql",{"_index":697,"title":{},"body":{"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{}}}],["gqlarg",{"_index":428,"title":{"classes/GqlArg.html":{}},"body":{"classes/GetUserArgs.html":{},"classes/GqlArg.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"coverage.html":{}}}],["gqlauthguard",{"_index":440,"title":{"classes/GqlAuthGuard.html":{}},"body":{"classes/GqlAuthGuard.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["gqlexecutioncontext",{"_index":449,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext().req",{"_index":451,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext().req.user",{"_index":795,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["gqlinput",{"_index":238,"title":{"classes/GqlInput.html":{}},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/GqlInput.html":{},"classes/IdInput.html":{},"coverage.html":{}}}],["graph",{"_index":1598,"title":{},"body":{"index.html":{},"modules.html":{}}}],["graphql",{"_index":1462,"title":{},"body":{"dependencies.html":{}}}],["graphqlmodule",{"_index":198,"title":{},"body":{"modules/CoreModule.html":{}}}],["graphqlmodule.forroot",{"_index":214,"title":{},"body":{"modules/CoreModule.html":{}}}],["grouping",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateGroupingItemInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["groupingitem",{"_index":453,"title":{"classes/GroupingItem.html":{}},"body":{"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"coverage.html":{}}}],["groupingitem(@args",{"_index":576,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitem(data",{"_index":557,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitem.name",{"_index":497,"title":{},"body":{"modules/GroupingItemModule.html":{}}}],["groupingitemdocument",{"_index":480,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"miscellaneous/typealiases.html":{}}}],["groupingitemmodule",{"_index":41,"title":{"modules/GroupingItemModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GroupingItemModule.html":{},"modules.html":{},"overview.html":{}}}],["groupingitemrepository",{"_index":487,"title":{"injectables/GroupingItemRepository.html":{}},"body":{"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{},"overview.html":{}}}],["groupingitemresolver",{"_index":491,"title":{"classes/GroupingItemResolver.html":{}},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"coverage.html":{}}}],["groupingitems",{"_index":545,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitems(@args",{"_index":580,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitems(data",{"_index":559,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitemschema",{"_index":482,"title":{},"body":{"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["groupingitemservice",{"_index":488,"title":{"injectables/GroupingItemService.html":{}},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{},"overview.html":{}}}],["groups",{"_index":241,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/GroupingItem.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["guard",{"_index":770,"title":{"guards/PermissionGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":573,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["guard.service.ts",{"_index":773,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["guard.service.ts:10",{"_index":779,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guard.service.ts:7",{"_index":777,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guards",{"_index":771,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guards/local",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["hangman",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateHangmanWordInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/UpdateHangmanWordInput.html":{},"coverage.html":{}}}],["hangmanword",{"_index":607,"title":{"classes/HangmanWord.html":{}},"body":{"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"coverage.html":{}}}],["hangmanword(@args",{"_index":688,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanword(data",{"_index":680,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanword.name",{"_index":632,"title":{},"body":{"modules/HangmanWordModule.html":{}}}],["hangmanworddocument",{"_index":617,"title":{},"body":{"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"miscellaneous/typealiases.html":{}}}],["hangmanwordmodel",{"_index":636,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["hangmanwordmodule",{"_index":42,"title":{"modules/HangmanWordModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HangmanWordModule.html":{},"modules.html":{},"overview.html":{}}}],["hangmanwordrepository",{"_index":623,"title":{"injectables/HangmanWordRepository.html":{}},"body":{"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{},"overview.html":{}}}],["hangmanwordresolver",{"_index":627,"title":{"classes/HangmanWordResolver.html":{}},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"coverage.html":{}}}],["hangmanwords",{"_index":673,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanwords(@args",{"_index":689,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanwords(data",{"_index":683,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanwordschema",{"_index":618,"title":{},"body":{"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hangmanwordservice",{"_index":624,"title":{"injectables/HangmanWordService.html":{}},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":1602,"title":{},"body":{"index.html":{}}}],["http",{"_index":793,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1568,"title":{},"body":{"index.html":{}}}],["hundred",{"_index":662,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["iapiresource",{"_index":1188,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["id",{"_index":348,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetUserArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"injectables/UserRepository.html":{}}}],["idarg",{"_index":370,"title":{"classes/IdArg.html":{}},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["idarg:7",{"_index":372,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{}}}],["idarg:9",{"_index":395,"title":{},"body":{"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{}}}],["idarrayarg",{"_index":377,"title":{"classes/IdArrayArg.html":{}},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["idarrayarg:9",{"_index":380,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{}}}],["identifier",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["idinput",{"_index":347,"title":{"classes/IdInput.html":{}},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/IdInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["idinput:10",{"_index":1212,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["idinput:11",{"_index":1225,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["idinput:9",{"_index":350,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["ids",{"_index":378,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{}}}],["ignoreexpiration",{"_index":716,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["igroupingitem",{"_index":457,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{}}}],["ihangmanword",{"_index":610,"title":{},"body":{"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{}}}],["imirrorword",{"_index":732,"title":{},"body":{"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{}}}],["implements",{"_index":456,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["imported",{"_index":1562,"title":{},"body":{"index.html":{}}}],["imports",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["include",{"_index":1526,"title":{},"body":{"index.html":{}}}],["incorrect",{"_index":1304,"title":{},"body":{"injectables/UserRepository.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":349,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["inject",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/JwtStrategy.html":{}}}],["inject(forwardref",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["injectable",{"_index":74,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":524,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/UserRepository.html":{}}}],["injectmodel(quizanswer.name",{"_index":868,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["injectmodel(role.name",{"_index":1292,"title":{},"body":{"injectables/UserRepository.html":{}}}],["injectmodel(user.name",{"_index":1291,"title":{},"body":{"injectables/UserRepository.html":{}}}],["input.abstract",{"_index":251,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/IdInput.html":{}}}],["input.abstract.ts",{"_index":452,"title":{},"body":{"classes/GqlInput.html":{},"coverage.html":{}}}],["inputs/gql",{"_index":250,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/GqlInput.html":{},"coverage.html":{}}}],["inputs/id.input",{"_index":351,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["inputs/id.input.ts",{"_index":699,"title":{},"body":{"classes/IdInput.html":{},"coverage.html":{}}}],["inputs/id.input.ts:4",{"_index":700,"title":{},"body":{"classes/IdInput.html":{}}}],["inputtype",{"_index":248,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["instantly",{"_index":1622,"title":{},"body":{"index.html":{}}}],["int",{"_index":285,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["interactive",{"_index":1515,"title":{},"body":{"index.html":{}}}],["interfaces",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateQuizInput.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["ionic/angular",{"_index":1425,"title":{},"body":{"dependencies.html":{}}}],["ionic/storage",{"_index":1427,"title":{},"body":{"dependencies.html":{}}}],["iquiz",{"_index":805,"title":{},"body":{"classes/Quiz.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{}}}],["iquizanswer",{"_index":826,"title":{},"body":{"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{}}}],["iquizquestion",{"_index":295,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/Quiz.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"classes/UpdateQuizInput.html":{}}}],["irole",{"_index":1037,"title":{},"body":{"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["isarray",{"_index":319,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["ischool",{"_index":1109,"title":{},"body":{"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{}}}],["iscorrect",{"_index":272,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{}}}],["isemail",{"_index":344,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["isglobal",{"_index":211,"title":{},"body":{"modules/CoreModule.html":{}}}],["isnotempty",{"_index":261,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["isoptional",{"_index":432,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["item",{"_index":242,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/GroupingItem.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["item.args",{"_index":531,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["item.args.ts",{"_index":369,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"coverage.html":{}}}],["item.entity",{"_index":494,"title":{},"body":{"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{}}}],["item.entity.ts",{"_index":455,"title":{},"body":{"classes/GroupingItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["item.entity.ts:13",{"_index":464,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:17",{"_index":471,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:21",{"_index":470,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:25",{"_index":466,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:29",{"_index":467,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:33",{"_index":472,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:37",{"_index":469,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.input",{"_index":527,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["item.input.ts",{"_index":236,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["item.input.ts:10",{"_index":246,"title":{},"body":{"classes/CreateGroupingItemInput.html":{}}}],["item.input.ts:13",{"_index":244,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:16",{"_index":1211,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:19",{"_index":1210,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:21",{"_index":1213,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:7",{"_index":247,"title":{},"body":{"classes/CreateGroupingItemInput.html":{}}}],["item.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["item.module.ts",{"_index":489,"title":{},"body":{"modules/GroupingItemModule.html":{}}}],["item.repository",{"_index":495,"title":{},"body":{"modules/GroupingItemModule.html":{},"injectables/GroupingItemService.html":{}}}],["item.repository.ts",{"_index":498,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"coverage.html":{}}}],["item.repository.ts:22",{"_index":507,"title":{},"body":{"injectables/GroupingItemRepository.html":{}}}],["item.resolver",{"_index":492,"title":{},"body":{"modules/GroupingItemModule.html":{}}}],["item.resolver.ts",{"_index":542,"title":{},"body":{"classes/GroupingItemResolver.html":{},"coverage.html":{}}}],["item.resolver.ts:17",{"_index":548,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:21",{"_index":558,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:28",{"_index":562,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:35",{"_index":553,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:42",{"_index":565,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:49",{"_index":556,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.service",{"_index":490,"title":{},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{}}}],["item.service.ts",{"_index":591,"title":{},"body":{"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["item.service.ts:18",{"_index":594,"title":{},"body":{"injectables/GroupingItemService.html":{}}}],["item/dto/args/get",{"_index":368,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"coverage.html":{}}}],["item/dto/inputs/create",{"_index":235,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"coverage.html":{}}}],["item/dto/inputs/delete",{"_index":346,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"coverage.html":{}}}],["item/dto/inputs/update",{"_index":1209,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["item/entities/grouping",{"_index":454,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["item/grouping",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["items",{"_index":575,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["items'})@permission('browse')@useguards(gqlauthguard",{"_index":560,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{}}}],["items'})@useguards(gqlauthguard",{"_index":1342,"title":{},"body":{"classes/UsersResolver.html":{}}}],["items.args",{"_index":530,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["items.args.ts",{"_index":376,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"coverage.html":{}}}],["itemsandlist",{"_index":306,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/CreateUserInput.html":{},"classes/QuizQuestion.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["itemsandlist'})@isoptional()@isarray",{"_index":1237,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["itemsandlist'})@isoptional()@isarray()@arraynotempty",{"_index":1244,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["itemsandlist'})@prop({type",{"_index":926,"title":{},"body":{"classes/QuizQuestion.html":{},"classes/User.html":{}}}],["iupdatedat",{"_index":1189,"title":{},"body":{"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["iuser",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["jest",{"_index":1589,"title":{},"body":{"index.html":{}}}],["joi",{"_index":1466,"title":{},"body":{"dependencies.html":{}}}],["joi.number().default(3000",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('development",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":1468,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":701,"title":{"classes/JwtAuthGuard.html":{}},"body":{"classes/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":714,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":114,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["learn",{"_index":1604,"title":{},"body":{"index.html":{}}}],["lib",{"_index":1560,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1528,"title":{},"body":{"index.html":{}}}],["library",{"_index":1558,"title":{},"body":{"index.html":{}}}],["line",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["literal",{"_index":706,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["load",{"_index":213,"title":{},"body":{"modules/CoreModule.html":{}}}],["loader",{"_index":1441,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":721,"title":{},"body":{"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":100,"title":{"classes/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":115,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@req",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["many",{"_index":1521,"title":{},"body":{"index.html":{}}}],["map((permission",{"_index":799,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["match",{"_index":1309,"title":{},"body":{"injectables/UserRepository.html":{}}}],["matching",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":540,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["message",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["metadata",{"_index":1479,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["minute",{"_index":1511,"title":{},"body":{"index.html":{}}}],["mirror",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateMirrorWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["mirrorword",{"_index":730,"title":{"classes/MirrorWord.html":{}},"body":{"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"coverage.html":{}}}],["mirrorword(@args",{"_index":760,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorword(data",{"_index":756,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorword.name",{"_index":743,"title":{},"body":{"modules/MirrorWordModule.html":{}}}],["mirrorworddocument",{"_index":733,"title":{},"body":{"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"miscellaneous/typealiases.html":{}}}],["mirrorwordmodel",{"_index":745,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["mirrorwordmodule",{"_index":43,"title":{"modules/MirrorWordModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MirrorWordModule.html":{},"modules.html":{},"overview.html":{}}}],["mirrorwordrepository",{"_index":739,"title":{"injectables/MirrorWordRepository.html":{}},"body":{"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{},"overview.html":{}}}],["mirrorwordresolver",{"_index":741,"title":{"classes/MirrorWordResolver.html":{}},"body":{"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"coverage.html":{}}}],["mirrorwords",{"_index":751,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorwords(@args",{"_index":762,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorwords(data",{"_index":757,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorwordschema",{"_index":734,"title":{},"body":{"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mirrorwordservice",{"_index":740,"title":{"injectables/MirrorWordService.html":{}},"body":{"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{},"overview.html":{}}}],["miscellaneous",{"_index":1494,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":506,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["module",{"_index":32,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":34,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb+srv://${configservice.get('database_user')}@${configservice.get",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose",{"_index":479,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"dependencies.html":{}}}],["mongooseconfig",{"_index":204,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongooseconfig.imports",{"_index":219,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseconfig.mongooseconfigfactory",{"_index":221,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseconfig.providers",{"_index":222,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseconfigfactory",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":202,"title":{},"body":{"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":496,"title":{},"body":{"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":218,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseschema",{"_index":477,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["mongooseschema.types.mixed",{"_index":820,"title":{},"body":{"classes/Quiz.html":{}}}],["mongooseschema.types.objectid",{"_index":481,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["more",{"_index":660,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"index.html":{}}}],["multiple",{"_index":1556,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":566,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["mutation(undefined",{"_index":1161,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard",{"_index":551,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('create",{"_index":1079,"title":{},"body":{"classes/RoleResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('delete",{"_index":1082,"title":{},"body":{"classes/RoleResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('update",{"_index":1090,"title":{},"body":{"classes/RoleResolver.html":{}}}],["name",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/GetSchoolsArgs.html":{},"classes/GqlAuthGuard.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["navigate",{"_index":1567,"title":{},"body":{"index.html":{}}}],["needs",{"_index":957,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["nest",{"_index":1543,"title":{},"body":{"index.html":{}}}],["nestjs/apollo",{"_index":209,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/GqlAuthGuard.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":781,"title":{},"body":{"guards/PermissionGuard.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":199,"title":{},"body":{"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":203,"title":{},"body":{"modules/CoreModule.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1436,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"index.html":{}}}],["newpassword",{"_index":1249,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["newpasswordconfirm",{"_index":1250,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["next",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["ng",{"_index":1536,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":1437,"title":{},"body":{"dependencies.html":{}}}],["node",{"_index":1546,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":658,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["notfoundexception",{"_index":862,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{}}}],["notfoundexception(`model",{"_index":1197,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["notfoundexception(`question",{"_index":876,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["nrwl/angular",{"_index":1443,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nrwl/angular:app",{"_index":1553,"title":{},"body":{"index.html":{}}}],["nrwl/angular:lib",{"_index":1559,"title":{},"body":{"index.html":{}}}],["nrwl/express",{"_index":1545,"title":{},"body":{"index.html":{}}}],["nrwl/nest",{"_index":1544,"title":{},"body":{"index.html":{}}}],["nrwl/node",{"_index":1547,"title":{},"body":{"index.html":{}}}],["nrwl/react",{"_index":1538,"title":{},"body":{"index.html":{}}}],["nrwl/web",{"_index":1542,"title":{},"body":{"index.html":{}}}],["null",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateQuizAnswerInput.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["nullable",{"_index":305,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/CreateUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}}}],["number",{"_index":282,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["nx",{"_index":1503,"title":{},"body":{"index.html":{}}}],["nx/api",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateQuizInput.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["nx/mylib",{"_index":1563,"title":{},"body":{"index.html":{}}}],["nxtend/capacitor",{"_index":1445,"title":{},"body":{"dependencies.html":{}}}],["nxtend/ionic",{"_index":1447,"title":{},"body":{"dependencies.html":{}}}],["nx’s",{"_index":1630,"title":{},"body":{"index.html":{}}}],["object",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(data).length",{"_index":1190,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["objecttype",{"_index":473,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["om",{"_index":273,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/GetSchoolsArgs.html":{},"classes/QuizAnswer.html":{},"classes/School.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["optional",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateUserInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArrayArg.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":652,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["order",{"_index":1612,"title":{},"body":{"index.html":{}}}],["originalquestion",{"_index":872,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["originalquestion.answers.includes(data.answer",{"_index":882,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["originalquestion.type",{"_index":878,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["originalquiz",{"_index":870,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["originalquiz.questions.find((q",{"_index":873,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["out",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overridden",{"_index":958,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["override",{"_index":536,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["overview",{"_index":1645,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1405,"title":{"dependencies.html":{}},"body":{}}],["pairs",{"_index":1611,"title":{},"body":{"index.html":{}}}],["param",{"_index":648,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["param['category",{"_index":650,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["parameters",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["parseint(process.env.port",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":710,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":711,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":712,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["passwords",{"_index":1308,"title":{},"body":{"injectables/UserRepository.html":{}}}],["payload",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":719,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["per",{"_index":664,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["permission",{"_index":569,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission('browse",{"_index":578,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('create",{"_index":582,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('delete",{"_index":588,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('read",{"_index":903,"title":{},"body":{"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('update",{"_index":585,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permission.replace(/^\\*::/g",{"_index":800,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["permissionguard",{"_index":561,"title":{"guards/PermissionGuard.html":{}},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["permissionguard)@permission('browse",{"_index":1343,"title":{},"body":{"classes/UsersResolver.html":{}}}],["permissionguard)@permission('create",{"_index":552,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/UsersResolver.html":{}}}],["permissionguard)@permission('delete",{"_index":555,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permissionguard)@permission('read",{"_index":896,"title":{},"body":{"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permissionguard)@permission('update",{"_index":564,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permissions",{"_index":314,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/Role.html":{},"classes/UpdateRoleInput.html":{}}}],["playground",{"_index":217,"title":{},"body":{"modules/CoreModule.html":{}}}],["plugins",{"_index":1522,"title":{},"body":{"index.html":{}}}],["plus",{"_index":1634,"title":{},"body":{"index.html":{}}}],["polyfill",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["populate('roles",{"_index":1297,"title":{},"body":{"injectables/UserRepository.html":{}}}],["port",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["preferred",{"_index":1628,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["primeicons",{"_index":1474,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":1476,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/UserRepository.html":{}}}],["process.env.jwt_expires",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_secret",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.node_env",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.uptime",{"_index":232,"title":{},"body":{"classes/CoreResolver.html":{}}}],["prod",{"_index":1581,"title":{},"body":{"index.html":{}}}],["production",{"_index":1583,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1500,"title":{},"body":{"index.html":{}}}],["project=my",{"_index":1576,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1533,"title":{},"body":{"index.html":{}}}],["promise",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["promise.all(data.ids.map((id",{"_index":1191,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["promise.reject(new",{"_index":1196,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["prop",{"_index":474,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["properties",{"_index":239,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["provide",{"_index":1299,"title":{},"body":{"injectables/UserRepository.html":{}}}],["providers",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["proxy.service",{"_index":605,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["proxy.service.ts",{"_index":1020,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"coverage.html":{}}}],["proxy.service.ts:22",{"_index":1022,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:25",{"_index":1023,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:29",{"_index":1025,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:33",{"_index":1026,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:37",{"_index":1027,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:41",{"_index":1024,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["public",{"_index":265,"title":{},"body":{"classes/CreateMirrorWordInput.html":{},"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["q._id.tostring",{"_index":874,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["query",{"_index":230,"title":{},"body":{"classes/CoreResolver.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["query(undefined",{"_index":227,"title":{},"body":{"classes/CoreResolver.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["question",{"_index":304,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/QuizQuestion.html":{},"injectables/QuizRepository.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["question.args",{"_index":952,"title":{},"body":{"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{}}}],["question.args.ts",{"_index":404,"title":{},"body":{"classes/GetQuizQuestionArgs.html":{},"coverage.html":{}}}],["question.entity",{"_index":818,"title":{},"body":{"classes/Quiz.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{}}}],["question.entity.ts",{"_index":924,"title":{},"body":{"classes/QuizQuestion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["question.entity.ts:13",{"_index":925,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:17",{"_index":931,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:21",{"_index":932,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:25",{"_index":927,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:29",{"_index":928,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:33",{"_index":929,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:37",{"_index":933,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:41",{"_index":930,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.input",{"_index":300,"title":{},"body":{"classes/CreateQuizInput.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"classes/UpdateQuizInput.html":{}}}],["question.input.ts",{"_index":301,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{}}}],["question.input.ts:10",{"_index":310,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{}}}],["question.input.ts:13",{"_index":307,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:16",{"_index":308,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:19",{"_index":1230,"title":{},"body":{"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:22",{"_index":1231,"title":{},"body":{"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:24",{"_index":1232,"title":{},"body":{"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:7",{"_index":309,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{}}}],["question.module.ts",{"_index":943,"title":{},"body":{"modules/QuizQuestionModule.html":{}}}],["question.repository",{"_index":947,"title":{},"body":{"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionService.html":{}}}],["question.repository.ts",{"_index":948,"title":{},"body":{"injectables/QuizQuestionRepository.html":{},"coverage.html":{}}}],["question.repository.ts:22",{"_index":949,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["question.resolver",{"_index":946,"title":{},"body":{"modules/QuizQuestionModule.html":{}}}],["question.resolver.ts",{"_index":959,"title":{},"body":{"classes/QuizQuestionResolver.html":{},"coverage.html":{}}}],["question.resolver.ts:17",{"_index":964,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:23",{"_index":970,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:30",{"_index":972,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:37",{"_index":966,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:44",{"_index":974,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:51",{"_index":968,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.service",{"_index":944,"title":{},"body":{"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{}}}],["question.service.ts",{"_index":980,"title":{},"body":{"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["question.service.ts:18",{"_index":981,"title":{},"body":{"injectables/QuizQuestionService.html":{}}}],["question/dto/args/get",{"_index":403,"title":{},"body":{"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"coverage.html":{}}}],["question/dto/inputs/create",{"_index":299,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"coverage.html":{}}}],["question/dto/inputs/delete",{"_index":360,"title":{},"body":{"classes/DeleteQuizQuestionInput.html":{},"coverage.html":{}}}],["question/dto/inputs/update",{"_index":1229,"title":{},"body":{"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{}}}],["question/entities/quiz",{"_index":817,"title":{},"body":{"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["question/quiz",{"_index":942,"title":{},"body":{"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["questionid",{"_index":274,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["questions",{"_index":291,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/Quiz.html":{},"classes/QuizQuestionResolver.html":{},"classes/UpdateQuizInput.html":{}}}],["questions.args",{"_index":951,"title":{},"body":{"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{}}}],["questions.args.ts",{"_index":406,"title":{},"body":{"classes/GetQuizQuestionsArgs.html":{},"coverage.html":{}}}],["quick",{"_index":1509,"title":{},"body":{"index.html":{}}}],["quiz",{"_index":71,"title":{"classes/Quiz.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/Quiz.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{}}}],["quiz(@args",{"_index":1012,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quiz(data",{"_index":1005,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quiz.args",{"_index":989,"title":{},"body":{"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{}}}],["quiz.args.ts",{"_index":401,"title":{},"body":{"classes/GetQuizArgs.html":{},"coverage.html":{}}}],["quiz.entity",{"_index":985,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["quiz.input",{"_index":987,"title":{},"body":{"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{}}}],["quiz.input.ts",{"_index":288,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/DeleteQuizInput.html":{},"classes/UpdateQuizInput.html":{},"coverage.html":{}}}],["quiz.input.ts:12",{"_index":294,"title":{},"body":{"classes/CreateQuizInput.html":{}}}],["quiz.input.ts:14",{"_index":1227,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:15",{"_index":293,"title":{},"body":{"classes/CreateQuizInput.html":{}}}],["quiz.input.ts:17",{"_index":1224,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:18",{"_index":296,"title":{},"body":{"classes/CreateQuizInput.html":{}}}],["quiz.input.ts:20",{"_index":1223,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:23",{"_index":1226,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:25",{"_index":1228,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:9",{"_index":297,"title":{},"body":{"classes/CreateQuizInput.html":{}}}],["quiz.name",{"_index":923,"title":{},"body":{"modules/QuizModule.html":{}}}],["quiz.resolver",{"_index":918,"title":{},"body":{"modules/QuizModule.html":{}}}],["quiz.service",{"_index":916,"title":{},"body":{"modules/QuizModule.html":{},"classes/QuizResolver.html":{}}}],["quiz/quiz.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/QuizAnswerModule.html":{}}}],["quiz/quiz.service",{"_index":867,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["quizanswer",{"_index":823,"title":{"classes/QuizAnswer.html":{}},"body":{"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"coverage.html":{}}}],["quizanswer(@args",{"_index":904,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["quizanswer(data",{"_index":894,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["quizanswer.name",{"_index":855,"title":{},"body":{"modules/QuizAnswerModule.html":{}}}],["quizanswerdocument",{"_index":839,"title":{},"body":{"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"miscellaneous/typealiases.html":{}}}],["quizanswermodule",{"_index":44,"title":{"modules/QuizAnswerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QuizAnswerModule.html":{},"modules.html":{},"overview.html":{}}}],["quizanswerrepository",{"_index":846,"title":{"injectables/QuizAnswerRepository.html":{}},"body":{"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{},"overview.html":{}}}],["quizanswerresolver",{"_index":850,"title":{"classes/QuizAnswerResolver.html":{}},"body":{"modules/QuizAnswerModule.html":{},"classes/QuizAnswerResolver.html":{},"coverage.html":{}}}],["quizanswers",{"_index":887,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["quizanswers(@args",{"_index":905,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["quizanswers(data",{"_index":898,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["quizanswerschema",{"_index":840,"title":{},"body":{"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quizanswerservice",{"_index":847,"title":{"injectables/QuizAnswerService.html":{}},"body":{"modules/QuizAnswerModule.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{},"overview.html":{}}}],["quizdocument",{"_index":819,"title":{},"body":{"classes/Quiz.html":{},"injectables/QuizRepository.html":{},"miscellaneous/typealiases.html":{}}}],["quizid",{"_index":275,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["quizmodule",{"_index":45,"title":{"modules/QuizModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules.html":{},"overview.html":{}}}],["quizquestion",{"_index":816,"title":{"classes/QuizQuestion.html":{}},"body":{"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"coverage.html":{}}}],["quizquestion(@args",{"_index":975,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestion(data",{"_index":969,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestion.name",{"_index":922,"title":{},"body":{"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{}}}],["quizquestiondocument",{"_index":934,"title":{},"body":{"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"miscellaneous/typealiases.html":{}}}],["quizquestionmodule",{"_index":936,"title":{"modules/QuizQuestionModule.html":{}},"body":{"modules/QuizQuestionModule.html":{},"modules.html":{},"overview.html":{}}}],["quizquestionrepository",{"_index":940,"title":{"injectables/QuizQuestionRepository.html":{}},"body":{"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{},"overview.html":{}}}],["quizquestionresolver",{"_index":945,"title":{"classes/QuizQuestionResolver.html":{}},"body":{"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{},"coverage.html":{}}}],["quizquestions",{"_index":962,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestions(@args",{"_index":976,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestions(data",{"_index":971,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestionschema",{"_index":921,"title":{},"body":{"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quizquestionservice",{"_index":941,"title":{"injectables/QuizQuestionService.html":{}},"body":{"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{},"overview.html":{}}}],["quizrepository",{"_index":914,"title":{"injectables/QuizRepository.html":{}},"body":{"modules/QuizModule.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"coverage.html":{},"overview.html":{}}}],["quizresolver",{"_index":917,"title":{"classes/QuizResolver.html":{}},"body":{"modules/QuizModule.html":{},"classes/QuizResolver.html":{},"coverage.html":{}}}],["quizschema",{"_index":821,"title":{},"body":{"classes/Quiz.html":{},"modules/QuizModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quizservice",{"_index":857,"title":{"injectables/QuizService.html":{}},"body":{"injectables/QuizAnswerRepository.html":{},"modules/QuizModule.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{},"overview.html":{}}}],["quizzes",{"_index":998,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quizzes(@args",{"_index":1013,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quizzes(data",{"_index":1007,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quizzes.args",{"_index":988,"title":{},"body":{"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{}}}],["quizzes.args.ts",{"_index":408,"title":{},"body":{"classes/GetQuizzesArgs.html":{},"coverage.html":{}}}],["quizzes.args.ts:12",{"_index":409,"title":{},"body":{"classes/GetQuizzesArgs.html":{}}}],["random",{"_index":539,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["randomly",{"_index":681,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["rapidly",{"_index":1614,"title":{},"body":{"index.html":{}}}],["react",{"_index":1537,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWordResolver.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"injectables/RepositoryProxyService.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["ref",{"_index":1267,"title":{},"body":{"classes/User.html":{}}}],["reflect",{"_index":1478,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":776,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["regex",{"_index":651,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["reload",{"_index":1570,"title":{},"body":{"index.html":{}}}],["repository",{"_index":595,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SchoolService.html":{}}}],["repositoryproxyservice",{"_index":592,"title":{"injectables/RepositoryProxyService.html":{}},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["repositoryproxyservice:25",{"_index":596,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["repositoryproxyservice:29",{"_index":598,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["repositoryproxyservice:33",{"_index":601,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["repositoryproxyservice:37",{"_index":603,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["repositoryproxyservice:41",{"_index":597,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["req",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["require('bcryptjs",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":790,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities",{"_index":786,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities?.length",{"_index":788,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities[0]}::${requiredresource[0",{"_index":791,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities[0]}::`).replace(/::\\*$/g",{"_index":801,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource",{"_index":782,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource?.length",{"_index":789,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource[0",{"_index":802,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requires",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["res",{"_index":647,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/SimpleRepository.html":{}}}],["res.filter((x",{"_index":656,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["res.length",{"_index":669,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["res?.deletedat",{"_index":1195,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["res[math.floor(math.random",{"_index":668,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["reset",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolver",{"_index":231,"title":{},"body":{"classes/CoreResolver.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["resource",{"_index":570,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UsersResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resource('grouping",{"_index":574,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["resource('hangman",{"_index":687,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["resource('mirror",{"_index":759,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["resource('quiz",{"_index":902,"title":{},"body":{"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{}}}],["resource('quizzes",{"_index":1011,"title":{},"body":{"classes/QuizResolver.html":{}}}],["resource('roles",{"_index":1092,"title":{},"body":{"classes/RoleResolver.html":{}}}],["resource('schools",{"_index":1171,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["resource('users",{"_index":1345,"title":{},"body":{"classes/UsersResolver.html":{}}}],["resourcemodel",{"_index":508,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["resources",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["results",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/RepositoryProxyService.html":{},"classes/RoleResolver.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":1035,"title":{"classes/Role.html":{}},"body":{"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["role(@args",{"_index":1093,"title":{},"body":{"classes/RoleResolver.html":{}}}],["role(data",{"_index":1084,"title":{},"body":{"classes/RoleResolver.html":{}}}],["role.args",{"_index":1069,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["role.args.ts",{"_index":412,"title":{},"body":{"classes/GetRoleArgs.html":{},"coverage.html":{}}}],["role.entity",{"_index":1065,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["role.input",{"_index":1067,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["role.input.ts",{"_index":313,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/DeleteRoleInput.html":{},"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["role.input.ts:13",{"_index":315,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.input.ts:15",{"_index":1236,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:17",{"_index":318,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.input.ts:20",{"_index":1235,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:25",{"_index":1238,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:27",{"_index":1239,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:9",{"_index":316,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.name",{"_index":1060,"title":{},"body":{"modules/RoleModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["role.permissions",{"_index":798,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["role.resolver",{"_index":1057,"title":{},"body":{"modules/RoleModule.html":{}}}],["role.service",{"_index":1055,"title":{},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{}}}],["role/entities/role.entity",{"_index":1271,"title":{},"body":{"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{}}}],["role/role.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["roledocument",{"_index":1045,"title":{},"body":{"classes/Role.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":1064,"title":{},"body":{"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["rolemodule",{"_index":46,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["rolerepository",{"_index":1052,"title":{"injectables/RoleRepository.html":{}},"body":{"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["roleresolver",{"_index":1056,"title":{"classes/RoleResolver.html":{}},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{},"coverage.html":{}}}],["roles",{"_index":336,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RoleResolver.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["roles(@args",{"_index":1095,"title":{},"body":{"classes/RoleResolver.html":{}}}],["roles(data",{"_index":1087,"title":{},"body":{"classes/RoleResolver.html":{}}}],["roles.args",{"_index":1068,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["roles.args.ts",{"_index":414,"title":{},"body":{"classes/GetRolesArgs.html":{},"coverage.html":{}}}],["roleschema",{"_index":1046,"title":{},"body":{"classes/Role.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleservice",{"_index":1053,"title":{"injectables/RoleService.html":{}},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":1551,"title":{},"body":{"index.html":{}}}],["running",{"_index":1584,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":1557,"title":{},"body":{"index.html":{}}}],["save",{"_index":1202,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["saving",{"_index":1620,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":1574,"title":{},"body":{"index.html":{}}}],["schema",{"_index":475,"title":{},"body":{"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":476,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(groupingitem",{"_index":483,"title":{},"body":{"classes/GroupingItem.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(hangmanword",{"_index":619,"title":{},"body":{"classes/HangmanWord.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(mirrorword",{"_index":735,"title":{},"body":{"classes/MirrorWord.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(quiz",{"_index":822,"title":{},"body":{"classes/Quiz.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(quizanswer",{"_index":841,"title":{},"body":{"classes/QuizAnswer.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(quizquestion",{"_index":935,"title":{},"body":{"classes/QuizQuestion.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1047,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(school",{"_index":1121,"title":{},"body":{"classes/School.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1276,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schematypes",{"_index":1272,"title":{},"body":{"classes/User.html":{}}}],["schematypes.objectid",{"_index":1274,"title":{},"body":{"classes/User.html":{}}}],["school",{"_index":1107,"title":{"classes/School.html":{}},"body":{"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"coverage.html":{}}}],["school(@args",{"_index":1172,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["school(data",{"_index":1165,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["school.args",{"_index":1140,"title":{},"body":{"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{}}}],["school.args.ts",{"_index":417,"title":{},"body":{"classes/GetSchoolArgs.html":{},"coverage.html":{}}}],["school.entity",{"_index":1136,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["school.input",{"_index":1138,"title":{},"body":{"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{}}}],["school.input.ts",{"_index":322,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/UpdateSchoolInput.html":{},"coverage.html":{}}}],["school.input.ts:13",{"_index":328,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:16",{"_index":1243,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:17",{"_index":326,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["school.input.ts:19",{"_index":1241,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:21",{"_index":327,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["school.input.ts:22",{"_index":1242,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:26",{"_index":331,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["school.input.ts:28",{"_index":1245,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:30",{"_index":1246,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:9",{"_index":329,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["school.name",{"_index":1133,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.resolver",{"_index":1130,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.service",{"_index":1128,"title":{},"body":{"modules/SchoolModule.html":{},"classes/SchoolResolver.html":{}}}],["school/school.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["schooldocument",{"_index":1119,"title":{},"body":{"classes/School.html":{},"injectables/SchoolRepository.html":{},"miscellaneous/typealiases.html":{}}}],["schoolmodule",{"_index":47,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolrepository",{"_index":1125,"title":{"injectables/SchoolRepository.html":{}},"body":{"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["schoolresolver",{"_index":1129,"title":{"classes/SchoolResolver.html":{}},"body":{"modules/SchoolModule.html":{},"classes/SchoolResolver.html":{},"coverage.html":{}}}],["schools",{"_index":1157,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["schools(@args",{"_index":1173,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["schools(data",{"_index":1167,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["schools.args",{"_index":1139,"title":{},"body":{"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{}}}],["schools.args.ts",{"_index":419,"title":{},"body":{"classes/GetSchoolsArgs.html":{},"coverage.html":{}}}],["schools.args.ts:12",{"_index":423,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schools.args.ts:15",{"_index":422,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schools.args.ts:18",{"_index":420,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schools.args.ts:21",{"_index":421,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schools.args.ts:24",{"_index":424,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schoolschema",{"_index":1120,"title":{},"body":{"classes/School.html":{},"modules/SchoolModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolservice",{"_index":1126,"title":{"injectables/SchoolService.html":{}},"body":{"modules/SchoolModule.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["secret",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":718,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["see",{"_index":1599,"title":{},"body":{"index.html":{}}}],["serve",{"_index":1565,"title":{},"body":{"index.html":{}}}],["server",{"_index":1452,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["service",{"_index":549,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["setmetadata('abilities",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata('resources",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shareable",{"_index":1561,"title":{},"body":{"index.html":{}}}],["shared/gql",{"_index":249,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["shared/proxies/repository",{"_index":604,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["shared/proxies/simple.repository",{"_index":533,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{}}}],["showing",{"_index":1513,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":1147,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["simple.repository",{"_index":1028,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["simplerepository",{"_index":499,"title":{"injectables/SimpleRepository.html":{}},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["simplerepository:19",{"_index":521,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/RoleRepository.html":{}}}],["simplerepository:25",{"_index":861,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{}}}],["simplerepository:27",{"_index":510,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["simplerepository:31",{"_index":860,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["simplerepository:32",{"_index":514,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{}}}],["simplerepository:33",{"_index":984,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["simplerepository:37",{"_index":637,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["simplerepository:39",{"_index":859,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["simplerepository:42",{"_index":523,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{}}}],["simplerepository:50",{"_index":518,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{}}}],["smart",{"_index":1504,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sslcert",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sslkey",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stack",{"_index":1627,"title":{},"body":{"index.html":{}}}],["start",{"_index":1510,"title":{},"body":{"index.html":{}}}],["started",{"_index":1498,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":1578,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":709,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["super",{"_index":713,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(hangmanwordmodel",{"_index":643,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["super(mirrorwordmodel",{"_index":748,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["super(repository",{"_index":606,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/SchoolService.html":{}}}],["super(resourcemodel",{"_index":535,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["super(rolemodel",{"_index":1071,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["super(rolerepository",{"_index":1106,"title":{},"body":{"injectables/RoleService.html":{}}}],["super.create(data",{"_index":883,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"injectables/QuizRepository.html":{}}}],["super.findall(data",{"_index":646,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["support",{"_index":1641,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1520,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1642,"title":{},"body":{"modules.html":{}}}],["system",{"_index":1508,"title":{},"body":{"index.html":{}}}],["szakszolg",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateQuizInput.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["szakszolgnx",{"_index":1499,"title":{},"body":{"index.html":{}}}],["table",{"_index":1404,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1403,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":1609,"title":{},"body":{"index.html":{}}}],["tcreateinput",{"_index":513,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{}}}],["tdeleteinput",{"_index":517,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{}}}],["teams",{"_index":1618,"title":{},"body":{"index.html":{}}}],["test",{"_index":1532,"title":{},"body":{"index.html":{}}}],["test').required",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":1586,"title":{},"body":{"index.html":{}}}],["text",{"_index":880,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["tfindmanyargs",{"_index":520,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{}}}],["tfindoneargs",{"_index":600,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{}}}],["this.appservice.getdata",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login((req",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validate(email",{"_index":728,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.configservice.get('jwt_expires",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_secret",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.findone",{"_index":1192,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["this.jwtservice.sign(payload",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mirrorwordservice.create(data",{"_index":765,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.delete(data",{"_index":769,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.findall(data",{"_index":763,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.findone(data",{"_index":761,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.update(data",{"_index":767,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.model",{"_index":1200,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.estimateddocumentcount",{"_index":538,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["this.model.find",{"_index":667,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SimpleRepository.html":{}}}],["this.model.find(filters).exec",{"_index":1153,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["this.model.find(param",{"_index":653,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["this.model.findbyid(data.id",{"_index":1194,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findbyidandupdate(data.id",{"_index":1207,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findbyidandupdate(id",{"_index":1206,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findone().skip(random).limit(1",{"_index":541,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["this.quizservice.findone",{"_index":871,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["this.reflector.get('abilities",{"_index":787,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.reflector.getallandmerge('resources",{"_index":783,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.repository.create(data",{"_index":1030,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.delete(data",{"_index":1034,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.findall(data",{"_index":1031,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.findone(data",{"_index":1032,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.update(data",{"_index":1033,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.roleservice.create(data",{"_index":1098,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.delete(data",{"_index":1102,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.findall(data",{"_index":1096,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.findone(data",{"_index":1094,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.update(data",{"_index":1100,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.service.create(data",{"_index":584,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["this.service.delete(data",{"_index":590,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["this.service.findall(data",{"_index":581,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["this.service.findone(data",{"_index":577,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["this.service.update(data",{"_index":587,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["this.usermodel",{"_index":1300,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.find",{"_index":1293,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyid(data.id",{"_index":1301,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyid(data.id).populate('roles",{"_index":1294,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyidandupdate(data.id",{"_index":1315,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findone",{"_index":1296,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.userrepository.create(data",{"_index":1369,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.delete(data",{"_index":1371,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findall(data",{"_index":1364,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone(data",{"_index":1365,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.update(data",{"_index":1370,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.findone",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.usersservice.create(data",{"_index":1351,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.delete(data",{"_index":1355,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findall(data",{"_index":1349,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findone(data",{"_index":1347,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.update(data",{"_index":1353,"title":{},"body":{"classes/UsersResolver.html":{}}}],["throw",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/UserRepository.html":{}}}],["time",{"_index":1621,"title":{},"body":{"index.html":{}}}],["times",{"_index":1616,"title":{},"body":{"index.html":{}}}],["title",{"_index":292,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/Quiz.html":{},"classes/UpdateQuizInput.html":{}}}],["todo",{"_index":954,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["token",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens",{"_index":806,"title":{},"body":{"classes/Quiz.html":{}}}],["tools",{"_index":1464,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["translate/core",{"_index":1438,"title":{},"body":{"dependencies.html":{}}}],["translate/http",{"_index":1440,"title":{},"body":{"dependencies.html":{}}}],["trepository",{"_index":1021,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["true",{"_index":212,"title":{},"body":{"modules/CoreModule.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"miscellaneous/variables.html":{}}}],["true})@isarray",{"_index":379,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArrayArg.html":{}}}],["true})@isemail",{"_index":1251,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["true})@isoptional",{"_index":429,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["true})@isoptional()@isnotempty",{"_index":1234,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["true})@prop",{"_index":468,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["true})@prop({nullable",{"_index":832,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["true})@useguards(gqlauthguard",{"_index":895,"title":{},"body":{"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["true})@useguards(gqlauthguard)@permission('read",{"_index":1085,"title":{},"body":{"classes/RoleResolver.html":{}}}],["tslib",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["tupdateinput",{"_index":602,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{}}}],["tutorial",{"_index":1516,"title":{},"body":{"index.html":{}}}],["type",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1651,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":325,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateSchoolInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"index.html":{}}}],["types.objectid",{"_index":1201,"title":{},"body":{"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["types.objectid(roleid",{"_index":1313,"title":{},"body":{"injectables/UserRepository.html":{}}}],["typescript",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":726,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":463,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["understand",{"_index":1596,"title":{},"body":{"index.html":{}}}],["unified",{"_index":1635,"title":{},"body":{"index.html":{}}}],["unit",{"_index":1585,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["unused",{"_index":386,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{}}}],["up",{"_index":1615,"title":{},"body":{"index.html":{}}}],["update",{"_index":504,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["update(data",{"_index":522,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["updatedat",{"_index":461,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["updategroupingitem",{"_index":546,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["updategroupingitem(@args('updategroupingitemdata",{"_index":586,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["updategroupingitem(data",{"_index":563,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["updategroupingiteminput",{"_index":525,"title":{"classes/UpdateGroupingItemInput.html":{}},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["updatehangmanword",{"_index":674,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["updatehangmanword(@args('updatehangmanworddata",{"_index":691,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["updatehangmanword(data",{"_index":685,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["updatehangmanwordinput",{"_index":638,"title":{"classes/UpdateHangmanWordInput.html":{}},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/UpdateHangmanWordInput.html":{},"coverage.html":{}}}],["updatemirrorword",{"_index":752,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["updatemirrorword(@args('updatemirrorworddata",{"_index":766,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["updatemirrorword(data",{"_index":758,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["updatemirrorwordinput",{"_index":746,"title":{"classes/UpdateMirrorWordInput.html":{}},"body":{"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["updatequiz",{"_index":999,"title":{},"body":{"classes/QuizResolver.html":{}}}],["updatequiz(@args('updatequizdata",{"_index":1015,"title":{},"body":{"classes/QuizResolver.html":{}}}],["updatequiz(data",{"_index":1009,"title":{},"body":{"classes/QuizResolver.html":{}}}],["updatequizanswer",{"_index":888,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["updatequizanswer(@args('updatequizanswerdata",{"_index":907,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["updatequizanswer(data",{"_index":900,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["updatequizanswerinput",{"_index":863,"title":{"classes/UpdateQuizAnswerInput.html":{}},"body":{"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/UpdateQuizAnswerInput.html":{},"coverage.html":{}}}],["updatequizinput",{"_index":986,"title":{"classes/UpdateQuizInput.html":{}},"body":{"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"classes/UpdateQuizInput.html":{},"coverage.html":{}}}],["updatequizquestion",{"_index":963,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["updatequizquestion(@args('updatequizquestiondata",{"_index":978,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["updatequizquestion(data",{"_index":973,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["updatequizquestioninput",{"_index":950,"title":{"classes/UpdateQuizQuestionInput.html":{}},"body":{"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{}}}],["updaterole",{"_index":1075,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updaterole(@args('updateroledata",{"_index":1099,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updaterole(data",{"_index":1089,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updateroleinput",{"_index":1066,"title":{"classes/UpdateRoleInput.html":{}},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["updateschool",{"_index":1158,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["updateschool(@args('updateschooldata",{"_index":1175,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["updateschool(data",{"_index":1169,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["updateschoolinput",{"_index":1137,"title":{"classes/UpdateSchoolInput.html":{}},"body":{"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolInput.html":{},"coverage.html":{}}}],["updateuser",{"_index":1329,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuser(@args('updateuserdata",{"_index":1352,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuser(data",{"_index":1337,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuserinput",{"_index":1247,"title":{"classes/UpdateUserInput.html":{}},"body":{"classes/UpdateUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uptime",{"_index":226,"title":{},"body":{"classes/CoreResolver.html":{}}}],["uri",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["use",{"_index":665,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"index.html":{}}}],["usefactory",{"_index":220,"title":{},"body":{"modules/CoreModule.html":{}}}],["useguards",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["useguards(gqlauthguard",{"_index":579,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["useguards(localauthguard",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":149,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["user(@args",{"_index":1346,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user(data",{"_index":1339,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user._id",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.args",{"_index":1289,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.args.ts",{"_index":427,"title":{},"body":{"classes/GetUserArgs.html":{},"coverage.html":{}}}],["user.args.ts:13",{"_index":430,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["user.args.ts:9",{"_index":431,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["user.decorator.ts",{"_index":1381,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.entity",{"_index":1287,"title":{},"body":{"injectables/UserRepository.html":{}}}],["user.input",{"_index":1288,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.input.ts",{"_index":335,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["user.input.ts:10",{"_index":339,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:13",{"_index":1252,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:14",{"_index":343,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:16",{"_index":1259,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:18",{"_index":341,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:20",{"_index":1256,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:21",{"_index":340,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:23",{"_index":1253,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:24",{"_index":342,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:26",{"_index":1254,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:29",{"_index":1255,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:32",{"_index":1257,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:34",{"_index":1258,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.name",{"_index":1325,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{}}}],["user.roles",{"_index":1311,"title":{},"body":{"injectables/UserRepository.html":{}}}],["user.save",{"_index":1314,"title":{},"body":{"injectables/UserRepository.html":{}}}],["userdocument",{"_index":1273,"title":{},"body":{"classes/User.html":{},"injectables/UserRepository.html":{},"miscellaneous/typealiases.html":{}}}],["usermodel",{"_index":1281,"title":{},"body":{"injectables/UserRepository.html":{}}}],["username",{"_index":337,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["usernamefield",{"_index":727,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userpermissions",{"_index":796,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["userpermissions.includes(required",{"_index":803,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["userrepository",{"_index":1277,"title":{"injectables/UserRepository.html":{}},"body":{"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":1330,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users(@args",{"_index":1348,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users(data",{"_index":1341,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users.args",{"_index":1290,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["users.args.ts",{"_index":436,"title":{},"body":{"classes/GetUsersArgs.html":{},"coverage.html":{}}}],["users.resolver",{"_index":1322,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1320,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["users/users.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{}}}],["users/users.service",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userschema",{"_index":1275,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["usersmodule",{"_index":48,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersresolver",{"_index":1321,"title":{"classes/UsersResolver.html":{}},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["usersservice",{"_index":142,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":1502,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["validate",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":705,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationschema",{"_index":196,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":262,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"dependencies.html":{}}}],["value",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["variable",{"_index":1378,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1661,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["verify(token",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["via",{"_index":1588,"title":{},"body":{"index.html":{}}}],["video",{"_index":1512,"title":{},"body":{"index.html":{}}}],["visit",{"_index":1603,"title":{},"body":{"index.html":{}}}],["want",{"_index":659,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["web",{"_index":1539,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["well",{"_index":1530,"title":{},"body":{"index.html":{}}}],["word",{"_index":257,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWord.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{}}}],["word.args",{"_index":641,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["word.args.ts",{"_index":383,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"coverage.html":{}}}],["word.args.ts:10",{"_index":384,"title":{},"body":{"classes/GetHangmanWordArgs.html":{}}}],["word.entity",{"_index":630,"title":{},"body":{"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{}}}],["word.entity.ts",{"_index":609,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["word.entity.ts:13",{"_index":611,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:17",{"_index":616,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:21",{"_index":612,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:25",{"_index":613,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:29",{"_index":615,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:33",{"_index":614,"title":{},"body":{"classes/HangmanWord.html":{}}}],["word.input",{"_index":639,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["word.input.ts",{"_index":255,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["word.input.ts:13",{"_index":259,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/UpdateHangmanWordInput.html":{}}}],["word.input.ts:14",{"_index":1217,"title":{},"body":{"classes/UpdateMirrorWordInput.html":{}}}],["word.input.ts:16",{"_index":1215,"title":{},"body":{"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{}}}],["word.input.ts:18",{"_index":1216,"title":{},"body":{"classes/UpdateHangmanWordInput.html":{}}}],["word.input.ts:9",{"_index":260,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{}}}],["word.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["word.module.ts",{"_index":625,"title":{},"body":{"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{}}}],["word.repository",{"_index":631,"title":{},"body":{"modules/HangmanWordModule.html":{},"injectables/HangmanWordService.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordService.html":{}}}],["word.repository.ts",{"_index":633,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"coverage.html":{}}}],["word.repository.ts:22",{"_index":635,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["word.resolver",{"_index":628,"title":{},"body":{"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{}}}],["word.resolver.ts",{"_index":670,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"coverage.html":{}}}],["word.resolver.ts:17",{"_index":675,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:21",{"_index":682,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:28",{"_index":684,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:35",{"_index":677,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:42",{"_index":686,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:49",{"_index":679,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.service",{"_index":626,"title":{},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{}}}],["word.service.ts",{"_index":693,"title":{},"body":{"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["word.service.ts:18",{"_index":694,"title":{},"body":{"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{}}}],["word/dto/args/get",{"_index":382,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"coverage.html":{}}}],["word/dto/inputs/create",{"_index":254,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"coverage.html":{}}}],["word/dto/inputs/delete",{"_index":353,"title":{},"body":{"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"coverage.html":{}}}],["word/dto/inputs/update",{"_index":1214,"title":{},"body":{"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["word/entities/hangman",{"_index":608,"title":{},"body":{"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["word/entities/mirror",{"_index":731,"title":{},"body":{"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["word/hangman",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["word/mirror",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["words",{"_index":663,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["words.args",{"_index":640,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["words.args.ts",{"_index":388,"title":{},"body":{"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"coverage.html":{}}}],["words.args.ts:12",{"_index":389,"title":{},"body":{"classes/GetHangmanWordsArgs.html":{}}}],["workspace",{"_index":1519,"title":{},"body":{"index.html":{}}}],["x509&ssl=true&retrywrites=true&w=majority",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yarn",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["zone.js",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/core/app.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Message\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\nimport { Message } from '@szakszolg-nx/api-interfaces'\n\nimport { AppService } from './app.service'\n\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get('hello')\n    getData(): Message {\n        return this.appService.getData()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nGroupingItemModule\n\nGroupingItemModule\n\nAppModule -->\n\nGroupingItemModule->AppModule\n\n\n\n\n\nHangmanWordModule\n\nHangmanWordModule\n\nAppModule -->\n\nHangmanWordModule->AppModule\n\n\n\n\n\nMirrorWordModule\n\nMirrorWordModule\n\nAppModule -->\n\nMirrorWordModule->AppModule\n\n\n\n\n\nQuizAnswerModule\n\nQuizAnswerModule\n\nAppModule -->\n\nQuizAnswerModule->AppModule\n\n\n\n\n\nQuizModule\n\nQuizModule\n\nAppModule -->\n\nQuizModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            GroupingItemModule\n                        \n                        \n                            HangmanWordModule\n                        \n                        \n                            MirrorWordModule\n                        \n                        \n                            QuizAnswerModule\n                        \n                        \n                            QuizModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { AppController } from './core/app.controller'\nimport { AppService } from './core/app.service'\nimport { CoreModule } from './core/core.module'\nimport { UsersModule } from './users/users.module'\nimport { AuthModule } from './auth/auth.module'\nimport { RoleModule } from './role/role.module'\nimport { MirrorWordModule } from './mirror-word/mirror-word.module'\nimport { HangmanWordModule } from './hangman-word/hangman-word.module'\nimport { GroupingItemModule } from './grouping-item/grouping-item.module'\nimport { SchoolModule } from './school/school.module'\nimport { QuizModule } from './quiz/quiz.module'\nimport { QuizAnswerModule } from './quiz-answer/quiz-answer.module'\n\n@Module({\n    imports: [\n        CoreModule,\n        UsersModule,\n        AuthModule,\n        RoleModule,\n        MirrorWordModule,\n        HangmanWordModule,\n        GroupingItemModule,\n        SchoolModule,\n        QuizModule,\n        QuizAnswerModule,\n    ],\n    controllers: [AppController],\n    providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/core/app.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Message\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { Message } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class AppService {\n    getData(): Message {\n        return { message: 'Welcome to api!' }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Req, UseGuards } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { LocalAuthGuard } from './guards/local-auth.guard'\nimport { Request } from 'express'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService) {}\n\n    @UseGuards(LocalAuthGuard)\n    @Post('login')\n    async login(@Req() req: Request) {\n        return await this.authService.login((req as any).user as IUser)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { UsersModule } from '../users/users.module'\nimport { JwtModule } from '@nestjs/jwt'\nimport { ConfigModule } from '@nestjs/config'\nimport { PassportModule } from '@nestjs/passport'\nimport { JwtStrategy } from './strategies/jwt.strategy'\nimport { LocalStrategy } from './strategies/local.strategy'\nimport { AuthController } from './auth.controller'\n\n@Module({\n    imports: [\n        ConfigModule,\n        forwardRef(() => UsersModule),\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        JwtModule.register({\n            secret: process.env.JWT_SECRET,\n            signOptions: {\n                expiresIn: process.env.JWT_EXPIRES || '7d',\n            },\n        }),\n    ],\n    controllers: [AuthController],\n    providers: [AuthService, JwtStrategy, LocalStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Async\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verify\n                        \n                    \n                \n            \n            \n                \n                    \n                    verify(token: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\nimport { UsersService } from '../users/users.service'\nimport { JwtService } from '@nestjs/jwt'\nimport { ConfigService } from '@nestjs/config'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        @Inject(forwardRef(() => UsersService))\n        private readonly userService: UsersService,\n        private readonly jwtService: JwtService,\n        private readonly configService: ConfigService,\n    ) {}\n\n    async validate(email: string, password: string): Promise {\n        const user = await this.userService.findOne({ email })\n        return user && (await bcrypt.compare(password, user.password)) ? user : null\n    }\n\n    async login(user: IUser) {\n        const payload = { email: user.email, sub: user._id }\n        return {\n            access_token: this.jwtService.sign(payload, {\n                secret: this.configService.get('JWT_SECRET'),\n                expiresIn: this.configService.get('JWT_EXPIRES') || '7d',\n            }),\n        }\n    }\n\n    async verify(token: string) {\n        const decoded = this.jwtService.verify(token, { secret: this.configService.get('JWT_SECRET')! })\n        const user = await this.userService.findOne({ email: decoded.email })\n        if (!user) throw new Error('User not found')\n        return user\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { configuration } from './config/configuration'\nimport { validationSchema } from './config/validation'\nimport { GraphQLModule } from '@nestjs/graphql'\nimport { CoreResolver } from './core.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { mongooseConfig } from './config/mongo-config.factory'\nimport { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo'\n\n@Module({\n    imports: [\n        ConfigModule.forRoot({\n            isGlobal: true,\n            load: [configuration],\n            validationSchema,\n        }),\n        GraphQLModule.forRoot({\n            driver: ApolloDriver,\n            autoSchemaFile: true,\n            playground: true,\n        }),\n        MongooseModule.forRootAsync({\n            imports: mongooseConfig.imports,\n            useFactory: mongooseConfig.mongooseConfigFactory,\n            inject: mongooseConfig.providers,\n        }),\n    ],\n    controllers: [],\n    providers: [CoreResolver],\n    exports: [],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoreResolver.html":{"url":"classes/CoreResolver.html","title":"class - CoreResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoreResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/core.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                uptime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        uptime\n                        \n                    \n                \n            \n            \n                \nuptime()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/core/core.resolver.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Float, Query, Resolver } from '@nestjs/graphql'\n\n@Resolver()\nexport class CoreResolver {\n    @Query(() => Float)\n    uptime() {\n        return process.uptime()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGroupingItemInput.html":{"url":"classes/CreateGroupingItemInput.html","title":"class - CreateGroupingItemInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGroupingItemInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                correct\n                            \n                            \n                                groups\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateGroupingItemInput extends GqlInput {\n    @Field()\n    item: string\n\n    @Field(() => [String])\n    groups: string[]\n\n    @Field()\n    correct: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateHangmanWordInput.html":{"url":"classes/CreateHangmanWordInput.html","title":"class - CreateHangmanWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateHangmanWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class CreateHangmanWordInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    word: string\n\n    @Field()\n    @IsNotEmpty()\n    category: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMirrorWordInput.html":{"url":"classes/CreateMirrorWordInput.html","title":"class - CreateMirrorWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMirrorWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/inputs/create-mirror-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/dto/inputs/create-mirror-word.input.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateMirrorWordInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    public word: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuizAnswerInput.html":{"url":"classes/CreateQuizAnswerInput.html","title":"class - CreateQuizAnswerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuizAnswerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer\n                            \n                            \n                                    Optional\n                                answeredAt\n                            \n                            \n                                    Optional\n                                isCorrect\n                            \n                            \n                                om\n                            \n                            \n                                questionId\n                            \n                            \n                                quizId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answeredAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isCorrect\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, Int } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateQuizAnswerInput extends GqlInput {\n    @Field()\n    quizId: string\n\n    @Field(() => Int)\n    questionId: number\n\n    @Field()\n    answer: string\n\n    @Field()\n    om: string\n\n    @Field()\n    answeredAt?: Date\n\n    isCorrect?: boolean | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuizInput.html":{"url":"classes/CreateQuizInput.html","title":"class - CreateQuizInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuizInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                description\n                            \n                            \n                                questions\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IQuizQuestion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\nimport { IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { CreateQuizQuestionInput } from '../../../quiz-question/dto/inputs/create-quiz-question.input'\n\n@InputType()\nexport class CreateQuizInput extends GqlInput {\n    @Field()\n    title: string\n\n    @Field()\n    description: string\n\n    @Field(() => [String])\n    categories: string[]\n\n    @Field(() => [CreateQuizQuestionInput])\n    questions: IQuizQuestion[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuizQuestionInput.html":{"url":"classes/CreateQuizQuestionInput.html","title":"class - CreateQuizQuestionInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuizQuestionInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                answers\n                            \n                            \n                                    Optional\n                                correctAnswers\n                            \n                            \n                                question\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        correctAnswers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateQuizQuestionInput extends GqlInput {\n    @Field()\n    question: string\n\n    @Field()\n    type: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    answers?: string[]\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    correctAnswers?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleInput.html":{"url":"classes/CreateRoleInput.html","title":"class - CreateRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/create-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateRoleInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    name: string\n\n    @Field()\n    @IsNotEmpty()\n    description: string\n\n    @Field(() => [String])\n    @IsArray()\n    permissions: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolInput.html":{"url":"classes/CreateSchoolInput.html","title":"class - CreateSchoolInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/inputs/create-school.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                county\n                            \n                            \n                                name\n                            \n                            \n                                om\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        county\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsArray()@ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\nimport { ArrayNotEmpty, IsArray, IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class CreateSchoolInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    om: string\n\n    @Field()\n    @IsNotEmpty()\n    name: string\n\n    @Field()\n    @IsNotEmpty()\n    address: string\n\n    @Field()\n    @IsNotEmpty()\n    county: string\n\n    @Field(() => [String])\n    @IsArray()\n    @ArrayNotEmpty()\n    types: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/create-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsEmail, IsNotEmpty } from 'class-validator'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateUserInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @Field()\n    @IsNotEmpty()\n    username: string\n\n    @Field()\n    @IsNotEmpty()\n    password: string\n\n    @Field()\n    om?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    roles?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteGroupingItemInput.html":{"url":"classes/DeleteGroupingItemInput.html","title":"class - DeleteGroupingItemInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteGroupingItemInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/inputs/delete-grouping-item.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteGroupingItemInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteHangmanWordInput.html":{"url":"classes/DeleteHangmanWordInput.html","title":"class - DeleteHangmanWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteHangmanWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/inputs/delete-hangman-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteHangmanWordInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMirrorWordInput.html":{"url":"classes/DeleteMirrorWordInput.html","title":"class - DeleteMirrorWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMirrorWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/inputs/delete-mirror-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteMirrorWordInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteQuizAnswerInput.html":{"url":"classes/DeleteQuizAnswerInput.html","title":"class - DeleteQuizAnswerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteQuizAnswerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/dto/inputs/delete-quiz-answer.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteQuizAnswerInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteQuizInput.html":{"url":"classes/DeleteQuizInput.html","title":"class - DeleteQuizInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteQuizInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/inputs/delete-quiz.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteQuizInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteQuizQuestionInput.html":{"url":"classes/DeleteQuizQuestionInput.html","title":"class - DeleteQuizQuestionInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteQuizQuestionInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/inputs/delete-quiz-question.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteQuizQuestionInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteRoleInput.html":{"url":"classes/DeleteRoleInput.html","title":"class - DeleteRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/delete-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteRoleInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteSchoolInput.html":{"url":"classes/DeleteSchoolInput.html","title":"class - DeleteSchoolInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteSchoolInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/inputs/delete-school.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteSchoolInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserInput.html":{"url":"classes/DeleteUserInput.html","title":"class - DeleteUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/delete-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteUserInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetGroupingItemArgs.html":{"url":"classes/GetGroupingItemArgs.html","title":"class - GetGroupingItemArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetGroupingItemArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/args/get-grouping-item.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\n\n@ArgsType()\nexport class GetGroupingItemArgs extends IdArg {\n    @Field({ nullable: true })\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetGroupingItemsArgs.html":{"url":"classes/GetGroupingItemsArgs.html","title":"class - GetGroupingItemsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetGroupingItemsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/args/get-grouping-items.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetGroupingItemsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetHangmanWordArgs.html":{"url":"classes/GetHangmanWordArgs.html","title":"class - GetHangmanWordArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetHangmanWordArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/args/get-hangman-word.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/args/get-hangman-word.args.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true, deprecationReason: 'This field is unused'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\n\n@ArgsType()\nexport class GetHangmanWordArgs extends IdArg {\n    @Field({ nullable: true, deprecationReason: 'This field is unused' })\n    id: string\n\n    @Field({ nullable: true })\n    category?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetHangmanWordsArgs.html":{"url":"classes/GetHangmanWordsArgs.html","title":"class - GetHangmanWordsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetHangmanWordsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/args/get-hangman-words.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/args/get-hangman-words.args.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetHangmanWordsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n\n    @Field(() => String, { nullable: true })\n    category?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetMirrorWordArgs.html":{"url":"classes/GetMirrorWordArgs.html","title":"class - GetMirrorWordArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetMirrorWordArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/args/get-mirror-word.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true, deprecationReason: 'This field is unused.'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\n\n@ArgsType()\nexport class GetMirrorWordArgs extends IdArg {\n    @Field({ nullable: true, deprecationReason: 'This field is unused.' })\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetMirrorWordsArgs.html":{"url":"classes/GetMirrorWordsArgs.html","title":"class - GetMirrorWordsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetMirrorWordsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/args/get-mirror-words.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetMirrorWordsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizAnswerArgs.html":{"url":"classes/GetQuizAnswerArgs.html","title":"class - GetQuizAnswerArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizAnswerArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/dto/args/get-quiz-answer.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizAnswerArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizAnswersArgs.html":{"url":"classes/GetQuizAnswersArgs.html","title":"class - GetQuizAnswersArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizAnswersArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/dto/args/get-quiz-answers.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                            \n                                    Optional\n                                quizId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        quizId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/args/get-quiz-answers.args.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizAnswersArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n\n    @Field({ nullable: true })\n    quizId?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizArgs.html":{"url":"classes/GetQuizArgs.html","title":"class - GetQuizArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/args/get-quiz.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizQuestionArgs.html":{"url":"classes/GetQuizQuestionArgs.html","title":"class - GetQuizQuestionArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizQuestionArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/args/get-quiz-question.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizQuestionArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizQuestionsArgs.html":{"url":"classes/GetQuizQuestionsArgs.html","title":"class - GetQuizQuestionsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizQuestionsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/args/get-quiz-questions.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizQuestionsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizzesArgs.html":{"url":"classes/GetQuizzesArgs.html","title":"class - GetQuizzesArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizzesArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/args/get-quizzes.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/args/get-quizzes.args.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizzesArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n\n    @Field({ nullable: true })\n    category?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRoleArgs.html":{"url":"classes/GetRoleArgs.html","title":"class - GetRoleArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRoleArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/args/get-role.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetRoleArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRolesArgs.html":{"url":"classes/GetRolesArgs.html","title":"class - GetRolesArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRolesArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/args/get-roles.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetRolesArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSchoolArgs.html":{"url":"classes/GetSchoolArgs.html","title":"class - GetSchoolArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSchoolArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/args/get-school.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetSchoolArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSchoolsArgs.html":{"url":"classes/GetSchoolsArgs.html","title":"class - GetSchoolsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSchoolsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/args/get-schools.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                county\n                            \n                            \n                                    Optional\n                                ids\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        county\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetSchoolsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field({ nullable: true })\n    name?: string\n\n    @Field({ nullable: true })\n    address?: string\n\n    @Field({ nullable: true })\n    county?: string\n\n    @Field({ nullable: true })\n    type: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserArgs.html":{"url":"classes/GetUserArgs.html","title":"class - GetUserArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/args/get-user.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/args/get-user.args.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/args/get-user.args.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field } from '@nestjs/graphql'\nimport { IsOptional } from 'class-validator'\nimport { GqlArg } from '../../../../shared/gql-args/gql-arg.abstract'\n\n@ArgsType()\nexport class GetUserArgs extends GqlArg {\n    @Field({ nullable: true })\n    @IsOptional()\n    id?: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    email?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersArgs.html":{"url":"classes/GetUsersArgs.html","title":"class - GetUsersArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/args/get-users.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetUsersArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlArg.html":{"url":"classes/GqlArg.html","title":"class - GqlArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/gql-arg.abstract.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType } from '@nestjs/graphql'\n\n@ArgsType()\nexport abstract class GqlArg {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlAuthGuard.html":{"url":"classes/GqlAuthGuard.html","title":"class - GqlAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/gql-auth.guard.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRequest\n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/guards/gql-auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\nimport {ExecutionContext} from \"@nestjs/common\";\nimport {GqlExecutionContext} from \"@nestjs/graphql\";\n\nexport class GqlAuthGuard extends AuthGuard('jwt') {\n    getRequest(context: ExecutionContext) {\n        return GqlExecutionContext.create(context).getContext().req\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlInput.html":{"url":"classes/GqlInput.html","title":"class - GqlInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-inputs/gql-input.abstract.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class GqlInput {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupingItem.html":{"url":"classes/GroupingItem.html","title":"class - GroupingItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupingItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGroupingItem\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                correct\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                groups\n                            \n                            \n                                item\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IGroupingItem } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type GroupingItemDocument = IGroupingItem & Document\n\n@ObjectType()\n@Schema()\nexport class GroupingItem implements IGroupingItem {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    item: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    groups: string[]\n\n    @Field()\n    @Prop()\n    correct: string\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const GroupingItemSchema = SchemaFactory.createForClass(GroupingItem)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupingItemModule.html":{"url":"modules/GroupingItemModule.html","title":"module - GroupingItemModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupingItemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GroupingItemModule\n\n\n\ncluster_GroupingItemModule_providers\n\n\n\ncluster_GroupingItemModule_exports\n\n\n\n\nGroupingItemRepository \n\nGroupingItemRepository \n\n\n\nGroupingItemService \n\nGroupingItemService \n\n\n\nGroupingItemModule\n\nGroupingItemModule\n\nGroupingItemRepository  -->\n\nGroupingItemModule->GroupingItemRepository \n\n\n\nGroupingItemService  -->\n\nGroupingItemModule->GroupingItemService \n\n\n\n\n\nGroupingItemRepository\n\nGroupingItemRepository\n\nGroupingItemModule -->\n\nGroupingItemRepository->GroupingItemModule\n\n\n\n\n\nGroupingItemService\n\nGroupingItemService\n\nGroupingItemModule -->\n\nGroupingItemService->GroupingItemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/grouping-item.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GroupingItemRepository\n                        \n                        \n                            GroupingItemService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GroupingItemRepository\n                        \n                        \n                            GroupingItemService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { GroupingItemService } from './grouping-item.service'\nimport { GroupingItemResolver } from './grouping-item.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { GroupingItem, GroupingItemSchema } from './entities/grouping-item.entity'\nimport { GroupingItemRepository } from './entities/grouping-item.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: GroupingItem.name,\n                schema: GroupingItemSchema,\n            },\n        ]),\n    ],\n    providers: [GroupingItemResolver, GroupingItemService, GroupingItemRepository],\n    exports: [GroupingItemService, GroupingItemRepository],\n})\nexport class GroupingItemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupingItemRepository.html":{"url":"injectables/GroupingItemRepository.html","title":"injectable - GroupingItemRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupingItemRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/entities/grouping-item.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(__data: GetGroupingItemArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    __data\n                                    \n                                                GetGroupingItemArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { GroupingItem, GroupingItemDocument } from './grouping-item.entity'\nimport { Model } from 'mongoose'\nimport { UpdateGroupingItemInput } from '../dto/inputs/update-grouping-item.input'\nimport { CreateGroupingItemInput } from '../dto/inputs/create-grouping-item.input'\nimport { GetGroupingItemsArgs } from '../dto/args/get-grouping-items.args'\nimport { GetGroupingItemArgs } from '../dto/args/get-grouping-item.args'\nimport { IGroupingItem } from '@szakszolg-nx/api-interfaces'\nimport { DeleteGroupingItemInput } from '../dto/inputs/delete-grouping-item.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class GroupingItemRepository extends SimpleRepository {\n    constructor(@InjectModel(GroupingItem.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    override async findOne(__data: GetGroupingItemArgs): Promise {\n        const count = await this.model.estimatedDocumentCount()\n        const random = Math.floor(Math.random() * count)\n        return this.model.findOne().skip(random).limit(1)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupingItemResolver.html":{"url":"classes/GroupingItemResolver.html","title":"class - GroupingItemResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupingItemResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/grouping-item.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGroupingItem\n                            \n                            \n                                deleteGroupingItem\n                            \n                            \n                                groupingItem\n                            \n                            \n                                groupingItems\n                            \n                            \n                                updateGroupingItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: GroupingItemService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        GroupingItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createGroupingItem\n                        \n                    \n                \n            \n            \n                \ncreateGroupingItem(data: CreateGroupingItemInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateGroupingItemInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroupingItem\n                        \n                    \n                \n            \n            \n                \ndeleteGroupingItem(data: DeleteGroupingItemInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteGroupingItemInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupingItem\n                        \n                    \n                \n            \n            \n                \ngroupingItem(data: GetGroupingItemArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetGroupingItemArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupingItems\n                        \n                    \n                \n            \n            \n                \ngroupingItems(data: GetGroupingItemsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetGroupingItemsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateGroupingItem\n                        \n                    \n                \n            \n            \n                \nupdateGroupingItem(data: UpdateGroupingItemInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateGroupingItemInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { GroupingItemService } from './grouping-item.service'\nimport { GroupingItem } from './entities/grouping-item.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetGroupingItemArgs } from './dto/args/get-grouping-item.args'\nimport { IGroupingItem } from '@szakszolg-nx/api-interfaces'\nimport { GetGroupingItemsArgs } from './dto/args/get-grouping-items.args'\nimport { CreateGroupingItemInput } from './dto/inputs/create-grouping-item.input'\nimport { UpdateGroupingItemInput } from './dto/inputs/update-grouping-item.input'\nimport { DeleteGroupingItemInput } from './dto/inputs/delete-grouping-item.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => GroupingItem)\n@Resource('grouping-items')\nexport class GroupingItemResolver {\n    constructor(private readonly service: GroupingItemService) {}\n\n    @Query(() => GroupingItem, { nullable: true })\n    groupingItem(@Args({ nullable: true }) data: GetGroupingItemArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [GroupingItem], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    groupingItems(@Args({ nullable: true }) data: GetGroupingItemsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => GroupingItem)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createGroupingItem(@Args('createGroupingItemData') data: CreateGroupingItemInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => GroupingItem)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateGroupingItem(@Args('updateGroupingItemData') data: UpdateGroupingItemInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => GroupingItem)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteGroupingItem(@Args('deleteGroupingItemData') data: DeleteGroupingItemInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupingItemService.html":{"url":"injectables/GroupingItemService.html","title":"injectable - GroupingItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupingItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/grouping-item.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: GroupingItemRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/grouping-item/grouping-item.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        GroupingItemRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateGroupingItemInput } from './dto/inputs/create-grouping-item.input'\nimport { UpdateGroupingItemInput } from './dto/inputs/update-grouping-item.input'\nimport { GroupingItemRepository } from './entities/grouping-item.repository'\nimport { GetGroupingItemsArgs } from './dto/args/get-grouping-items.args'\nimport { GetGroupingItemArgs } from './dto/args/get-grouping-item.args'\nimport { DeleteGroupingItemInput } from './dto/inputs/delete-grouping-item.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class GroupingItemService extends RepositoryProxyService {\n    constructor(repository: GroupingItemRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HangmanWord.html":{"url":"classes/HangmanWord.html","title":"class - HangmanWord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HangmanWord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IHangmanWord\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                category\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IHangmanWord } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type HangmanWordDocument = IHangmanWord & Document\n\n@ObjectType()\n@Schema()\nexport class HangmanWord implements IHangmanWord {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    word: string\n\n    @Field()\n    @Prop()\n    category: string\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const HangmanWordSchema = SchemaFactory.createForClass(HangmanWord)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HangmanWordModule.html":{"url":"modules/HangmanWordModule.html","title":"module - HangmanWordModule","body":"\n                   \n\n\n\n\n    Modules\n    HangmanWordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HangmanWordModule\n\n\n\ncluster_HangmanWordModule_providers\n\n\n\ncluster_HangmanWordModule_exports\n\n\n\n\nHangmanWordRepository \n\nHangmanWordRepository \n\n\n\nHangmanWordService \n\nHangmanWordService \n\n\n\nHangmanWordModule\n\nHangmanWordModule\n\nHangmanWordRepository  -->\n\nHangmanWordModule->HangmanWordRepository \n\n\n\nHangmanWordService  -->\n\nHangmanWordModule->HangmanWordService \n\n\n\n\n\nHangmanWordRepository\n\nHangmanWordRepository\n\nHangmanWordModule -->\n\nHangmanWordRepository->HangmanWordModule\n\n\n\n\n\nHangmanWordService\n\nHangmanWordService\n\nHangmanWordModule -->\n\nHangmanWordService->HangmanWordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/hangman-word.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HangmanWordRepository\n                        \n                        \n                            HangmanWordService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HangmanWordRepository\n                        \n                        \n                            HangmanWordService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { HangmanWordService } from './hangman-word.service'\nimport { HangmanWordResolver } from './hangman-word.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { HangmanWord, HangmanWordSchema } from './entities/hangman-word.entity'\nimport { HangmanWordRepository } from './entities/hangman-word.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: HangmanWord.name,\n                schema: HangmanWordSchema,\n            },\n        ]),\n    ],\n    providers: [HangmanWordResolver, HangmanWordService, HangmanWordRepository],\n    exports: [HangmanWordService, HangmanWordRepository],\n})\nexport class HangmanWordModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HangmanWordRepository.html":{"url":"injectables/HangmanWordRepository.html","title":"injectable - HangmanWordRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HangmanWordRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/entities/hangman-word.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(hangmanWordModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hangmanWordModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetHangmanWordsArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetHangmanWordsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetHangmanWordArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetHangmanWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { HangmanWord, HangmanWordDocument } from './hangman-word.entity'\nimport { Model } from 'mongoose'\nimport { UpdateHangmanWordInput } from '../dto/inputs/update-hangman-word.input'\nimport { CreateHangmanWordInput } from '../dto/inputs/create-hangman-word.input'\nimport { GetHangmanWordsArgs } from '../dto/args/get-hangman-words.args'\nimport { GetHangmanWordArgs } from '../dto/args/get-hangman-word.args'\nimport { IHangmanWord } from '@szakszolg-nx/api-interfaces'\nimport { DeleteHangmanWordInput } from '../dto/inputs/delete-hangman-word.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class HangmanWordRepository extends SimpleRepository {\n    constructor(@InjectModel(HangmanWord.name) hangmanWordModel: Model) {\n        super(hangmanWordModel)\n    }\n\n    override async findAll(data: GetHangmanWordsArgs | null): Promise {\n        if (!data?.category && !data?.ids) return super.findAll(data)\n        let res: any[]\n        const param = {}\n        if (data.category) param['category'] = { $regex: data.category, $options: 'i' }\n        res = await this.model.find(param)\n        if (data.ids?.length > 0) res = res.filter((x) => data.ids.includes(x._id.toString()))\n        return res\n    }\n\n    override async findOne(data: GetHangmanWordArgs): Promise {\n        if (data?.category) {\n            // Note: If we want more than a few hundred words per category, we should use findOne().skip()\n            const res = await this.model.find({ category: { $regex: data.category, $options: 'i' } })\n            return res[Math.floor(Math.random() * res.length)]\n        }\n\n        const count = await this.model.estimatedDocumentCount()\n        const random = Math.floor(Math.random() * count)\n        return this.model.findOne().skip(random).limit(1)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HangmanWordResolver.html":{"url":"classes/HangmanWordResolver.html","title":"class - HangmanWordResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HangmanWordResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/hangman-word.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createHangmanWord\n                            \n                            \n                                deleteHangmanWord\n                            \n                            \n                                hangmanWord\n                            \n                            \n                                hangmanWords\n                            \n                            \n                                updateHangmanWord\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: HangmanWordService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        HangmanWordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createHangmanWord\n                        \n                    \n                \n            \n            \n                \ncreateHangmanWord(data: CreateHangmanWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateHangmanWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteHangmanWord\n                        \n                    \n                \n            \n            \n                \ndeleteHangmanWord(data: DeleteHangmanWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteHangmanWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hangmanWord\n                        \n                    \n                \n            \n            \n                \nhangmanWord(data: GetHangmanWordArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true, description: 'Get a hangman word randomly'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetHangmanWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hangmanWords\n                        \n                    \n                \n            \n            \n                \nhangmanWords(data: GetHangmanWordsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetHangmanWordsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateHangmanWord\n                        \n                    \n                \n            \n            \n                \nupdateHangmanWord(data: UpdateHangmanWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateHangmanWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { HangmanWordService } from './hangman-word.service'\nimport { HangmanWord } from './entities/hangman-word.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetHangmanWordArgs } from './dto/args/get-hangman-word.args'\nimport { IHangmanWord } from '@szakszolg-nx/api-interfaces'\nimport { GetHangmanWordsArgs } from './dto/args/get-hangman-words.args'\nimport { CreateHangmanWordInput } from './dto/inputs/create-hangman-word.input'\nimport { UpdateHangmanWordInput } from './dto/inputs/update-hangman-word.input'\nimport { DeleteHangmanWordInput } from './dto/inputs/delete-hangman-word.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => HangmanWord)\n@Resource('hangman-words')\nexport class HangmanWordResolver {\n    constructor(private readonly service: HangmanWordService) {}\n\n    @Query(() => HangmanWord, { nullable: true, description: 'Get a hangman word randomly' })\n    hangmanWord(@Args({ nullable: true }) data: GetHangmanWordArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [HangmanWord], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    hangmanWords(@Args({ nullable: true }) data: GetHangmanWordsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => HangmanWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createHangmanWord(@Args('createHangmanWordData') data: CreateHangmanWordInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => HangmanWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateHangmanWord(@Args('updateHangmanWordData') data: UpdateHangmanWordInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => HangmanWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteHangmanWord(@Args('deleteHangmanWordData') data: DeleteHangmanWordInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HangmanWordService.html":{"url":"injectables/HangmanWordService.html","title":"injectable - HangmanWordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HangmanWordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/hangman-word.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: HangmanWordRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/hangman-word/hangman-word.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        HangmanWordRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateHangmanWordInput } from './dto/inputs/create-hangman-word.input'\nimport { UpdateHangmanWordInput } from './dto/inputs/update-hangman-word.input'\nimport { HangmanWordRepository } from './entities/hangman-word.repository'\nimport { GetHangmanWordsArgs } from './dto/args/get-hangman-words.args'\nimport { GetHangmanWordArgs } from './dto/args/get-hangman-word.args'\nimport { DeleteHangmanWordInput } from './dto/inputs/delete-hangman-word.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class HangmanWordService extends RepositoryProxyService {\n    constructor(repository: HangmanWordRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdArg.html":{"url":"classes/IdArg.html","title":"class - IdArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/id.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-args/id.args.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlArg } from './gql-arg.abstract'\n\nexport class IdArrayArg extends GqlArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\nexport class IdArg extends GqlArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdArrayArg.html":{"url":"classes/IdArrayArg.html","title":"class - IdArrayArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdArrayArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/id.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-args/id.args.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlArg } from './gql-arg.abstract'\n\nexport class IdArrayArg extends GqlArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\nexport class IdArg extends GqlArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdInput.html":{"url":"classes/IdInput.html","title":"class - IdInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-inputs/id.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-inputs/id.input.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GqlInput } from './gql-input.abstract'\n\nexport class IdInput extends GqlInput {\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtAuthGuard.html":{"url":"classes/JwtAuthGuard.html","title":"class - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\n\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/strategies/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/strategies/jwt.strategy.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { forwardRef, Inject, Injectable } from '@nestjs/common'\nimport { UsersService } from '../../users/users.service'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        @Inject(forwardRef(() => UsersService))\n        private readonly userService: UsersService,\n    ) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: process.env.JWT_SECRET,\n        })\n    }\n\n    async validate(payload: { email: string; sub: string }) {\n        return this.userService.findOne({ email: payload.email })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalAuthGuard.html":{"url":"classes/LocalAuthGuard.html","title":"class - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\n\nexport class LocalAuthGuard extends AuthGuard\n('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/strategies/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/strategies/local.strategy.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport'\nimport { Strategy } from 'passport-local'\nimport { AuthService } from '../auth.service'\nimport { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private readonly authService: AuthService) {\n        super({ usernameField: 'email' })\n    }\n\n    async validate(email: string, password: string): Promise {\n        const user = await this.authService.validate(email, password)\n        console.log('user', user)\n        if (!user) {\n            throw new UnauthorizedException()\n        }\n        return user\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MirrorWord.html":{"url":"classes/MirrorWord.html","title":"class - MirrorWord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MirrorWord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IMirrorWord\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IMirrorWord } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type MirrorWordDocument = IMirrorWord & Document\n\n@ObjectType()\n@Schema()\nexport class MirrorWord implements IMirrorWord {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    word: string\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const MirrorWordSchema = SchemaFactory.createForClass(MirrorWord)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MirrorWordModule.html":{"url":"modules/MirrorWordModule.html","title":"module - MirrorWordModule","body":"\n                   \n\n\n\n\n    Modules\n    MirrorWordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MirrorWordModule\n\n\n\ncluster_MirrorWordModule_exports\n\n\n\ncluster_MirrorWordModule_providers\n\n\n\n\nMirrorWordRepository \n\nMirrorWordRepository \n\n\n\nMirrorWordService \n\nMirrorWordService \n\n\n\nMirrorWordModule\n\nMirrorWordModule\n\nMirrorWordRepository  -->\n\nMirrorWordModule->MirrorWordRepository \n\n\n\nMirrorWordService  -->\n\nMirrorWordModule->MirrorWordService \n\n\n\n\n\nMirrorWordRepository\n\nMirrorWordRepository\n\nMirrorWordModule -->\n\nMirrorWordRepository->MirrorWordModule\n\n\n\n\n\nMirrorWordService\n\nMirrorWordService\n\nMirrorWordModule -->\n\nMirrorWordService->MirrorWordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/mirror-word.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MirrorWordRepository\n                        \n                        \n                            MirrorWordService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MirrorWordRepository\n                        \n                        \n                            MirrorWordService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { MirrorWordService } from './mirror-word.service'\nimport { MirrorWordResolver } from './mirror-word.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { MirrorWord, MirrorWordSchema } from './entities/mirror-word.entity'\nimport { MirrorWordRepository } from './entities/mirror-word.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: MirrorWord.name,\n                schema: MirrorWordSchema,\n            },\n        ]),\n    ],\n    providers: [MirrorWordResolver, MirrorWordService, MirrorWordRepository],\n    exports: [MirrorWordService, MirrorWordRepository],\n})\nexport class MirrorWordModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MirrorWordRepository.html":{"url":"injectables/MirrorWordRepository.html","title":"injectable - MirrorWordRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MirrorWordRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/entities/mirror-word.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mirrorWordModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mirrorWordModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(__data: GetMirrorWordArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    __data\n                                    \n                                                GetMirrorWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { MirrorWord, MirrorWordDocument } from './mirror-word.entity'\nimport { Model } from 'mongoose'\nimport { UpdateMirrorWordInput } from '../dto/inputs/update-mirror-word.input'\nimport { CreateMirrorWordInput } from '../dto/inputs/create-mirror-word.input'\nimport { GetMirrorWordsArgs } from '../dto/args/get-mirror-words.args'\nimport { GetMirrorWordArgs } from '../dto/args/get-mirror-word.args'\nimport { IMirrorWord } from '@szakszolg-nx/api-interfaces'\nimport { DeleteMirrorWordInput } from '../dto/inputs/delete-mirror-word.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class MirrorWordRepository extends SimpleRepository {\n    constructor(@InjectModel(MirrorWord.name) mirrorWordModel: Model) {\n        super(mirrorWordModel)\n    }\n\n    override async findOne(__data: GetMirrorWordArgs): Promise {\n        const count = await this.model.estimatedDocumentCount()\n        const random = Math.floor(Math.random() * count)\n        return this.model.findOne().skip(random).limit(1)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MirrorWordResolver.html":{"url":"classes/MirrorWordResolver.html","title":"class - MirrorWordResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MirrorWordResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/mirror-word.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMirrorWord\n                            \n                            \n                                deleteMirrorWord\n                            \n                            \n                                mirrorWord\n                            \n                            \n                                mirrorWords\n                            \n                            \n                                updateMirrorWord\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mirrorWordService: MirrorWordService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mirrorWordService\n                                                  \n                                                        \n                                                                        MirrorWordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMirrorWord\n                        \n                    \n                \n            \n            \n                \ncreateMirrorWord(data: CreateMirrorWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateMirrorWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMirrorWord\n                        \n                    \n                \n            \n            \n                \ndeleteMirrorWord(data: DeleteMirrorWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteMirrorWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mirrorWord\n                        \n                    \n                \n            \n            \n                \nmirrorWord(data: GetMirrorWordArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetMirrorWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mirrorWords\n                        \n                    \n                \n            \n            \n                \nmirrorWords(data: GetMirrorWordsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetMirrorWordsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMirrorWord\n                        \n                    \n                \n            \n            \n                \nupdateMirrorWord(data: UpdateMirrorWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateMirrorWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { MirrorWordService } from './mirror-word.service'\nimport { MirrorWord } from './entities/mirror-word.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetMirrorWordArgs } from './dto/args/get-mirror-word.args'\nimport { IMirrorWord } from '@szakszolg-nx/api-interfaces'\nimport { GetMirrorWordsArgs } from './dto/args/get-mirror-words.args'\nimport { CreateMirrorWordInput } from './dto/inputs/create-mirror-word.input'\nimport { UpdateMirrorWordInput } from './dto/inputs/update-mirror-word.input'\nimport { DeleteMirrorWordInput } from './dto/inputs/delete-mirror-word.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => MirrorWord)\n@Resource('mirror-words')\nexport class MirrorWordResolver {\n    constructor(private readonly mirrorWordService: MirrorWordService) {}\n\n    @Query(() => MirrorWord, { nullable: true })\n    mirrorWord(@Args({ nullable: true }) data: GetMirrorWordArgs): Promise {\n        return this.mirrorWordService.findOne(data)\n    }\n\n    @Query(() => [MirrorWord], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    mirrorWords(@Args({ nullable: true }) data: GetMirrorWordsArgs | null): Promise {\n        return this.mirrorWordService.findAll(data)\n    }\n\n    @Mutation(() => MirrorWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createMirrorWord(@Args('createMirrorWordData') data: CreateMirrorWordInput): Promise {\n        return this.mirrorWordService.create(data)\n    }\n\n    @Mutation(() => MirrorWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateMirrorWord(@Args('updateMirrorWordData') data: UpdateMirrorWordInput): Promise {\n        return this.mirrorWordService.update(data)\n    }\n\n    @Mutation(() => MirrorWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteMirrorWord(@Args('deleteMirrorWordData') data: DeleteMirrorWordInput): Promise {\n        return this.mirrorWordService.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MirrorWordService.html":{"url":"injectables/MirrorWordService.html","title":"injectable - MirrorWordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MirrorWordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/mirror-word.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: MirrorWordRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/mirror-word/mirror-word.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        MirrorWordRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateMirrorWordInput } from './dto/inputs/create-mirror-word.input'\nimport { UpdateMirrorWordInput } from './dto/inputs/update-mirror-word.input'\nimport { MirrorWordRepository } from './entities/mirror-word.repository'\nimport { GetMirrorWordsArgs } from './dto/args/get-mirror-words.args'\nimport { GetMirrorWordArgs } from './dto/args/get-mirror-word.args'\nimport { DeleteMirrorWordInput } from './dto/inputs/delete-mirror-word.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class MirrorWordService extends RepositoryProxyService {\n    constructor(repository: MirrorWordRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PermissionGuard.html":{"url":"guards/PermissionGuard.html","title":"guard - PermissionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PermissionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/api/src/app/auth/guards/permission-guard.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/guards/permission-guard.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/guards/permission-guard.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, flatten, Injectable } from '@nestjs/common'\nimport { Reflector } from '@nestjs/core'\nimport { GqlExecutionContext } from '@nestjs/graphql'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class PermissionGuard implements CanActivate {\n    constructor(private reflector: Reflector) {}\n\n    canActivate(context: ExecutionContext) {\n        const requiredResource = this.reflector.getAllAndMerge('resources', [\n            context.getClass(),\n            context.getHandler(),\n        ])\n        const requiredAbilities = this.reflector.get('abilities', context.getHandler())\n        if (requiredAbilities?.length == 0 && requiredResource?.length == 0) return true\n        const required = `${requiredAbilities[0]}::${requiredResource[0]}`\n        let user: IUser\n        if (context.getType() === 'http') user = context.switchToHttp().getRequest().user\n        user = GqlExecutionContext.create(context).getContext().req.user\n        if (!user) return false\n        const userPermissions = flatten(user.roles.map((role) => role.permissions ?? [])).map((permission: string) =>\n            permission.replace(/^\\*::/g, `${requiredAbilities[0]}::`).replace(/::\\*$/g, `::${requiredResource[0]}`),\n        )\n\n        return userPermissions.includes(required)\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Quiz.html":{"url":"classes/Quiz.html","title":"class - Quiz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Quiz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/entities/quiz.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IQuiz\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                categories\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                questions\n                            \n                            \n                                title\n                            \n                            \n                                tokens\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IQuizQuestion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tokens\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IQuiz, IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\nimport { QuizQuestion } from '../../quiz-question/entities/quiz-question.entity'\n\nexport type QuizDocument = IQuiz & Document\n\n@ObjectType()\n@Schema()\nexport class Quiz implements IQuiz {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    title: string\n\n    @Field()\n    @Prop()\n    description: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    categories: string[]\n\n    @Field(() => [QuizQuestion])\n    @Prop({ type: [MongooseSchema.Types.Mixed] })\n    questions: IQuizQuestion[]\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    tokens: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const QuizSchema = SchemaFactory.createForClass(Quiz)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizAnswer.html":{"url":"classes/QuizAnswer.html","title":"class - QuizAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQuizAnswer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                answer\n                            \n                            \n                                    Optional\n                                answeredAt\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                isCorrect\n                            \n                            \n                                om\n                            \n                            \n                                questionId\n                            \n                            \n                                quizId\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answeredAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isCorrect\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Int, ObjectType } from '@nestjs/graphql'\nimport { IQuizAnswer } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type QuizAnswerDocument = IQuizAnswer & Document\n\n@ObjectType()\n@Schema()\nexport class QuizAnswer implements IQuizAnswer {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    quizId: string\n\n    @Field(() => Int)\n    @Prop()\n    questionId: number\n\n    @Field()\n    @Prop()\n    answer: string\n\n    @Field()\n    @Prop()\n    om: string\n\n    @Field(() => Boolean, { nullable: true })\n    @Prop({ nullable: true })\n    isCorrect?: boolean | null\n\n    @Field()\n    @Prop()\n    answeredAt?: Date\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const QuizAnswerSchema = SchemaFactory.createForClass(QuizAnswer)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuizAnswerModule.html":{"url":"modules/QuizAnswerModule.html","title":"module - QuizAnswerModule","body":"\n                   \n\n\n\n\n    Modules\n    QuizAnswerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_QuizAnswerModule\n\n\n\ncluster_QuizAnswerModule_exports\n\n\n\ncluster_QuizAnswerModule_providers\n\n\n\ncluster_QuizAnswerModule_imports\n\n\n\n\nQuizModule\n\nQuizModule\n\n\n\nQuizAnswerModule\n\nQuizAnswerModule\n\nQuizAnswerModule -->\n\nQuizModule->QuizAnswerModule\n\n\n\n\n\nQuizAnswerRepository \n\nQuizAnswerRepository \n\nQuizAnswerRepository  -->\n\nQuizAnswerModule->QuizAnswerRepository \n\n\n\n\n\nQuizAnswerService \n\nQuizAnswerService \n\nQuizAnswerService  -->\n\nQuizAnswerModule->QuizAnswerService \n\n\n\n\n\nQuizAnswerRepository\n\nQuizAnswerRepository\n\nQuizAnswerModule -->\n\nQuizAnswerRepository->QuizAnswerModule\n\n\n\n\n\nQuizAnswerService\n\nQuizAnswerService\n\nQuizAnswerModule -->\n\nQuizAnswerService->QuizAnswerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/quiz-answer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QuizAnswerRepository\n                        \n                        \n                            QuizAnswerService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            QuizModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuizAnswerRepository\n                        \n                        \n                            QuizAnswerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { QuizAnswerService } from './quiz-answer.service'\nimport { QuizAnswerResolver } from './quiz-answer.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { QuizAnswer, QuizAnswerSchema } from './entities/quiz-answer.entity'\nimport { QuizAnswerRepository } from './entities/quiz-answer.repository'\nimport { QuizModule } from '../quiz/quiz.module'\n\n@Module({\n    imports: [\n        QuizModule,\n        MongooseModule.forFeature([\n            {\n                name: QuizAnswer.name,\n                schema: QuizAnswerSchema,\n            },\n        ]),\n    ],\n    providers: [QuizAnswerResolver, QuizAnswerService, QuizAnswerRepository],\n    exports: [QuizAnswerService, QuizAnswerRepository],\n})\nexport class QuizAnswerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizAnswerRepository.html":{"url":"injectables/QuizAnswerRepository.html","title":"injectable - QuizAnswerRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizAnswerRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/entities/quiz-answer.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model, quizService: QuizService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.repository.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateQuizAnswerInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizAnswerInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetQuizAnswersArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizAnswersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { QuizAnswer, QuizAnswerDocument } from './quiz-answer.entity'\nimport { Model } from 'mongoose'\nimport { UpdateQuizAnswerInput } from '../dto/inputs/update-quiz-answer.input'\nimport { CreateQuizAnswerInput } from '../dto/inputs/create-quiz-answer.input'\nimport { GetQuizAnswersArgs } from '../dto/args/get-quiz-answers.args'\nimport { GetQuizAnswerArgs } from '../dto/args/get-quiz-answer.args'\nimport { IQuiz, IQuizAnswer, IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { DeleteQuizAnswerInput } from '../dto/inputs/delete-quiz-answer.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\nimport { QuizService } from '../../quiz/quiz.service'\n\n@Injectable()\nexport class QuizAnswerRepository extends SimpleRepository {\n    constructor(\n        @InjectModel(QuizAnswer.name) resourceModel: Model,\n        private readonly quizService: QuizService,\n    ) {\n        super(resourceModel)\n    }\n\n    override async findAll(data: GetQuizAnswersArgs | null): Promise {\n        if (data.ids?.length > 0) {\n            return super.findAll(data)\n        }\n\n        return this.model.find({ quizId: data.quizId })\n    }\n\n    override async create(data: CreateQuizAnswerInput): Promise {\n        const originalQuiz: IQuiz = await this.quizService.findOne({ id: data.quizId })\n        const originalQuestion = originalQuiz.questions.find((q) => q._id.toString() === data.questionId)\n        if (!originalQuestion) {\n            throw new NotFoundException(`Question not found: ${data.quizId}/${data.questionId}`)\n        }\n\n        if (originalQuestion.type !== 'free-text') {\n            data.isCorrect = originalQuestion.answers.includes(data.answer)\n        }\n        return super.create(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizAnswerResolver.html":{"url":"classes/QuizAnswerResolver.html","title":"class - QuizAnswerResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizAnswerResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/quiz-answer.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createQuizAnswer\n                            \n                            \n                                deleteQuizAnswer\n                            \n                            \n                                quizAnswer\n                            \n                            \n                                quizAnswers\n                            \n                            \n                                updateQuizAnswer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: QuizAnswerService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        QuizAnswerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createQuizAnswer\n                        \n                    \n                \n            \n            \n                \ncreateQuizAnswer(data: CreateQuizAnswerInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizAnswerInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteQuizAnswer\n                        \n                    \n                \n            \n            \n                \ndeleteQuizAnswer(data: DeleteQuizAnswerInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteQuizAnswerInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizAnswer\n                        \n                    \n                \n            \n            \n                \nquizAnswer(data: GetQuizAnswerArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetQuizAnswerArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizAnswers\n                        \n                    \n                \n            \n            \n                \nquizAnswers(data: GetQuizAnswersArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizAnswersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateQuizAnswer\n                        \n                    \n                \n            \n            \n                \nupdateQuizAnswer(data: UpdateQuizAnswerInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateQuizAnswerInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { QuizAnswerService } from './quiz-answer.service'\nimport { QuizAnswer } from './entities/quiz-answer.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetQuizAnswerArgs } from './dto/args/get-quiz-answer.args'\nimport { IQuizAnswer } from '@szakszolg-nx/api-interfaces'\nimport { GetQuizAnswersArgs } from './dto/args/get-quiz-answers.args'\nimport { CreateQuizAnswerInput } from './dto/inputs/create-quiz-answer.input'\nimport { UpdateQuizAnswerInput } from './dto/inputs/update-quiz-answer.input'\nimport { DeleteQuizAnswerInput } from './dto/inputs/delete-quiz-answer.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => QuizAnswer)\n@Resource('quiz-answers')\nexport class QuizAnswerResolver {\n    constructor(private readonly service: QuizAnswerService) {}\n\n    @Query(() => QuizAnswer, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    quizAnswer(@Args({ nullable: true }) data: GetQuizAnswerArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [QuizAnswer], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    quizAnswers(@Args({ nullable: true }) data: GetQuizAnswersArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => QuizAnswer)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createQuizAnswer(@Args('createQuizAnswerData') data: CreateQuizAnswerInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => QuizAnswer)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateQuizAnswer(@Args('updateQuizAnswerData') data: UpdateQuizAnswerInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => QuizAnswer)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteQuizAnswer(@Args('deleteQuizAnswerData') data: DeleteQuizAnswerInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizAnswerService.html":{"url":"injectables/QuizAnswerService.html","title":"injectable - QuizAnswerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizAnswerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/quiz-answer.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: QuizAnswerRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-answer/quiz-answer.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        QuizAnswerRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateQuizAnswerInput } from './dto/inputs/create-quiz-answer.input'\nimport { UpdateQuizAnswerInput } from './dto/inputs/update-quiz-answer.input'\nimport { QuizAnswerRepository } from './entities/quiz-answer.repository'\nimport { GetQuizAnswersArgs } from './dto/args/get-quiz-answers.args'\nimport { GetQuizAnswerArgs } from './dto/args/get-quiz-answer.args'\nimport { DeleteQuizAnswerInput } from './dto/inputs/delete-quiz-answer.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class QuizAnswerService extends RepositoryProxyService {\n    constructor(repository: QuizAnswerRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuizModule.html":{"url":"modules/QuizModule.html","title":"module - QuizModule","body":"\n                   \n\n\n\n\n    Modules\n    QuizModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_QuizModule\n\n\n\ncluster_QuizModule_exports\n\n\n\ncluster_QuizModule_providers\n\n\n\n\nQuizRepository \n\nQuizRepository \n\n\n\nQuizService \n\nQuizService \n\n\n\nQuizModule\n\nQuizModule\n\nQuizRepository  -->\n\nQuizModule->QuizRepository \n\n\n\nQuizService  -->\n\nQuizModule->QuizService \n\n\n\n\n\nQuizRepository\n\nQuizRepository\n\nQuizModule -->\n\nQuizRepository->QuizModule\n\n\n\n\n\nQuizService\n\nQuizService\n\nQuizModule -->\n\nQuizService->QuizModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/quiz/quiz.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QuizRepository\n                        \n                        \n                            QuizService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuizRepository\n                        \n                        \n                            QuizService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { QuizService } from './quiz.service'\nimport { QuizResolver } from './quiz.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Quiz, QuizSchema } from './entities/quiz.entity'\nimport { QuizRepository } from './entities/quiz.repository'\nimport { QuizQuestion, QuizQuestionSchema } from '../quiz-question/entities/quiz-question.entity'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: QuizQuestion.name,\n                schema: QuizQuestionSchema,\n            },\n            {\n                name: Quiz.name,\n                schema: QuizSchema,\n            },\n        ]),\n    ],\n    providers: [QuizResolver, QuizService, QuizRepository],\n    exports: [QuizService, QuizRepository],\n})\nexport class QuizModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizQuestion.html":{"url":"classes/QuizQuestion.html","title":"class - QuizQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQuizQuestion\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    Optional\n                                answers\n                            \n                            \n                                    Optional\n                                correctAnswers\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                question\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        correctAnswers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type QuizQuestionDocument = IQuizQuestion & Document\n\n@ObjectType()\n@Schema()\nexport class QuizQuestion implements IQuizQuestion {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    question: string\n\n    @Field()\n    @Prop()\n    type: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @Prop({ type: [String] })\n    answers?: string[]\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @Prop({ type: [String] })\n    correctAnswers?: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const QuizQuestionSchema = SchemaFactory.createForClass(QuizQuestion)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuizQuestionModule.html":{"url":"modules/QuizQuestionModule.html","title":"module - QuizQuestionModule","body":"\n                   \n\n\n\n\n    Modules\n    QuizQuestionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_QuizQuestionModule\n\n\n\ncluster_QuizQuestionModule_exports\n\n\n\ncluster_QuizQuestionModule_providers\n\n\n\n\nQuizQuestionRepository \n\nQuizQuestionRepository \n\n\n\nQuizQuestionService \n\nQuizQuestionService \n\n\n\nQuizQuestionModule\n\nQuizQuestionModule\n\nQuizQuestionRepository  -->\n\nQuizQuestionModule->QuizQuestionRepository \n\n\n\nQuizQuestionService  -->\n\nQuizQuestionModule->QuizQuestionService \n\n\n\n\n\nQuizQuestionRepository\n\nQuizQuestionRepository\n\nQuizQuestionModule -->\n\nQuizQuestionRepository->QuizQuestionModule\n\n\n\n\n\nQuizQuestionService\n\nQuizQuestionService\n\nQuizQuestionModule -->\n\nQuizQuestionService->QuizQuestionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/quiz-question.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QuizQuestionRepository\n                        \n                        \n                            QuizQuestionService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuizQuestionRepository\n                        \n                        \n                            QuizQuestionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { QuizQuestionService } from './quiz-question.service'\nimport { QuizQuestionResolver } from './quiz-question.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { QuizQuestion, QuizQuestionSchema } from './entities/quiz-question.entity'\nimport { QuizQuestionRepository } from './entities/quiz-question.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: QuizQuestion.name,\n                schema: QuizQuestionSchema,\n            },\n        ]),\n    ],\n    providers: [QuizQuestionResolver, QuizQuestionService, QuizQuestionRepository],\n    exports: [QuizQuestionService, QuizQuestionRepository],\n})\nexport class QuizQuestionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizQuestionRepository.html":{"url":"injectables/QuizQuestionRepository.html","title":"injectable - QuizQuestionRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizQuestionRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/entities/quiz-question.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { QuizQuestion, QuizQuestionDocument } from './quiz-question.entity'\nimport { Model } from 'mongoose'\nimport { UpdateQuizQuestionInput } from '../dto/inputs/update-quiz-question.input'\nimport { CreateQuizQuestionInput } from '../dto/inputs/create-quiz-question.input'\nimport { GetQuizQuestionsArgs } from '../dto/args/get-quiz-questions.args'\nimport { GetQuizQuestionArgs } from '../dto/args/get-quiz-question.args'\nimport { IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { DeleteQuizQuestionInput } from '../dto/inputs/delete-quiz-question.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class QuizQuestionRepository extends SimpleRepository {\n    constructor(@InjectModel(QuizQuestion.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    // TODO: Check if anything needs to be overridden\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizQuestionResolver.html":{"url":"classes/QuizQuestionResolver.html","title":"class - QuizQuestionResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizQuestionResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/quiz-question.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createQuizQuestion\n                            \n                            \n                                deleteQuizQuestion\n                            \n                            \n                                quizQuestion\n                            \n                            \n                                quizQuestions\n                            \n                            \n                                updateQuizQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: QuizQuestionService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        QuizQuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createQuizQuestion\n                        \n                    \n                \n            \n            \n                \ncreateQuizQuestion(data: CreateQuizQuestionInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizQuestionInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteQuizQuestion\n                        \n                    \n                \n            \n            \n                \ndeleteQuizQuestion(data: DeleteQuizQuestionInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteQuizQuestionInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizQuestion\n                        \n                    \n                \n            \n            \n                \nquizQuestion(data: GetQuizQuestionArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetQuizQuestionArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizQuestions\n                        \n                    \n                \n            \n            \n                \nquizQuestions(data: GetQuizQuestionsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizQuestionsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateQuizQuestion\n                        \n                    \n                \n            \n            \n                \nupdateQuizQuestion(data: UpdateQuizQuestionInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateQuizQuestionInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { QuizQuestionService } from './quiz-question.service'\nimport { QuizQuestion } from './entities/quiz-question.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetQuizQuestionArgs } from './dto/args/get-quiz-question.args'\nimport { IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { GetQuizQuestionsArgs } from './dto/args/get-quiz-questions.args'\nimport { CreateQuizQuestionInput } from './dto/inputs/create-quiz-question.input'\nimport { UpdateQuizQuestionInput } from './dto/inputs/update-quiz-question.input'\nimport { DeleteQuizQuestionInput } from './dto/inputs/delete-quiz-question.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => QuizQuestion)\n@Resource('quiz-questions')\nexport class QuizQuestionResolver {\n    constructor(private readonly service: QuizQuestionService) {}\n\n    @Query(() => QuizQuestion, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    quizQuestion(@Args({ nullable: true }) data: GetQuizQuestionArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [QuizQuestion], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    quizQuestions(@Args({ nullable: true }) data: GetQuizQuestionsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => QuizQuestion)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createQuizQuestion(@Args('createQuizQuestionData') data: CreateQuizQuestionInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => QuizQuestion)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateQuizQuestion(@Args('updateQuizQuestionData') data: UpdateQuizQuestionInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => QuizQuestion)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteQuizQuestion(@Args('deleteQuizQuestionData') data: DeleteQuizQuestionInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizQuestionService.html":{"url":"injectables/QuizQuestionService.html","title":"injectable - QuizQuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizQuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/quiz-question.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: QuizQuestionRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-question/quiz-question.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        QuizQuestionRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateQuizQuestionInput } from './dto/inputs/create-quiz-question.input'\nimport { UpdateQuizQuestionInput } from './dto/inputs/update-quiz-question.input'\nimport { QuizQuestionRepository } from './entities/quiz-question.repository'\nimport { GetQuizQuestionsArgs } from './dto/args/get-quiz-questions.args'\nimport { GetQuizQuestionArgs } from './dto/args/get-quiz-question.args'\nimport { DeleteQuizQuestionInput } from './dto/inputs/delete-quiz-question.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class QuizQuestionService extends RepositoryProxyService {\n    constructor(repository: QuizQuestionRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizRepository.html":{"url":"injectables/QuizRepository.html","title":"injectable - QuizRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/entities/quiz.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz/entities/quiz.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateQuizInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetQuizzesArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizzesArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Quiz, QuizDocument } from './quiz.entity'\nimport { Model } from 'mongoose'\nimport { UpdateQuizInput } from '../dto/inputs/update-quiz.input'\nimport { CreateQuizInput } from '../dto/inputs/create-quiz.input'\nimport { GetQuizzesArgs } from '../dto/args/get-quizzes.args'\nimport { GetQuizArgs } from '../dto/args/get-quiz.args'\nimport { IQuiz } from '@szakszolg-nx/api-interfaces'\nimport { DeleteQuizInput } from '../dto/inputs/delete-quiz.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class QuizRepository extends SimpleRepository {\n    constructor(@InjectModel(Quiz.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    override async findAll(data: GetQuizzesArgs | null): Promise {\n        if (!data.category) return super.findAll(data) // No filtering\n\n        return this.model.find({ categories: { $regex: data.category, $options: 'i' } }).exec()\n    }\n\n    override async create(data: CreateQuizInput): Promise {\n        data.questions = data.questions.map((question, index) => ({ _id: index, ...question }))\n        return super.create(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizResolver.html":{"url":"classes/QuizResolver.html","title":"class - QuizResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/quiz.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createQuiz\n                            \n                            \n                                deleteQuiz\n                            \n                            \n                                quiz\n                            \n                            \n                                quizzes\n                            \n                            \n                                updateQuiz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: QuizService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz/quiz.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createQuiz\n                        \n                    \n                \n            \n            \n                \ncreateQuiz(data: CreateQuizInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteQuiz\n                        \n                    \n                \n            \n            \n                \ndeleteQuiz(data: DeleteQuizInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteQuizInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quiz\n                        \n                    \n                \n            \n            \n                \nquiz(data: GetQuizArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetQuizArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizzes\n                        \n                    \n                \n            \n            \n                \nquizzes(data: GetQuizzesArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizzesArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateQuiz\n                        \n                    \n                \n            \n            \n                \nupdateQuiz(data: UpdateQuizInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateQuizInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { QuizService } from './quiz.service'\nimport { Quiz } from './entities/quiz.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetQuizArgs } from './dto/args/get-quiz.args'\nimport { IQuiz } from '@szakszolg-nx/api-interfaces'\nimport { GetQuizzesArgs } from './dto/args/get-quizzes.args'\nimport { CreateQuizInput } from './dto/inputs/create-quiz.input'\nimport { UpdateQuizInput } from './dto/inputs/update-quiz.input'\nimport { DeleteQuizInput } from './dto/inputs/delete-quiz.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => Quiz)\n@Resource('quizzes')\nexport class QuizResolver {\n    constructor(private readonly service: QuizService) {}\n\n    @Query(() => Quiz, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    quiz(@Args({ nullable: true }) data: GetQuizArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [Quiz], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    quizzes(@Args({ nullable: true }) data: GetQuizzesArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => Quiz)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createQuiz(@Args('createQuizData') data: CreateQuizInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => Quiz)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateQuiz(@Args('updateQuizData') data: UpdateQuizInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => Quiz)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteQuiz(@Args('deleteQuizData') data: DeleteQuizInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizService.html":{"url":"injectables/QuizService.html","title":"injectable - QuizService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/quiz.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: QuizRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz/quiz.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        QuizRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateQuizInput } from './dto/inputs/create-quiz.input'\nimport { UpdateQuizInput } from './dto/inputs/update-quiz.input'\nimport { QuizRepository } from './entities/quiz.repository'\nimport { GetQuizzesArgs } from './dto/args/get-quizzes.args'\nimport { GetQuizArgs } from './dto/args/get-quiz.args'\nimport { DeleteQuizInput } from './dto/inputs/delete-quiz.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class QuizService extends RepositoryProxyService {\n    constructor(repository: QuizRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepositoryProxyService.html":{"url":"injectables/RepositoryProxyService.html","title":"injectable - RepositoryProxyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepositoryProxyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/proxies/repository-proxy.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: TRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    TRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { SimpleRepository } from './simple.repository'\nimport { IdArg, IdArrayArg } from '../gql-args/id.args'\nimport { IdInput } from '../gql-inputs/id.input'\n\n@Injectable()\nexport class RepositoryProxyService,\n    TFindOneArgs extends IdArg,\n    TFindManyArgs extends IdArrayArg,\n    TCreateInput,\n    TUpdateInput extends IdInput,\n    TDeleteInput extends IdInput,\n> {\n    constructor(protected readonly repository: TRepository) {}\n\n    create(data: TCreateInput) {\n        return this.repository.create(data)\n    }\n\n    findAll(data: TFindManyArgs) {\n        return this.repository.findAll(data)\n    }\n\n    findOne(data: TFindOneArgs) {\n        return this.repository.findOne(data)\n    }\n\n    update(data: TUpdateInput) {\n        return this.repository.update(data)\n    }\n\n    delete(data: TDeleteInput) {\n        return this.repository.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/entities/role.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IRole\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type RoleDocument = IRole & Document\n\n@ObjectType()\n@Schema()\nexport class Role implements IRole {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    description: string\n\n    @Field()\n    @Prop()\n    name: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    permissions: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nAuthModule->RoleModule\n\n\n\n\n\nRoleRepository \n\nRoleRepository \n\nRoleRepository  -->\n\nRoleModule->RoleRepository \n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nRoleRepository\n\nRoleRepository\n\nRoleModule -->\n\nRoleRepository->RoleModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepository\n                        \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleRepository\n                        \n                        \n                            RoleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common'\nimport { RoleService } from './role.service'\nimport { RoleResolver } from './role.resolver'\nimport { AuthModule } from '../auth/auth.module'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Role, RoleSchema } from './entities/role.entity'\nimport { RoleRepository } from './entities/role.repository'\nimport { UsersModule } from '../users/users.module'\n\n@Module({\n    imports: [\n        AuthModule,\n        forwardRef(() => UsersModule),\n        MongooseModule.forFeature([\n            {\n                name: Role.name,\n                schema: RoleSchema,\n            },\n        ]),\n    ],\n    providers: [RoleResolver, RoleService, RoleRepository],\n    exports: [RoleService, RoleRepository],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepository.html":{"url":"injectables/RoleRepository.html","title":"injectable - RoleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/entities/role.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/entities/role.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Role, RoleDocument } from './role.entity'\nimport { Model } from 'mongoose'\nimport { UpdateRoleInput } from '../dto/inputs/update-role.input'\nimport { CreateRoleInput } from '../dto/inputs/create-role.input'\nimport { GetRolesArgs } from '../dto/args/get-roles.args'\nimport { GetRoleArgs } from '../dto/args/get-role.args'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { DeleteRoleInput } from '../dto/inputs/delete-role.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class RoleRepository extends SimpleRepository {\n    constructor(@InjectModel(Role.name) roleModel: Model) {\n        super(roleModel)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleResolver.html":{"url":"classes/RoleResolver.html","title":"class - RoleResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/role.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createRole\n                            \n                            \n                                deleteRole\n                            \n                            \n                                role\n                            \n                            \n                                roles\n                            \n                            \n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/role.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createRole\n                        \n                    \n                \n            \n            \n                \ncreateRole(data: CreateRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRole\n                        \n                    \n                \n            \n            \n                \ndeleteRole(data: DeleteRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n            \n                \nrole(data: GetRoleArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetRoleArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n            \n                \nroles(data: GetRolesArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetRolesArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRole\n                        \n                    \n                \n            \n            \n                \nupdateRole(data: UpdateRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { RoleService } from './role.service'\nimport { Role } from './entities/role.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetRoleArgs } from './dto/args/get-role.args'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { GetRolesArgs } from './dto/args/get-roles.args'\nimport { CreateRoleInput } from './dto/inputs/create-role.input'\nimport { UpdateRoleInput } from './dto/inputs/update-role.input'\nimport { DeleteRoleInput } from './dto/inputs/delete-role.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => Role)\n@Resource('roles')\nexport class RoleResolver {\n    constructor(private readonly roleService: RoleService) {}\n\n    @Query(() => Role, { nullable: true })\n    @UseGuards(GqlAuthGuard)\n    @Permission('read')\n    role(@Args({ nullable: true }) data: GetRoleArgs): Promise {\n        return this.roleService.findOne(data)\n    }\n\n    @Query(() => [Role], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    roles(@Args({ nullable: true }) data: GetRolesArgs | null): Promise {\n        return this.roleService.findAll(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('create')\n    createRole(@Args('createRoleData') data: CreateRoleInput): Promise {\n        return this.roleService.create(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('update')\n    updateRole(@Args('updateRoleData') data: UpdateRoleInput): Promise {\n        return this.roleService.update(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('delete')\n    deleteRole(@Args('deleteRoleData') data: DeleteRoleInput): Promise {\n        return this.roleService.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/role.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: RoleRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/role.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        RoleRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateRoleInput } from './dto/inputs/create-role.input'\nimport { UpdateRoleInput } from './dto/inputs/update-role.input'\nimport { RoleRepository } from './entities/role.repository'\nimport { GetRolesArgs } from './dto/args/get-roles.args'\nimport { GetRoleArgs } from './dto/args/get-role.args'\nimport { DeleteRoleInput } from './dto/inputs/delete-role.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class RoleService extends RepositoryProxyService {\n    constructor(roleRepository: RoleRepository) {\n        super(roleRepository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/entities/school.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ISchool\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                address\n                            \n                            \n                                county\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                name\n                            \n                            \n                                om\n                            \n                            \n                                types\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        county\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { ISchool } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type SchoolDocument = ISchool & Document\n\n@ObjectType()\n@Schema()\nexport class School implements ISchool {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    om: string\n\n    @Field()\n    @Prop()\n    name: string\n\n    @Field()\n    @Prop()\n    address: string\n\n    @Field()\n    @Prop()\n    county: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    types: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const SchoolSchema = SchemaFactory.createForClass(School)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_exports\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nSchoolRepository \n\nSchoolRepository \n\n\n\nSchoolService \n\nSchoolService \n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolRepository  -->\n\nSchoolModule->SchoolRepository \n\n\n\nSchoolService  -->\n\nSchoolModule->SchoolService \n\n\n\n\n\nSchoolRepository\n\nSchoolRepository\n\nSchoolModule -->\n\nSchoolRepository->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolRepository\n                        \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SchoolRepository\n                        \n                        \n                            SchoolService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { SchoolService } from './school.service'\nimport { SchoolResolver } from './school.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { School, SchoolSchema } from './entities/school.entity'\nimport { SchoolRepository } from './entities/school.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: School.name,\n                schema: SchoolSchema,\n            },\n        ]),\n    ],\n    providers: [SchoolResolver, SchoolService, SchoolRepository],\n    exports: [SchoolService, SchoolRepository],\n})\nexport class SchoolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolRepository.html":{"url":"injectables/SchoolRepository.html","title":"injectable - SchoolRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/entities/school.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/school/entities/school.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetSchoolsArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetSchoolsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { School, SchoolDocument } from './school.entity'\nimport { Model } from 'mongoose'\nimport { UpdateSchoolInput } from '../dto/inputs/update-school.input'\nimport { CreateSchoolInput } from '../dto/inputs/create-school.input'\nimport { GetSchoolsArgs } from '../dto/args/get-schools.args'\nimport { GetSchoolArgs } from '../dto/args/get-school.args'\nimport { ISchool } from '@szakszolg-nx/api-interfaces'\nimport { DeleteSchoolInput } from '../dto/inputs/delete-school.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class SchoolRepository extends SimpleRepository {\n    constructor(@InjectModel(School.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    override async findAll(data: GetSchoolsArgs | null): Promise {\n        if (!data.om && !data.name && !data.address && !data.county && !data.type) return super.findAll(data) // Simple findAll, no filtering\n\n        const filters = {}\n        for (const filterKey in data) {\n            if (data[filterKey] && data[filterKey] !== 'type')\n                filters[filterKey] = {\n                    $regex: data[filterKey],\n                    $options: 'i',\n                }\n        }\n\n        if (data.type) filters['types'] = { $regex: data.type, $options: 'i' }\n\n        return this.model.find(filters).exec()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolResolver.html":{"url":"classes/SchoolResolver.html","title":"class - SchoolResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/school.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSchool\n                            \n                            \n                                deleteSchool\n                            \n                            \n                                school\n                            \n                            \n                                schools\n                            \n                            \n                                updateSchool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SchoolService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/school/school.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SchoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createSchool\n                        \n                    \n                \n            \n            \n                \ncreateSchool(data: CreateSchoolInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateSchoolInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSchool\n                        \n                    \n                \n            \n            \n                \ndeleteSchool(data: DeleteSchoolInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteSchoolInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n            \n                \nschool(data: GetSchoolArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetSchoolArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schools\n                        \n                    \n                \n            \n            \n                \nschools(data: GetSchoolsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetSchoolsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSchool\n                        \n                    \n                \n            \n            \n                \nupdateSchool(data: UpdateSchoolInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateSchoolInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { SchoolService } from './school.service'\nimport { School } from './entities/school.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetSchoolArgs } from './dto/args/get-school.args'\nimport { ISchool } from '@szakszolg-nx/api-interfaces'\nimport { GetSchoolsArgs } from './dto/args/get-schools.args'\nimport { CreateSchoolInput } from './dto/inputs/create-school.input'\nimport { UpdateSchoolInput } from './dto/inputs/update-school.input'\nimport { DeleteSchoolInput } from './dto/inputs/delete-school.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => School)\n@Resource('schools')\nexport class SchoolResolver {\n    constructor(private readonly service: SchoolService) {}\n\n    @Query(() => School, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    school(@Args({ nullable: true }) data: GetSchoolArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [School], { nullable: 'items' })\n    schools(@Args({ nullable: true }) data: GetSchoolsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => School)\n    createSchool(@Args('createSchoolData') data: CreateSchoolInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => School)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateSchool(@Args('updateSchoolData') data: UpdateSchoolInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => School)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteSchool(@Args('deleteSchoolData') data: DeleteSchoolInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/school.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: SchoolRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/school/school.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        SchoolRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateSchoolInput } from './dto/inputs/create-school.input'\nimport { UpdateSchoolInput } from './dto/inputs/update-school.input'\nimport { SchoolRepository } from './entities/school.repository'\nimport { GetSchoolsArgs } from './dto/args/get-schools.args'\nimport { GetSchoolArgs } from './dto/args/get-school.args'\nimport { DeleteSchoolInput } from './dto/inputs/delete-school.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class SchoolService extends RepositoryProxyService {\n    constructor(repository: SchoolRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SimpleRepository.html":{"url":"injectables/SimpleRepository.html","title":"injectable - SimpleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SimpleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/proxies/simple.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/shared/proxies/simple.repository.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common'\nimport { Document, Model, Types } from 'mongoose'\nimport { IdArg, IdArrayArg } from '../gql-args/id.args'\nimport { IdInput } from '../gql-inputs/id.input'\nimport { IApiResource, IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class SimpleRepository {\n    constructor(protected readonly model: Model) {}\n\n    public async findAll(data: TFindManyArgs | null): Promise {\n        return data && Object.keys(data).length > 0\n            ? Promise.all(data.ids.map((id) => this.findOne({ id } as TFindOneArgs)))\n            : (this.model.find({ deletedAt: { $eq: null } }) as any)\n    }\n\n    public async findOne(data: TFindOneArgs): Promise {\n        const res = this.model.findById(data.id) as any\n        return res?.deletedAt\n            ? Promise.reject(new NotFoundException(`Model with id ${data.id} not found or has been deleted`))\n            : res\n    }\n\n    public async create(data: TCreateInput): Promise {\n        return (await new this.model({\n            ...data,\n            _id: new Types.ObjectId(),\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            deletedAt: null,\n        }).save()) as any\n    }\n\n    public async update(data: TUpdateInput & IUpdatedAt): Promise {\n        const id = data.id\n        delete data.id\n        if ((data as any).deletedAt) return Promise.reject(new BadRequestException('Cannot update deleted resource'))\n        data.updatedAt = new Date()\n        return this.model.findByIdAndUpdate(id, data, { new: false }) as any\n    }\n\n    public async delete(data: TDeleteInput): Promise {\n        return this.model.findByIdAndUpdate(data.id, { deletedAt: Date.now() }) as any\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGroupingItemInput.html":{"url":"classes/UpdateGroupingItemInput.html","title":"class - UpdateGroupingItemInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGroupingItemInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                correct\n                            \n                            \n                                    Optional\n                                groups\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                item\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateGroupingItemInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    item?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    groups?: string[]\n\n    @Field({ nullable: true })\n    correct?: string\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateHangmanWordInput.html":{"url":"classes/UpdateHangmanWordInput.html","title":"class - UpdateHangmanWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateHangmanWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateHangmanWordInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    word?: string\n\n    @Field({ nullable: true })\n    category?: string\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMirrorWordInput.html":{"url":"classes/UpdateMirrorWordInput.html","title":"class - UpdateMirrorWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMirrorWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class UpdateMirrorWordInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field()\n    @IsNotEmpty()\n    word: string\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateQuizAnswerInput.html":{"url":"classes/UpdateQuizAnswerInput.html","title":"class - UpdateQuizAnswerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateQuizAnswerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                answer\n                            \n                            \n                                    Optional\n                                answeredAt\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                    Optional\n                                questionId\n                            \n                            \n                                    Optional\n                                quizId\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answeredAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        questionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        quizId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType, Int } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateQuizAnswerInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    quizId?: string\n\n    @Field(() => Int, { nullable: true })\n    questionId?: number\n\n    @Field({ nullable: true })\n    answer?: string\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field({ nullable: true })\n    answeredAt?: Date\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateQuizInput.html":{"url":"classes/UpdateQuizInput.html","title":"class - UpdateQuizInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateQuizInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                questions\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IQuizQuestion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IQuizQuestion, IUpdatedAt } from '@szakszolg-nx/api-interfaces'\nimport { UpdateQuizQuestionInput } from '../../../quiz-question/dto/inputs/update-quiz-question.input'\n\n@InputType()\nexport class UpdateQuizInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    title: string\n\n    @Field({ nullable: true })\n    description: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    categories: string[]\n\n    @Field(() => [UpdateQuizQuestionInput], { nullable: 'itemsAndList' })\n    questions: IQuizQuestion[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateQuizQuestionInput.html":{"url":"classes/UpdateQuizQuestionInput.html","title":"class - UpdateQuizQuestionInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateQuizQuestionInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                answers\n                            \n                            \n                                    Optional\n                                correctAnswers\n                            \n                            \n                                id\n                            \n                            \n                                question\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        correctAnswers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateQuizQuestionInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    question: string\n\n    @Field({ nullable: true })\n    type: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    answers?: string[]\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    correctAnswers?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleInput.html":{"url":"classes/UpdateRoleInput.html","title":"class - UpdateRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/update-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                permissions\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty, IsOptional } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateRoleInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    @IsNotEmpty()\n    name?: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    @IsNotEmpty()\n    description?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @IsOptional()\n    @IsArray()\n    permissions?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSchoolInput.html":{"url":"classes/UpdateSchoolInput.html","title":"class - UpdateSchoolInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSchoolInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/inputs/update-school.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                county\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                    Optional\n                                types\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        county\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@IsOptional()@IsArray()@ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { ArrayNotEmpty, IsArray, IsNotEmpty, IsOptional } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateSchoolInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field({ nullable: true })\n    name?: string\n\n    @Field({ nullable: true })\n    address?: string\n\n    @Field({ nullable: true })\n    county?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @IsOptional()\n    @IsArray()\n    @ArrayNotEmpty()\n    types?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserInput.html":{"url":"classes/UpdateUserInput.html","title":"class - UpdateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/update-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                newPassword\n                            \n                            \n                                    Optional\n                                newPasswordConfirm\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newPasswordConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsEmail, IsNotEmpty } from 'class-validator'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateUserInput extends IdInput implements IUpdatedAt {\n    @Field({ nullable: true })\n    id: string\n\n    @Field({ nullable: true })\n    @IsEmail()\n    email?: string\n\n    @Field({ nullable: true })\n    username?: string\n\n    @Field()\n    @IsNotEmpty()\n    password: string\n\n    @Field({ nullable: true })\n    newPassword?: string\n\n    @Field({ nullable: true })\n    newPasswordConfirm?: string\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    roles?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/entities/user.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Types.ObjectId[] | IRole[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { Document, Schema as MongooseSchema, Types } from 'mongoose'\nimport { IRole, IUser } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Role } from '../../role/entities/role.entity'\nimport { SchemaTypes } from 'mongoose'\n\nexport type UserDocument = User & Document\n\n@ObjectType()\n@Schema()\nexport class User implements IUser {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    username: string\n\n    @Field({ nullable: true })\n    @Prop()\n    om?: string\n\n    @Prop()\n    password?: string\n\n    @Field()\n    @Prop()\n    email: string\n\n    @Field(() => [Role], { nullable: 'itemsAndList' })\n    @Prop({ type: [SchemaTypes.ObjectId], ref: Role.name })\n    roles: Types.ObjectId[] | IRole[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/entities/user.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, roleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/entities/user.repository.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: DeleteUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetUsersArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetUserArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: UpdateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { User, UserDocument } from './user.entity'\nimport { CreateUserInput } from '../dto/inputs/create-user.input'\nimport { UpdateUserInput } from '../dto/inputs/update-user.input'\nimport { DeleteUserInput } from '../dto/inputs/delete-user.input'\nimport { GetUserArgs } from '../dto/args/get-user.args'\nimport { GetUsersArgs } from '../dto/args/get-users.args'\nimport { BadRequestException, Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\nimport { IRole, IUser } from '@szakszolg-nx/api-interfaces'\nimport { Types } from 'mongoose'\nimport { Role, RoleDocument } from '../../role/entities/role.entity'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class UserRepository {\n    constructor(\n        @InjectModel(User.name) private readonly userModel: Model,\n        @InjectModel(Role.name) private readonly roleModel: Model,\n    ) {}\n\n    public async findAll(data: GetUsersArgs | null): Promise {\n        return data && Object.keys(data).length > 0\n            ? Promise.all(data.ids.map((id) => this.findOne({ id })))\n            : this.userModel.find()\n    }\n\n    public async findOne(data: GetUserArgs): Promise {\n        if (data.id) return this.userModel.findById(data.id).populate('roles')\n\n        if (data.email) return this.userModel.findOne({ email: data.email }).populate('roles')\n\n        throw new Error('Please provide either an id or an email address')\n    }\n\n    public async create(data: CreateUserInput): Promise {\n        return new this.userModel({ ...data, _id: new Types.ObjectId() }).save()\n    }\n\n    public async update(data: UpdateUserInput): Promise {\n        const user = await this.userModel.findById(data.id)\n\n        if (!user) throw new Error('User not found')\n        if (!(await bcrypt.compare(data.password, user.password)))\n            throw new BadRequestException('Current password is incorrect')\n\n        if (data.newPassword && data.newPassword !== data.newPasswordConfirm)\n            throw new Error('New passwords do not match')\n        // const id = data.id\n        delete data.id\n        ;(data as any).updatedAt = new Date()\n\n        user.roles = data?.roles?.map((roleId) => new Types.ObjectId(roleId))\n\n        user.save()\n        return user\n    }\n\n    public async delete(data: DeleteUserInput): Promise {\n        return this.userModel.findByIdAndUpdate(data.id, { deletedAt: new Date() })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserRepository\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common'\nimport { UsersService } from './users.service'\nimport { UsersResolver } from './users.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { UserRepository } from './entities/user.repository'\nimport { AuthModule } from '../auth/auth.module'\nimport { User, UserSchema } from './entities/user.entity'\nimport { RoleModule } from '../role/role.module'\nimport { Role, RoleSchema } from '../role/entities/role.entity'\n\n@Module({\n    imports: [\n        forwardRef(() => AuthModule),\n        forwardRef(() => RoleModule),\n        MongooseModule.forFeature([\n            {\n                name: Role.name,\n                schema: RoleSchema,\n            },\n            {\n                name: User.name,\n                schema: UserSchema,\n            },\n        ]),\n    ],\n    providers: [UsersResolver, UsersService, UserRepository],\n    exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersResolver.html":{"url":"classes/UsersResolver.html","title":"class - UsersResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/users.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                updateUser\n                            \n                            \n                                user\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/users.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(data: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(data: DeleteUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(data: UpdateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n            \n                \nuser(data: GetUserArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n            \n                \nusers(data: GetUsersArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('browse')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Args, Mutation } from '@nestjs/graphql'\nimport { UsersService } from './users.service'\nimport { User } from './entities/user.entity'\nimport { GetUserArgs } from './dto/args/get-user.args'\nimport { GetUsersArgs } from './dto/args/get-users.args'\nimport { CreateUserInput } from './dto/inputs/create-user.input'\nimport { UpdateUserInput } from './dto/inputs/update-user.input'\nimport { DeleteUserInput } from './dto/inputs/delete-user.input'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => User)\n@Resource('users')\nexport class UsersResolver {\n    constructor(private readonly usersService: UsersService) {}\n\n    @Query(() => User, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    user(@Args() data: GetUserArgs): Promise {\n        return this.usersService.findOne(data)\n    }\n\n    @Query(() => [User], { nullable: 'items' })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('browse')\n    users(@Args({ nullable: true }) data: GetUsersArgs | null): Promise {\n        return this.usersService.findAll(data)\n    }\n\n    @Mutation(() => User)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createUser(@Args('createUserData') data: CreateUserInput): Promise {\n        return this.usersService.create(data)\n    }\n\n    @Mutation(() => User)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateUser(@Args('updateUserData') data: UpdateUserInput): Promise {\n        return this.usersService.update(data)\n    }\n\n    @Mutation(() => User)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteUser(@Args('deleteUserData') data: DeleteUserInput): Promise {\n        return this.usersService.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/users.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: DeleteUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetUsersArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetUserArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: UpdateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateUserInput } from './dto/inputs/create-user.input'\nimport { UpdateUserInput } from './dto/inputs/update-user.input'\nimport { DeleteUserInput } from './dto/inputs/delete-user.input'\nimport { GetUserArgs } from './dto/args/get-user.args'\nimport { GetUsersArgs } from './dto/args/get-users.args'\nimport { UserRepository } from './entities/user.repository'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class UsersService {\n    constructor(private readonly userRepository: UserRepository) {}\n\n    public findAll(data: GetUsersArgs | null): Promise {\n        return this.userRepository.findAll(data)\n    }\n\n    public findOne(data: GetUserArgs): Promise {\n        return this.userRepository.findOne(data)\n    }\n\n    public async create(data: CreateUserInput): Promise {\n        data.password = await bcrypt.hash(data.password, 10)\n        return this.userRepository.create(data)\n    }\n\n    public async update(data: UpdateUserInput): Promise {\n        return this.userRepository.update(data)\n    }\n\n    public async delete(data: DeleteUserInput): Promise {\n        return this.userRepository.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/auth.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/permission.decorator.ts\n            \n            variable\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/permission.decorator.ts\n            \n            variable\n            Resource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/gql-auth.guard.ts\n            \n            class\n            GqlAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/jwt-auth.guard.ts\n            \n            class\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/local-auth.guard.ts\n            \n            class\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/permission-guard.service.ts\n            \n            guard\n            PermissionGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/config/mongo-config.factory.ts\n            \n            variable\n            mongooseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/config/validation.ts\n            \n            variable\n            validationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/core.resolver.ts\n            \n            class\n            CoreResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/args/get-grouping-item.args.ts\n            \n            class\n            GetGroupingItemArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/args/get-grouping-items.args.ts\n            \n            class\n            GetGroupingItemsArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts\n            \n            class\n            CreateGroupingItemInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/inputs/delete-grouping-item.input.ts\n            \n            class\n            DeleteGroupingItemInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts\n            \n            class\n            UpdateGroupingItemInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n            \n            class\n            GroupingItem\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n            \n            variable\n            GroupingItemSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/entities/grouping-item.repository.ts\n            \n            injectable\n            GroupingItemRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/grouping-item.resolver.ts\n            \n            class\n            GroupingItemResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/grouping-item.service.ts\n            \n            injectable\n            GroupingItemService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/args/get-hangman-word.args.ts\n            \n            class\n            GetHangmanWordArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/args/get-hangman-words.args.ts\n            \n            class\n            GetHangmanWordsArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts\n            \n            class\n            CreateHangmanWordInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/inputs/delete-hangman-word.input.ts\n            \n            class\n            DeleteHangmanWordInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts\n            \n            class\n            UpdateHangmanWordInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n            \n            class\n            HangmanWord\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n            \n            variable\n            HangmanWordSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/entities/hangman-word.repository.ts\n            \n            injectable\n            HangmanWordRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/hangman-word.resolver.ts\n            \n            class\n            HangmanWordResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/hangman-word.service.ts\n            \n            injectable\n            HangmanWordService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/args/get-mirror-word.args.ts\n            \n            class\n            GetMirrorWordArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/args/get-mirror-words.args.ts\n            \n            class\n            GetMirrorWordsArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/inputs/create-mirror-word.input.ts\n            \n            class\n            CreateMirrorWordInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/inputs/delete-mirror-word.input.ts\n            \n            class\n            DeleteMirrorWordInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts\n            \n            class\n            UpdateMirrorWordInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n            \n            class\n            MirrorWord\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n            \n            variable\n            MirrorWordSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/entities/mirror-word.repository.ts\n            \n            injectable\n            MirrorWordRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/mirror-word.resolver.ts\n            \n            class\n            MirrorWordResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/mirror-word.service.ts\n            \n            injectable\n            MirrorWordService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/dto/args/get-quiz-answer.args.ts\n            \n            class\n            GetQuizAnswerArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/dto/args/get-quiz-answers.args.ts\n            \n            class\n            GetQuizAnswersArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts\n            \n            class\n            CreateQuizAnswerInput\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/dto/inputs/delete-quiz-answer.input.ts\n            \n            class\n            DeleteQuizAnswerInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts\n            \n            class\n            UpdateQuizAnswerInput\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts\n            \n            class\n            QuizAnswer\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts\n            \n            variable\n            QuizAnswerSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/entities/quiz-answer.repository.ts\n            \n            injectable\n            QuizAnswerRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/quiz-answer.resolver.ts\n            \n            class\n            QuizAnswerResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/quiz-answer.service.ts\n            \n            injectable\n            QuizAnswerService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/args/get-quiz-question.args.ts\n            \n            class\n            GetQuizQuestionArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/args/get-quiz-questions.args.ts\n            \n            class\n            GetQuizQuestionsArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts\n            \n            class\n            CreateQuizQuestionInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/inputs/delete-quiz-question.input.ts\n            \n            class\n            DeleteQuizQuestionInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts\n            \n            class\n            UpdateQuizQuestionInput\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n            \n            class\n            QuizQuestion\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n            \n            variable\n            QuizQuestionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/entities/quiz-question.repository.ts\n            \n            injectable\n            QuizQuestionRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/quiz-question.resolver.ts\n            \n            class\n            QuizQuestionResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/quiz-question.service.ts\n            \n            injectable\n            QuizQuestionService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/args/get-quiz.args.ts\n            \n            class\n            GetQuizArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/args/get-quizzes.args.ts\n            \n            class\n            GetQuizzesArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts\n            \n            class\n            CreateQuizInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/inputs/delete-quiz.input.ts\n            \n            class\n            DeleteQuizInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts\n            \n            class\n            UpdateQuizInput\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/entities/quiz.entity.ts\n            \n            class\n            Quiz\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/entities/quiz.entity.ts\n            \n            variable\n            QuizSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/entities/quiz.repository.ts\n            \n            injectable\n            QuizRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/quiz.resolver.ts\n            \n            class\n            QuizResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/quiz.service.ts\n            \n            injectable\n            QuizService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/args/get-role.args.ts\n            \n            class\n            GetRoleArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/args/get-roles.args.ts\n            \n            class\n            GetRolesArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/create-role.input.ts\n            \n            class\n            CreateRoleInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/delete-role.input.ts\n            \n            class\n            DeleteRoleInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/update-role.input.ts\n            \n            class\n            UpdateRoleInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.entity.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.repository.ts\n            \n            injectable\n            RoleRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/role.resolver.ts\n            \n            class\n            RoleResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/args/get-school.args.ts\n            \n            class\n            GetSchoolArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/args/get-schools.args.ts\n            \n            class\n            GetSchoolsArgs\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/inputs/create-school.input.ts\n            \n            class\n            CreateSchoolInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/inputs/delete-school.input.ts\n            \n            class\n            DeleteSchoolInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/inputs/update-school.input.ts\n            \n            class\n            UpdateSchoolInput\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/entities/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/entities/school.entity.ts\n            \n            variable\n            SchoolSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/entities/school.repository.ts\n            \n            injectable\n            SchoolRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/school.resolver.ts\n            \n            class\n            SchoolResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/args/get-user.args.ts\n            \n            class\n            GetUserArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/args/get-users.args.ts\n            \n            class\n            GetUsersArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/create-user.input.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/delete-user.input.ts\n            \n            class\n            DeleteUserInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/update-user.input.ts\n            \n            class\n            UpdateUserInput\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.entity.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.repository.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.resolver.ts\n            \n            class\n            UsersResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            function\n            generateSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/gql-arg.abstract.ts\n            \n            class\n            GqlArg\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/id.args.ts\n            \n            class\n            IdArg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/id.args.ts\n            \n            class\n            IdArrayArg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-inputs/gql-input.abstract.ts\n            \n            class\n            GqlInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-inputs/id.input.ts\n            \n            class\n            IdInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/proxies/repository-proxy.service.ts\n            \n            injectable\n            RepositoryProxyService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/shared/proxies/simple.repository.ts\n            \n            injectable\n            SimpleRepository\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 13.2.3\n        \n            @angular/cdk : ^13.2.3\n        \n            @angular/common : 13.2.3\n        \n            @angular/compiler : 13.2.3\n        \n            @angular/core : 13.2.3\n        \n            @angular/forms : 13.2.3\n        \n            @angular/platform-browser : 13.2.3\n        \n            @angular/platform-browser-dynamic : 13.2.3\n        \n            @angular/router : 13.2.3\n        \n            @apollo/client : ^3.5.9\n        \n            @auth0/angular-jwt : ^5.0.2\n        \n            @capacitor/core : ^3.4.1\n        \n            @compodoc/compodoc : ^1.1.18\n        \n            @ionic/angular : ^6.0.8\n        \n            @ionic/storage-angular : ^3.0.6\n        \n            @nestjs/apollo : ^10.0.4\n        \n            @nestjs/common : ^8.3.1\n        \n            @nestjs/config : ^1.2.0\n        \n            @nestjs/core : ^8.3.1\n        \n            @nestjs/graphql : ^10.0.4\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mongoose : ^9.0.2\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.3.1\n        \n            @ngx-translate/core : ^14.0.0\n        \n            @ngx-translate/http-loader : ^7.0.0\n        \n            @nrwl/angular : 13.8.3\n        \n            @nxtend/capacitor : 13.0.0\n        \n            @nxtend/ionic-angular : 13.0.0\n        \n            add : 2.0.6\n        \n            apollo-angular : ^3.0.0\n        \n            apollo-server-express : ^3.6.3\n        \n            bcryptjs : ^2.4.3\n        \n            class-validator : ^0.13.2\n        \n            del-cli : ^4.0.1\n        \n            dotenv : ^16.0.0\n        \n            graphql : ^16.3.0\n        \n            graphql-tools : ^8.2.0\n        \n            joi : ^17.6.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^6.2.2\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            primeicons : ^5.0.0\n        \n            primeng : ^13.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~7.5.4\n        \n            tslib : ^2.0.0\n        \n            url-polyfill : ^1.1.12\n        \n            uuid : ^8.3.2\n        \n            yarn : 1.22.17\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            generateSchema   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateSchema\n                        \n                    \n                \n            \n            \n                \ngenerateSchema()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSzakszolgNx\nThis project was generated using Nx.\n\n\n🔎 Smart, Fast and Extensible Build System\nQuick Start & Documentation\nNx Documentation\n10-minute video showing all Nx features\nInteractive Tutorial\nAdding capabilities to your workspace\nNx supports many plugins which add capabilities for developing different types of applications and different tools.\nThese capabilities include generating applications, libraries, etc as well as the devtools to test, and build projects as well.\nBelow are our core plugins:\n\nAngular\nng add @nrwl/angular\n\n\nReact\nng add @nrwl/react\n\n\nWeb (no framework frontends)\nng add @nrwl/web\n\n\nNest\nng add @nrwl/nest\n\n\nExpress\nng add @nrwl/express\n\n\nNode\nng add @nrwl/node\n\n\n\nThere are also many community plugins you could add.\nGenerate an application\nRun ng g @nrwl/angular:app my-app to generate an application.\n\nYou can use any of the plugins above to generate applications as well.\n\nWhen using Nx, you can create multiple applications and libraries in the same workspace.\nGenerate a library\nRun ng g @nrwl/angular:lib my-lib to generate a library.\n\nYou can also use any of the plugins above to generate libraries as well.\n\nLibraries are shareable across libraries and applications. They can be imported from @szakszolg-nx/mylib.\nDevelopment server\nRun ng serve my-app for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng g component my-component --project=my-app to generate a new component.\nBuild\nRun ng build my-app to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test my-app to execute the unit tests via Jest.\nRun nx affected:test to execute the unit tests affected by a change.\nRunning end-to-end tests\nRun ng e2e my-app to execute the end-to-end tests via Cypress.\nRun nx affected:e2e to execute the end-to-end tests affected by a change.\nUnderstand your workspace\nRun nx dep-graph to see a diagram of the dependencies of your projects.\nFurther help\nVisit the Nx Documentation to learn more.\n☁ Nx Cloud\nDistributed Computation Caching & Distributed Task Execution\n\n\nNx Cloud pairs with Nx in order to enable you to build and test code more rapidly, by up to 10 times. Even teams that are new to Nx can connect to Nx Cloud and start saving time instantly.\nTeams using Nx gain the advantage of building full-stack applications with their preferred framework alongside Nx’s advanced code generation and project dependency graph, plus a unified experience for both frontend and backend developers.\nVisit Nx Cloud to learn more.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupingItemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HangmanWordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MirrorWordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuizAnswerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuizModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuizQuestionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GroupingItemModule\n\n\n\ncluster_GroupingItemModule_exports\n\n\n\ncluster_GroupingItemModule_providers\n\n\n\ncluster_HangmanWordModule\n\n\n\ncluster_HangmanWordModule_exports\n\n\n\ncluster_HangmanWordModule_providers\n\n\n\ncluster_MirrorWordModule\n\n\n\ncluster_MirrorWordModule_exports\n\n\n\ncluster_MirrorWordModule_providers\n\n\n\ncluster_QuizAnswerModule\n\n\n\ncluster_QuizAnswerModule_exports\n\n\n\ncluster_QuizAnswerModule_providers\n\n\n\ncluster_QuizModule\n\n\n\ncluster_QuizModule_exports\n\n\n\ncluster_QuizModule_providers\n\n\n\ncluster_QuizQuestionModule\n\n\n\ncluster_QuizQuestionModule_exports\n\n\n\ncluster_QuizQuestionModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_exports\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nAuthModule->RoleModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nGroupingItemModule\n\nGroupingItemModule\n\nAppModule -->\n\nGroupingItemModule->AppModule\n\n\n\n\n\nGroupingItemRepository \n\nGroupingItemRepository \n\nGroupingItemRepository  -->\n\nGroupingItemModule->GroupingItemRepository \n\n\n\n\n\nGroupingItemService \n\nGroupingItemService \n\nGroupingItemService  -->\n\nGroupingItemModule->GroupingItemService \n\n\n\n\n\nHangmanWordModule\n\nHangmanWordModule\n\nAppModule -->\n\nHangmanWordModule->AppModule\n\n\n\n\n\nHangmanWordRepository \n\nHangmanWordRepository \n\nHangmanWordRepository  -->\n\nHangmanWordModule->HangmanWordRepository \n\n\n\n\n\nHangmanWordService \n\nHangmanWordService \n\nHangmanWordService  -->\n\nHangmanWordModule->HangmanWordService \n\n\n\n\n\nMirrorWordModule\n\nMirrorWordModule\n\nAppModule -->\n\nMirrorWordModule->AppModule\n\n\n\n\n\nMirrorWordRepository \n\nMirrorWordRepository \n\nMirrorWordRepository  -->\n\nMirrorWordModule->MirrorWordRepository \n\n\n\n\n\nMirrorWordService \n\nMirrorWordService \n\nMirrorWordService  -->\n\nMirrorWordModule->MirrorWordService \n\n\n\n\n\nQuizAnswerModule\n\nQuizAnswerModule\n\nAppModule -->\n\nQuizAnswerModule->AppModule\n\n\n\n\n\nQuizAnswerRepository \n\nQuizAnswerRepository \n\nQuizAnswerRepository  -->\n\nQuizAnswerModule->QuizAnswerRepository \n\n\n\n\n\nQuizAnswerService \n\nQuizAnswerService \n\nQuizAnswerService  -->\n\nQuizAnswerModule->QuizAnswerService \n\n\n\n\n\nQuizModule\n\nQuizModule\n\nQuizAnswerModule -->\n\nQuizModule->QuizAnswerModule\n\n\n\nAppModule -->\n\nQuizModule->AppModule\n\n\n\n\n\nQuizRepository \n\nQuizRepository \n\nQuizRepository  -->\n\nQuizModule->QuizRepository \n\n\n\n\n\nQuizService \n\nQuizService \n\nQuizService  -->\n\nQuizModule->QuizService \n\n\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoleRepository \n\nRoleRepository \n\nRoleRepository  -->\n\nRoleModule->RoleRepository \n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nSchoolRepository \n\nSchoolRepository \n\nSchoolRepository  -->\n\nSchoolModule->SchoolRepository \n\n\n\n\n\nSchoolService \n\nSchoolService \n\nSchoolService  -->\n\nSchoolModule->SchoolService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nGroupingItemRepository\n\nGroupingItemRepository\n\nGroupingItemModule -->\n\nGroupingItemRepository->GroupingItemModule\n\n\n\n\n\nGroupingItemService\n\nGroupingItemService\n\nGroupingItemModule -->\n\nGroupingItemService->GroupingItemModule\n\n\n\n\n\nHangmanWordRepository\n\nHangmanWordRepository\n\nHangmanWordModule -->\n\nHangmanWordRepository->HangmanWordModule\n\n\n\n\n\nHangmanWordService\n\nHangmanWordService\n\nHangmanWordModule -->\n\nHangmanWordService->HangmanWordModule\n\n\n\n\n\nMirrorWordRepository\n\nMirrorWordRepository\n\nMirrorWordModule -->\n\nMirrorWordRepository->MirrorWordModule\n\n\n\n\n\nMirrorWordService\n\nMirrorWordService\n\nMirrorWordModule -->\n\nMirrorWordService->MirrorWordModule\n\n\n\n\n\nQuizAnswerRepository\n\nQuizAnswerRepository\n\nQuizAnswerModule -->\n\nQuizAnswerRepository->QuizAnswerModule\n\n\n\n\n\nQuizAnswerService\n\nQuizAnswerService\n\nQuizAnswerModule -->\n\nQuizAnswerService->QuizAnswerModule\n\n\n\n\n\nQuizRepository\n\nQuizRepository\n\nQuizModule -->\n\nQuizRepository->QuizModule\n\n\n\n\n\nQuizService\n\nQuizService\n\nQuizModule -->\n\nQuizService->QuizModule\n\n\n\n\n\nQuizQuestionRepository \n\nQuizQuestionRepository \n\n\n\nQuizQuestionService \n\nQuizQuestionService \n\n\n\nQuizQuestionModule\n\nQuizQuestionModule\n\nQuizQuestionRepository  -->\n\nQuizQuestionModule->QuizQuestionRepository \n\n\n\nQuizQuestionService  -->\n\nQuizQuestionModule->QuizQuestionService \n\n\n\n\n\nQuizQuestionRepository\n\nQuizQuestionRepository\n\nQuizQuestionModule -->\n\nQuizQuestionRepository->QuizQuestionModule\n\n\n\n\n\nQuizQuestionService\n\nQuizQuestionService\n\nQuizQuestionModule -->\n\nQuizQuestionService->QuizQuestionModule\n\n\n\n\n\nRoleRepository\n\nRoleRepository\n\nRoleModule -->\n\nRoleRepository->RoleModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nSchoolRepository\n\nSchoolRepository\n\nSchoolModule -->\n\nSchoolRepository->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    24 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    72 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GroupingItemDocument   (apps/.../grouping-item.entity.ts)\n                        \n                        \n                            HangmanWordDocument   (apps/.../hangman-word.entity.ts)\n                        \n                        \n                            MirrorWordDocument   (apps/.../mirror-word.entity.ts)\n                        \n                        \n                            QuizAnswerDocument   (apps/.../quiz-answer.entity.ts)\n                        \n                        \n                            QuizDocument   (apps/.../quiz.entity.ts)\n                        \n                        \n                            QuizQuestionDocument   (apps/.../quiz-question.entity.ts)\n                        \n                        \n                            RoleDocument   (apps/.../role.entity.ts)\n                        \n                        \n                            SchoolDocument   (apps/.../school.entity.ts)\n                        \n                        \n                            UserDocument   (apps/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n    \n    \n        \n            \n                \n                    \n                    GroupingItemDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n    \n    \n        \n            \n                \n                    \n                    HangmanWordDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n    \n    \n        \n            \n                \n                    \n                    MirrorWordDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts\n    \n    \n        \n            \n                \n                    \n                    QuizAnswerDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/quiz/entities/quiz.entity.ts\n    \n    \n        \n            \n                \n                    \n                    QuizDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n    \n    \n        \n            \n                \n                    \n                    QuizQuestionDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/role/entities/role.entity.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/school/entities/school.entity.ts\n    \n    \n        \n            \n                \n                    \n                    SchoolDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/users/entities/user.entity.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bcrypt   (apps/.../auth.service.ts)\n                        \n                        \n                            bcrypt   (apps/.../users.service.ts)\n                        \n                        \n                            bcrypt   (apps/.../user.repository.ts)\n                        \n                        \n                            configuration   (apps/.../configuration.ts)\n                        \n                        \n                            CurrentUser   (apps/.../current-user.decorator.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            GroupingItemSchema   (apps/.../grouping-item.entity.ts)\n                        \n                        \n                            HangmanWordSchema   (apps/.../hangman-word.entity.ts)\n                        \n                        \n                            MirrorWordSchema   (apps/.../mirror-word.entity.ts)\n                        \n                        \n                            mongooseConfig   (apps/.../mongo-config.factory.ts)\n                        \n                        \n                            Permission   (apps/.../permission.decorator.ts)\n                        \n                        \n                            QuizAnswerSchema   (apps/.../quiz-answer.entity.ts)\n                        \n                        \n                            QuizQuestionSchema   (apps/.../quiz-question.entity.ts)\n                        \n                        \n                            QuizSchema   (apps/.../quiz.entity.ts)\n                        \n                        \n                            Resource   (apps/.../permission.decorator.ts)\n                        \n                        \n                            RoleSchema   (apps/.../role.entity.ts)\n                        \n                        \n                            SchoolSchema   (apps/.../school.entity.ts)\n                        \n                        \n                            UserSchema   (apps/.../user.entity.ts)\n                        \n                        \n                            validationSchema   (apps/.../validation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/entities/user.repository.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/core/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => ({\n    environment: process.env.NODE_ENV,\n    port: parseInt(process.env.PORT || '3000', 10),\n})\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/auth/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_data: unknown, context: ExecutionContext) => {\n    if (context.getType() === 'http') return context.switchToHttp().getRequest().user\n    return GqlExecutionContext.create(context).getContext().req.user\n})\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GroupingItemSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(GroupingItem)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HangmanWordSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(HangmanWord)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MirrorWordSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(MirrorWord)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/core/config/mongo-config.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mongooseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    imports: [ConfigModule],\n    providers: [ConfigService],\n    mongooseConfigFactory: async (configService: ConfigService): Promise => {\n        const uri = `mongodb+srv://${configService.get('DATABASE_USER')}@${configService.get(\n            'DATABASE_HOST',\n        )}/${configService.get(\n            'DATABASE_NAME',\n        )}?authMechanism=MONGODB-X509&ssl=true&retryWrites=true&w=majority`\n        const cert = configService.get('DATABASE_CERT')\n        return {\n            uri,\n            sslKey: cert,\n            sslCert: cert,\n        }\n    },\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/auth/decorators/permission.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Permission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...abilities: string[]) => SetMetadata('abilities', abilities)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Resource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...resources: string[]) => SetMetadata('resources', resources)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        QuizAnswerSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(QuizAnswer)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        QuizQuestionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(QuizQuestion)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/quiz/entities/quiz.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        QuizSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Quiz)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/role/entities/role.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/school/entities/school.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SchoolSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(School)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/entities/user.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/core/config/validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n    NODE_ENV: Joi.string().valid('development', 'production', 'test').required(),\n    PORT: Joi.number().default(3000),\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
