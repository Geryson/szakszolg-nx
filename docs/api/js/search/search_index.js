var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,2.969,1,3.483]],["body/controllers/AppController.html",[0,4.901,1,5.75,2,3.772,3,0.082,4,0.072,5,0.062,6,5.407,7,0.251,8,1.904,9,7.664,10,0.719,11,0.007,12,7.577,13,0.297,14,6.089,15,1.501,16,7.324,17,0.124,18,1.127,19,1.289,20,1.314,21,1.314,22,5.595,23,6.089,24,0.082,25,0.408,26,2.885,27,2.532,28,1.939,29,6.089,30,0.006,31,0.006]],["title/modules/AppModule.html",[32,1.556,33,3.483]],["body/modules/AppModule.html",[1,4.901,2,3.396,3,0.051,4,0.045,5,0.039,11,0.007,17,0.137,18,0.699,22,5.328,24,0.051,25,0.253,30,0.004,31,0.004,32,1.859,33,7.235,34,1.693,35,2.46,36,3.35,37,3.35,38,3.35,39,5.082,40,5.616,41,5.616,42,5.616,43,5.616,44,5.616,45,5.616,46,5.616,47,5.328,48,5.328,49,5.616,50,5.616,51,5.082,52,2.673,53,1.839,54,1.839,55,3.773,56,2.598,57,2.598,58,3.773,59,3.773,60,3.773,61,3.071,62,3.071,63,3.35,64,2.087,65,2.697,66,5.482,67,2.087,68,2.697,69,2.087,70,2.697,71,3.773,72,3.773,73,3.35,74,1.307,75,2.697,76,3.773,77,3.773,78,3.773,79,3.773]],["title/injectables/AppService.html",[22,3.113,80,0.866]],["body/injectables/AppService.html",[3,0.085,4,0.075,5,0.064,7,0.26,8,1.946,9,7.759,11,0.007,13,0.308,15,1.555,16,7.759,17,0.117,18,1.168,19,1.335,20,1.361,21,1.361,22,5.252,24,0.085,25,0.423,28,2.008,30,0.006,31,0.006,80,1.462,81,2.138,82,5.6,83,6.307,84,6.307,85,6.307]],["title/controllers/AuthController.html",[0,2.969,86,3.483]],["body/controllers/AuthController.html",[0,3.547,2,3.397,3,0.074,4,0.065,5,0.056,7,0.226,8,1.782,10,0.647,11,0.007,13,0.267,15,1.352,17,0.13,18,1.015,19,1.161,20,1.183,21,1.183,24,0.074,25,0.368,26,2.599,27,2.28,28,1.746,30,0.005,31,0.005,86,5.381,87,4.869,88,4.869,89,5.484,90,3.435,91,6.295,92,5.484,93,8.306,94,5.484,95,5.484,96,1.432,97,1.015,98,0.257,99,0.662,100,6.976,101,3.921,102,4.869,103,2.84,104,5.082,105,4.464,106,4.162,107,5.484,108,2.84,109,3.921,110,4.391,111,5.484,112,5.484,113,5.484,114,5.484,115,2.933,116,5.484,117,5.484]],["title/modules/AuthModule.html",[32,1.556,39,2.969]],["body/modules/AuthModule.html",[2,4.119,3,0.067,4,0.059,5,0.051,11,0.007,17,0.136,18,0.921,24,0.067,25,0.333,30,0.005,31,0.005,32,2.254,34,2.232,35,2.984,39,5.887,51,4.301,52,3.242,53,2.425,54,2.425,56,3.151,57,2.357,61,4.049,86,5.685,104,5.547,105,4.049,118,4.417,119,4.417,120,6.13,121,6.13,122,4.974,123,4.754,124,4.974,125,4.049,126,5.413,127,3.775,128,4.974,129,3.217,130,4.974,131,4.974,132,4.974,133,4.974,134,4.974,135,4.049,136,4.974,137,4.417,138,4.417,139,4.974,140,3.775,141,4.974,142,4.417]],["title/injectables/AuthService.html",[80,0.866,104,2.969]],["body/injectables/AuthService.html",[3,0.051,4,0.045,5,0.039,7,0.156,8,1.378,11,0.007,13,0.346,15,1.592,17,0.114,18,0.699,19,0.799,20,0.814,21,0.814,24,0.051,25,0.253,27,2.685,28,2.057,30,0.004,31,0.004,80,1.035,81,1.279,90,3.702,91,4.868,96,1.851,97,1.312,98,0.332,99,0.856,101,3.919,104,3.546,110,4.391,115,3.454,123,2.697,125,3.071,127,2.863,137,4.868,140,2.863,142,3.35,143,3.071,144,4.463,145,5.482,146,1.548,147,3.35,148,4.664,149,8.107,150,7.198,151,3.773,152,4.868,153,5.482,154,3.773,155,4.823,156,4.868,157,1.162,158,4.38,159,3.773,160,4.391,161,1.94,162,5.482,163,3.773,164,2.245,165,3.071,166,3.35,167,3.071,168,3.071,169,3.071,170,3.071,171,3.071,172,3.071,173,3.071,174,3.071,175,2.849,176,2.697,177,2.863,178,3.35,179,4.617,180,4.868,181,3.773,182,3.35,183,1.365,184,3.35,185,3.773,186,3.35,187,3.773,188,3.773,189,3.773,190,5.482,191,3.773,192,3.773,193,3.773,194,3.773,195,2.863,196,2.337,197,3.35,198,2.697]],["title/modules/CoreModule.html",[32,1.556,40,3.281]],["body/modules/CoreModule.html",[2,3.355,3,0.073,4,0.064,5,0.055,11,0.007,17,0.138,18,1.003,24,0.073,25,0.363,30,0.005,31,0.005,32,2.385,34,2.431,40,5.028,56,2.567,57,3.333,126,4.41,127,4.111,165,4.41,199,5.417,200,5.726,201,5.417,202,5.726,203,5.417,204,5.417,205,0.611,206,5.338,207,5.417,208,2.897,209,1.656,210,7.034,211,5.417,212,4.81,213,4.41,214,5.417,215,4.81,216,5.417,217,5.417,218,1.685,219,5.417,220,5.417,221,5.417,222,5.417,223,5.417,224,5.417,225,5.417,226,4.81,227,5.417,228,5.417,229,2.805]],["title/classes/CoreResolver.html",[25,0.308,206,3.483]],["body/classes/CoreResolver.html",[3,0.086,4,0.076,5,0.066,7,0.265,8,1.967,10,0.758,11,0.007,13,0.313,15,1.583,17,0.097,24,0.086,25,0.43,28,2.045,30,0.006,31,0.006,205,0.725,206,5.942,230,0.692,231,5.702,232,8.792,233,3.434,234,6.422,235,7.829,236,4.187,237,4.187,238,6.422]],["title/classes/CreateGroupingItemInput.html",[25,0.308,239,3.113]],["body/classes/CreateGroupingItemInput.html",[3,0.074,4,0.065,5,0.056,7,0.228,10,0.93,11,0.007,13,0.384,17,0.107,24,0.074,25,0.37,30,0.005,31,0.005,69,4.605,98,0.369,157,1.232,205,0.623,230,0.595,239,4.828,240,4.312,241,7.393,242,4.188,243,0.822,244,3.957,245,1.127,246,6.415,247,6.415,248,6.415,249,1.425,250,4.9,251,1.953,252,5.518,253,5.518,254,2.267,255,1.146,256,2.951,257,3.052]],["title/classes/CreateHangmanWordInput.html",[25,0.308,258,3.113]],["body/classes/CreateHangmanWordInput.html",[3,0.077,4,0.067,5,0.058,7,0.235,10,0.858,11,0.007,13,0.354,17,0.121,24,0.077,25,0.487,30,0.006,31,0.006,67,4.424,98,0.34,157,1.156,205,0.643,230,0.614,243,0.839,244,4.017,245,1.15,249,1.292,254,2.314,255,1.183,256,3.046,257,3.15,258,4.928,259,4.143,260,6.512,261,3.685,262,5.174,263,5.174,264,2.177,265,5.058,266,5.058,267,2.349,268,1.301]],["title/classes/CreateMirrorWordInput.html",[25,0.308,269,3.113]],["body/classes/CreateMirrorWordInput.html",[3,0.08,4,0.071,5,0.061,7,0.246,10,0.704,11,0.007,13,0.291,17,0.123,24,0.08,25,0.501,30,0.006,31,0.006,64,4.137,98,0.28,157,1.027,205,0.673,230,0.643,243,0.864,244,4.104,245,1.184,249,1.208,254,2.382,255,1.239,256,3.19,257,3.3,260,6.09,261,3.859,263,5.286,264,1.788,266,5.297,267,2.197,268,1.363,269,5.074,270,3.874,271,4.104]],["title/classes/CreatePuzzleInput.html",[25,0.308,272,3.113]],["body/classes/CreatePuzzleInput.html",[3,0.084,4,0.074,5,0.064,7,0.258,10,0.739,11,0.007,13,0.305,17,0.116,24,0.084,25,0.42,30,0.006,31,0.006,98,0.293,157,1.058,205,0.707,230,0.675,243,0.89,244,4.195,245,1.221,249,1.349,254,2.455,255,1.301,256,3.349,257,3.463,272,5.229,273,6.845,274,4.753,275,6.8,276,6.262]],["title/classes/CreateQuizAnswerInput.html",[25,0.308,277,3.113]],["body/classes/CreateQuizAnswerInput.html",[3,0.064,4,0.056,5,0.048,7,0.195,10,0.967,11,0.007,13,0.412,17,0.097,24,0.064,25,0.317,30,0.005,31,0.005,74,2.994,98,0.396,99,0.946,157,1.16,183,2.327,205,0.534,230,0.51,243,0.742,244,3.668,245,1.018,249,1.456,251,1.675,254,2.048,255,0.983,256,2.532,257,2.618,277,4.362,278,3.426,279,7.676,280,3.593,281,5.946,282,5.946,283,6.486,284,4.185,285,5.946,286,4.725,287,4.203,288,2.433,289,4.203,290,5.71,291,4.734,292,4.203,293,4.598,294,4.734,295,4.734,296,4.881]],["title/classes/CreateQuizInput.html",[25,0.308,297,3.113]],["body/classes/CreateQuizInput.html",[3,0.067,4,0.058,5,0.05,7,0.204,10,0.982,11,0.007,13,0.406,17,0.12,19,1.047,20,1.067,21,1.067,24,0.067,25,0.332,30,0.005,31,0.005,74,2.294,98,0.39,157,1.235,205,0.558,230,0.533,243,0.765,244,3.751,245,1.049,249,1.453,251,2.344,254,2.11,255,1.027,256,2.645,257,2.736,297,4.493,298,7.601,299,3.754,300,5.669,301,4.626,302,5.669,303,6.632,304,6.08,305,4.946,306,4.946,307,5.066,308,4.946,309,4.946,310,4.946,311,4.285,312,4.027,313,3.536]],["title/classes/CreateQuizQuestionInput.html",[25,0.308,311,2.969]],["body/classes/CreateQuizQuestionInput.html",[3,0.067,4,0.059,5,0.051,7,0.206,10,0.945,11,0.007,13,0.39,17,0.1,24,0.067,25,0.334,30,0.005,31,0.005,74,2.889,98,0.411,99,0.966,157,1.25,205,0.563,230,0.538,243,0.769,244,3.767,245,1.055,249,1.415,251,2.358,254,2.121,255,1.036,256,2.667,257,2.759,278,3.305,311,4.309,312,6.79,314,3.786,315,5.693,316,6.106,317,5.693,318,1.794,319,4.587,320,4.429,321,4.429,322,4.988,323,4.988]],["title/classes/CreateRoleInput.html",[25,0.308,324,3.113]],["body/classes/CreateRoleInput.html",[3,0.074,4,0.065,5,0.056,7,0.226,10,0.928,11,0.007,13,0.383,17,0.119,24,0.074,25,0.475,30,0.005,31,0.005,97,1.455,98,0.368,157,1.231,205,0.619,230,0.591,243,0.818,244,3.946,245,1.122,249,1.341,254,2.258,255,1.139,256,2.933,257,3.033,264,2.124,267,2.308,268,1.253,301,4.867,324,4.809,325,7.375,326,4.162,327,6.396,328,5.484,329,5.484,330,5.484,331,5.484,332,3.268]],["title/classes/CreateSchoolInput.html",[25,0.308,333,3.113]],["body/classes/CreateSchoolInput.html",[3,0.067,4,0.059,5,0.051,7,0.206,10,0.985,11,0.007,13,0.407,17,0.113,24,0.067,25,0.447,30,0.005,31,0.005,97,1.389,98,0.391,157,1.26,205,0.563,230,0.538,243,0.769,244,3.767,245,1.055,249,1.386,254,2.121,255,1.036,256,2.667,257,2.759,264,2.399,267,2.45,268,1.139,284,4.298,332,3.071,333,4.518,334,7.62,335,3.786,336,5.362,337,5.693,338,4.463,339,4.988,340,4.988,341,4.429,342,4.988,343,4.988,344,4.988,345,5.915]],["title/classes/CreateTokenInput.html",[25,0.308,346,3.113]],["body/classes/CreateTokenInput.html",[3,0.072,4,0.064,5,0.055,7,0.222,10,0.827,11,0.007,13,0.38,17,0.117,24,0.072,25,0.47,30,0.005,31,0.005,98,0.365,140,5.91,157,1.069,164,4.168,205,0.608,218,1.511,230,0.58,243,0.809,245,1.109,249,1.258,251,1.905,254,2.231,255,1.118,264,1.613,267,2.058,268,1.23,286,5.037,293,5.008,296,5.317,301,4.339,318,1.57,346,4.752,347,6.915,348,4.086,349,2.919,350,1.939,351,7.006,352,7.006,353,5.384,354,5.384,355,0.959,356,5.384,357,2.037]],["title/classes/CreateUserInput.html",[25,0.308,358,3.113]],["body/classes/CreateUserInput.html",[3,0.065,4,0.057,5,0.049,7,0.199,10,0.975,11,0.007,13,0.403,17,0.111,24,0.065,25,0.437,30,0.005,31,0.005,98,0.387,99,0.954,157,1.254,158,5.009,160,4.575,205,0.546,218,1.408,230,0.521,243,0.753,244,3.709,245,1.033,249,1.374,251,1.712,254,2.078,255,1.005,256,2.587,257,2.676,264,1.956,267,2.322,268,1.105,284,4.232,318,1.655,319,3.74,358,4.427,359,7.552,360,3.672,361,5.28,362,6.013,363,4.838,364,4.838,365,1.712,366,4.838,367,4.838,368,4.838,369,4.838,370,5.795]],["title/classes/DeleteGroupingItemInput.html",[25,0.308,371,3.113]],["body/classes/DeleteGroupingItemInput.html",[3,0.082,4,0.072,5,0.062,7,0.25,10,0.716,11,0.007,13,0.296,17,0.124,24,0.082,25,0.507,30,0.006,31,0.006,69,3.356,98,0.284,157,1.038,205,0.685,230,0.654,240,3.143,242,4.606,243,0.873,245,1.197,249,1.221,254,2.408,255,1.26,264,1.818,267,2.221,268,1.386,349,3.051,350,2.28,355,1.081,357,2.296,371,5.128,372,5.388,373,3.245]],["title/classes/DeleteHangmanWordInput.html",[25,0.308,374,3.113]],["body/classes/DeleteHangmanWordInput.html",[3,0.082,4,0.072,5,0.062,7,0.25,10,0.716,11,0.007,13,0.296,17,0.124,24,0.082,25,0.507,30,0.006,31,0.006,67,3.356,98,0.284,157,1.038,205,0.685,230,0.654,243,0.873,245,1.197,249,1.221,254,2.408,255,1.26,259,3.143,261,3.925,264,1.818,267,2.221,268,1.386,349,3.051,350,2.28,355,1.081,357,2.296,373,3.245,374,5.128,375,4.94]],["title/classes/DeleteMirrorWordInput.html",[25,0.308,376,3.113]],["body/classes/DeleteMirrorWordInput.html",[3,0.082,4,0.072,5,0.062,7,0.25,10,0.716,11,0.007,13,0.296,17,0.124,24,0.082,25,0.507,30,0.006,31,0.006,64,3.356,98,0.284,157,1.038,205,0.685,230,0.654,243,0.873,245,1.197,249,1.221,254,2.408,255,1.26,261,3.925,264,1.818,267,2.221,268,1.386,270,3.143,349,3.051,350,2.28,355,1.081,357,2.296,373,3.245,375,4.94,376,5.128]],["title/classes/DeletePuzzleInput.html",[25,0.308,377,3.113]],["body/classes/DeletePuzzleInput.html",[3,0.082,4,0.072,5,0.062,7,0.252,10,0.721,11,0.007,13,0.298,17,0.125,24,0.082,25,0.509,30,0.006,31,0.006,98,0.286,157,1.042,205,0.69,230,0.659,243,0.877,245,1.202,249,1.226,254,2.418,255,1.269,264,1.831,267,2.23,268,1.396,274,4.638,349,3.058,350,2.287,355,1.088,357,2.312,373,3.268,377,5.15,378,5.426]],["title/classes/DeleteQuizAnswerInput.html",[25,0.308,379,3.113]],["body/classes/DeleteQuizAnswerInput.html",[3,0.082,4,0.072,5,0.062,7,0.25,10,0.716,11,0.007,13,0.296,17,0.124,24,0.082,25,0.507,30,0.006,31,0.006,74,2.102,98,0.284,157,1.038,205,0.685,230,0.654,243,0.873,245,1.197,249,1.221,254,2.408,255,1.26,264,1.818,267,2.221,268,1.386,278,2.405,280,4.606,349,3.051,350,2.28,355,1.081,357,2.296,373,3.245,379,5.128,380,5.388]],["title/classes/DeleteQuizInput.html",[25,0.308,381,3.113]],["body/classes/DeleteQuizInput.html",[3,0.082,4,0.072,5,0.062,7,0.252,10,0.721,11,0.007,13,0.298,17,0.125,24,0.082,25,0.509,30,0.006,31,0.006,98,0.286,157,1.042,205,0.69,230,0.659,243,0.877,245,1.202,249,1.226,254,2.418,255,1.269,264,1.831,267,2.23,268,1.396,299,4.638,349,3.058,350,2.287,355,1.088,357,2.312,373,3.268,381,5.15,382,5.426]],["title/classes/DeleteQuizQuestionInput.html",[25,0.308,383,3.113]],["body/classes/DeleteQuizQuestionInput.html",[3,0.082,4,0.072,5,0.062,7,0.25,10,0.716,11,0.007,13,0.296,17,0.124,24,0.082,25,0.507,30,0.006,31,0.006,74,2.102,98,0.284,157,1.038,205,0.685,230,0.654,243,0.873,245,1.197,249,1.221,254,2.408,255,1.26,264,1.818,267,2.221,268,1.386,278,2.405,314,4.606,349,3.051,350,2.28,355,1.081,357,2.296,373,3.245,383,5.128,384,5.388]],["title/classes/DeleteRoleInput.html",[25,0.308,385,3.113]],["body/classes/DeleteRoleInput.html",[3,0.082,4,0.072,5,0.062,7,0.252,10,0.721,11,0.007,13,0.298,17,0.125,24,0.082,25,0.509,30,0.006,31,0.006,98,0.286,157,1.042,205,0.69,230,0.659,243,0.877,245,1.202,249,1.226,254,2.418,255,1.269,264,1.831,267,2.23,268,1.396,326,4.638,349,3.058,350,2.287,355,1.088,357,2.312,373,3.268,385,5.15,386,5.426]],["title/classes/DeleteSchoolInput.html",[25,0.308,387,3.113]],["body/classes/DeleteSchoolInput.html",[3,0.082,4,0.072,5,0.062,7,0.252,10,0.721,11,0.007,13,0.298,17,0.125,24,0.082,25,0.509,30,0.006,31,0.006,98,0.286,157,1.042,205,0.69,230,0.659,243,0.877,245,1.202,249,1.226,254,2.418,255,1.269,264,1.831,267,2.23,268,1.396,335,4.638,349,3.058,350,2.287,355,1.088,357,2.312,373,3.268,387,5.15,388,5.426]],["title/classes/DeleteTokenInput.html",[25,0.308,389,3.113]],["body/classes/DeleteTokenInput.html",[3,0.082,4,0.072,5,0.062,7,0.252,10,0.721,11,0.007,13,0.298,17,0.125,24,0.082,25,0.509,30,0.006,31,0.006,98,0.286,157,1.042,205,0.69,230,0.659,243,0.877,245,1.202,249,1.226,254,2.418,255,1.269,264,1.831,267,2.23,268,1.396,348,4.638,349,3.058,350,2.287,355,1.088,357,2.312,373,3.268,389,5.15,390,5.426]],["title/classes/DeleteUserInput.html",[25,0.308,391,3.113]],["body/classes/DeleteUserInput.html",[3,0.082,4,0.072,5,0.062,7,0.252,10,0.721,11,0.007,13,0.298,17,0.125,24,0.082,25,0.509,30,0.006,31,0.006,98,0.286,157,1.042,205,0.69,230,0.659,243,0.877,245,1.202,249,1.226,254,2.418,255,1.269,264,1.831,267,2.23,268,1.396,349,3.058,350,2.287,355,1.088,357,2.312,360,4.638,373,3.268,391,5.15,392,5.426]],["title/controllers/FileController.html",[0,2.969,393,3.483]],["body/controllers/FileController.html",[0,2.248,2,2.153,3,0.047,4,0.041,5,0.063,7,0.143,8,1.297,10,0.86,11,0.007,13,0.355,15,1.795,17,0.119,18,0.644,24,0.047,25,0.233,28,2.319,30,0.004,31,0.004,88,3.086,90,3.788,96,1.78,97,1.463,98,0.163,99,0.823,101,4.872,102,4.583,103,1.8,108,1.8,109,2.485,115,2.76,157,1.047,175,2.578,393,3.917,394,3.086,395,5.162,396,6.815,397,5.162,398,5.162,399,5.162,400,3.476,401,3.476,402,3.476,403,7.205,404,3.476,405,3.476,406,5.526,407,5.162,408,3.476,409,3.476,410,3.476,411,3.476,412,3.476,413,3.476,414,3.476,415,4.202,416,3.476,417,1.315,418,2.829,419,3.086,420,3.476,421,5.162,422,3.476,423,2.829,424,5.162,425,3.476,426,4.202,427,2.829,428,4.202,429,2.829,430,3.476,431,5.013,432,3.476,433,2.638,434,3.476,435,3.476,436,3.476,437,3.476,438,3.476,439,6.158,440,3.476,441,3.476,442,3.476,443,3.476,444,7.281,445,3.476,446,3.476,447,5.162,448,3.476,449,3.476,450,5.162,451,3.476,452,3.476,453,3.476,454,3.476,455,3.476,456,3.476,457,5.162,458,3.476,459,3.476,460,3.476,461,3.476,462,3.476,463,3.476,464,3.476,465,3.476,466,3.476,467,3.476,468,3.476,469,3.476,470,3.476,471,3.476,472,3.476,473,3.476,474,3.476]],["title/modules/FileModule.html",[32,1.556,41,3.281]],["body/modules/FileModule.html",[2,4.463,3,0.076,4,0.066,5,0.057,11,0.007,17,0.131,18,1.041,24,0.076,25,0.377,30,0.006,31,0.006,32,2.443,34,2.524,35,3.234,41,6.447,52,3.513,53,2.742,54,2.742,56,3.414,57,2.665,109,4.02,215,4.993,226,4.993,229,3.732,393,6.035,423,4.578,475,4.993,476,4.993,477,4.993,478,6.729,479,5.624,480,5.624,481,5.624,482,5.624,483,5.866,484,5.624,485,5.624]],["title/injectables/FileService.html",[80,0.866,478,3.281]],["body/injectables/FileService.html",[3,0.095,4,0.083,5,0.072,11,0.007,17,0.106,18,1.303,24,0.095,25,0.472,30,0.006,31,0.006,80,1.561,81,2.386,478,5.912,486,6.247]],["title/classes/GetGroupingItemArgs.html",[25,0.308,487,3.113]],["body/classes/GetGroupingItemArgs.html",[3,0.082,4,0.072,5,0.063,7,0.253,10,0.724,11,0.007,13,0.299,17,0.115,24,0.082,25,0.411,30,0.006,31,0.006,69,3.391,98,0.287,157,1.045,205,0.692,218,1.642,230,0.661,240,3.175,243,0.878,245,1.205,249,1.229,255,1.273,318,1.374,350,2.29,355,1.092,365,2.17,487,5.161,488,4.992,489,5.444,490,4.219,491,4.992,492,2.488,493,3.015]],["title/classes/GetGroupingItemsArgs.html",[25,0.308,494,3.113]],["body/classes/GetGroupingItemsArgs.html",[3,0.079,4,0.069,5,0.06,7,0.242,10,0.693,11,0.007,13,0.286,17,0.122,24,0.079,25,0.496,30,0.006,31,0.006,69,3.245,98,0.275,99,0.893,157,1.113,205,0.662,218,1.266,230,0.632,240,3.038,243,0.854,245,1.172,249,1.195,251,2.076,255,1.218,268,1.34,318,1.659,332,3.412,355,1.045,488,4.776,492,2.381,493,2.933,494,5.021,495,5.209,496,3.926,497,4.2,498,3.137,499,3.245]],["title/classes/GetHangmanWordArgs.html",[25,0.308,500,3.113]],["body/classes/GetHangmanWordArgs.html",[3,0.077,4,0.067,5,0.058,7,0.235,10,0.858,11,0.007,13,0.354,17,0.11,24,0.077,25,0.382,30,0.006,31,0.006,67,4.018,98,0.34,99,0.877,157,1.156,205,0.643,218,1.818,230,0.614,243,0.839,245,1.15,249,1.292,255,1.183,259,3.762,262,5.174,318,1.628,350,2.214,355,1.015,365,2.571,490,4.108,491,4.637,492,2.312,493,2.879,500,4.928,501,5.194,502,4.637,503,5.696]],["title/classes/GetHangmanWordsArgs.html",[25,0.308,504,3.113]],["body/classes/GetHangmanWordsArgs.html",[3,0.073,4,0.064,5,0.055,7,0.223,10,0.829,11,0.007,13,0.342,17,0.118,24,0.073,25,0.471,30,0.005,31,0.005,67,3.882,98,0.329,99,0.997,157,1.204,205,0.609,218,1.683,230,0.582,243,0.81,245,1.111,249,1.26,251,2.484,255,1.121,259,3.635,262,5.045,268,1.233,318,1.85,332,3.236,355,0.962,492,2.191,493,2.781,496,3.806,497,4.039,498,2.888,499,2.987,501,5.018,504,4.761,505,4.396,506,5.4]],["title/classes/GetMirrorWordArgs.html",[25,0.308,507,3.113]],["body/classes/GetMirrorWordArgs.html",[3,0.081,4,0.071,5,0.061,7,0.248,10,0.709,11,0.007,13,0.293,17,0.113,24,0.081,25,0.403,30,0.006,31,0.006,64,3.322,98,0.281,157,1.031,205,0.678,218,1.621,230,0.647,243,0.867,245,1.189,249,1.387,255,1.247,270,3.111,318,1.346,350,2.269,355,1.07,365,2.126,490,4.188,491,4.89,492,2.437,493,2.977,501,4.294,502,4.89,507,5.095,508,7.512,509,7.512]],["title/classes/GetMirrorWordsArgs.html",[25,0.308,510,3.113]],["body/classes/GetMirrorWordsArgs.html",[3,0.079,4,0.069,5,0.06,7,0.242,10,0.693,11,0.007,13,0.286,17,0.122,24,0.079,25,0.496,30,0.006,31,0.006,64,3.245,98,0.275,99,0.893,157,1.113,205,0.662,218,1.266,230,0.632,243,0.854,245,1.172,249,1.195,251,2.076,255,1.218,268,1.34,270,3.038,318,1.659,332,3.412,355,1.045,492,2.381,493,2.933,496,3.926,497,4.2,498,3.137,499,3.245,501,4.194,505,4.776,510,5.021]],["title/classes/GetPuzzleArgs.html",[25,0.308,511,3.113]],["body/classes/GetPuzzleArgs.html",[3,0.082,4,0.072,5,0.062,7,0.252,10,0.721,11,0.007,13,0.298,17,0.125,24,0.082,25,0.509,30,0.006,31,0.006,98,0.286,157,1.042,205,0.69,230,0.659,243,0.877,245,1.202,249,1.226,255,1.269,264,1.831,267,2.23,268,1.396,350,2.287,355,1.088,490,4.213,492,2.48,493,3.009,511,5.15,512,4.974,513,5.426,514,4.144]],["title/classes/GetPuzzlesArgs.html",[25,0.308,515,3.113]],["body/classes/GetPuzzlesArgs.html",[3,0.079,4,0.07,5,0.06,7,0.244,10,0.697,11,0.007,13,0.288,17,0.123,24,0.079,25,0.498,30,0.006,31,0.006,98,0.277,99,0.897,157,1.117,205,0.667,218,1.274,230,0.637,243,0.858,245,1.177,249,1.2,251,2.09,255,1.227,268,1.349,318,1.666,332,3.426,355,1.052,492,2.397,493,2.945,496,3.935,497,4.213,498,3.158,499,3.266,512,4.808,515,5.042,516,5.244]],["title/classes/GetQuizAnswerArgs.html",[25,0.308,517,3.113]],["body/classes/GetQuizAnswerArgs.html",[3,0.082,4,0.072,5,0.062,7,0.25,10,0.716,11,0.007,13,0.296,17,0.124,24,0.082,25,0.507,30,0.006,31,0.006,74,2.102,98,0.284,157,1.038,205,0.685,230,0.654,243,0.873,245,1.197,249,1.221,255,1.26,264,1.818,267,2.221,268,1.386,278,2.405,350,2.28,355,1.081,490,4.203,492,2.463,493,2.996,514,4.116,517,5.128,518,4.94,519,5.388]],["title/classes/GetQuizAnswersArgs.html",[25,0.308,520,3.113]],["body/classes/GetQuizAnswersArgs.html",[3,0.074,4,0.065,5,0.056,7,0.225,10,0.835,11,0.007,13,0.345,17,0.118,24,0.074,25,0.474,30,0.005,31,0.005,74,2.451,98,0.332,99,1.001,157,1.179,205,0.617,218,1.692,230,0.589,243,0.817,245,1.12,249,1.267,251,1.935,255,1.135,268,1.249,278,2.804,286,5.075,318,1.758,332,3.261,355,0.974,365,1.935,492,2.218,493,2.804,496,3.824,497,4.063,498,2.924,499,3.024,518,5.76,520,4.799,521,4.854,522,5.467]],["title/classes/GetQuizArgs.html",[25,0.308,523,3.113]],["body/classes/GetQuizArgs.html",[3,0.082,4,0.072,5,0.062,7,0.252,10,0.721,11,0.007,13,0.298,17,0.125,24,0.082,25,0.509,30,0.006,31,0.006,98,0.286,157,1.042,205,0.69,230,0.659,243,0.877,245,1.202,249,1.226,255,1.269,264,1.831,267,2.23,268,1.396,350,2.287,355,1.088,490,4.213,492,2.48,493,3.009,514,4.144,523,5.15,524,4.974,525,5.426]],["title/classes/GetQuizQuestionArgs.html",[25,0.308,526,3.113]],["body/classes/GetQuizQuestionArgs.html",[3,0.082,4,0.072,5,0.062,7,0.25,10,0.716,11,0.007,13,0.296,17,0.124,24,0.082,25,0.507,30,0.006,31,0.006,74,2.102,98,0.284,157,1.038,205,0.685,230,0.654,243,0.873,245,1.197,249,1.221,255,1.26,264,1.818,267,2.221,268,1.386,278,2.405,350,2.28,355,1.081,490,4.203,492,2.463,493,2.996,514,4.116,526,5.128,527,4.94,528,5.388]],["title/classes/GetQuizQuestionsArgs.html",[25,0.308,529,3.113]],["body/classes/GetQuizQuestionsArgs.html",[3,0.079,4,0.069,5,0.06,7,0.242,10,0.693,11,0.007,13,0.286,17,0.122,24,0.079,25,0.496,30,0.006,31,0.006,74,2.032,98,0.275,99,0.893,157,1.113,205,0.662,218,1.266,230,0.632,243,0.854,245,1.172,249,1.195,251,2.076,255,1.218,268,1.34,278,2.325,318,1.659,332,3.412,355,1.045,492,2.381,493,2.933,496,3.926,497,4.2,498,3.137,499,3.245,527,4.776,529,5.021,530,5.209]],["title/classes/GetQuizzesArgs.html",[25,0.308,531,3.113]],["body/classes/GetQuizzesArgs.html",[3,0.074,4,0.065,5,0.057,7,0.228,10,0.842,11,0.007,13,0.348,17,0.119,24,0.074,25,0.478,30,0.005,31,0.005,98,0.334,99,1.006,157,1.184,205,0.625,218,1.703,230,0.597,243,0.823,245,1.129,249,1.275,251,1.959,255,1.15,262,5.105,268,1.264,318,1.769,332,3.288,355,0.986,365,1.959,492,2.246,493,2.826,496,3.842,497,4.087,498,2.96,499,3.062,524,5.807,531,4.838,532,4.915,533,5.536]],["title/classes/GetRoleArgs.html",[25,0.308,534,3.113]],["body/classes/GetRoleArgs.html",[3,0.082,4,0.072,5,0.062,7,0.252,10,0.721,11,0.007,13,0.298,17,0.125,24,0.082,25,0.509,30,0.006,31,0.006,98,0.286,157,1.042,205,0.69,230,0.659,243,0.877,245,1.202,249,1.226,255,1.269,264,1.831,267,2.23,268,1.396,350,2.287,355,1.088,490,4.213,492,2.48,493,3.009,514,4.144,534,5.15,535,4.974,536,5.426]],["title/classes/GetRolesArgs.html",[25,0.308,537,3.113]],["body/classes/GetRolesArgs.html",[3,0.079,4,0.07,5,0.06,7,0.244,10,0.697,11,0.007,13,0.288,17,0.123,24,0.079,25,0.498,30,0.006,31,0.006,98,0.277,99,0.897,157,1.117,205,0.667,218,1.274,230,0.637,243,0.858,245,1.177,249,1.2,251,2.09,255,1.227,268,1.349,318,1.666,332,3.426,355,1.052,492,2.397,493,2.945,496,3.935,497,4.213,498,3.158,499,3.266,535,4.808,537,5.042,538,5.244]],["title/classes/GetSchoolArgs.html",[25,0.308,539,3.113]],["body/classes/GetSchoolArgs.html",[3,0.082,4,0.072,5,0.062,7,0.252,10,0.721,11,0.007,13,0.298,17,0.125,24,0.082,25,0.509,30,0.006,31,0.006,98,0.286,157,1.042,205,0.69,230,0.659,243,0.877,245,1.202,249,1.226,255,1.269,264,1.831,267,2.23,268,1.396,350,2.287,355,1.088,490,4.213,492,2.48,493,3.009,514,4.144,539,5.15,540,4.974,541,5.426]],["title/classes/GetSchoolsArgs.html",[25,0.308,542,3.113]],["body/classes/GetSchoolsArgs.html",[3,0.06,4,0.053,5,0.045,7,0.183,10,0.979,11,0.007,13,0.404,17,0.107,24,0.06,25,0.413,30,0.005,31,0.005,97,1.309,98,0.412,99,1.075,157,1.255,205,0.502,218,1.942,230,0.479,243,0.711,245,0.976,249,1.373,251,1.574,255,0.924,268,1.016,284,4.051,318,1.905,332,2.84,336,5.055,337,5.366,355,0.792,365,2.837,492,1.805,493,2.442,496,3.518,497,3.661,498,2.378,499,2.46,540,6.751,542,4.179,543,3.949,544,4.448,545,4.448,546,4.448,547,4.448,548,4.448]],["title/classes/GetTokenArgs.html",[25,0.308,549,3.113]],["body/classes/GetTokenArgs.html",[3,0.077,4,0.068,5,0.059,7,0.237,10,0.863,11,0.007,13,0.357,17,0.121,24,0.077,25,0.49,30,0.006,31,0.006,98,0.343,157,1.161,164,4.781,205,0.649,218,1.577,230,0.62,243,0.844,245,1.157,249,1.298,255,1.195,264,1.724,267,2.147,268,1.314,318,1.289,350,2.224,365,2.036,493,2.897,549,4.958,550,6.542,551,5.107,552,5.198,553,5.752,554,5.752,555,4.365,556,4.365]],["title/classes/GetTokensArgs.html",[25,0.308,557,3.113]],["body/classes/GetTokensArgs.html",[3,0.079,4,0.07,5,0.06,7,0.244,10,0.697,11,0.007,13,0.288,17,0.123,24,0.079,25,0.498,30,0.006,31,0.006,98,0.277,99,0.897,157,1.117,205,0.667,218,1.274,230,0.637,243,0.858,245,1.177,249,1.2,251,2.09,255,1.227,268,1.349,318,1.666,332,3.426,355,1.052,492,2.397,493,2.945,496,3.935,497,4.213,498,3.158,499,3.266,550,4.808,557,5.042,558,5.244]],["title/classes/GetUserArgs.html",[25,0.308,559,3.113]],["body/classes/GetUserArgs.html",[3,0.075,4,0.066,5,0.057,7,0.23,10,0.847,11,0.007,13,0.35,17,0.12,24,0.075,25,0.481,30,0.006,31,0.006,98,0.336,99,1.01,157,1.148,160,4.91,205,0.631,218,1.548,230,0.602,243,0.828,245,1.136,249,1.28,255,1.161,268,1.276,318,1.608,350,2.194,365,2.54,493,2.844,552,5.128,555,4.241,556,4.241,559,4.867,560,6.454,561,4.962,562,7.177,563,5.588,564,5.588,565,6.454]],["title/classes/GetUsersArgs.html",[25,0.308,566,3.113]],["body/classes/GetUsersArgs.html",[3,0.079,4,0.07,5,0.06,7,0.244,10,0.697,11,0.007,13,0.288,17,0.123,24,0.079,25,0.498,30,0.006,31,0.006,98,0.277,99,0.897,157,1.117,205,0.667,218,1.274,230,0.637,243,0.858,245,1.177,249,1.2,251,2.09,255,1.227,268,1.349,318,1.666,332,3.426,355,1.052,492,2.397,493,2.945,496,3.935,497,4.213,498,3.158,499,3.266,560,4.808,566,5.042,567,5.244]],["title/classes/GqlArg.html",[25,0.308,552,2.969]],["body/classes/GqlArg.html",[3,0.093,4,0.082,5,0.071,11,0.007,17,0.105,24,0.093,25,0.466,30,0.006,31,0.006,205,0.785,230,0.749,493,3.254,552,5.312,555,5.277,568,4.716,569,6.174,570,6.174]],["title/classes/GqlAuthGuard.html",[25,0.308,571,2.305]],["body/classes/GqlAuthGuard.html",[3,0.084,4,0.074,5,0.064,7,0.257,8,1.933,11,0.007,13,0.304,15,1.538,17,0.126,18,1.155,24,0.084,25,0.418,28,1.987,30,0.006,31,0.006,96,1.63,97,1.155,98,0.292,99,0.753,129,4.036,205,0.704,230,0.673,243,0.72,571,3.863,572,6.83,573,4.736,574,7.693,575,7.693,576,7.087,577,6.24,578,5.08,579,5.08,580,5.541,581,5.541,582,6.24]],["title/classes/GqlInput.html",[25,0.308,244,2.305]],["body/classes/GqlInput.html",[3,0.096,4,0.084,5,0.073,11,0.007,24,0.096,25,0.477,30,0.006,31,0.006,230,0.768,244,4.182,256,3.808,568,4.83,570,6.323,583,6.323]],["title/classes/GroupingItem.html",[25,0.308,584,3.113]],["body/classes/GroupingItem.html",[3,0.056,4,0.049,5,0.042,7,0.171,10,0.984,11,0.007,13,0.407,17,0.112,19,0.877,20,0.894,21,0.894,24,0.092,25,0.278,30,0.005,31,0.005,98,0.411,99,0.893,157,1.189,175,1.568,205,0.468,209,1.267,218,0.894,230,0.447,240,4.41,245,0.929,246,5.541,247,5.541,248,5.541,249,1.375,288,3.068,318,0.929,365,1.467,584,3.978,585,6.088,586,3.146,587,2.324,588,6.025,589,3.319,590,3.418,591,3.418,592,2.575,593,3.244,594,3.244,595,4.145,596,4.093,597,4.145,598,4.145,599,2.292,600,4.145,601,4.145,602,4.145,603,4.145,604,3.244,605,4.71,606,2.762,607,2.292,608,2.292,609,3.136,610,1.604,611,3.374,612,2.292,613,3.146,614,3.68]],["title/modules/GroupingItemModule.html",[32,1.556,42,3.281]],["body/modules/GroupingItemModule.html",[3,0.069,4,0.061,5,0.053,11,0.007,17,0.131,18,0.953,24,0.069,25,0.345,30,0.005,31,0.005,32,2.306,34,2.31,35,3.053,42,6.547,52,3.317,53,2.51,54,2.51,56,3.224,57,2.439,69,3.763,70,3.68,97,0.953,208,2.753,209,1.574,229,3.523,240,2.666,584,3.492,606,2.089,613,5.163,615,4.571,616,4.571,617,4.571,618,6.303,619,6.303,620,5.148,621,4.571,622,5.163,623,5.148,624,5.538,625,4.191,626,4.571,627,2.847,628,5.148]],["title/injectables/GroupingItemRepository.html",[80,0.866,618,3.113]],["body/injectables/GroupingItemRepository.html",[3,0.05,4,0.044,5,0.038,7,0.154,8,1.365,11,0.007,13,0.381,15,1.847,17,0.131,18,0.69,19,0.788,20,0.804,21,0.804,24,0.05,25,0.25,28,1.186,30,0.004,31,0.004,69,4.326,80,1.025,81,1.263,90,3.799,96,2.042,97,1.448,98,0.351,99,0.944,115,1.992,146,1.052,161,2.768,175,2.055,183,1.965,209,1.139,239,2.526,240,2.813,243,0.627,271,4.156,355,1.334,371,2.526,417,2.055,487,4.779,494,2.526,584,2.526,585,3.883,588,3.032,610,1.442,611,3.032,618,3.684,625,3.032,629,3.307,630,4.156,631,2.103,632,2.009,633,2.103,634,2.103,635,2.409,636,3.768,637,3.725,638,3.514,639,4.823,640,2.663,641,3.307,642,1.442,643,2.375,644,2.409,645,2.154,646,1.442,647,2.204,648,2.134,649,1.442,650,2.437,651,2.526,652,1.442,653,2.134,654,2.06,655,2.526,656,1.186,657,5.219,658,1.186,659,1.73,660,3.032,661,3.032,662,1.186,663,2.134,664,3.725,665,2.409,666,2.409,667,4.422,668,3.032,669,3.032,670,3.032,671,3.032]],["title/classes/GroupingItemResolver.html",[25,0.308,622,3.483]],["body/classes/GroupingItemResolver.html",[3,0.042,4,0.037,5,0.032,7,0.13,8,1.205,10,0.824,11,0.007,13,0.359,15,1.721,17,0.13,18,0.584,19,0.667,20,0.68,21,0.68,24,0.042,25,0.211,26,1.494,27,1.311,28,2.223,30,0.004,31,0.004,69,4.067,70,5.466,96,1.92,97,1.362,98,0.345,99,0.888,103,1.633,108,1.633,146,0.89,161,2.913,183,2.101,205,0.356,218,1.4,230,0.34,233,2.565,236,3.105,237,2.565,239,4.401,240,3.959,318,1.648,371,4.401,487,4.401,494,4.401,571,1.583,584,5.474,588,2.567,619,4.401,621,2.799,622,3.641,624,2.567,625,2.567,645,2.517,655,4.401,656,1.004,657,4.727,658,1.004,659,1.528,660,2.567,661,2.567,662,1.004,672,2.799,673,4.797,674,4.797,675,4.797,676,4.797,677,1.953,678,3.153,679,2.971,680,3.153,681,3.327,682,1.953,683,3.153,684,3.153,685,1.807,686,3.153,687,3.153,688,3.153,689,3.153,690,1.953,691,3.693,692,3.153,693,3.153,694,1.953,695,3.153,696,3.589,697,1.744,698,1.744,699,1.633,700,1.583,701,1.744,702,1.744,703,1.744,704,3.153,705,2.653,706,3.153,707,1.953,708,1.876,709,3.589,710,3.153,711,1.953,712,1.876,713,3.153,714,1.953,715,1.876,716,3.153,717,2.039,718,1.744,719,3.153,720,1.953]],["title/injectables/GroupingItemService.html",[80,0.866,619,3.113]],["body/injectables/GroupingItemService.html",[3,0.058,4,0.051,5,0.044,7,0.177,8,1.509,11,0.007,13,0.4,15,1.949,17,0.13,18,0.793,24,0.058,25,0.287,30,0.005,31,0.005,69,4.373,70,4.293,80,1.133,81,1.453,96,2.14,97,1.518,98,0.384,99,0.989,146,1.21,239,2.907,240,3.11,243,0.693,355,1.409,371,2.907,417,2.272,487,2.907,494,2.907,618,5.094,619,4.073,624,3.489,626,3.805,631,2.324,632,2.221,633,2.324,634,2.324,642,1.659,643,2.625,645,2.418,646,1.659,647,2.437,649,1.659,650,2.695,652,1.659,655,2.907,656,1.365,657,5.643,658,1.365,659,1.912,660,3.489,661,3.489,662,1.365,721,3.805,722,4.448,723,3.441,724,4.286,725,2.456,726,2.456,727,2.456,728,2.456,729,1.739,730,2.695,731,2.456,732,3.211,733,2.456,734,2.456,735,2.456,736,2.55]],["title/classes/HangmanWord.html",[25,0.308,737,3.113]],["body/classes/HangmanWord.html",[3,0.059,4,0.052,5,0.045,7,0.18,10,0.974,11,0.007,13,0.402,17,0.114,19,0.925,20,0.943,21,0.943,24,0.094,25,0.293,30,0.005,31,0.005,98,0.404,99,0.914,157,1.093,175,1.653,205,0.493,209,1.336,218,0.943,230,0.471,245,0.964,249,1.367,259,4.382,262,4.531,263,4.531,288,3.12,318,0.979,365,1.547,587,2.412,589,3.415,590,3.518,591,3.518,592,2.65,593,2.417,594,2.417,596,4.19,599,2.417,604,3.367,605,4.68,606,2.842,607,2.417,608,2.417,609,3.255,610,1.692,612,2.417,737,4.129,738,6.049,739,3.125,740,6.167,741,3.881,742,3.881,743,3.881,744,4.371,745,3.881,746,3.881,747,3.558,748,3.317,749,3.881]],["title/modules/HangmanWordModule.html",[32,1.556,43,3.281]],["body/modules/HangmanWordModule.html",[3,0.069,4,0.061,5,0.053,11,0.007,17,0.131,18,0.953,24,0.069,25,0.345,30,0.005,31,0.005,32,2.306,34,2.31,35,3.053,43,6.547,52,3.317,53,2.51,54,2.51,56,3.224,57,2.439,67,3.763,68,3.68,97,0.953,208,2.753,209,1.574,229,3.523,259,2.666,606,2.089,627,2.847,737,3.492,748,5.163,750,4.571,751,4.571,752,4.571,753,6.303,754,6.303,755,4.571,756,3.907,757,5.163,758,4.571,759,5.538,760,3.492,761,3.907,762,5.148]],["title/injectables/HangmanWordRepository.html",[80,0.866,753,3.113]],["body/injectables/HangmanWordRepository.html",[3,0.043,4,0.038,5,0.033,7,0.133,8,1.229,11,0.007,13,0.362,15,1.74,17,0.127,18,0.599,19,0.684,20,0.698,21,0.698,24,0.043,25,0.217,28,2.248,30,0.004,31,0.004,67,4.107,80,0.923,81,1.096,90,3.73,96,1.939,97,1.375,98,0.331,99,0.896,115,3.154,146,0.913,161,2.729,175,2.487,183,2.133,209,0.989,243,0.564,258,2.193,259,2.532,262,3.163,271,3.729,355,1.258,374,2.193,406,5.358,417,1.85,419,2.871,500,4.459,504,4.459,610,1.252,630,3.988,631,1.893,632,1.809,633,1.893,634,1.893,636,3.515,640,2.312,642,1.252,643,2.138,644,2.092,645,2.158,646,1.252,647,1.984,648,1.853,649,1.893,652,1.252,653,1.853,654,1.788,656,1.03,658,1.03,659,1.557,662,1.03,663,1.853,666,3.163,667,3.981,668,2.632,669,2.632,670,2.632,671,2.632,729,1.984,737,2.193,738,3.496,740,2.632,747,2.632,753,3.317,760,2.193,763,2.632,764,3.234,765,2.871,766,4.89,767,3.234,768,2.193,769,4,770,2.193,771,2.193,772,3.234,773,3.234,774,4.89,775,3.234,776,2.454,777,5.236,778,3.234,779,3.981,780,3.981,781,3.234,782,2.871,783,2.193,784,3.234,785,3.234,786,2.632,787,3.234,788,3.234,789,3.234,790,2.871,791,3.234,792,3.234,793,2.632,794,3.234,795,2.871,796,3.234,797,2.454,798,3.234,799,3.234]],["title/classes/HangmanWordResolver.html",[25,0.308,757,3.483]],["body/classes/HangmanWordResolver.html",[3,0.042,4,0.037,5,0.032,7,0.129,8,1.199,10,0.822,11,0.007,13,0.358,15,1.716,17,0.129,18,0.58,19,0.663,20,0.675,21,0.675,24,0.042,25,0.21,26,1.483,27,1.301,28,2.216,30,0.004,31,0.004,67,4.348,68,5.452,96,1.915,97,1.358,98,0.344,99,0.885,103,1.621,108,1.621,146,0.884,161,2.908,183,2.091,205,0.353,218,1.395,230,0.337,233,2.551,236,3.092,237,2.551,258,4.385,259,3.949,263,3.086,301,2.955,318,1.643,374,4.385,500,4.385,504,4.385,571,1.572,645,2.512,656,0.997,658,0.997,659,1.519,662,0.997,677,1.939,679,2.955,681,3.313,682,1.939,685,1.794,691,3.247,694,1.939,696,3.576,697,1.731,698,1.731,699,1.621,700,1.572,701,1.731,702,1.731,703,1.731,705,2.639,707,1.939,709,3.197,711,1.939,712,1.863,714,1.939,715,1.863,717,2.025,718,1.731,720,1.939,737,5.463,740,2.548,754,4.385,756,2.376,757,3.621,759,2.548,760,2.123,768,4.385,769,3.921,770,2.123,771,2.123,793,2.548,800,2.548,801,4.771,802,4.771,803,4.771,804,4.771,805,2.78,806,3.13,807,3.13,808,3.13,809,3.13,810,3.13,811,4.771,812,2.78,813,3.13,814,3.13,815,3.13,816,3.13,817,3.13,818,3.13,819,3.13,820,3.13,821,3.13,822,3.13]],["title/injectables/HangmanWordService.html",[80,0.866,754,3.113]],["body/injectables/HangmanWordService.html",[3,0.058,4,0.051,5,0.044,7,0.177,8,1.509,11,0.007,13,0.4,15,1.949,17,0.13,18,0.793,24,0.058,25,0.287,30,0.005,31,0.005,67,4.373,68,4.293,80,1.133,81,1.453,96,2.14,97,1.518,98,0.384,99,0.989,146,1.21,243,0.693,258,2.907,259,3.11,355,1.409,374,2.907,417,2.272,500,2.907,504,2.907,631,2.324,632,2.221,633,2.324,634,2.324,642,1.659,643,2.625,645,2.418,646,1.659,647,2.437,649,1.659,650,2.695,652,1.659,656,1.365,658,1.365,659,1.912,662,1.365,722,4.448,723,3.441,725,2.456,726,2.456,727,2.456,728,2.456,729,1.739,730,2.695,731,2.456,732,3.211,733,2.456,734,2.456,735,2.456,736,2.55,753,5.094,754,4.073,759,3.489,761,3.253,768,2.907,769,4.701,770,2.907,771,2.907,823,3.489,824,3.805]],["title/classes/IdArg.html",[25,0.308,490,2.238]],["body/classes/IdArg.html",[3,0.078,4,0.069,5,0.059,7,0.24,10,0.686,11,0.007,13,0.283,17,0.122,24,0.099,25,0.541,30,0.006,31,0.006,98,0.272,157,1.165,205,0.656,218,1.253,230,0.626,243,0.932,245,1.165,249,1.304,264,1.741,267,2.16,268,1.327,318,1.302,332,3.391,350,2.235,490,3.586,496,2.678,497,3.008,552,5.489,556,4.409,568,4.989,825,4.729,826,5.809,827,4.153]],["title/classes/IdArrayArg.html",[25,0.308,496,2.116]],["body/classes/IdArrayArg.html",[3,0.077,4,0.068,5,0.059,7,0.236,10,0.677,11,0.007,13,0.28,17,0.121,24,0.098,25,0.538,30,0.006,31,0.006,98,0.269,99,0.88,157,1.159,205,0.647,218,1.237,230,0.618,243,0.926,245,1.155,249,1.296,251,2.029,267,2.143,268,1.309,318,1.635,332,3.363,350,1.587,490,2.795,496,3.363,497,4.155,498,3.066,552,5.463,556,4.351,568,4.948,825,4.667,827,4.099,828,5.733]],["title/classes/IdInput.html",[25,0.308,349,1.624]],["body/classes/IdInput.html",[3,0.088,4,0.077,5,0.067,7,0.27,11,0.007,13,0.319,17,0.099,24,0.088,25,0.438,30,0.006,31,0.006,98,0.307,157,1.087,230,0.705,243,0.914,244,4.276,245,1.253,257,3.617,349,2.802,350,2.357,568,5.37,827,4.676,829,5.808,830,6.541]],["title/classes/JwtAuthGuard.html",[25,0.308,433,3.483]],["body/classes/JwtAuthGuard.html",[3,0.095,4,0.083,5,0.072,11,0.007,17,0.106,24,0.095,25,0.472,30,0.006,31,0.006,129,4.551,230,0.758,243,0.812,433,6.276,573,5.34,579,5.728,581,6.247,831,6.247]],["title/injectables/JwtStrategy.html",[80,0.866,120,3.281]],["body/injectables/JwtStrategy.html",[3,0.069,4,0.061,5,0.053,7,0.213,8,1.713,11,0.007,13,0.332,15,1.273,17,0.122,18,0.956,24,0.069,25,0.346,27,2.147,28,1.644,30,0.005,31,0.005,80,1.287,81,1.751,90,3.336,96,1.78,97,1.262,98,0.38,99,0.823,101,3.691,120,4.873,123,3.691,129,3.34,135,4.203,138,4.584,144,5.549,146,1.924,147,4.584,148,5.226,152,6.052,157,0.936,160,4.222,165,4.203,166,4.584,178,4.584,179,3.691,180,4.584,184,4.584,186,4.584,243,0.596,832,4.584,833,5.163,834,6.816,835,6.816,836,5.163,837,5.163,838,4.584,839,4.203,840,4.584,841,4.584,842,4.584,843,5.163,844,5.163,845,5.163,846,3.919,847,5.163,848,5.163]],["title/classes/LocalAuthGuard.html",[25,0.308,106,3.483]],["body/classes/LocalAuthGuard.html",[3,0.094,4,0.083,5,0.072,11,0.007,17,0.106,24,0.094,25,0.47,30,0.006,31,0.006,106,6.261,129,4.533,230,0.755,243,0.809,573,5.319,579,6.716,849,6.223,850,5.705]],["title/injectables/LocalStrategy.html",[80,0.866,121,3.281]],["body/injectables/LocalStrategy.html",[3,0.068,4,0.06,5,0.052,7,0.209,8,1.69,11,0.007,13,0.328,15,1.247,17,0.126,18,0.937,19,1.071,20,1.092,21,1.092,24,0.068,25,0.339,26,2.397,27,2.104,28,1.611,30,0.005,31,0.005,80,1.269,81,1.715,90,3.303,96,1.756,97,1.245,98,0.315,99,0.812,104,5.574,105,4.119,110,3.134,115,2.706,121,4.808,129,3.273,144,5.475,146,1.428,155,4.79,156,5.972,157,1.183,158,5.46,160,4.166,161,2.38,175,1.914,195,3.84,196,3.134,243,0.584,838,4.492,839,4.119,840,4.492,841,4.492,842,4.492,850,4.119,851,4.492,852,5.06,853,5.06,854,5.06,855,6.725,856,5.06,857,5.06,858,5.06]],["title/classes/MirrorWord.html",[25,0.308,859,3.113]],["body/classes/MirrorWord.html",[3,0.061,4,0.054,5,0.046,7,0.188,10,0.954,11,0.007,13,0.394,17,0.116,19,0.963,20,0.982,21,0.982,24,0.096,25,0.305,30,0.005,31,0.005,98,0.401,99,0.93,157,0.982,175,1.722,205,0.514,209,1.391,218,0.982,230,0.491,245,0.991,249,1.349,263,4.629,270,4.325,288,3.16,318,1.02,365,1.611,587,2.481,589,3.489,590,3.594,591,3.594,592,2.707,593,2.517,594,2.517,596,3.958,599,2.517,604,3.462,605,4.619,606,2.904,607,2.517,608,2.517,609,3.348,610,1.762,612,2.517,739,3.253,741,4.041,742,4.041,743,4.041,745,4.041,746,4.041,859,4.246,860,5.971,861,6.275,862,3.705,863,3.454,864,4.041]],["title/modules/MirrorWordModule.html",[32,1.556,44,3.281]],["body/modules/MirrorWordModule.html",[3,0.069,4,0.061,5,0.053,11,0.007,17,0.131,18,0.953,24,0.069,25,0.345,30,0.005,31,0.005,32,2.306,34,2.31,35,3.053,44,6.547,52,3.317,53,2.51,54,2.51,56,3.224,57,2.439,64,3.763,65,3.68,97,0.953,208,2.753,209,1.574,229,3.523,270,2.666,606,2.089,627,2.847,755,4.571,756,3.907,758,4.571,760,3.492,761,3.907,859,3.492,863,5.163,865,4.571,866,4.571,867,4.571,868,6.303,869,6.303,870,5.163,871,5.538,872,5.148]],["title/injectables/MirrorWordRepository.html",[80,0.866,868,3.113]],["body/injectables/MirrorWordRepository.html",[3,0.05,4,0.044,5,0.038,7,0.154,8,1.365,11,0.007,13,0.381,15,1.847,17,0.131,18,0.69,19,0.788,20,0.804,21,0.804,24,0.05,25,0.25,28,1.186,30,0.004,31,0.004,64,4.326,80,1.025,81,1.263,90,3.799,96,2.042,97,1.448,98,0.351,99,0.944,115,1.992,146,1.052,161,2.768,175,2.055,183,1.965,209,1.139,243,0.627,269,2.526,270,2.813,271,4.156,355,1.334,376,2.526,417,2.055,507,4.779,510,2.526,610,1.442,630,4.156,631,2.103,632,2.009,633,2.103,634,2.103,636,3.768,639,4.823,640,2.663,641,3.307,642,1.442,643,2.375,644,2.409,645,2.154,646,1.442,647,2.204,648,2.134,649,1.442,650,2.437,651,2.526,652,1.442,653,2.134,654,2.06,656,1.186,658,1.186,659,1.73,662,1.186,663,2.134,666,2.409,667,4.422,668,3.032,669,3.032,670,3.032,671,3.032,760,2.526,763,3.032,765,3.307,769,4.348,770,2.526,771,2.526,859,2.526,860,3.883,861,3.032,862,3.032,868,3.684,873,3.725,874,5.432,875,2.526,876,3.725,877,3.725]],["title/classes/MirrorWordResolver.html",[25,0.308,870,3.483]],["body/classes/MirrorWordResolver.html",[3,0.042,4,0.037,5,0.032,7,0.13,8,1.205,10,0.824,11,0.007,13,0.359,15,1.721,17,0.13,18,0.584,19,0.667,20,0.68,21,0.68,24,0.042,25,0.211,26,1.494,27,1.311,28,2.223,30,0.004,31,0.004,64,4.067,65,5.466,96,1.92,97,1.362,98,0.345,99,0.888,103,1.633,108,1.633,146,0.89,161,2.913,183,2.101,205,0.356,218,1.4,230,0.34,233,2.565,236,3.105,237,2.565,269,4.401,270,3.959,318,1.648,376,4.401,507,4.401,510,4.401,571,1.583,645,2.517,656,1.004,658,1.004,659,1.528,662,1.004,681,3.327,682,1.953,685,1.807,690,1.953,691,3.693,694,1.953,696,3.589,697,1.744,698,1.744,699,1.633,700,1.583,701,1.744,702,1.744,703,1.744,705,1.744,708,1.876,709,3.589,712,1.876,715,1.876,718,1.744,756,2.393,760,2.138,769,3.938,770,2.138,771,2.138,793,2.567,800,2.567,805,2.799,812,2.799,859,5.474,861,2.567,869,4.988,870,3.641,871,2.567,875,4.401,878,4.797,879,4.797,880,4.797,881,4.797,882,3.153,883,3.153,884,3.153,885,3.153,886,3.153,887,3.153,888,3.153,889,3.153,890,3.153,891,3.153,892,3.153,893,3.153,894,3.153,895,3.153,896,3.153,897,3.153,898,3.153,899,3.153,900,3.153,901,3.153,902,3.153]],["title/injectables/MirrorWordService.html",[80,0.866,869,3.113]],["body/injectables/MirrorWordService.html",[3,0.058,4,0.051,5,0.044,7,0.177,8,1.509,11,0.007,13,0.4,15,1.949,17,0.13,18,0.793,24,0.058,25,0.287,30,0.005,31,0.005,64,4.373,65,4.293,80,1.133,81,1.453,96,2.14,97,1.518,98,0.384,99,0.989,146,1.21,243,0.693,269,2.907,270,3.11,355,1.409,376,2.907,417,2.272,507,2.907,510,2.907,631,2.324,632,2.221,633,2.324,634,2.324,642,1.659,643,2.625,645,2.418,646,1.659,647,2.437,649,1.659,650,2.695,652,1.659,656,1.365,658,1.365,659,1.912,662,1.365,722,4.448,723,3.441,725,2.456,726,2.456,727,2.456,728,2.456,729,1.739,730,2.695,731,2.456,732,3.211,733,2.456,734,2.456,735,2.456,736,2.55,761,3.253,769,4.701,770,2.907,771,2.907,823,3.489,824,3.805,868,5.094,869,4.073,871,3.489,875,2.907]],["title/guards/PermissionGuard.html",[691,2.305,903,3.737]],["body/guards/PermissionGuard.html",[3,0.063,4,0.055,5,0.048,7,0.193,8,1.601,11,0.007,13,0.311,15,1.151,17,0.118,18,0.865,19,0.989,20,1.008,21,1.008,24,0.063,25,0.313,26,2.213,28,2.31,30,0.005,31,0.005,80,1.203,96,1.664,97,1.18,98,0.299,99,0.769,110,3.947,146,1.319,155,4.637,157,0.641,175,2.948,205,0.527,218,1.008,361,3.34,418,3.803,576,6.344,578,3.803,580,4.148,587,1.851,691,3.201,783,4.323,846,3.545,904,4.671,905,6.441,906,4.148,907,7.793,908,4.671,909,8.418,910,4.671,911,6.373,912,4.671,913,4.671,914,4.148,915,4.671,916,4.671,917,4.671,918,6.373,919,4.671,920,4.671,921,4.671,922,4.671,923,6.373,924,4.671,925,4.148,926,4.148,927,4.148,928,4.148,929,4.671,930,4.671,931,4.671,932,4.671,933,4.671,934,4.671,935,4.671,936,4.671,937,4.671,938,4.671,939,4.671,940,4.671]],["title/classes/Puzzle.html",[25,0.308,941,3.113]],["body/classes/Puzzle.html",[3,0.052,4,0.045,5,0.039,7,0.158,10,1.032,11,0.007,13,0.426,17,0.108,19,0.812,20,0.828,21,0.828,24,0.088,25,0.257,30,0.004,31,0.004,98,0.418,99,0.862,157,0.895,175,1.452,205,0.433,209,1.173,218,0.828,230,0.414,245,0.879,249,1.427,275,5.309,288,2.99,293,6.319,318,0.86,365,1.358,587,2.2,589,3.18,590,3.275,591,3.275,592,2.467,593,2.123,594,2.123,596,4.703,599,2.123,604,3.07,605,4.888,606,2.646,607,2.123,608,2.123,609,2.969,610,1.486,612,2.123,941,3.765,942,2.913,943,5.818,944,6.522,945,6.522,946,6.522,947,6.522,948,6.522,949,6.522,950,3.838,951,3.838,952,3.838,953,3.838,954,3.838,955,3.838,956,3.838,957,3.838,958,3.838,959,3.838,960,3.838,961,3.125,962,2.913,963,3.408]],["title/modules/PuzzleModule.html",[32,1.556,45,3.281]],["body/modules/PuzzleModule.html",[3,0.07,4,0.062,5,0.053,11,0.007,17,0.131,18,0.97,24,0.07,25,0.351,30,0.005,31,0.005,32,2.333,34,2.351,35,3.089,45,6.568,52,3.356,53,2.555,54,2.555,56,3.261,57,2.483,97,0.97,208,2.802,209,1.602,229,3.564,606,2.126,627,2.898,941,3.554,962,5.224,964,4.653,965,4.653,966,4.653,967,6.319,968,6.319,969,5.24,970,4.653,971,5.224,972,5.24,973,4.653,974,4.653,975,5.24]],["title/injectables/PuzzleRepository.html",[80,0.866,967,3.113]],["body/injectables/PuzzleRepository.html",[3,0.053,4,0.046,5,0.04,7,0.161,8,1.413,11,0.007,13,0.388,15,1.882,17,0.132,18,0.723,19,0.827,20,0.843,21,0.843,24,0.053,25,0.262,30,0.004,31,0.004,80,1.061,81,1.324,90,3.79,96,2.076,97,1.472,98,0.358,99,0.96,146,1.103,161,2.702,183,2.034,209,1.194,243,0.649,271,4.353,272,2.649,355,1.36,377,2.649,417,2.127,511,2.649,515,2.649,610,1.512,630,4.211,631,2.176,632,2.08,633,2.176,634,2.176,635,2.527,636,3.853,638,3.637,642,1.512,643,2.458,644,2.527,645,2.334,646,1.512,647,2.281,648,2.238,649,1.512,650,2.523,651,2.649,652,1.512,653,2.238,654,2.16,656,1.244,658,1.244,659,1.79,662,1.244,663,2.238,665,2.527,729,1.585,730,2.523,941,2.649,943,3.18,961,3.18,967,3.813,976,3.468,977,3.906,978,2.649,979,3.906,980,2.649,981,5.362,982,3.18,983,3.18,984,3.906,985,3.18,986,3.468,987,3.468,988,3.468,989,3.468]],["title/classes/PuzzleResolver.html",[25,0.308,971,3.483]],["body/classes/PuzzleResolver.html",[3,0.044,4,0.039,5,0.033,7,0.134,8,1.236,10,0.836,11,0.007,13,0.363,15,1.746,17,0.13,18,0.603,19,0.689,20,0.703,21,0.703,24,0.044,25,0.218,26,1.544,27,1.354,28,2.256,30,0.004,31,0.004,96,1.945,97,1.379,98,0.349,99,0.899,103,1.687,108,1.687,146,0.92,161,2.938,183,2.143,205,0.368,218,1.278,230,0.351,233,2.63,236,3.168,237,2.63,272,4.475,318,1.669,377,4.475,511,4.475,515,4.475,571,1.636,645,2.538,656,1.037,658,1.037,659,1.566,662,1.037,677,2.018,679,3.046,681,3.394,682,2.018,685,1.867,690,2.018,691,3.883,694,2.018,696,3.649,697,1.802,698,1.802,699,1.687,700,1.636,701,1.802,702,1.802,703,1.802,705,1.802,707,2.018,708,1.938,709,3.917,711,2.018,712,1.938,714,2.018,715,1.938,717,2.107,718,1.802,720,2.018,941,5.525,943,2.652,968,4.475,970,2.892,971,3.732,973,2.892,980,4.475,981,4.822,982,2.652,983,2.652,990,2.892,991,4.917,992,4.917,993,4.917,994,4.917,995,3.257,996,3.257,997,3.257,998,3.257,999,3.257,1000,3.257,1001,2.209,1002,2.209,1003,3.257,1004,3.257,1005,3.257,1006,3.257,1007,3.257,1008,3.257,1009,2.107,1010,3.257,1011,3.257,1012,3.257,1013,3.257,1014,3.257]],["title/injectables/PuzzleService.html",[80,0.866,968,3.113]],["body/injectables/PuzzleService.html",[3,0.059,4,0.052,5,0.045,7,0.181,8,1.535,11,0.007,13,0.403,15,1.967,17,0.13,18,0.813,24,0.059,25,0.294,30,0.005,31,0.005,80,1.153,81,1.489,96,2.157,97,1.529,98,0.387,99,0.997,146,1.24,243,0.705,272,2.979,355,1.421,377,2.979,417,2.311,511,2.979,515,2.979,631,2.365,632,2.259,633,2.365,634,2.365,642,1.7,643,2.671,645,2.439,646,1.7,647,2.479,649,1.7,650,2.741,652,1.7,656,1.399,658,1.399,659,1.945,662,1.399,722,4.475,723,3.5,725,2.517,726,2.517,727,2.517,728,2.517,729,1.782,730,2.741,731,2.517,732,3.267,733,2.517,734,2.517,735,2.517,736,2.613,967,5.149,968,4.143,974,3.9,980,2.979,981,5.718,982,3.576,983,3.576,1015,3.9,1016,4.392]],["title/classes/Quiz.html",[25,0.308,74,1.59]],["body/classes/Quiz.html",[3,0.05,4,0.044,5,0.038,7,0.154,10,1.013,11,0.007,13,0.419,17,0.113,19,0.792,20,0.807,21,0.807,24,0.086,25,0.251,30,0.004,31,0.004,74,2.226,98,0.423,99,0.852,157,1.238,175,1.415,205,0.422,209,1.144,218,0.807,230,0.403,245,0.863,249,1.405,288,2.963,300,4.877,301,3.981,302,4.877,303,5.706,304,5.232,307,4.359,318,0.838,365,1.324,587,2.159,589,3.133,590,3.227,591,3.227,592,2.431,593,3.905,594,3.905,596,4.15,599,2.069,604,3.013,605,4.81,606,2.608,607,2.069,608,2.069,609,2.914,610,1.448,612,2.069,1017,2.839,1018,5.047,1019,5.706,1020,3.741,1021,3.741,1022,3.741,1023,3.741,1024,3.741,1025,3.741,1026,3.741,1027,3.741,1028,3.741,1029,3.741,1030,3.375,1031,2.42,1032,2.674,1033,3.045,1034,3.741,1035,2.839,1036,3.321]],["title/classes/QuizAnswer.html",[25,0.308,1037,3.113]],["body/classes/QuizAnswer.html",[3,0.048,4,0.043,5,0.037,7,0.148,10,1.004,11,0.007,13,0.415,17,0.105,19,0.761,20,0.776,21,0.776,24,0.084,25,0.241,30,0.004,31,0.004,98,0.409,99,0.989,157,1.096,175,1.36,183,1.915,205,0.406,209,1.099,218,1.495,230,0.388,245,0.838,249,1.393,251,1.273,278,3.417,281,5.114,282,5.114,283,5.578,284,3.6,285,5.114,286,4.063,288,3.1,290,5.578,293,3.784,296,4.017,318,1.553,365,1.273,587,2.097,589,3.063,590,3.155,591,3.155,592,2.377,593,1.989,594,1.989,596,4.272,599,1.989,604,2.928,605,4.77,606,2.549,607,1.989,608,1.989,609,2.831,610,1.392,612,1.989,1037,3.59,1038,6.166,1039,2.729,1040,5.641,1041,3.596,1042,3.596,1043,3.596,1044,3.596,1045,3.596,1046,3.596,1047,3.596,1048,3.596,1049,3.193,1050,3.596,1051,3.596,1052,3.596,1053,2.927,1054,2.729,1055,3.193]],["title/modules/QuizAnswerModule.html",[32,1.556,46,3.281]],["body/modules/QuizAnswerModule.html",[3,0.066,4,0.058,5,0.05,11,0.007,17,0.132,18,0.913,24,0.066,25,0.331,30,0.005,31,0.005,32,2.242,34,2.213,35,2.967,46,6.6,47,5.802,52,3.224,53,2.405,54,2.405,56,3.133,57,3.133,73,4.379,74,2.29,75,3.526,97,0.913,208,2.638,209,1.508,229,3.424,278,1.954,606,2.001,627,2.728,1037,3.345,1054,5.018,1056,4.379,1057,4.379,1058,4.932,1059,4.379,1060,6.261,1061,6.261,1062,4.932,1063,4.379,1064,5.018,1065,4.932,1066,4.485,1067,4.015,1068,4.379,1069,4.932]],["title/injectables/QuizAnswerRepository.html",[80,0.866,1060,3.113]],["body/injectables/QuizAnswerRepository.html",[3,0.045,4,0.039,5,0.034,7,0.137,8,1.251,11,0.007,13,0.366,15,1.759,17,0.129,18,0.613,19,0.701,20,0.715,21,0.715,24,0.045,25,0.222,27,1.377,28,1.906,30,0.004,31,0.004,74,2.596,80,0.94,81,1.123,90,3.75,96,1.957,97,1.388,98,0.334,99,0.905,115,1.771,146,1.406,161,2.752,175,1.884,179,2.368,183,2.165,195,2.514,196,2.052,198,2.368,209,1.013,243,0.575,271,3.764,277,4.513,278,1.973,286,2.143,350,0.917,355,1.271,379,2.247,417,1.884,517,2.247,520,4.513,610,1.282,630,4.017,631,1.928,632,1.842,633,1.928,634,1.928,635,2.143,636,3.559,638,3.221,642,1.928,645,2.181,646,1.282,647,2.021,648,1.898,649,1.928,652,1.282,653,1.898,654,1.832,656,1.055,658,1.055,659,1.586,662,1.055,663,1.898,665,2.143,666,3.221,729,1.344,730,2.235,776,2.514,782,2.941,783,2.247,797,2.514,978,2.247,1018,3.56,1037,2.247,1038,3.56,1040,2.697,1053,2.697,1060,3.378,1067,2.697,1070,2.941,1071,5.029,1072,3.312,1073,2.941,1074,2.941,1075,2.697,1076,2.247,1077,4.871,1078,2.697,1079,2.697,1080,3.312,1081,3.312,1082,4.98,1083,3.312,1084,3.312,1085,4.98,1086,3.312,1087,3.312,1088,3.312,1089,3.312,1090,3.312,1091,3.312,1092,3.312,1093,3.312,1094,3.312,1095,3.312,1096,2.941]],["title/classes/QuizAnswerResolver.html",[25,0.308,1064,3.483]],["body/classes/QuizAnswerResolver.html",[3,0.042,4,0.037,5,0.032,7,0.129,8,1.199,10,0.822,11,0.007,13,0.358,15,1.716,17,0.129,18,0.58,19,0.663,20,0.675,21,0.675,24,0.042,25,0.21,26,1.483,27,1.301,28,2.216,30,0.004,31,0.004,74,2.54,75,5.452,96,1.915,97,1.358,98,0.344,99,0.885,103,1.621,108,1.621,146,0.884,161,2.908,183,2.091,205,0.353,218,1.247,230,0.337,233,2.551,236,3.092,237,2.551,277,4.385,278,3.022,315,2.376,318,1.643,379,4.385,517,4.385,520,4.385,571,1.572,645,2.512,656,0.997,658,0.997,659,1.519,662,0.997,677,1.939,679,2.955,681,3.313,682,1.939,685,1.794,690,1.939,691,3.83,694,1.939,696,3.576,697,1.731,698,1.731,699,1.621,700,1.572,701,1.731,702,1.731,703,1.731,705,1.731,707,1.939,708,1.863,709,3.849,711,1.939,712,1.863,714,1.939,715,1.863,717,2.025,718,1.731,720,1.939,1001,2.123,1002,2.123,1009,2.025,1037,5.463,1040,2.548,1061,4.385,1063,2.78,1064,3.621,1066,2.123,1067,2.548,1076,4.385,1077,4.706,1078,2.548,1079,2.548,1097,2.78,1098,4.771,1099,4.771,1100,4.771,1101,4.771,1102,3.13,1103,3.13,1104,3.13,1105,3.13,1106,3.13,1107,3.13,1108,3.13,1109,3.13,1110,3.13,1111,3.13,1112,3.13,1113,2.78,1114,3.13,1115,3.13,1116,3.13,1117,3.13,1118,3.13]],["title/injectables/QuizAnswerService.html",[80,0.866,1061,3.113]],["body/injectables/QuizAnswerService.html",[3,0.058,4,0.051,5,0.044,7,0.177,8,1.509,11,0.007,13,0.4,15,1.949,17,0.13,18,0.793,24,0.058,25,0.287,30,0.005,31,0.005,74,2.739,75,4.293,80,1.133,81,1.453,96,2.14,97,1.518,98,0.384,99,0.989,146,1.21,243,0.693,277,2.907,278,2.379,355,1.409,379,2.907,417,2.272,517,2.907,520,2.907,631,2.324,632,2.221,633,2.324,634,2.324,642,1.659,643,2.625,645,2.418,646,1.659,647,2.437,649,1.659,650,2.695,652,1.659,656,1.365,658,1.365,659,1.912,662,1.365,722,4.448,723,3.441,725,2.456,726,2.456,727,2.456,728,2.456,729,1.739,730,2.695,731,2.456,732,3.211,733,2.456,734,2.456,735,2.456,736,2.55,1060,5.094,1061,4.073,1066,2.907,1068,3.805,1076,2.907,1077,5.643,1078,3.489,1079,3.489,1119,3.805,1120,4.286]],["title/modules/QuizModule.html",[32,1.556,47,3.113]],["body/modules/QuizModule.html",[3,0.068,4,0.059,5,0.051,11,0.007,17,0.132,18,0.931,24,0.068,25,0.337,30,0.005,31,0.005,32,2.271,34,2.257,35,3.006,47,6.186,52,3.267,53,2.453,54,2.453,56,3.175,57,2.384,74,2.32,97,1.24,208,2.69,209,1.538,229,3.47,606,2.719,627,2.782,1030,3.116,1031,3.254,1032,3.597,1035,5.085,1071,5.99,1121,4.467,1122,4.467,1123,4.467,1124,6.281,1125,5.031,1126,4.467,1127,5.085,1128,5.031,1129,4.467,1130,4.467,1131,4.79,1132,4.467,1133,4.467]],["title/classes/QuizQuestion.html",[25,0.308,1030,2.843]],["body/classes/QuizQuestion.html",[3,0.051,4,0.045,5,0.039,7,0.157,10,0.983,11,0.007,13,0.406,17,0.107,19,0.805,20,0.821,21,0.821,24,0.087,25,0.255,30,0.004,31,0.004,98,0.424,99,1.005,157,1.222,175,1.44,205,0.429,209,1.163,218,0.821,230,0.41,245,0.873,249,1.37,251,1.952,278,3.362,288,2.981,307,4.827,315,4.925,316,5.283,317,4.925,318,1.693,319,3.161,365,1.347,587,2.186,589,3.164,590,3.259,591,3.259,592,2.455,593,2.105,594,3.589,596,3.936,599,2.105,604,3.051,605,4.693,606,2.633,607,2.105,608,2.105,609,2.95,610,1.473,612,2.105,1030,3.417,1031,5.488,1131,2.72,1134,2.888,1135,3.805,1136,4.898,1137,3.805,1138,3.805,1139,3.805,1140,3.805,1141,3.805,1142,3.805,1143,3.805,1144,3.098,1145,3.379]],["title/modules/QuizQuestionModule.html",[32,1.556,1146,3.483]],["body/modules/QuizQuestionModule.html",[3,0.069,4,0.061,5,0.053,11,0.007,17,0.131,18,0.953,24,0.069,25,0.345,30,0.005,31,0.005,32,2.306,34,2.31,35,3.053,52,3.317,53,2.51,54,2.51,56,3.224,57,2.439,74,2.356,97,0.953,208,2.753,209,1.574,229,3.523,278,2.04,606,2.089,627,2.847,1030,3.189,1032,3.68,1066,4.614,1131,4.864,1132,4.571,1146,6.951,1147,4.571,1148,4.571,1149,4.571,1150,6.303,1151,6.303,1152,3.907,1153,5.148,1154,4.571,1155,5.163,1156,5.148,1157,4.571]],["title/injectables/QuizQuestionRepository.html",[80,0.866,1150,3.113]],["body/injectables/QuizQuestionRepository.html",[3,0.051,4,0.045,5,0.039,7,0.158,8,1.391,11,0.007,13,0.385,15,1.866,17,0.132,18,0.708,19,0.809,20,0.824,21,0.824,24,0.051,25,0.256,30,0.004,31,0.004,74,2.733,80,1.045,81,1.296,90,3.771,96,2.061,97,1.461,98,0.355,99,0.952,146,1.079,161,2.679,183,2.002,209,1.168,243,0.639,271,4.332,278,2.193,307,2.592,311,2.472,313,4.651,355,1.348,383,2.592,417,2.094,526,2.592,529,2.592,610,1.479,630,4.186,631,2.142,632,2.047,633,2.142,634,2.142,635,2.472,636,3.814,638,3.58,642,1.479,643,2.419,644,2.472,645,2.314,646,1.479,647,2.246,648,2.19,649,1.479,650,2.483,651,2.592,652,1.479,653,2.19,654,2.114,656,1.217,658,1.217,659,1.762,662,1.217,663,2.19,665,2.472,729,1.551,730,2.483,978,2.592,985,3.111,986,3.393,987,3.393,988,3.393,989,3.393,1030,2.367,1031,3.58,1032,2.732,1144,3.111,1150,3.753,1158,3.393,1159,3.822,1160,2.472,1161,3.111,1162,3.111,1163,3.822]],["title/classes/QuizQuestionResolver.html",[25,0.308,1155,3.483]],["body/classes/QuizQuestionResolver.html",[3,0.042,4,0.037,5,0.032,7,0.129,8,1.199,10,0.822,11,0.007,13,0.358,15,1.716,17,0.129,18,0.58,19,0.663,20,0.675,21,0.675,24,0.042,25,0.21,26,1.483,27,1.301,28,2.216,30,0.004,31,0.004,74,2.54,96,1.915,97,1.358,98,0.344,99,0.885,103,1.621,108,1.621,146,0.884,161,2.908,183,2.091,205,0.353,218,1.247,230,0.337,233,2.551,236,3.092,237,2.551,278,3.022,302,2.376,307,2.123,311,4.182,313,4.133,318,1.643,383,4.385,526,4.385,529,4.385,571,1.572,645,2.512,656,0.997,658,0.997,659,1.519,662,0.997,677,1.939,679,2.955,681,3.313,682,1.939,685,1.794,690,1.939,691,3.83,694,1.939,696,3.576,697,1.731,698,1.731,699,1.621,700,1.572,701,1.731,702,1.731,703,1.731,705,1.731,707,1.939,708,1.863,709,3.849,711,1.939,712,1.863,714,1.939,715,1.863,717,2.025,718,1.731,720,1.939,1001,2.123,1002,2.123,1009,2.025,1030,4.989,1032,2.238,1066,2.123,1113,2.78,1151,4.385,1152,5.788,1154,2.78,1155,3.621,1160,4.182,1161,2.548,1162,2.548,1164,2.78,1165,4.771,1166,4.771,1167,4.771,1168,4.771,1169,3.13,1170,3.13,1171,3.13,1172,3.13,1173,3.13,1174,3.13,1175,3.13,1176,3.13,1177,3.13,1178,3.13,1179,3.13,1180,3.13,1181,3.13,1182,3.13,1183,3.13,1184,3.13]],["title/injectables/QuizQuestionService.html",[80,0.866,1151,3.113]],["body/injectables/QuizQuestionService.html",[3,0.058,4,0.051,5,0.044,7,0.177,8,1.509,11,0.007,13,0.4,15,1.949,17,0.13,18,0.793,24,0.058,25,0.287,30,0.005,31,0.005,74,2.739,80,1.133,81,1.453,96,2.14,97,1.518,98,0.384,99,0.989,146,1.21,243,0.693,278,2.379,311,2.772,313,4.955,355,1.409,383,2.907,417,2.272,526,2.907,529,2.907,631,2.324,632,2.221,633,2.324,634,2.324,642,1.659,643,2.625,645,2.418,646,1.659,647,2.437,649,1.659,650,2.695,652,1.659,656,1.365,658,1.365,659,1.912,662,1.365,722,4.448,723,3.441,725,2.456,726,2.456,727,2.456,728,2.456,729,1.739,730,2.695,731,2.456,732,3.211,733,2.456,734,2.456,735,2.456,736,2.55,1066,2.907,1150,5.094,1151,4.073,1152,4.557,1157,3.805,1160,2.772,1161,3.489,1162,3.489,1185,3.805,1186,4.286]],["title/injectables/QuizRepository.html",[80,0.866,1124,3.113]],["body/injectables/QuizRepository.html",[3,0.049,4,0.043,5,0.037,7,0.261,8,1.344,11,0.007,13,0.379,15,1.831,17,0.13,18,0.675,19,0.772,20,0.787,21,0.787,24,0.049,25,0.245,28,2.017,30,0.004,31,0.004,74,1.263,80,1.01,81,1.237,90,3.826,96,2.027,97,1.437,98,0.348,99,0.937,146,1.03,161,2.839,183,2.292,209,1.115,243,0.618,271,3.899,297,4.732,300,2.769,317,2.769,355,1.323,381,2.474,417,2.024,523,2.474,531,4.732,589,1.779,610,1.412,630,4.132,631,2.071,632,1.979,633,2.071,634,2.071,635,2.36,636,3.731,638,3.46,640,2.608,642,2.071,645,2.271,646,1.412,647,2.171,648,2.09,649,2.071,652,1.412,653,2.09,654,2.018,656,1.162,658,1.162,659,1.704,662,1.162,663,2.09,665,2.36,666,3.46,729,1.48,730,2.401,776,2.769,777,4.75,779,2.97,780,2.97,797,2.769,978,2.474,1018,2.608,1033,2.97,1096,3.239,1124,3.628,1187,3.239,1188,3.648,1189,3.648,1190,3.648,1191,2.474,1192,5.157,1193,2.97,1194,2.97,1195,3.648,1196,3.239,1197,3.648,1198,3.648,1199,3.648]],["title/classes/QuizResolver.html",[25,0.308,1127,3.483]],["body/classes/QuizResolver.html",[3,0.044,4,0.039,5,0.033,7,0.134,8,1.236,10,0.836,11,0.007,13,0.363,15,1.746,17,0.13,18,0.603,19,0.689,20,0.703,21,0.703,24,0.044,25,0.218,26,1.544,27,1.354,28,2.256,30,0.004,31,0.004,74,2.821,96,1.945,97,1.379,98,0.349,99,0.899,103,1.687,108,1.687,146,0.92,161,2.938,183,2.143,205,0.368,218,1.278,230,0.351,233,2.63,236,3.168,237,2.63,297,4.475,318,1.669,381,4.475,523,4.475,531,4.475,571,1.636,645,2.538,656,1.037,658,1.037,659,1.566,662,1.037,677,2.018,679,3.046,681,3.394,682,2.018,685,1.867,690,2.018,691,3.883,694,2.018,696,3.649,697,1.802,698,1.802,699,1.687,700,1.636,701,1.802,702,1.802,703,1.802,705,1.802,707,2.018,708,1.938,709,3.917,711,2.018,712,1.938,714,2.018,715,1.938,717,2.107,718,1.802,720,2.018,1001,2.209,1002,2.209,1009,2.107,1018,2.329,1071,4.268,1126,2.892,1127,3.732,1129,2.892,1191,4.475,1192,4.822,1193,2.652,1194,2.652,1200,2.892,1201,4.917,1202,4.917,1203,4.917,1204,4.917,1205,3.257,1206,3.257,1207,3.257,1208,3.257,1209,3.257,1210,3.257,1211,3.257,1212,3.257,1213,3.257,1214,3.257,1215,3.257,1216,3.257,1217,3.257,1218,3.257,1219,3.257,1220,3.257,1221,3.257]],["title/injectables/QuizService.html",[80,0.866,1071,2.969]],["body/injectables/QuizService.html",[3,0.059,4,0.052,5,0.045,7,0.181,8,1.535,11,0.007,13,0.403,15,1.967,17,0.13,18,0.813,24,0.059,25,0.294,30,0.005,31,0.005,80,1.153,81,1.489,96,2.157,97,1.529,98,0.387,99,0.997,146,1.24,243,0.705,297,2.979,355,1.421,381,2.979,417,2.311,523,2.979,531,2.979,631,2.365,632,2.259,633,2.365,634,2.365,642,1.7,643,2.671,645,2.439,646,1.7,647,2.479,649,1.7,650,2.741,652,1.7,656,1.399,658,1.399,659,1.945,662,1.399,722,4.475,723,3.5,725,2.517,726,2.517,727,2.517,728,2.517,729,1.782,730,2.741,731,2.517,732,3.267,733,2.517,734,2.517,735,2.517,736,2.613,1071,3.951,1124,5.149,1130,3.9,1191,2.979,1192,5.718,1193,3.576,1194,3.576,1222,3.9,1223,4.392]],["title/injectables/RepositoryProxyService.html",[80,0.866,722,2.377]],["body/injectables/RepositoryProxyService.html",[3,0.057,4,0.05,5,0.043,7,0.175,8,1.499,11,0.007,13,0.399,15,1.942,17,0.113,18,0.786,24,0.057,25,0.285,27,1.765,28,2.509,30,0.005,31,0.005,80,1.126,81,1.439,96,2.134,97,1.513,98,0.383,99,0.986,146,1.198,243,0.863,349,2.44,357,1.606,417,2.256,490,2.908,492,1.722,496,2.749,630,2.132,631,2.309,632,2.206,633,2.309,634,2.309,642,2.309,643,3.27,645,2.409,646,2.309,647,3.035,649,2.309,650,3.356,652,2.309,722,3.089,723,2.432,725,3.418,729,2.42,730,3.356,732,4,827,4.264,1224,7.452,1225,3.769,1226,6.895,1227,4.244,1228,4.244,1229,4.244,1230,4.244,1231,4.244,1232,4.244,1233,4.244,1234,3.769,1235,4.244,1236,4.244,1237,4.244,1238,4.244,1239,4.244]],["title/classes/Role.html",[25,0.308,1240,2.731]],["body/classes/Role.html",[3,0.058,4,0.051,5,0.044,7,0.178,10,0.995,11,0.007,13,0.411,17,0.114,19,0.912,20,0.929,21,0.929,24,0.093,25,0.289,30,0.005,31,0.005,97,1.287,98,0.415,99,0.908,157,1.199,175,1.629,205,0.486,209,1.317,218,0.929,230,0.464,245,0.954,249,1.389,288,3.106,301,4.304,318,0.965,327,5.658,365,1.524,587,2.387,589,3.388,590,3.49,591,3.49,592,2.629,593,3.332,594,3.332,596,4.163,599,2.382,604,3.332,605,4.756,606,2.82,607,2.382,608,2.382,609,3.222,610,1.667,612,2.382,1240,3.585,1241,3.268,1242,5.381,1243,4.307,1244,4.307,1245,4.307,1246,4.307,1247,4.307,1248,4.307,1249,4.307,1250,3.268,1251,3.079,1252,3.824]],["title/modules/RoleModule.html",[32,1.556,48,3.113]],["body/modules/RoleModule.html",[3,0.066,4,0.058,5,0.05,11,0.007,17,0.134,18,0.906,24,0.066,25,0.328,30,0.005,31,0.005,32,2.229,34,2.195,35,2.95,39,5.52,48,6.253,51,4.253,52,3.206,53,2.385,54,2.385,56,3.116,57,3.116,61,3.982,62,3.982,97,0.906,123,4.701,208,2.616,209,1.495,229,3.405,606,1.985,627,2.705,1240,2.91,1251,4.701,1253,4.343,1254,4.343,1255,4.343,1256,4.891,1257,6.253,1258,6.253,1259,4.891,1260,4.343,1261,4.99,1262,4.891,1263,4.343,1264,4.343,1265,3.982]],["title/injectables/RoleRepository.html",[80,0.866,1257,3.113]],["body/injectables/RoleRepository.html",[3,0.053,4,0.047,5,0.04,7,0.163,8,1.426,11,0.007,13,0.39,15,1.892,17,0.133,18,0.733,19,0.838,20,0.854,21,0.854,24,0.053,25,0.265,30,0.004,31,0.004,80,1.071,81,1.342,90,3.801,96,2.085,97,1.479,98,0.36,99,0.964,146,1.118,161,2.716,183,2.053,209,1.21,243,0.655,271,4.366,324,2.685,355,1.367,385,2.685,417,2.148,534,2.685,537,2.685,610,1.532,630,4.226,631,2.197,632,2.1,633,2.197,634,2.197,636,3.876,642,1.532,643,2.482,644,2.561,645,2.346,646,1.532,647,2.303,648,2.268,649,1.532,650,2.547,651,2.685,652,1.532,653,2.268,654,2.189,656,1.261,658,1.261,659,1.808,662,1.261,663,2.268,729,1.606,730,2.547,978,2.685,1240,2.355,1242,2.83,1250,3.005,1257,3.85,1266,3.515,1267,3.959,1268,3.959,1269,5.04,1270,3.959,1271,2.685,1272,5.402,1273,3.223,1274,3.223,1275,3.959,1276,3.959]],["title/classes/RoleResolver.html",[25,0.308,1261,3.483]],["body/classes/RoleResolver.html",[3,0.044,4,0.039,5,0.034,7,0.136,8,1.25,10,0.842,11,0.007,13,0.365,15,1.757,17,0.131,18,0.612,19,0.7,20,0.713,21,0.713,24,0.044,25,0.222,26,1.567,27,1.375,28,2.27,30,0.004,31,0.004,96,1.956,97,1.387,98,0.351,99,0.904,103,1.712,108,1.712,146,0.933,161,2.949,183,2.162,205,0.373,218,1.289,230,0.356,233,2.659,236,3.196,237,2.659,318,1.678,324,4.509,361,3.555,385,4.509,534,4.509,537,4.509,571,1.66,645,2.548,656,1.053,658,1.053,659,1.584,662,1.053,690,2.048,691,3.002,696,3.677,697,1.829,698,1.829,699,1.712,700,1.66,701,1.829,702,1.829,703,1.829,705,1.829,708,1.967,709,3.942,712,1.967,715,1.967,718,1.829,1009,2.139,1240,4.866,1242,2.364,1258,5.08,1260,2.936,1261,3.774,1263,2.936,1271,4.509,1272,4.866,1273,2.692,1274,2.692,1277,2.936,1278,4.973,1279,4.973,1280,4.973,1281,3.306,1282,3.306,1283,3.306,1284,3.306,1285,3.306,1286,3.306,1287,3.306,1288,3.306,1289,3.306,1290,3.306,1291,3.306,1292,3.306,1293,3.306,1294,3.306,1295,3.306,1296,3.306,1297,3.306,1298,3.306,1299,3.306,1300,3.306,1301,3.306,1302,3.306,1303,3.306,1304,3.306,1305,3.306,1306,3.306,1307,3.306]],["title/injectables/RoleService.html",[80,0.866,1258,3.113]],["body/injectables/RoleService.html",[3,0.059,4,0.052,5,0.045,7,0.181,8,1.535,11,0.007,13,0.403,15,1.967,17,0.13,18,0.813,24,0.059,25,0.294,30,0.005,31,0.005,80,1.153,81,1.489,96,2.157,97,1.529,98,0.387,99,0.997,146,1.24,243,0.705,324,2.979,355,1.421,385,2.979,417,2.311,534,2.979,537,2.979,631,2.365,632,2.259,633,2.365,634,2.365,642,1.7,643,2.671,645,2.439,646,1.7,647,2.479,649,1.7,650,2.741,652,1.7,656,1.399,658,1.399,659,1.945,662,1.399,722,4.475,726,2.517,727,2.517,728,2.517,729,1.782,730,2.741,731,2.517,732,3.267,733,2.517,734,2.517,735,2.517,1257,5.412,1258,4.143,1264,3.9,1271,2.979,1272,5.718,1273,3.576,1274,3.576,1308,3.9,1309,6.109,1310,4.392,1311,4.392]],["title/classes/School.html",[25,0.308,1312,3.113]],["body/classes/School.html",[3,0.054,4,0.048,5,0.041,7,0.166,10,1.016,11,0.007,13,0.42,17,0.11,19,0.853,20,0.87,21,0.87,24,0.09,25,0.27,30,0.004,31,0.004,97,1.241,98,0.418,99,0.882,157,1.235,175,1.525,205,0.455,209,1.232,218,0.87,230,0.434,245,0.91,249,1.41,284,3.841,288,3.04,318,0.903,336,4.792,337,5.087,338,3.988,365,1.427,587,2.279,589,3.268,590,3.366,591,3.366,592,2.536,593,3.18,594,3.18,596,4.444,599,2.229,604,3.18,605,4.827,606,2.72,607,2.229,608,2.229,609,3.075,610,1.56,612,2.229,1312,3.9,1313,3.059,1314,5.95,1315,4.031,1316,4.031,1317,4.031,1318,4.031,1319,4.031,1320,4.031,1321,4.031,1322,4.031,1323,4.031,1324,3.282,1325,3.059,1326,3.579]],["title/modules/SchoolModule.html",[32,1.556,49,3.281]],["body/modules/SchoolModule.html",[3,0.07,4,0.062,5,0.053,11,0.007,17,0.131,18,0.97,24,0.07,25,0.351,30,0.005,31,0.005,32,2.333,34,2.351,35,3.089,49,6.568,52,3.356,53,2.555,54,2.555,56,3.261,57,2.483,97,0.97,208,2.802,209,1.602,229,3.564,606,2.126,627,2.898,1312,3.554,1325,5.224,1327,4.653,1328,4.653,1329,4.653,1330,6.319,1331,6.319,1332,5.24,1333,4.653,1334,5.224,1335,5.24,1336,4.653,1337,4.653,1338,5.24]],["title/injectables/SchoolRepository.html",[80,0.866,1330,3.113]],["body/injectables/SchoolRepository.html",[3,0.048,4,0.042,5,0.036,7,0.146,8,1.314,11,0.007,13,0.375,15,1.808,17,0.13,18,0.655,19,0.749,20,0.763,21,0.763,24,0.048,25,0.237,28,1.666,30,0.004,31,0.004,80,0.987,81,1.2,90,3.757,96,2.005,97,1.422,98,0.36,99,0.927,146,0.999,161,2.718,175,1.979,183,2.251,209,1.082,243,0.604,271,4.096,333,2.4,355,1.307,387,2.4,417,1.979,539,2.4,542,4.663,610,1.37,630,4.096,631,2.025,632,1.935,633,2.409,634,2.025,635,2.289,636,3.676,638,3.383,640,2.53,642,1.37,643,2.287,644,2.289,645,2.348,646,1.37,647,2.123,648,2.027,649,2.025,652,1.37,653,2.027,654,1.957,656,1.127,658,1.127,659,1.666,662,1.127,663,2.027,665,2.289,666,2.289,729,1.436,730,2.347,776,2.685,779,4.258,780,4.258,978,2.4,1196,3.142,1312,2.4,1314,2.88,1324,2.88,1330,3.548,1339,3.142,1340,3.538,1341,3.538,1342,2.4,1343,5.066,1344,2.88,1345,2.88,1346,3.538,1347,3.538,1348,3.538,1349,3.538,1350,3.538,1351,6.223,1352,3.538,1353,3.538,1354,3.538,1355,6.223,1356,3.538,1357,3.538,1358,3.538]],["title/classes/SchoolResolver.html",[25,0.308,1334,3.483]],["body/classes/SchoolResolver.html",[3,0.044,4,0.039,5,0.034,7,0.136,8,1.25,10,0.842,11,0.007,13,0.365,15,1.757,17,0.131,18,0.612,19,0.7,20,0.713,21,0.713,24,0.044,25,0.222,26,1.567,27,1.375,28,2.27,30,0.004,31,0.004,96,1.956,97,1.387,98,0.351,99,0.904,103,1.712,108,1.712,146,0.933,161,2.949,183,2.162,205,0.373,218,1.289,230,0.356,233,2.659,236,3.196,237,2.659,318,1.678,333,4.509,387,4.509,539,4.509,542,4.509,571,1.66,645,2.548,656,1.053,658,1.053,659,1.584,662,1.053,677,2.048,679,3.08,681,2.849,685,1.895,691,3.339,694,2.048,696,3.677,697,1.829,698,1.829,699,1.712,700,1.66,701,1.829,702,1.829,703,1.829,705,2.75,707,2.048,709,3.306,711,2.048,714,2.048,715,1.967,717,2.139,718,1.829,720,2.048,1001,2.242,1002,2.242,1009,2.139,1312,5.547,1314,2.692,1331,4.509,1333,2.936,1334,3.774,1336,2.936,1342,4.509,1343,4.866,1344,2.692,1345,2.692,1359,2.936,1360,4.973,1361,4.973,1362,4.973,1363,4.973,1364,3.306,1365,3.306,1366,3.306,1367,3.306,1368,3.306,1369,3.306,1370,3.306,1371,3.306,1372,3.306,1373,3.306,1374,3.306,1375,3.306,1376,3.306,1377,3.306,1378,3.306,1379,3.306,1380,3.306,1381,3.306]],["title/injectables/SchoolService.html",[80,0.866,1331,3.113]],["body/injectables/SchoolService.html",[3,0.059,4,0.052,5,0.045,7,0.181,8,1.535,11,0.007,13,0.403,15,1.967,17,0.13,18,0.813,24,0.059,25,0.294,30,0.005,31,0.005,80,1.153,81,1.489,96,2.157,97,1.529,98,0.387,99,0.997,146,1.24,243,0.705,333,2.979,355,1.421,387,2.979,417,2.311,539,2.979,542,2.979,631,2.365,632,2.259,633,2.365,634,2.365,642,1.7,643,2.671,645,2.439,646,1.7,647,2.479,649,1.7,650,2.741,652,1.7,656,1.399,658,1.399,659,1.945,662,1.399,722,4.475,723,3.5,725,2.517,726,2.517,727,2.517,728,2.517,729,1.782,730,2.741,731,2.517,732,3.267,733,2.517,734,2.517,735,2.517,736,2.613,1330,5.149,1331,4.143,1337,3.9,1342,2.979,1343,5.718,1344,3.576,1345,3.576,1382,3.9,1383,4.392]],["title/injectables/SimpleRepository.html",[80,0.866,630,2.305]],["body/injectables/SimpleRepository.html",[3,0.045,4,0.04,5,0.034,7,0.138,8,1.264,11,0.007,13,0.367,15,1.769,17,0.108,18,0.621,19,0.71,20,0.724,21,0.724,24,0.045,25,0.225,27,1.396,28,2.399,30,0.004,31,0.004,80,0.949,81,1.138,90,3.871,96,1.967,97,1.395,98,0.336,99,0.909,115,1.795,146,0.948,161,2.96,175,1.903,183,2.596,196,4.665,198,2.4,271,4.446,288,2.282,338,1.997,349,1.188,350,1.67,357,1.27,406,3.817,417,2.282,490,1.637,492,1.362,496,1.547,589,1.637,590,1.686,591,3.029,592,1.27,609,1.795,610,1.299,630,2.526,631,1.947,632,1.86,633,1.947,634,2.335,636,4.028,642,1.947,643,2.637,645,2.511,646,1.947,647,2.447,649,1.947,650,2.707,652,1.947,700,1.686,729,2.041,730,3.006,732,1.795,783,2.277,786,4.91,797,2.547,827,3.596,846,2.547,1075,2.733,1234,2.98,1384,2.98,1385,3.357,1386,3.357,1387,3.357,1388,3.357,1389,3.357,1390,3.357,1391,3.357,1392,2.98,1393,3.357,1394,2.69,1395,2.98,1396,2.98,1397,2.98,1398,2.98,1399,3.357,1400,2.98,1401,4.466,1402,2.98,1403,4.466,1404,2.98,1405,2.4,1406,2.733,1407,3.357,1408,3.357,1409,3.357,1410,3.357,1411,3.357,1412,2.733]],["title/classes/Token.html",[25,0.308,164,2.731]],["body/classes/Token.html",[3,0.055,4,0.048,5,0.042,7,0.168,10,0.979,11,0.007,13,0.405,17,0.117,19,0.863,20,0.88,21,0.88,24,0.091,25,0.273,30,0.004,31,0.004,74,2.688,98,0.415,99,0.887,157,1.008,164,4.618,175,1.543,205,0.46,209,1.247,218,0.88,230,0.44,245,0.918,249,1.37,288,3.349,318,0.914,338,2.426,365,1.443,587,2.297,589,3.289,590,3.388,591,3.388,592,2.552,593,3.731,594,3.731,596,3.206,599,2.255,604,3.206,605,4.69,606,2.737,607,2.255,608,2.255,609,3.1,610,1.579,612,3.206,1018,4.823,1049,3.621,1133,3.621,1405,4.145,1413,3.095,1414,5.981,1415,5.99,1416,4.078,1417,4.078,1418,4.078,1419,4.078,1420,5.148,1421,4.078,1422,4.078,1423,4.078,1424,4.078,1425,3.32,1426,3.095,1427,3.621]],["title/modules/TokenModule.html",[32,1.556,50,3.281]],["body/modules/TokenModule.html",[3,0.07,4,0.062,5,0.053,11,0.007,17,0.131,18,0.97,24,0.07,25,0.351,30,0.005,31,0.005,32,2.333,34,2.351,35,3.089,50,6.568,52,3.356,53,2.555,54,2.555,56,3.261,57,2.483,97,0.97,164,3.118,208,2.802,209,1.602,229,3.564,606,2.126,627,2.898,1426,5.224,1428,4.653,1429,4.653,1430,4.653,1431,6.319,1432,6.319,1433,5.24,1434,4.653,1435,5.224,1436,5.24,1437,4.653,1438,4.653,1439,5.24]],["title/injectables/TokenRepository.html",[80,0.866,1431,3.113]],["body/injectables/TokenRepository.html",[3,0.044,4,0.038,5,0.033,7,0.134,8,1.234,11,0.007,13,0.377,15,1.834,17,0.127,18,0.602,19,0.688,20,0.701,21,0.701,24,0.044,25,0.218,28,1.884,30,0.004,31,0.004,74,1.126,80,0.927,81,1.102,90,3.735,96,1.943,97,1.378,98,0.332,99,0.898,115,2.626,140,3.727,146,0.918,161,2.735,164,3.922,175,2.238,179,4.23,183,2.14,196,3.665,198,2.324,209,0.994,243,0.567,271,4.29,286,3.176,338,1.935,346,4.471,355,1.261,389,2.205,406,3.727,417,1.858,418,2.647,549,4.471,557,2.205,589,1.585,590,1.633,591,1.633,592,1.23,610,1.259,630,3.995,631,1.901,632,1.816,633,1.901,634,1.901,635,2.103,636,3.785,638,3.176,642,1.901,645,2.275,646,1.259,647,1.993,648,1.863,649,1.259,650,2.204,651,2.205,652,1.259,653,1.863,654,1.798,656,1.035,658,1.035,659,1.564,662,1.035,663,1.863,665,2.103,666,3.176,729,1.993,1073,2.887,1074,2.887,1075,2.647,1400,2.887,1401,2.887,1402,2.887,1403,2.887,1404,2.887,1405,2.324,1406,2.647,1412,3.998,1414,2.647,1415,2.887,1425,2.647,1431,3.331,1440,2.887,1441,5.917,1442,6.592,1443,3.251,1444,3.251,1445,3.251,1446,2.205,1447,4.817,1448,2.647,1449,2.647,1450,3.251,1451,3.251,1452,3.251,1453,3.251,1454,4.91,1455,3.251,1456,3.251,1457,3.251,1458,3.251,1459,3.251,1460,3.251,1461,3.251,1462,3.251]],["title/classes/TokenResolver.html",[25,0.308,1435,3.483]],["body/classes/TokenResolver.html",[3,0.047,4,0.041,5,0.036,7,0.144,8,1.305,10,0.808,11,0.007,13,0.356,15,1.686,17,0.132,18,0.649,19,0.741,20,0.756,21,0.756,24,0.047,25,0.235,26,1.66,27,1.456,28,2.179,30,0.004,31,0.004,96,1.908,97,1.353,98,0.342,99,0.882,103,1.814,108,1.814,146,0.989,161,2.878,164,4.839,183,2.238,205,0.395,218,1.476,230,0.378,233,2.777,236,3.308,237,2.777,318,1.715,346,4.64,389,4.64,549,4.64,557,4.64,571,1.759,645,2.487,656,1.116,658,1.116,659,1.653,662,1.116,677,2.17,679,3.216,681,2.975,682,2.17,685,2.007,690,2.17,691,3.669,696,3.421,697,1.937,698,1.937,699,1.814,700,1.759,701,1.937,702,1.937,703,1.937,705,1.937,707,2.17,708,2.084,709,3.421,711,2.17,712,2.084,714,2.17,718,1.937,720,2.17,1019,4.61,1414,2.852,1432,4.64,1434,3.11,1435,3.941,1437,3.11,1446,2.376,1447,5.036,1448,2.852,1449,2.852,1463,3.11,1464,5.192,1465,5.192,1466,3.503,1467,3.503,1468,3.503,1469,3.503,1470,3.503,1471,3.503,1472,3.503,1473,3.503,1474,3.503,1475,3.503,1476,3.503,1477,3.503,1478,3.503,1479,3.503]],["title/injectables/TokenService.html",[80,0.866,1432,3.113]],["body/injectables/TokenService.html",[3,0.059,4,0.052,5,0.045,7,0.181,8,1.535,11,0.007,13,0.403,15,1.967,17,0.13,18,0.813,24,0.059,25,0.294,30,0.005,31,0.005,80,1.153,81,1.489,96,2.157,97,1.529,98,0.387,99,0.997,146,1.24,243,0.705,346,2.979,355,1.421,389,2.979,417,2.311,549,2.979,557,2.979,631,2.365,632,2.259,633,2.365,634,2.365,642,1.7,643,2.671,645,2.439,646,1.7,647,2.479,649,1.7,650,2.741,652,1.7,656,1.399,658,1.399,659,1.945,662,1.399,722,4.475,723,3.5,725,2.517,726,2.517,727,2.517,728,2.517,729,1.782,730,2.741,731,2.517,732,3.267,733,2.517,734,2.517,735,2.517,736,2.613,1431,5.149,1432,4.143,1438,3.9,1446,2.979,1447,5.718,1448,3.576,1449,3.576,1480,3.9,1481,4.392]],["title/classes/UpdateGroupingItemInput.html",[25,0.308,655,3.113]],["body/classes/UpdateGroupingItemInput.html",[3,0.062,4,0.054,5,0.047,7,0.189,10,0.912,11,0.007,13,0.395,17,0.117,19,0.968,20,0.987,21,0.987,24,0.062,25,0.421,30,0.005,31,0.005,69,4.478,98,0.379,99,1.053,157,1.215,205,0.516,218,1.666,230,0.493,240,4.193,242,3.472,243,0.725,245,0.995,246,5.842,247,5.842,248,5.842,249,1.308,250,4.062,251,1.619,254,2.001,255,0.95,264,1.371,267,1.845,268,1.045,288,2.377,318,1.731,319,3.6,349,2.734,350,1.986,355,0.815,357,1.731,365,2.223,587,2.489,592,2.715,655,4.261,1394,3.837,1482,7.189,1483,4.574,1484,4.574,1485,2.833,1486,4.574]],["title/classes/UpdateHangmanWordInput.html",[25,0.308,768,3.113]],["body/classes/UpdateHangmanWordInput.html",[3,0.066,4,0.058,5,0.05,7,0.202,10,0.878,11,0.007,13,0.388,17,0.12,19,1.038,20,1.058,21,1.058,24,0.066,25,0.442,30,0.005,31,0.005,67,4.397,98,0.373,99,1.031,157,1.172,205,0.554,218,1.715,230,0.529,243,0.76,245,1.043,249,1.284,254,2.098,255,1.019,259,4.118,261,3.173,262,4.811,263,4.811,264,1.47,265,4.355,267,1.935,268,1.12,288,2.492,318,1.476,349,2.814,350,2.059,355,0.874,357,1.856,365,2.331,587,2.61,592,2.814,768,4.468,1394,3.977,1485,3.038,1487,6.473,1488,4.355,1489,4.905]],["title/classes/UpdateMirrorWordInput.html",[25,0.308,875,3.113]],["body/classes/UpdateMirrorWordInput.html",[3,0.071,4,0.063,5,0.054,7,0.219,10,0.819,11,0.007,13,0.377,17,0.124,19,1.122,20,1.144,21,1.144,24,0.071,25,0.465,30,0.005,31,0.005,64,4.276,98,0.362,99,0.837,157,1.126,205,0.598,230,0.572,243,0.801,245,1.098,249,1.249,254,2.209,255,1.101,261,3.43,263,5.001,264,2.078,267,2.271,268,1.211,270,4.004,288,2.624,349,2.902,350,2.14,355,0.945,357,2.006,587,2.749,592,2.925,875,4.705,1394,4.134,1485,3.284,1487,6.294,1488,4.708,1490,5.303]],["title/classes/UpdatePuzzleInput.html",[25,0.308,980,3.113]],["body/classes/UpdatePuzzleInput.html",[3,0.076,4,0.067,5,0.058,7,0.233,10,0.668,11,0.007,13,0.353,17,0.127,19,1.198,20,1.221,21,1.221,24,0.076,25,0.485,30,0.006,31,0.006,98,0.339,99,0.873,157,0.993,205,0.639,230,0.61,243,0.835,245,1.145,249,1.168,254,2.304,255,1.175,264,1.696,267,2.125,268,1.293,274,4.295,288,2.737,349,2.975,350,2.208,355,1.008,357,2.141,587,2.867,592,3.017,980,4.907,1394,4.265,1485,3.506,1491,6.424,1492,5.66]],["title/classes/UpdateQuizAnswerInput.html",[25,0.308,1076,3.113]],["body/classes/UpdateQuizAnswerInput.html",[3,0.055,4,0.048,5,0.042,7,0.169,10,0.954,11,0.007,13,0.405,17,0.111,19,0.867,20,0.884,21,0.884,24,0.055,25,0.39,30,0.004,31,0.004,74,2.878,98,0.389,99,1.08,157,1.165,205,0.462,218,1.889,230,0.442,243,0.671,245,0.921,249,1.342,251,1.45,254,1.852,255,0.851,264,1.227,267,1.708,268,0.936,278,3.292,280,3.109,281,5.506,282,5.506,284,3.875,285,5.506,286,4.375,287,3.637,288,2.785,289,3.637,292,3.637,293,4.158,296,4.414,318,1.81,349,2.606,350,1.872,355,0.73,357,1.55,365,2.606,587,2.305,592,2.559,1076,3.945,1394,3.617,1485,2.537,1493,7.377,1494,4.097,1495,4.097,1496,4.097]],["title/classes/UpdateQuizInput.html",[25,0.308,1191,3.113]],["body/classes/UpdateQuizInput.html",[3,0.059,4,0.052,5,0.045,7,0.182,10,0.943,11,0.007,13,0.403,17,0.12,19,0.932,20,0.95,21,0.95,24,0.059,25,0.41,30,0.005,31,0.005,74,2.119,98,0.387,99,0.739,157,1.205,205,0.497,218,1.64,230,0.475,243,0.706,245,0.969,249,1.335,251,2.166,254,1.949,255,0.914,264,1.319,267,1.797,268,1.006,288,2.315,299,3.342,300,5.337,301,4.356,302,5.337,304,5.725,307,4.77,313,3.148,318,1.853,319,4.355,349,2.69,350,1.947,355,0.784,357,1.666,365,2.166,587,2.425,592,2.661,1160,3.958,1191,4.15,1394,3.761,1497,7.34,1498,4.403,1499,4.403,1500,3.91,1501,4.403,1502,4.403,1503,4.403,1504,3.585]],["title/classes/UpdateQuizQuestionInput.html",[25,0.308,1160,2.969]],["body/classes/UpdateQuizQuestionInput.html",[3,0.058,4,0.051,5,0.044,7,0.178,10,0.937,11,0.007,13,0.401,17,0.114,19,0.916,20,0.934,21,0.934,24,0.058,25,0.405,30,0.005,31,0.005,74,2.848,98,0.41,99,0.992,157,1.24,205,0.488,218,1.627,230,0.466,243,0.698,245,0.957,249,1.328,251,2.14,254,1.925,255,0.899,264,1.297,267,1.776,268,0.988,278,3.258,288,2.287,314,3.284,315,5.288,316,5.672,317,5.288,318,1.842,319,4.322,320,3.843,321,3.843,349,2.67,350,1.929,355,0.771,357,1.637,365,2.14,587,2.396,592,2.636,1160,3.911,1394,3.726,1485,2.681,1504,6.693,1505,4.328,1506,4.328,1507,4.328]],["title/classes/UpdateRoleInput.html",[25,0.308,1271,3.113]],["body/classes/UpdateRoleInput.html",[3,0.062,4,0.054,5,0.047,7,0.19,10,0.914,11,0.007,13,0.396,17,0.117,19,0.973,20,0.992,21,0.992,24,0.062,25,0.423,30,0.005,31,0.005,97,1.332,98,0.38,99,1.055,157,1.217,205,0.519,218,1.36,230,0.496,243,0.728,245,0.998,249,1.31,251,1.627,254,2.008,255,0.955,264,1.378,267,2.274,268,1.05,288,2.385,301,4.457,318,1.735,319,2.635,326,3.49,327,5.857,332,2.906,349,2.74,350,1.992,355,0.819,357,1.74,365,2.231,565,6.302,587,2.498,592,2.722,1271,4.276,1394,3.848,1485,2.848,1508,7.202,1509,6.305,1510,4.598,1511,4.598,1512,4.598,1513,4.598,1514,4.598]],["title/classes/UpdateSchoolInput.html",[25,0.308,1342,3.113]],["body/classes/UpdateSchoolInput.html",[3,0.056,4,0.049,5,0.043,7,0.173,10,0.96,11,0.007,13,0.408,17,0.112,19,0.886,20,0.903,21,0.903,24,0.056,25,0.396,30,0.005,31,0.005,97,1.267,98,0.392,99,1.084,157,1.243,205,0.472,218,1.842,230,0.451,243,0.682,245,0.935,249,1.35,251,1.481,254,1.88,255,0.869,264,1.254,267,1.734,268,0.956,284,3.921,288,2.234,318,1.823,319,2.398,332,2.721,335,3.175,336,4.891,337,5.193,338,4.071,341,3.715,345,5.242,349,2.63,350,1.894,355,0.745,357,1.583,365,2.63,565,4.807,587,2.34,592,2.588,1342,4.005,1394,3.659,1485,2.592,1515,7.422,1516,4.184,1517,4.184,1518,4.184,1519,4.184,1520,4.184,1521,4.184]],["title/classes/UpdateTokenInput.html",[25,0.308,1446,3.113]],["body/classes/UpdateTokenInput.html",[3,0.075,4,0.066,5,0.057,7,0.229,10,0.656,11,0.007,13,0.349,17,0.126,19,1.175,20,1.198,21,1.198,24,0.075,25,0.479,30,0.005,31,0.005,98,0.335,99,0.863,157,0.981,205,0.627,230,0.599,243,0.825,245,1.132,249,1.154,254,2.276,255,1.153,264,1.664,267,2.099,268,1.268,288,2.704,348,4.214,349,2.954,350,2.188,355,0.989,357,2.101,587,2.832,592,2.99,632,2.054,985,4.521,1394,4.227,1446,4.848,1500,4.931,1522,6.346,1523,5.553,1524,5.553,1525,5.553,1526,5.553]],["title/classes/UpdateUserInput.html",[25,0.308,1527,3.113]],["body/classes/UpdateUserInput.html",[3,0.052,4,0.046,5,0.04,7,0.16,10,0.987,11,0.007,13,0.416,17,0.108,19,0.82,20,0.835,21,0.835,24,0.052,25,0.374,30,0.004,31,0.004,98,0.399,99,1.087,157,1.259,158,4.445,160,4.059,205,0.437,218,1.89,230,0.417,243,0.645,245,0.884,249,1.376,251,1.37,254,1.779,255,0.804,264,1.16,267,1.641,268,0.884,284,3.756,288,2.114,318,1.874,319,3.201,349,2.539,350,1.814,355,0.69,357,1.465,360,2.939,361,4.685,362,5.335,365,2.805,370,4.96,373,2.071,587,2.214,592,2.48,1394,3.505,1527,3.789,1528,7.566,1529,6.554,1530,6.554,1531,3.872,1532,3.872,1533,3.872,1534,3.872,1535,3.872,1536,3.872,1537,3.872,1538,3.872,1539,3.872]],["title/classes/User.html",[25,0.308,155,2.731]],["body/classes/User.html",[3,0.05,4,0.044,5,0.038,7,0.155,10,0.998,11,0.007,13,0.412,17,0.118,19,0.793,20,0.809,21,0.809,24,0.087,25,0.251,30,0.004,31,0.004,98,0.412,99,1.001,110,3.985,155,3.828,157,1.16,158,4.364,160,3.985,175,1.418,205,0.423,209,1.146,218,1.177,230,0.404,245,0.864,249,1.365,251,1.327,284,3.687,288,2.965,318,1.584,319,2.148,338,2.23,361,4.6,362,5.238,365,1.931,587,2.162,589,3.137,590,3.231,591,3.231,592,2.434,593,2.073,594,3.559,596,3.909,599,3.018,604,3.018,605,4.812,606,2.611,607,2.073,608,2.073,609,2.918,610,2.112,612,2.073,1136,3.328,1240,3.247,1242,4.6,1265,3.052,1405,3.901,1420,4.845,1540,2.845,1541,3.749,1542,3.749,1543,3.749,1544,3.749,1545,3.749,1546,3.749,1547,3.749,1548,3.749,1549,3.749,1550,3.052,1551,3.749,1552,3.052,1553,3.749,1554,2.845,1555,3.328]],["title/injectables/UserRepository.html",[80,0.866,1556,3.113]],["body/injectables/UserRepository.html",[3,0.039,4,0.034,5,0.03,7,0.12,8,1.132,11,0.007,13,0.347,15,1.658,17,0.126,18,0.538,19,0.615,20,0.626,21,0.626,24,0.039,25,0.195,27,1.872,28,2.266,30,0.003,31,0.003,80,0.85,81,0.984,90,3.767,96,1.858,97,1.318,98,0.334,99,0.859,110,1.799,115,2.408,146,1.271,155,3.698,158,1.969,160,2.789,161,2.85,167,2.364,168,2.364,169,2.364,170,2.364,171,2.364,172,2.364,173,2.364,174,2.364,175,2.087,176,2.076,177,2.204,179,3.219,182,2.578,183,2.248,195,4.717,196,4.88,197,2.578,198,2.076,209,0.888,271,4.327,288,1.704,336,2.076,338,1.728,350,1.527,358,4.215,391,4.215,417,2.087,559,4.215,566,4.215,589,1.416,590,1.458,591,2.262,592,1.099,610,1.743,631,1.743,632,1.666,633,1.743,634,1.743,636,3.97,642,1.743,645,2.346,646,1.743,649,1.743,652,1.743,654,1.606,656,0.925,658,0.925,659,1.434,662,0.925,729,1.827,783,1.969,786,4.491,1240,1.728,1242,2.076,1250,2.204,1269,4.898,1392,2.578,1395,2.578,1396,2.578,1397,2.578,1398,2.578,1405,2.076,1406,2.364,1412,3.666,1527,4.215,1550,2.364,1552,2.364,1556,3.054,1557,2.364,1558,2.904,1559,2.904,1560,4.503,1561,2.904,1562,2.904,1563,2.904,1564,2.904,1565,2.904,1566,2.904,1567,4.491,1568,2.364,1569,2.364,1570,2.904,1571,2.904,1572,2.904,1573,4.503,1574,2.904,1575,4.503,1576,2.904,1577,2.904,1578,2.904,1579,2.904,1580,2.904,1581,2.904,1582,2.904,1583,2.904,1584,4.503,1585,2.904,1586,2.904,1587,2.904,1588,2.904,1589,2.904,1590,2.904,1591,2.904,1592,2.904,1593,2.904,1594,2.904]],["title/modules/UsersModule.html",[32,1.556,51,2.969]],["body/modules/UsersModule.html",[3,0.066,4,0.058,5,0.05,11,0.007,17,0.136,18,0.913,24,0.066,25,0.331,30,0.005,31,0.005,32,2.242,34,2.213,35,2.967,39,4.277,48,4.485,51,5.818,52,3.224,53,2.405,54,2.405,56,3.133,57,2.337,62,4.015,63,4.379,97,1.224,123,5.332,148,5.718,155,2.935,208,2.638,209,1.508,229,3.424,606,2.683,627,2.728,1240,2.935,1251,4.727,1265,4.015,1550,4.015,1554,5.018,1556,5.802,1595,4.379,1596,4.379,1597,4.379,1598,4.932,1599,4.379,1600,5.018,1601,4.932,1602,4.379,1603,4.379,1604,4.932]],["title/classes/UsersResolver.html",[25,0.308,1600,3.483]],["body/classes/UsersResolver.html",[3,0.044,4,0.039,5,0.033,7,0.135,8,1.241,10,0.838,11,0.007,13,0.364,15,1.75,17,0.131,18,0.606,19,0.693,20,0.707,21,0.707,24,0.044,25,0.22,26,1.552,27,1.362,28,2.261,30,0.004,31,0.004,96,1.949,97,1.382,98,0.35,99,0.901,103,1.696,108,1.696,110,2.029,146,0.925,148,4.622,155,4.854,161,2.942,183,2.15,205,0.37,218,1.065,230,0.353,233,2.641,236,3.178,237,2.641,318,1.591,358,4.488,391,4.488,559,4.488,566,4.488,571,1.645,645,2.542,656,1.043,658,1.043,659,1.572,662,1.043,681,3.406,685,1.877,691,3.748,696,3.66,697,1.812,698,1.812,699,1.696,700,1.645,701,1.812,702,1.812,703,1.812,705,1.812,708,1.949,709,3.927,718,1.812,1001,2.222,1002,2.222,1009,2.119,1527,4.488,1567,4.838,1568,2.667,1569,2.667,1599,2.908,1600,3.748,1603,2.908,1605,2.908,1606,4.938,1607,4.938,1608,4.938,1609,4.938,1610,3.276,1611,3.276,1612,3.276,1613,3.276,1614,3.276,1615,3.276,1616,3.276,1617,3.276,1618,3.276,1619,3.276,1620,3.276,1621,3.276,1622,3.276,1623,3.276,1624,3.276,1625,3.276,1626,3.276,1627,3.276,1628,3.276,1629,3.276,1630,3.276,1631,3.276,1632,3.276,1633,3.276,1634,3.276,1635,3.276,1636,3.276,1637,3.276,1638,3.276]],["title/injectables/UsersService.html",[80,0.866,148,2.843]],["body/injectables/UsersService.html",[3,0.05,4,0.044,5,0.038,7,0.153,8,1.359,11,0.007,13,0.381,15,1.842,17,0.125,18,0.685,19,0.783,20,0.799,21,0.799,24,0.05,25,0.248,26,1.754,27,1.539,28,2.38,30,0.004,31,0.004,80,1.021,81,1.255,90,3.684,96,2.038,97,1.445,98,0.366,99,0.942,110,2.293,115,1.979,146,1.045,148,3.349,161,3.031,167,3.013,168,3.013,169,3.013,170,3.013,171,3.013,172,3.013,173,3.013,174,3.013,175,1.4,176,2.646,177,2.809,183,2.311,271,4.52,358,4.765,391,4.765,417,2.046,559,4.765,566,4.765,631,2.093,632,2,633,2.093,634,2.093,642,2.093,645,2.285,646,2.093,649,2.093,652,2.093,656,1.179,658,1.179,659,1.722,662,1.179,729,2.194,1527,4.765,1556,5.293,1567,5.2,1568,3.013,1569,3.013,1602,3.287,1639,3.013,1640,3.701,1641,3.701,1642,3.701,1643,3.701,1644,3.701,1645,3.701,1646,3.701,1647,3.701,1648,3.701,1649,3.701,1650,3.701,1651,3.013,1652,3.701,1653,3.701,1654,3.701]],["title/coverage.html",[1655,5.591]],["body/coverage.html",[0,2.056,1,1.02,5,0.014,6,1.193,11,0.007,22,0.911,25,0.625,30,0.002,31,0.002,64,2.419,65,1.694,67,2.419,68,1.694,69,2.419,70,1.694,74,2.187,75,1.694,80,1.548,82,1.193,86,1.02,87,1.193,98,0.063,104,0.869,106,1.02,120,0.96,121,0.96,143,1.929,148,0.832,155,0.799,164,0.799,176,2.272,196,0.832,200,1.094,202,1.094,206,1.02,213,1.094,231,1.193,239,0.911,240,3.154,241,1.193,242,2.412,244,0.675,256,0.718,258,0.911,259,3.154,260,1.929,261,3.122,269,0.911,270,3.154,272,0.911,273,1.193,274,2.412,277,0.911,278,3.003,279,1.193,280,2.412,297,0.911,298,1.193,299,2.412,311,0.869,312,1.094,314,2.412,324,0.911,325,1.193,326,2.412,333,0.911,334,1.193,335,2.412,346,0.911,347,1.193,348,2.412,349,0.475,358,0.911,359,1.193,360,2.412,371,0.911,372,1.193,374,0.911,375,1.929,376,0.911,377,0.911,378,1.193,379,0.911,380,1.193,381,0.911,382,1.193,383,0.911,384,1.193,385,0.911,386,1.193,387,0.911,388,1.193,389,0.911,390,1.193,391,0.911,392,1.193,393,1.02,394,1.193,426,1.094,427,1.094,428,1.094,429,1.094,431,1.094,433,1.02,478,0.96,483,1.094,486,1.193,487,0.911,488,1.929,489,1.193,490,0.655,494,0.911,495,1.193,496,0.619,500,0.911,501,2.74,502,1.929,504,0.911,505,1.929,507,0.911,510,0.911,511,0.911,512,1.929,513,1.193,515,0.911,516,1.193,517,0.911,518,1.929,519,1.193,520,0.911,521,1.193,523,0.911,524,1.929,525,1.193,526,0.911,527,1.929,528,1.193,529,0.911,530,1.193,531,0.911,532,1.193,534,0.911,535,1.929,536,1.193,537,0.911,538,1.193,539,0.911,540,1.929,541,1.193,542,0.911,543,1.193,549,0.911,550,1.929,551,1.193,552,0.869,555,1.02,557,0.911,558,1.193,559,0.911,560,1.929,561,1.193,566,0.911,567,1.193,568,2.966,569,1.193,571,0.675,572,1.193,573,2.412,583,1.193,584,0.911,585,2.272,586,1.798,613,1.02,618,0.911,619,0.911,622,1.02,629,1.193,630,0.675,655,0.911,672,1.193,691,0.675,699,0.696,700,0.675,721,1.193,722,0.696,737,0.911,738,2.272,739,2.74,748,1.02,753,0.911,754,0.911,757,1.02,763,1.929,768,0.911,783,6.519,800,1.929,823,1.929,825,1.929,829,1.193,831,1.193,832,1.193,849,1.193,851,1.193,859,0.911,860,2.272,863,1.02,868,0.911,869,0.911,870,1.02,875,0.911,903,1.094,905,1.193,906,1.193,941,0.911,942,1.798,962,1.02,967,0.911,968,0.911,971,1.02,976,1.193,980,0.911,990,1.193,1015,1.193,1017,1.798,1030,0.832,1031,2.056,1035,1.02,1037,0.911,1038,2.272,1039,1.798,1054,1.02,1060,0.911,1061,0.911,1064,1.02,1070,1.193,1071,0.869,1076,0.911,1097,1.193,1119,1.193,1124,0.911,1127,1.02,1131,0.96,1134,1.798,1150,0.911,1151,0.911,1152,1.798,1155,1.02,1158,1.193,1160,0.869,1164,1.193,1185,1.193,1187,1.193,1191,0.911,1200,1.193,1222,1.193,1224,1.193,1225,1.193,1240,0.799,1241,1.798,1251,0.96,1257,0.911,1258,0.911,1261,1.02,1266,1.193,1271,0.911,1277,1.193,1308,1.193,1312,0.911,1313,1.798,1325,1.02,1330,0.911,1331,0.911,1334,1.02,1339,1.193,1342,0.911,1359,1.193,1382,1.193,1384,1.193,1413,1.798,1426,1.02,1431,0.911,1432,0.911,1435,1.02,1440,1.193,1446,0.911,1463,1.193,1480,1.193,1482,1.193,1487,1.929,1491,1.193,1493,1.193,1497,1.193,1504,1.094,1508,1.193,1515,1.193,1522,1.193,1527,0.911,1528,1.193,1540,1.798,1554,1.02,1556,0.911,1557,1.929,1600,1.02,1605,1.193,1639,1.929,1655,1.193,1656,1.193,1657,1.343,1658,1.343,1659,8.5,1660,3.179,1661,8.03,1662,8.5,1663,1.193,1664,1.193,1665,1.193,1666,2.104,1667,6.517,1668,1.193,1669,1.193,1670,5.546,1671,3.833,1672,4.827,1673,8.569,1674,1.343,1675,2.369,1676,1.343,1677,3.179,1678,1.193,1679,2.104,1680,1.193,1681,2.104,1682,4.373,1683,1.094,1684,1.193,1685,1.193,1686,1.193,1687,2.104,1688,1.193,1689,3.56,1690,1.193,1691,1.343,1692,1.343]],["title/dependencies.html",[35,2.481,1693,3.817]],["body/dependencies.html",[11,0.008,18,0.759,25,0.275,30,0.004,31,0.004,35,1.838,109,4.158,125,3.335,127,3.109,129,2.65,135,4.735,205,0.462,209,1.252,212,3.637,268,0.936,275,3.335,423,3.335,610,1.586,839,5.506,850,3.335,914,3.637,1683,3.335,1694,4.097,1695,8.49,1696,4.097,1697,4.097,1698,4.097,1699,4.097,1700,4.097,1701,4.097,1702,5.817,1703,5.165,1704,4.097,1705,4.097,1706,4.097,1707,4.097,1708,4.097,1709,4.097,1710,4.097,1711,4.097,1712,4.097,1713,4.097,1714,4.097,1715,4.097,1716,4.097,1717,6.537,1718,4.097,1719,5.817,1720,6.763,1721,4.097,1722,4.097,1723,4.097,1724,4.097,1725,5.817,1726,4.097,1727,4.097,1728,4.097,1729,4.097,1730,4.097,1731,3.637,1732,4.097,1733,4.097,1734,5.817,1735,4.097,1736,3.637,1737,4.097,1738,5.817,1739,4.097,1740,5.817,1741,4.097,1742,3.637,1743,4.097,1744,4.097,1745,4.097,1746,4.097,1747,4.097,1748,4.097,1749,4.097,1750,4.097,1751,4.097,1752,4.097,1753,4.097,1754,5.817,1755,4.097,1756,3.637,1757,4.097,1758,4.097,1759,4.097,1760,4.097,1761,4.097,1762,4.097,1763,4.097,1764,4.097,1765,4.097,1766,4.097,1767,4.097,1768,4.097,1769,4.097,1770,4.097,1771,4.097,1772,4.097,1773,4.097,1774,4.097,1775,4.097,1776,4.097,1777,4.097,1778,4.097,1779,4.097,1780,4.097,1781,4.097,1782,4.097,1783,4.097,1784,4.097,1785,4.097,1786,4.097,1787,4.097,1788,4.097]],["title/miscellaneous/functions.html",[1789,2.589,1790,4.909]],["body/miscellaneous/functions.html",[7,0.254,11,0.007,15,1.517,30,0.006,31,0.006,96,2.164,97,1.534,98,0.388,99,1,157,1.246,161,2.178,427,6.208,429,6.208,1681,5.463,1683,6.747,1684,7.358,1689,5.009,1690,6.771,1789,4.173,1790,5.463,1791,7.626,1792,7.358,1793,6.153,1794,6.153,1795,6.153,1796,7.626,1797,6.153]],["title/index.html",[7,0.157,1798,3.817,1799,3.817]],["body/index.html",[4,0.039,11,0.006,19,0.697,30,0.004,31,0.004,35,1.478,109,2.355,196,3.071,338,1.96,415,2.682,632,1.218,790,5.295,795,5.295,1651,4.037,1656,5.295,1717,2.925,1731,2.925,1736,7.091,1742,4.403,1756,2.925,1800,3.294,1801,5.963,1802,3.294,1803,5.963,1804,8.891,1805,3.294,1806,3.294,1807,3.294,1808,7.986,1809,3.294,1810,3.294,1811,4.959,1812,3.294,1813,3.294,1814,3.294,1815,3.294,1816,3.294,1817,3.294,1818,3.294,1819,5.963,1820,5.963,1821,3.294,1822,4.959,1823,7.117,1824,3.294,1825,4.959,1826,7.479,1827,3.294,1828,3.294,1829,7.117,1830,3.294,1831,6.636,1832,3.294,1833,5.963,1834,4.959,1835,3.294,1836,3.294,1837,8.664,1838,3.294,1839,3.294,1840,3.294,1841,4.959,1842,3.294,1843,3.294,1844,3.294,1845,3.294,1846,3.294,1847,3.294,1848,3.294,1849,3.294,1850,7.76,1851,4.959,1852,8.325,1853,5.963,1854,3.294,1855,7.76,1856,4.959,1857,3.294,1858,3.294,1859,4.959,1860,3.294,1861,3.294,1862,3.294,1863,3.294,1864,3.294,1865,3.294,1866,3.294,1867,3.294,1868,3.294,1869,3.294,1870,3.294,1871,3.294,1872,5.963,1873,5.963,1874,3.294,1875,5.963,1876,3.294,1877,3.294,1878,3.294,1879,3.294,1880,3.294,1881,3.294,1882,3.294,1883,2.925,1884,4.959,1885,5.963,1886,7.479,1887,6.636,1888,4.959,1889,3.294,1890,3.294,1891,4.959,1892,7.479,1893,3.294,1894,3.294,1895,3.294,1896,3.294,1897,3.294,1898,4.403,1899,3.294,1900,3.294,1901,3.294,1902,3.294,1903,4.959,1904,4.959,1905,6.636,1906,4.959,1907,3.294,1908,3.294,1909,3.294,1910,3.294,1911,3.294,1912,3.294,1913,3.294,1914,3.294,1915,3.294,1916,3.294,1917,3.294,1918,4.959,1919,3.294,1920,3.294,1921,3.294,1922,3.294,1923,3.294,1924,3.294,1925,3.294,1926,3.294,1927,3.294,1928,3.294,1929,3.294,1930,3.294,1931,3.294,1932,3.294,1933,3.294,1934,3.294,1935,3.294,1936,3.294,1937,3.294,1938,3.294,1939,3.294,1940,3.294]],["title/modules.html",[34,2.826]],["body/modules.html",[11,0.006,30,0.006,31,0.006,33,4.323,34,2.556,39,3.685,40,4.072,41,4.072,42,4.072,43,4.072,44,4.072,45,4.072,46,4.072,47,3.864,48,3.864,49,4.072,50,4.072,51,3.685,1146,4.323,1703,8.444,1898,5.058,1941,9.51,1942,9.51,1943,9.543,1944,5.696]],["title/overview.html",[1945,5.591]],["body/overview.html",[2,1.615,11,0.007,22,3.49,30,0.003,31,0.003,33,6.95,34,1.17,35,1.857,36,2.315,37,2.315,38,2.315,39,5.049,40,3.679,41,4.862,42,5.446,43,5.446,44,5.446,45,5.446,46,5.695,47,5.294,48,5.403,49,5.446,50,5.446,51,4.784,52,2.018,53,1.271,54,1.271,81,0.884,104,3.329,118,2.315,119,2.315,120,3.679,121,3.679,148,4.416,230,0.281,475,2.315,476,2.315,477,2.315,478,5.097,615,2.315,616,2.315,617,2.315,618,4.835,619,4.835,750,2.315,751,2.315,752,2.315,753,4.835,754,4.835,865,2.315,866,2.315,867,2.315,868,4.835,869,4.835,903,2.123,964,2.315,965,2.315,966,2.315,967,4.835,968,4.835,1056,2.315,1057,2.315,1059,2.315,1060,4.835,1061,4.835,1071,4.611,1121,2.315,1122,2.315,1123,2.315,1124,4.835,1146,5.613,1147,2.315,1148,2.315,1149,2.315,1150,4.835,1151,4.835,1253,2.315,1254,2.315,1255,2.315,1257,4.835,1258,4.835,1327,2.315,1328,2.315,1329,2.315,1330,4.835,1331,4.835,1428,2.315,1429,2.315,1430,2.315,1431,4.835,1432,4.835,1556,3.49,1595,2.315,1596,2.315,1597,2.315,1945,2.315,1946,2.608,1947,2.608,1948,2.608,1949,2.608,1950,2.608]],["title/miscellaneous/typealiases.html",[1789,2.589,1951,5.529]],["body/miscellaneous/typealiases.html",[7,0.244,11,0.006,30,0.006,31,0.006,98,0.278,240,3.069,259,3.069,270,3.069,278,2.952,585,4.236,586,5.653,611,6.064,738,4.236,739,6.111,747,6.064,860,4.236,862,6.064,942,4.497,961,6.064,1017,4.497,1031,3.833,1033,6.064,1038,4.236,1039,5.653,1053,6.064,1134,5.653,1144,6.064,1241,4.497,1250,5.653,1313,4.497,1324,6.064,1413,4.497,1425,6.064,1540,4.497,1552,6.064,1789,4.019,1952,5.926,1953,5.262,1954,5.262,1955,5.262,1956,5.262,1957,6.614,1958,5.262,1959,5.262,1960,5.262,1961,5.262,1962,5.262]],["title/miscellaneous/variables.html",[1789,2.589,1963,4.909]],["body/miscellaneous/variables.html",[5,0.046,7,0.121,11,0.007,28,2.272,30,0.003,31,0.003,56,1.385,57,1.385,90,1.278,98,0.292,100,4.019,101,2.09,126,2.38,143,2.38,150,4.918,157,0.856,161,1.035,175,1.106,176,5.102,177,4.204,200,3.685,202,3.685,213,4.509,218,0.976,240,1.514,259,1.514,270,1.514,278,1.794,403,2.595,415,2.38,426,3.685,428,3.685,431,4.509,483,3.685,576,2.38,578,2.38,585,2.09,586,3.435,613,3.435,614,2.595,699,2.344,700,2.273,738,2.09,739,4.459,748,3.435,749,2.595,846,3.435,860,2.09,863,3.435,864,2.595,925,2.595,926,2.595,927,2.595,928,2.595,942,2.218,962,3.435,963,2.595,1017,2.218,1031,1.891,1035,3.435,1036,2.595,1038,2.09,1039,3.435,1054,3.435,1055,2.595,1131,3.236,1134,3.435,1145,2.595,1241,2.218,1251,3.236,1252,2.595,1313,2.218,1325,3.435,1326,2.595,1413,2.218,1426,3.435,1427,2.595,1540,2.218,1554,3.435,1555,2.595,1557,2.38,1639,2.38,1651,2.38,1663,2.595,1664,4.019,1665,4.019,1666,2.595,1668,2.595,1669,2.595,1678,2.595,1679,5.991,1680,2.595,1685,2.595,1686,2.595,1687,5.538,1688,2.595,1689,2.38,1789,1.983,1792,4.019,1883,4.918,1953,2.595,1954,2.595,1955,2.595,1956,2.595,1957,4.019,1958,2.595,1959,2.595,1960,2.595,1961,2.595,1962,2.595,1963,2.595,1964,2.923,1965,2.923,1966,2.923,1967,2.923,1968,2.923,1969,2.923,1970,2.923,1971,2.923,1972,2.923,1973,4.526,1974,2.923,1975,2.923,1976,9.169,1977,9.169,1978,2.923,1979,4.526,1980,2.923,1981,2.923,1982,2.923,1983,4.526,1984,4.526,1985,2.923,1986,2.923,1987,2.923,1988,2.923,1989,2.923,1990,5.539,1991,6.237,1992,2.923,1993,6.747,1994,2.923,1995,2.923,1996,2.923,1997,4.526,1998,2.923,1999,2.923,2000,2.923,2001,2.923,2002,2.923,2003,2.923,2004,2.923,2005,2.923,2006,2.923,2007,4.526,2008,2.923,2009,4.526,2010,2.923,2011,2.923,2012,2.923,2013,2.923,2014,2.923,2015,2.923,2016,2.923]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"modules/PuzzleModule.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"modules/TokenModule.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":783,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"guards/PermissionGuard.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["0.1.13",{"_index":1776,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":1788,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1747,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":1765,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1677,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1675,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1674,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1659,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1667,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1671,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1660,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1670,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1673,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1672,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1676,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1950,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":1767,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":1739,"title":{},"body":{"dependencies.html":{}}}],["1.1.12",{"_index":1782,"title":{},"body":{"dependencies.html":{}}}],["1.1.18",{"_index":1713,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":1721,"title":{},"body":{"dependencies.html":{}}}],["1.22.17",{"_index":1786,"title":{},"body":{"dependencies.html":{}}}],["1.5.12",{"_index":1748,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1651,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["10.0.4",{"_index":1719,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":1461,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["13.0.0",{"_index":1734,"title":{},"body":{"dependencies.html":{}}}],["13.2.0",{"_index":1773,"title":{},"body":{"dependencies.html":{}}}],["13.2.3",{"_index":1695,"title":{},"body":{"dependencies.html":{}}}],["13.2.4",{"_index":1697,"title":{},"body":{"dependencies.html":{}}}],["13.8.4",{"_index":1732,"title":{},"body":{"dependencies.html":{}}}],["14.0.0",{"_index":1727,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":1946,"title":{},"body":{"overview.html":{}}}],["16.0.0",{"_index":1753,"title":{},"body":{"dependencies.html":{}}}],["16.3.0",{"_index":1755,"title":{},"body":{"dependencies.html":{}}}],["17.6.0",{"_index":1761,"title":{},"body":{"dependencies.html":{}}}],["2.0.0",{"_index":1780,"title":{},"body":{"dependencies.html":{}}}],["2.0.6",{"_index":1737,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":1759,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1745,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":441,"title":{},"body":{"controllers/FileController.html":{}}}],["29",{"_index":1948,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1947,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":1741,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":1718,"title":{},"body":{"dependencies.html":{}}}],["3.1.3",{"_index":1769,"title":{},"body":{"dependencies.html":{}}}],["3.4.1",{"_index":1711,"title":{},"body":{"dependencies.html":{}}}],["3.5.9",{"_index":1707,"title":{},"body":{"dependencies.html":{}}}],["3.6.3",{"_index":1743,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":1981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3600",{"_index":1460,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["4.0.0",{"_index":1766,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1751,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":1771,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":1709,"title":{},"body":{"dependencies.html":{}}}],["5.1.3",{"_index":1746,"title":{},"body":{"dependencies.html":{}}}],["6.0.8",{"_index":1715,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":1764,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":1730,"title":{},"body":{"dependencies.html":{}}}],["7.5.4",{"_index":1778,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["8).touppercase",{"_index":1452,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["8.0.0",{"_index":1722,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1757,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":1724,"title":{},"body":{"dependencies.html":{}}}],["8.3.1",{"_index":1720,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":1784,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1763,"title":{},"body":{"dependencies.html":{}}}],["86",{"_index":1949,"title":{},"body":{"overview.html":{}}}],["9.0.2",{"_index":1723,"title":{},"body":{"dependencies.html":{}}}],["__data",{"_index":641,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["_id",{"_index":589,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"injectables/QuizRepository.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"injectables/TokenRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["abilities",{"_index":2007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["above",{"_index":1856,"title":{},"body":{"index.html":{}}}],["abstract",{"_index":570,"title":{},"body":{"classes/GqlArg.html":{},"classes/GqlInput.html":{}}}],["access",{"_index":931,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["access_token",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["add",{"_index":1736,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["adding",{"_index":1818,"title":{},"body":{"index.html":{}}}],["address",{"_index":336,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/GetSchoolsArgs.html":{},"classes/School.html":{},"classes/UpdateSchoolInput.html":{},"injectables/UserRepository.html":{}}}],["advanced",{"_index":1931,"title":{},"body":{"index.html":{}}}],["advantage",{"_index":1924,"title":{},"body":{"index.html":{}}}],["affected",{"_index":1891,"title":{},"body":{"index.html":{}}}],["affected:e2e",{"_index":1895,"title":{},"body":{"index.html":{}}}],["affected:test",{"_index":1890,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":1952,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed",{"_index":1989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alongside",{"_index":1929,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1717,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1696,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1700,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1701,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1702,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1705,"title":{},"body":{"dependencies.html":{}}}],["answer",{"_index":281,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["answer.args",{"_index":1079,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{}}}],["answer.args.ts",{"_index":519,"title":{},"body":{"classes/GetQuizAnswerArgs.html":{},"coverage.html":{}}}],["answer.entity",{"_index":1067,"title":{},"body":{"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{}}}],["answer.entity.ts",{"_index":1039,"title":{},"body":{"classes/QuizAnswer.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["answer.entity.ts:13",{"_index":1041,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:17",{"_index":1051,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:21",{"_index":1050,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:25",{"_index":1042,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:29",{"_index":1048,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:33",{"_index":1047,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:37",{"_index":1043,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:41",{"_index":1044,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:45",{"_index":1052,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:49",{"_index":1045,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.input",{"_index":1077,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{}}}],["answer.input.ts",{"_index":280,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"coverage.html":{}}}],["answer.input.ts:10",{"_index":294,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{}}}],["answer.input.ts:13",{"_index":287,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:16",{"_index":292,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:19",{"_index":289,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:21",{"_index":291,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{}}}],["answer.input.ts:22",{"_index":1495,"title":{},"body":{"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:25",{"_index":1494,"title":{},"body":{"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:27",{"_index":1496,"title":{},"body":{"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:7",{"_index":295,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{}}}],["answer.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["answer.module.ts",{"_index":1062,"title":{},"body":{"modules/QuizAnswerModule.html":{}}}],["answer.repository",{"_index":1068,"title":{},"body":{"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerService.html":{}}}],["answer.repository.ts",{"_index":1070,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"coverage.html":{}}}],["answer.repository.ts:23",{"_index":1072,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["answer.resolver",{"_index":1065,"title":{},"body":{"modules/QuizAnswerModule.html":{}}}],["answer.resolver.ts",{"_index":1097,"title":{},"body":{"classes/QuizAnswerResolver.html":{},"coverage.html":{}}}],["answer.resolver.ts:17",{"_index":1102,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.resolver.ts:23",{"_index":1108,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.resolver.ts:30",{"_index":1110,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.resolver.ts:37",{"_index":1104,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.resolver.ts:44",{"_index":1112,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.resolver.ts:51",{"_index":1106,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.service",{"_index":1063,"title":{},"body":{"modules/QuizAnswerModule.html":{},"classes/QuizAnswerResolver.html":{}}}],["answer.service.ts",{"_index":1119,"title":{},"body":{"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["answer.service.ts:18",{"_index":1120,"title":{},"body":{"injectables/QuizAnswerService.html":{}}}],["answer/dto/args/get",{"_index":518,"title":{},"body":{"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"coverage.html":{}}}],["answer/dto/inputs/create",{"_index":279,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"coverage.html":{}}}],["answer/dto/inputs/delete",{"_index":380,"title":{},"body":{"classes/DeleteQuizAnswerInput.html":{},"coverage.html":{}}}],["answer/dto/inputs/update",{"_index":1493,"title":{},"body":{"classes/UpdateQuizAnswerInput.html":{},"coverage.html":{}}}],["answer/entities/quiz",{"_index":1038,"title":{},"body":{"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["answer/quiz",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/QuizAnswerModule.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["answeredat",{"_index":282,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["answers",{"_index":315,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["answers.args",{"_index":1078,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{}}}],["answers.args.ts",{"_index":521,"title":{},"body":{"classes/GetQuizAnswersArgs.html":{},"coverage.html":{}}}],["answers.args.ts:12",{"_index":522,"title":{},"body":{"classes/GetQuizAnswersArgs.html":{}}}],["any).deletedat",{"_index":1407,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["any).updatedat",{"_index":1589,"title":{},"body":{"injectables/UserRepository.html":{}}}],["any).user",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["anything",{"_index":987,"title":{},"body":{"injectables/PuzzleRepository.html":{},"injectables/QuizQuestionRepository.html":{}}}],["api",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["apollo",{"_index":1740,"title":{},"body":{"dependencies.html":{}}}],["apollo/client",{"_index":1706,"title":{},"body":{"dependencies.html":{}}}],["apollodriver",{"_index":210,"title":{},"body":{"modules/CoreModule.html":{}}}],["apollodriverconfig",{"_index":211,"title":{},"body":{"modules/CoreModule.html":{}}}],["app",{"_index":1855,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":1851,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1826,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":33,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/.../auth.service.ts",{"_index":1964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../configuration.ts",{"_index":1967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../constants.ts",{"_index":1974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../current",{"_index":1968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":1969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":1970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../file.utils.ts",{"_index":1792,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["apps/.../grouping",{"_index":1953,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../hangman",{"_index":1954,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":1791,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mirror",{"_index":1955,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../mongo",{"_index":1971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../multer",{"_index":1972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../permission.decorator.ts",{"_index":1973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../puzzle.entity.ts",{"_index":1956,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../quiz",{"_index":1957,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../quiz.entity.ts",{"_index":1958,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../role.entity.ts",{"_index":1959,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../school.entity.ts",{"_index":1960,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../token.entity.ts",{"_index":1961,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../user.entity.ts",{"_index":1962,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../user.repository.ts",{"_index":1966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../users.service.ts",{"_index":1965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../validation.ts",{"_index":1975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/api/src/app/app.module.ts",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/app/auth/auth.controller.ts",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/auth.controller.ts:13",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/api/src/app/auth/auth.module.ts",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/api/src/app/auth/auth.service.ts",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/auth.service.ts:10",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:18",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:23",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:33",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/decorators/current",{"_index":1663,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/decorators/permission.decorator.ts",{"_index":1666,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/guards/gql",{"_index":572,"title":{},"body":{"classes/GqlAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/jwt",{"_index":831,"title":{},"body":{"classes/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/local",{"_index":849,"title":{},"body":{"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/permission",{"_index":905,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts",{"_index":832,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts:19",{"_index":836,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts:7",{"_index":833,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts",{"_index":851,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts:13",{"_index":854,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts:8",{"_index":853,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["apps/api/src/app/core/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["apps/api/src/app/core/app.controller.ts:12",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/api/src/app/core/app.service.ts",{"_index":82,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["apps/api/src/app/core/app.service.ts:6",{"_index":83,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/api/src/app/core/config/configuration.ts",{"_index":1668,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/core/config/validation.ts",{"_index":1669,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/core/core.module.ts",{"_index":199,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/api/src/app/core/core.resolver.ts",{"_index":231,"title":{},"body":{"classes/CoreResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/core/core.resolver.ts:6",{"_index":234,"title":{},"body":{"classes/CoreResolver.html":{}}}],["apps/api/src/app/file/file.controller.ts",{"_index":394,"title":{},"body":{"controllers/FileController.html":{},"coverage.html":{}}}],["apps/api/src/app/file/file.controller.ts:34",{"_index":414,"title":{},"body":{"controllers/FileController.html":{}}}],["apps/api/src/app/file/file.controller.ts:48",{"_index":411,"title":{},"body":{"controllers/FileController.html":{}}}],["apps/api/src/app/file/file.controller.ts:59",{"_index":404,"title":{},"body":{"controllers/FileController.html":{}}}],["apps/api/src/app/file/file.controller.ts:64",{"_index":408,"title":{},"body":{"controllers/FileController.html":{}}}],["apps/api/src/app/file/file.controller.ts:70",{"_index":402,"title":{},"body":{"controllers/FileController.html":{}}}],["apps/api/src/app/file/file.module.ts",{"_index":479,"title":{},"body":{"modules/FileModule.html":{}}}],["apps/api/src/app/file/file.service.ts",{"_index":486,"title":{},"body":{"injectables/FileService.html":{},"coverage.html":{}}}],["apps/api/src/app/grouping",{"_index":240,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/hangman",{"_index":259,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/UpdateHangmanWordInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/mirror",{"_index":270,"title":{},"body":{"classes/CreateMirrorWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/puzzle/dto/args/get",{"_index":512,"title":{},"body":{"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/puzzle/dto/inputs/create",{"_index":273,"title":{},"body":{"classes/CreatePuzzleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/puzzle/dto/inputs/delete",{"_index":378,"title":{},"body":{"classes/DeletePuzzleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/puzzle/dto/inputs/update",{"_index":1491,"title":{},"body":{"classes/UpdatePuzzleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/puzzle/entities/puzzle.entity.ts",{"_index":942,"title":{},"body":{"classes/Puzzle.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/puzzle/entities/puzzle.entity.ts:13",{"_index":950,"title":{},"body":{"classes/Puzzle.html":{}}}],["apps/api/src/app/puzzle/entities/puzzle.entity.ts:17",{"_index":952,"title":{},"body":{"classes/Puzzle.html":{}}}],["apps/api/src/app/puzzle/entities/puzzle.entity.ts:21",{"_index":959,"title":{},"body":{"classes/Puzzle.html":{}}}],["apps/api/src/app/puzzle/entities/puzzle.entity.ts:25",{"_index":957,"title":{},"body":{"classes/Puzzle.html":{}}}],["apps/api/src/app/puzzle/entities/puzzle.entity.ts:29",{"_index":951,"title":{},"body":{"classes/Puzzle.html":{}}}],["apps/api/src/app/puzzle/entities/puzzle.entity.ts:33",{"_index":953,"title":{},"body":{"classes/Puzzle.html":{}}}],["apps/api/src/app/puzzle/entities/puzzle.entity.ts:37",{"_index":954,"title":{},"body":{"classes/Puzzle.html":{}}}],["apps/api/src/app/puzzle/entities/puzzle.entity.ts:41",{"_index":955,"title":{},"body":{"classes/Puzzle.html":{}}}],["apps/api/src/app/puzzle/entities/puzzle.entity.ts:45",{"_index":956,"title":{},"body":{"classes/Puzzle.html":{}}}],["apps/api/src/app/puzzle/entities/puzzle.entity.ts:49",{"_index":958,"title":{},"body":{"classes/Puzzle.html":{}}}],["apps/api/src/app/puzzle/entities/puzzle.entity.ts:53",{"_index":960,"title":{},"body":{"classes/Puzzle.html":{}}}],["apps/api/src/app/puzzle/entities/puzzle.repository.ts",{"_index":976,"title":{},"body":{"injectables/PuzzleRepository.html":{},"coverage.html":{}}}],["apps/api/src/app/puzzle/entities/puzzle.repository.ts:22",{"_index":977,"title":{},"body":{"injectables/PuzzleRepository.html":{}}}],["apps/api/src/app/puzzle/puzzle.module.ts",{"_index":969,"title":{},"body":{"modules/PuzzleModule.html":{}}}],["apps/api/src/app/puzzle/puzzle.resolver.ts",{"_index":990,"title":{},"body":{"classes/PuzzleResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/puzzle/puzzle.resolver.ts:17",{"_index":995,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["apps/api/src/app/puzzle/puzzle.resolver.ts:23",{"_index":1003,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["apps/api/src/app/puzzle/puzzle.resolver.ts:30",{"_index":1005,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["apps/api/src/app/puzzle/puzzle.resolver.ts:37",{"_index":997,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["apps/api/src/app/puzzle/puzzle.resolver.ts:44",{"_index":1007,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["apps/api/src/app/puzzle/puzzle.resolver.ts:51",{"_index":999,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["apps/api/src/app/puzzle/puzzle.service.ts",{"_index":1015,"title":{},"body":{"injectables/PuzzleService.html":{},"coverage.html":{}}}],["apps/api/src/app/puzzle/puzzle.service.ts:18",{"_index":1016,"title":{},"body":{"injectables/PuzzleService.html":{}}}],["apps/api/src/app/quiz",{"_index":278,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/quiz/dto/args/get",{"_index":524,"title":{},"body":{"classes/GetQuizArgs.html":{},"classes/GetQuizzesArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/dto/inputs/create",{"_index":298,"title":{},"body":{"classes/CreateQuizInput.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/dto/inputs/delete",{"_index":382,"title":{},"body":{"classes/DeleteQuizInput.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/dto/inputs/update",{"_index":1497,"title":{},"body":{"classes/UpdateQuizInput.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts",{"_index":1017,"title":{},"body":{"classes/Quiz.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:14",{"_index":1020,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:18",{"_index":1027,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:22",{"_index":1026,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:26",{"_index":1024,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:30",{"_index":1021,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:34",{"_index":1025,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:38",{"_index":1028,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:42",{"_index":1022,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:46",{"_index":1029,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:50",{"_index":1023,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.repository.ts",{"_index":1187,"title":{},"body":{"injectables/QuizRepository.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/entities/quiz.repository.ts:22",{"_index":1188,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["apps/api/src/app/quiz/quiz.module.ts",{"_index":1125,"title":{},"body":{"modules/QuizModule.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts",{"_index":1200,"title":{},"body":{"classes/QuizResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:17",{"_index":1205,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:23",{"_index":1211,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:30",{"_index":1213,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:37",{"_index":1207,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:44",{"_index":1215,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:51",{"_index":1209,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.service.ts",{"_index":1222,"title":{},"body":{"injectables/QuizService.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/quiz.service.ts:18",{"_index":1223,"title":{},"body":{"injectables/QuizService.html":{}}}],["apps/api/src/app/role/dto/args/get",{"_index":535,"title":{},"body":{"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/create",{"_index":325,"title":{},"body":{"classes/CreateRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/delete",{"_index":386,"title":{},"body":{"classes/DeleteRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/update",{"_index":1508,"title":{},"body":{"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts",{"_index":1241,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:13",{"_index":1243,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:17",{"_index":1246,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:21",{"_index":1247,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:25",{"_index":1248,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:29",{"_index":1244,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:33",{"_index":1249,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:37",{"_index":1245,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.repository.ts",{"_index":1266,"title":{},"body":{"injectables/RoleRepository.html":{},"coverage.html":{}}}],["apps/api/src/app/role/entities/role.repository.ts:22",{"_index":1268,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["apps/api/src/app/role/role.module.ts",{"_index":1259,"title":{},"body":{"modules/RoleModule.html":{}}}],["apps/api/src/app/role/role.resolver.ts",{"_index":1277,"title":{},"body":{"classes/RoleResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/role/role.resolver.ts:17",{"_index":1282,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:23",{"_index":1291,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:30",{"_index":1293,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:37",{"_index":1285,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:44",{"_index":1296,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:51",{"_index":1288,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.service.ts",{"_index":1308,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["apps/api/src/app/role/role.service.ts:18",{"_index":1310,"title":{},"body":{"injectables/RoleService.html":{}}}],["apps/api/src/app/school/dto/args/get",{"_index":540,"title":{},"body":{"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/school/dto/inputs/create",{"_index":334,"title":{},"body":{"classes/CreateSchoolInput.html":{},"coverage.html":{}}}],["apps/api/src/app/school/dto/inputs/delete",{"_index":388,"title":{},"body":{"classes/DeleteSchoolInput.html":{},"coverage.html":{}}}],["apps/api/src/app/school/dto/inputs/update",{"_index":1515,"title":{},"body":{"classes/UpdateSchoolInput.html":{},"coverage.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts",{"_index":1313,"title":{},"body":{"classes/School.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:13",{"_index":1315,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:17",{"_index":1321,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:21",{"_index":1320,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:25",{"_index":1316,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:29",{"_index":1317,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:33",{"_index":1322,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:37",{"_index":1318,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:41",{"_index":1323,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:45",{"_index":1319,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.repository.ts",{"_index":1339,"title":{},"body":{"injectables/SchoolRepository.html":{},"coverage.html":{}}}],["apps/api/src/app/school/entities/school.repository.ts:22",{"_index":1340,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["apps/api/src/app/school/school.module.ts",{"_index":1332,"title":{},"body":{"modules/SchoolModule.html":{}}}],["apps/api/src/app/school/school.resolver.ts",{"_index":1359,"title":{},"body":{"classes/SchoolResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/school/school.resolver.ts:17",{"_index":1364,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:23",{"_index":1371,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:28",{"_index":1373,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:33",{"_index":1367,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:40",{"_index":1375,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:47",{"_index":1369,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.service.ts",{"_index":1382,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["apps/api/src/app/school/school.service.ts:18",{"_index":1383,"title":{},"body":{"injectables/SchoolService.html":{}}}],["apps/api/src/app/token/dto/args/get",{"_index":550,"title":{},"body":{"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/token/dto/inputs/create",{"_index":347,"title":{},"body":{"classes/CreateTokenInput.html":{},"coverage.html":{}}}],["apps/api/src/app/token/dto/inputs/delete",{"_index":390,"title":{},"body":{"classes/DeleteTokenInput.html":{},"coverage.html":{}}}],["apps/api/src/app/token/dto/inputs/update",{"_index":1522,"title":{},"body":{"classes/UpdateTokenInput.html":{},"coverage.html":{}}}],["apps/api/src/app/token/entities/token.entity.ts",{"_index":1413,"title":{},"body":{"classes/Token.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/token/entities/token.entity.ts:14",{"_index":1416,"title":{},"body":{"classes/Token.html":{}}}],["apps/api/src/app/token/entities/token.entity.ts:18",{"_index":1422,"title":{},"body":{"classes/Token.html":{}}}],["apps/api/src/app/token/entities/token.entity.ts:22",{"_index":1421,"title":{},"body":{"classes/Token.html":{}}}],["apps/api/src/app/token/entities/token.entity.ts:26",{"_index":1419,"title":{},"body":{"classes/Token.html":{}}}],["apps/api/src/app/token/entities/token.entity.ts:30",{"_index":1417,"title":{},"body":{"classes/Token.html":{}}}],["apps/api/src/app/token/entities/token.entity.ts:34",{"_index":1423,"title":{},"body":{"classes/Token.html":{}}}],["apps/api/src/app/token/entities/token.entity.ts:38",{"_index":1418,"title":{},"body":{"classes/Token.html":{}}}],["apps/api/src/app/token/entities/token.repository.ts",{"_index":1440,"title":{},"body":{"injectables/TokenRepository.html":{},"coverage.html":{}}}],["apps/api/src/app/token/entities/token.repository.ts:22",{"_index":1443,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["apps/api/src/app/token/entities/token.repository.ts:27",{"_index":1444,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["apps/api/src/app/token/token.module.ts",{"_index":1433,"title":{},"body":{"modules/TokenModule.html":{}}}],["apps/api/src/app/token/token.resolver.ts",{"_index":1463,"title":{},"body":{"classes/TokenResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/token/token.resolver.ts:17",{"_index":1466,"title":{},"body":{"classes/TokenResolver.html":{}}}],["apps/api/src/app/token/token.resolver.ts:21",{"_index":1472,"title":{},"body":{"classes/TokenResolver.html":{}}}],["apps/api/src/app/token/token.resolver.ts:28",{"_index":1474,"title":{},"body":{"classes/TokenResolver.html":{}}}],["apps/api/src/app/token/token.resolver.ts:35",{"_index":1468,"title":{},"body":{"classes/TokenResolver.html":{}}}],["apps/api/src/app/token/token.resolver.ts:42",{"_index":1470,"title":{},"body":{"classes/TokenResolver.html":{}}}],["apps/api/src/app/token/token.service.ts",{"_index":1480,"title":{},"body":{"injectables/TokenService.html":{},"coverage.html":{}}}],["apps/api/src/app/token/token.service.ts:18",{"_index":1481,"title":{},"body":{"injectables/TokenService.html":{}}}],["apps/api/src/app/users/dto/args/get",{"_index":560,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/create",{"_index":359,"title":{},"body":{"classes/CreateUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/delete",{"_index":392,"title":{},"body":{"classes/DeleteUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/update",{"_index":1528,"title":{},"body":{"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts",{"_index":1540,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:15",{"_index":1541,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:19",{"_index":1549,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:23",{"_index":1545,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:26",{"_index":1546,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:30",{"_index":1544,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:34",{"_index":1547,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:38",{"_index":1542,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:42",{"_index":1548,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:46",{"_index":1543,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts",{"_index":1557,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:17",{"_index":1559,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:23",{"_index":1563,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:29",{"_index":1564,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:37",{"_index":1561,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:46",{"_index":1565,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:65",{"_index":1562,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/users.module.ts",{"_index":1598,"title":{},"body":{"modules/UsersModule.html":{}}}],["apps/api/src/app/users/users.resolver.ts",{"_index":1605,"title":{},"body":{"classes/UsersResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/users/users.resolver.ts:17",{"_index":1611,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:23",{"_index":1621,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:30",{"_index":1625,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:37",{"_index":1614,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:44",{"_index":1619,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:51",{"_index":1616,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.service.ts",{"_index":1639,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/users.service.ts:13",{"_index":1641,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:16",{"_index":1644,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:20",{"_index":1645,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:24",{"_index":1642,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:29",{"_index":1646,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:33",{"_index":1643,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/environments/environment.prod.ts",{"_index":1678,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/environments/environment.ts",{"_index":1680,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/main.ts",{"_index":1681,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/api/src/shared/gql",{"_index":568,"title":{},"body":{"classes/GqlArg.html":{},"classes/GqlInput.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/repository",{"_index":1224,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts",{"_index":1384,"title":{},"body":{"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:16",{"_index":1386,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:19",{"_index":1389,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:25",{"_index":1390,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:32",{"_index":1387,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:42",{"_index":1391,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:50",{"_index":1388,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/utils/constants.ts",{"_index":1685,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/utils/factories/mongo",{"_index":1686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/utils/factories/multer",{"_index":1688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/utils/file.utils.ts",{"_index":1689,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arg.abstract",{"_index":556,"title":{},"body":{"classes/GetTokenArgs.html":{},"classes/GetUserArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{}}}],["arg.abstract.ts",{"_index":569,"title":{},"body":{"classes/GqlArg.html":{},"coverage.html":{}}}],["args",{"_index":697,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{}}}],["args/gql",{"_index":555,"title":{},"body":{"classes/GetTokenArgs.html":{},"classes/GetUserArgs.html":{},"classes/GqlArg.html":{},"coverage.html":{}}}],["args/id.args",{"_index":492,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUsersArgs.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{}}}],["args/id.args.ts",{"_index":825,"title":{},"body":{"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"coverage.html":{}}}],["args/id.args.ts:14",{"_index":826,"title":{},"body":{"classes/IdArg.html":{}}}],["args/id.args.ts:8",{"_index":828,"title":{},"body":{"classes/IdArrayArg.html":{}}}],["argstype",{"_index":493,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{}}}],["arraynotempty",{"_index":345,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["artifacts",{"_index":1877,"title":{},"body":{"index.html":{}}}],["async",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FileController.html":{},"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/PuzzleRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FileController.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{}}}],["auth.guard.ts",{"_index":573,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":577,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["auth.service",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["auth/decorators/permission.decorator",{"_index":701,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{}}}],["auth/guards/gql",{"_index":698,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{}}}],["auth/guards/jwt",{"_index":434,"title":{},"body":{"controllers/FileController.html":{}}}],["auth/guards/permission",{"_index":702,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{}}}],["auth0/angular",{"_index":1708,"title":{},"body":{"dependencies.html":{}}}],["authcontroller",{"_index":86,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":579,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":581,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{}}}],["authmechanism=mongodb",{"_index":1998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authmodule",{"_index":39,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":104,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":1870,"title":{},"body":{"index.html":{}}}],["autoschemafile",{"_index":222,"title":{},"body":{"modules/CoreModule.html":{}}}],["available",{"_index":1944,"title":{},"body":{"modules.html":{}}}],["await",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FileController.html":{},"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["backend",{"_index":1939,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":1392,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["badrequestexception('cannot",{"_index":1408,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["badrequestexception('current",{"_index":1582,"title":{},"body":{"injectables/UserRepository.html":{}}}],["base64",{"_index":462,"title":{},"body":{"controllers/FileController.html":{}}}],["based",{"_index":1525,"title":{},"body":{"classes/UpdateTokenInput.html":{}}}],["bcrypt",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare(data.password",{"_index":1581,"title":{},"body":{"injectables/UserRepository.html":{}}}],["bcrypt.compare(password",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":1650,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcryptjs",{"_index":1744,"title":{},"body":{"dependencies.html":{}}}],["below",{"_index":1835,"title":{},"body":{"index.html":{}}}],["body",{"_index":416,"title":{},"body":{"controllers/FileController.html":{}}}],["body('image",{"_index":456,"title":{},"body":{"controllers/FileController.html":{}}}],["boolean",{"_index":290,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{}}}],["bootstrap",{"_index":1683,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":1937,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1943,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1703,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["buffer",{"_index":457,"title":{},"body":{"controllers/FileController.html":{}}}],["build",{"_index":1808,"title":{},"body":{"index.html":{}}}],["building",{"_index":1925,"title":{},"body":{"index.html":{}}}],["caching",{"_index":1908,"title":{},"body":{"index.html":{}}}],["callback",{"_index":1983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(new",{"_index":1987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(null",{"_index":1984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactivate",{"_index":907,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["canactivate(context",{"_index":911,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["capabilities",{"_index":1819,"title":{},"body":{"index.html":{}}}],["capacitor/core",{"_index":1710,"title":{},"body":{"dependencies.html":{}}}],["catch",{"_index":472,"title":{},"body":{"controllers/FileController.html":{}}}],["categories",{"_index":300,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/Quiz.html":{},"injectables/QuizRepository.html":{},"classes/UpdateQuizInput.html":{}}}],["category",{"_index":262,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/UpdateHangmanWordInput.html":{}}}],["cert",{"_index":1991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":1872,"title":{},"body":{"index.html":{}}}],["check",{"_index":986,"title":{},"body":{"injectables/PuzzleRepository.html":{},"injectables/QuizQuestionRepository.html":{}}}],["class",{"_index":25,"title":{"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Puzzle.html":{},"classes/PuzzleResolver.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/Token.html":{},"classes/TokenResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"modules/PuzzleModule.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"modules/TokenModule.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":230,"title":{},"body":{"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Puzzle.html":{},"classes/PuzzleResolver.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/Token.html":{},"classes/TokenResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"overview.html":{}}}],["cli",{"_index":1750,"title":{},"body":{"dependencies.html":{}}}],["cloud",{"_index":1905,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_filemodule",{"_index":475,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_filemodule_exports",{"_index":477,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_filemodule_providers",{"_index":476,"title":{},"body":{"modules/FileModule.html":{},"overview.html":{}}}],["cluster_groupingitemmodule",{"_index":615,"title":{},"body":{"modules/GroupingItemModule.html":{},"overview.html":{}}}],["cluster_groupingitemmodule_exports",{"_index":617,"title":{},"body":{"modules/GroupingItemModule.html":{},"overview.html":{}}}],["cluster_groupingitemmodule_providers",{"_index":616,"title":{},"body":{"modules/GroupingItemModule.html":{},"overview.html":{}}}],["cluster_hangmanwordmodule",{"_index":750,"title":{},"body":{"modules/HangmanWordModule.html":{},"overview.html":{}}}],["cluster_hangmanwordmodule_exports",{"_index":751,"title":{},"body":{"modules/HangmanWordModule.html":{},"overview.html":{}}}],["cluster_hangmanwordmodule_providers",{"_index":752,"title":{},"body":{"modules/HangmanWordModule.html":{},"overview.html":{}}}],["cluster_mirrorwordmodule",{"_index":865,"title":{},"body":{"modules/MirrorWordModule.html":{},"overview.html":{}}}],["cluster_mirrorwordmodule_exports",{"_index":866,"title":{},"body":{"modules/MirrorWordModule.html":{},"overview.html":{}}}],["cluster_mirrorwordmodule_providers",{"_index":867,"title":{},"body":{"modules/MirrorWordModule.html":{},"overview.html":{}}}],["cluster_puzzlemodule",{"_index":964,"title":{},"body":{"modules/PuzzleModule.html":{},"overview.html":{}}}],["cluster_puzzlemodule_exports",{"_index":965,"title":{},"body":{"modules/PuzzleModule.html":{},"overview.html":{}}}],["cluster_puzzlemodule_providers",{"_index":966,"title":{},"body":{"modules/PuzzleModule.html":{},"overview.html":{}}}],["cluster_quizanswermodule",{"_index":1056,"title":{},"body":{"modules/QuizAnswerModule.html":{},"overview.html":{}}}],["cluster_quizanswermodule_exports",{"_index":1059,"title":{},"body":{"modules/QuizAnswerModule.html":{},"overview.html":{}}}],["cluster_quizanswermodule_imports",{"_index":1058,"title":{},"body":{"modules/QuizAnswerModule.html":{}}}],["cluster_quizanswermodule_providers",{"_index":1057,"title":{},"body":{"modules/QuizAnswerModule.html":{},"overview.html":{}}}],["cluster_quizmodule",{"_index":1121,"title":{},"body":{"modules/QuizModule.html":{},"overview.html":{}}}],["cluster_quizmodule_exports",{"_index":1123,"title":{},"body":{"modules/QuizModule.html":{},"overview.html":{}}}],["cluster_quizmodule_providers",{"_index":1122,"title":{},"body":{"modules/QuizModule.html":{},"overview.html":{}}}],["cluster_quizquestionmodule",{"_index":1147,"title":{},"body":{"modules/QuizQuestionModule.html":{},"overview.html":{}}}],["cluster_quizquestionmodule_exports",{"_index":1148,"title":{},"body":{"modules/QuizQuestionModule.html":{},"overview.html":{}}}],["cluster_quizquestionmodule_providers",{"_index":1149,"title":{},"body":{"modules/QuizQuestionModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":1253,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_exports",{"_index":1255,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_imports",{"_index":1256,"title":{},"body":{"modules/RoleModule.html":{}}}],["cluster_rolemodule_providers",{"_index":1254,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":1327,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_exports",{"_index":1328,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_providers",{"_index":1329,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_tokenmodule",{"_index":1428,"title":{},"body":{"modules/TokenModule.html":{},"overview.html":{}}}],["cluster_tokenmodule_exports",{"_index":1430,"title":{},"body":{"modules/TokenModule.html":{},"overview.html":{}}}],["cluster_tokenmodule_providers",{"_index":1429,"title":{},"body":{"modules/TokenModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1595,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1596,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1597,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":1873,"title":{},"body":{"index.html":{}}}],["columns",{"_index":944,"title":{},"body":{"classes/Puzzle.html":{}}}],["community",{"_index":1849,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":1712,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":1875,"title":{},"body":{"index.html":{}}}],["computation",{"_index":1907,"title":{},"body":{"index.html":{}}}],["config.factory",{"_index":215,"title":{},"body":{"modules/CoreModule.html":{},"modules/FileModule.html":{}}}],["config.factory.ts",{"_index":1687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":201,"title":{},"body":{"modules/CoreModule.html":{}}}],["config/validation",{"_index":203,"title":{},"body":{"modules/CoreModule.html":{}}}],["configmodule",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":216,"title":{},"body":{"modules/CoreModule.html":{}}}],["configservice",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["configservice.get",{"_index":1996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_cert",{"_index":1992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_host')}/${configservice.get",{"_index":2004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":200,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":1919,"title":{},"body":{"index.html":{}}}],["console.log('user",{"_index":858,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["console.log(error",{"_index":474,"title":{},"body":{"controllers/FileController.html":{}}}],["const",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"controllers/FileController.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"injectables/TokenRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(groupingitem.name",{"_index":664,"title":{},"body":{"injectables/GroupingItemRepository.html":{}}}],["constructor(@injectmodel(hangmanword.name",{"_index":772,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["constructor(@injectmodel(mirrorword.name",{"_index":876,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["constructor(@injectmodel(puzzle.name",{"_index":984,"title":{},"body":{"injectables/PuzzleRepository.html":{}}}],["constructor(@injectmodel(quiz.name",{"_index":1195,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["constructor(@injectmodel(quizquestion.name",{"_index":1163,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["constructor(@injectmodel(role.name",{"_index":1275,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["constructor(@injectmodel(school.name",{"_index":1346,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["constructor(@injectmodel(token.name",{"_index":1450,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["constructor(authservice",{"_index":852,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(hangmanwordmodel",{"_index":764,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["constructor(mirrorwordmodel",{"_index":873,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["constructor(mirrorwordservice",{"_index":882,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["constructor(model",{"_index":1385,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["constructor(private",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(protected",{"_index":1234,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{}}}],["constructor(reflector",{"_index":908,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["constructor(repository",{"_index":723,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SchoolService.html":{},"injectables/TokenService.html":{}}}],["constructor(resourcemodel",{"_index":635,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/PuzzleRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/TokenRepository.html":{}}}],["constructor(rolemodel",{"_index":1267,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["constructor(rolerepository",{"_index":1309,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(roleservice",{"_index":1281,"title":{},"body":{"classes/RoleResolver.html":{}}}],["constructor(service",{"_index":677,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{}}}],["constructor(usermodel",{"_index":1558,"title":{},"body":{"injectables/UserRepository.html":{}}}],["constructor(userrepository",{"_index":1640,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(usersservice",{"_index":1610,"title":{},"body":{"classes/UsersResolver.html":{}}}],["context",{"_index":578,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["context.getclass",{"_index":917,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["context.gethandler",{"_index":918,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["context.gettype",{"_index":925,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest().user",{"_index":927,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FileController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/FileController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('file",{"_index":438,"title":{},"body":{"controllers/FileController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"overview.html":{}}}],["core",{"_index":1836,"title":{},"body":{"index.html":{}}}],["core.resolver",{"_index":207,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/app.controller",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["core/app.service",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["core/core.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["coremodule",{"_index":40,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coreresolver",{"_index":206,"title":{"classes/CoreResolver.html":{}},"body":{"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"coverage.html":{}}}],["correct",{"_index":246,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/GroupingItem.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["correctanswers",{"_index":316,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/QuizQuestion.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["count",{"_index":667,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["county",{"_index":337,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/GetSchoolsArgs.html":{},"classes/School.html":{},"classes/UpdateSchoolInput.html":{}}}],["coverage",{"_index":1655,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":632,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{},"classes/UpdateTokenInput.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(data",{"_index":642,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["createdat",{"_index":590,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"injectables/TokenRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["creategroupingitem",{"_index":673,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["creategroupingitem(@args('creategroupingitemdata",{"_index":713,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["creategroupingitem(data",{"_index":680,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["creategroupingiteminput",{"_index":239,"title":{"classes/CreateGroupingItemInput.html":{}},"body":{"classes/CreateGroupingItemInput.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["createhangmanword",{"_index":801,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["createhangmanword(@args('createhangmanworddata",{"_index":820,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["createhangmanword(data",{"_index":806,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["createhangmanwordinput",{"_index":258,"title":{"classes/CreateHangmanWordInput.html":{}},"body":{"classes/CreateHangmanWordInput.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["createmirrorword",{"_index":878,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["createmirrorword(@args('createmirrorworddata",{"_index":897,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["createmirrorword(data",{"_index":883,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["createmirrorwordinput",{"_index":269,"title":{"classes/CreateMirrorWordInput.html":{}},"body":{"classes/CreateMirrorWordInput.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["createparamdecorator((_data",{"_index":1982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpuzzle",{"_index":991,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["createpuzzle(@args('createpuzzledata",{"_index":1012,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["createpuzzle(data",{"_index":996,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["createpuzzleinput",{"_index":272,"title":{"classes/CreatePuzzleInput.html":{}},"body":{"classes/CreatePuzzleInput.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"coverage.html":{}}}],["createquiz",{"_index":1201,"title":{},"body":{"classes/QuizResolver.html":{}}}],["createquiz(@args('createquizdata",{"_index":1219,"title":{},"body":{"classes/QuizResolver.html":{}}}],["createquiz(data",{"_index":1206,"title":{},"body":{"classes/QuizResolver.html":{}}}],["createquizanswer",{"_index":1098,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["createquizanswer(@args('createquizanswerdata",{"_index":1116,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["createquizanswer(data",{"_index":1103,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["createquizanswerinput",{"_index":277,"title":{"classes/CreateQuizAnswerInput.html":{}},"body":{"classes/CreateQuizAnswerInput.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["createquizinput",{"_index":297,"title":{"classes/CreateQuizInput.html":{}},"body":{"classes/CreateQuizInput.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["createquizquestion",{"_index":1165,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["createquizquestion(@args('createquizquestiondata",{"_index":1182,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["createquizquestion(data",{"_index":1170,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["createquizquestioninput",{"_index":311,"title":{"classes/CreateQuizQuestionInput.html":{}},"body":{"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["createrole",{"_index":1278,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createrole(@args('createroledata",{"_index":1302,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createrole(data",{"_index":1283,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createroleinput",{"_index":324,"title":{"classes/CreateRoleInput.html":{}},"body":{"classes/CreateRoleInput.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["createschool",{"_index":1360,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["createschool(@args('createschooldata",{"_index":1379,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["createschool(data",{"_index":1365,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["createschoolinput",{"_index":333,"title":{"classes/CreateSchoolInput.html":{}},"body":{"classes/CreateSchoolInput.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["createtoken",{"_index":1464,"title":{},"body":{"classes/TokenResolver.html":{}}}],["createtoken(@args('createtokendata",{"_index":1478,"title":{},"body":{"classes/TokenResolver.html":{}}}],["createtoken(data",{"_index":1467,"title":{},"body":{"classes/TokenResolver.html":{}}}],["createtokeninput",{"_index":346,"title":{"classes/CreateTokenInput.html":{}},"body":{"classes/CreateTokenInput.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"coverage.html":{}}}],["createuser",{"_index":1606,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(@args('createuserdata",{"_index":1632,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(data",{"_index":1612,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuserinput",{"_index":358,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["cropheight",{"_index":945,"title":{},"body":{"classes/Puzzle.html":{}}}],["cropleft",{"_index":946,"title":{},"body":{"classes/Puzzle.html":{}}}],["cropperjs",{"_index":1738,"title":{},"body":{"dependencies.html":{}}}],["croptop",{"_index":947,"title":{},"body":{"classes/Puzzle.html":{}}}],["cropwidth",{"_index":948,"title":{},"body":{"classes/Puzzle.html":{}}}],["currentuser",{"_index":1665,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cypress",{"_index":1894,"title":{},"body":{"index.html":{}}}],["data",{"_index":645,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["data.address",{"_index":1349,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.category",{"_index":777,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizRepository.html":{}}}],["data.county",{"_index":1350,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.email",{"_index":1575,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.id",{"_index":786,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["data.ids.includes(x._id.tostring",{"_index":785,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data.ids?.length",{"_index":782,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizAnswerRepository.html":{}}}],["data.iscorrect",{"_index":1094,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["data.name",{"_index":1348,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.newpassword",{"_index":1584,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.newpasswordconfirm",{"_index":1585,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.om",{"_index":1347,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.password",{"_index":1649,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.questionid",{"_index":1088,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["data.questions",{"_index":1198,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["data.questions.map((question",{"_index":1199,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["data.quizid",{"_index":1082,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["data.quizid}/${data.questionid",{"_index":1090,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["data.token",{"_index":1454,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["data.type",{"_index":1351,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.updatedat",{"_index":1409,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["data?.category",{"_index":774,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data?.ids",{"_index":775,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data?.roles?.map((roleid",{"_index":1591,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data[filterkey",{"_index":1355,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["database_host",{"_index":1995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":1997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_password",{"_index":2003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":288,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["date(date.now",{"_index":1459,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["date.now",{"_index":1412,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/UserRepository.html":{}}}],["decoded",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoded.email",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"controllers/FileController.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Puzzle.html":{},"classes/PuzzleResolver.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/Token.html":{},"classes/TokenResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}}}],["default",{"_index":1976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"controllers/FileController.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["del",{"_index":1749,"title":{},"body":{"dependencies.html":{}}}],["delete",{"_index":417,"title":{},"body":{"controllers/FileController.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["delete(':path",{"_index":467,"title":{},"body":{"controllers/FileController.html":{}}}],["delete(':path')@useguards(jwtauthguard",{"_index":401,"title":{},"body":{"controllers/FileController.html":{}}}],["delete(data",{"_index":646,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["deleted",{"_index":1403,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{}}}],["deletedat",{"_index":591,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"injectables/TokenRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["deletefile",{"_index":395,"title":{},"body":{"controllers/FileController.html":{}}}],["deletefile(@param('path",{"_index":468,"title":{},"body":{"controllers/FileController.html":{}}}],["deletefile(image",{"_index":400,"title":{},"body":{"controllers/FileController.html":{}}}],["deletegroupingitem",{"_index":674,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["deletegroupingitem(@args('deletegroupingitemdata",{"_index":719,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["deletegroupingitem(data",{"_index":684,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["deletegroupingiteminput",{"_index":371,"title":{"classes/DeleteGroupingItemInput.html":{}},"body":{"classes/DeleteGroupingItemInput.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["deletehangmanword",{"_index":802,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["deletehangmanword(@args('deletehangmanworddata",{"_index":822,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["deletehangmanword(data",{"_index":808,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["deletehangmanwordinput",{"_index":374,"title":{"classes/DeleteHangmanWordInput.html":{}},"body":{"classes/DeleteHangmanWordInput.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["deletemirrorword",{"_index":879,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["deletemirrorword(@args('deletemirrorworddata",{"_index":901,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["deletemirrorword(data",{"_index":885,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["deletemirrorwordinput",{"_index":376,"title":{"classes/DeleteMirrorWordInput.html":{}},"body":{"classes/DeleteMirrorWordInput.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["deletepuzzle",{"_index":992,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["deletepuzzle(@args('deletepuzzledata",{"_index":1014,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["deletepuzzle(data",{"_index":998,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["deletepuzzleinput",{"_index":377,"title":{"classes/DeletePuzzleInput.html":{}},"body":{"classes/DeletePuzzleInput.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"coverage.html":{}}}],["deletequiz",{"_index":1202,"title":{},"body":{"classes/QuizResolver.html":{}}}],["deletequiz(@args('deletequizdata",{"_index":1221,"title":{},"body":{"classes/QuizResolver.html":{}}}],["deletequiz(data",{"_index":1208,"title":{},"body":{"classes/QuizResolver.html":{}}}],["deletequizanswer",{"_index":1099,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["deletequizanswer(@args('deletequizanswerdata",{"_index":1118,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["deletequizanswer(data",{"_index":1105,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["deletequizanswerinput",{"_index":379,"title":{"classes/DeleteQuizAnswerInput.html":{}},"body":{"classes/DeleteQuizAnswerInput.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["deletequizinput",{"_index":381,"title":{"classes/DeleteQuizInput.html":{}},"body":{"classes/DeleteQuizInput.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["deletequizquestion",{"_index":1166,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["deletequizquestion(@args('deletequizquestiondata",{"_index":1184,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["deletequizquestion(data",{"_index":1172,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["deletequizquestioninput",{"_index":383,"title":{"classes/DeleteQuizQuestionInput.html":{}},"body":{"classes/DeleteQuizQuestionInput.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["deleterole",{"_index":1279,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleterole(@args('deleteroledata",{"_index":1306,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleterole(data",{"_index":1286,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleteroleinput",{"_index":385,"title":{"classes/DeleteRoleInput.html":{}},"body":{"classes/DeleteRoleInput.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["deleteschool",{"_index":1361,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["deleteschool(@args('deleteschooldata",{"_index":1381,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["deleteschool(data",{"_index":1368,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["deleteschoolinput",{"_index":387,"title":{"classes/DeleteSchoolInput.html":{}},"body":{"classes/DeleteSchoolInput.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["deletetoken",{"_index":1465,"title":{},"body":{"classes/TokenResolver.html":{}}}],["deletetoken(@args('deletetokendata",{"_index":1479,"title":{},"body":{"classes/TokenResolver.html":{}}}],["deletetoken(data",{"_index":1469,"title":{},"body":{"classes/TokenResolver.html":{}}}],["deletetokeninput",{"_index":389,"title":{"classes/DeleteTokenInput.html":{}},"body":{"classes/DeleteTokenInput.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"coverage.html":{}}}],["deleteuser",{"_index":1607,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuser(@args('deleteuserdata",{"_index":1637,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuser(data",{"_index":1615,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuserinput",{"_index":391,"title":{"classes/DeleteUserInput.html":{}},"body":{"classes/DeleteUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["dep",{"_index":1897,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":35,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/PuzzleModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/TokenModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":1933,"title":{},"body":{"index.html":{}}}],["deprecationreason",{"_index":508,"title":{},"body":{"classes/GetMirrorWordArgs.html":{}}}],["description",{"_index":301,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateTokenInput.html":{},"classes/HangmanWordResolver.html":{},"classes/Quiz.html":{},"classes/Role.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateRoleInput.html":{}}}],["dest",{"_index":2006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["destination",{"_index":443,"title":{},"body":{"controllers/FileController.html":{}}}],["dev",{"_index":1867,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1940,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1824,"title":{},"body":{"index.html":{}}}],["development",{"_index":1865,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1832,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":1900,"title":{},"body":{"index.html":{}}}],["different",{"_index":1825,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1880,"title":{},"body":{"index.html":{}}}],["disable",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["diskstorage",{"_index":424,"title":{},"body":{"controllers/FileController.html":{}}}],["dist",{"_index":1879,"title":{},"body":{"index.html":{}}}],["distributed",{"_index":1906,"title":{},"body":{"index.html":{}}}],["document",{"_index":609,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["documentation",{"_index":1656,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":1752,"title":{},"body":{"dependencies.html":{}}}],["driver",{"_index":221,"title":{},"body":{"modules/CoreModule.html":{}}}],["dto/args/get",{"_index":659,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/create",{"_index":658,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/delete",{"_index":662,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/update",{"_index":656,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dynamic",{"_index":1704,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1893,"title":{},"body":{"index.html":{}}}],["editfilename",{"_index":426,"title":{},"body":{"controllers/FileController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserArgs.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["enable",{"_index":1913,"title":{},"body":{"index.html":{}}}],["encoding",{"_index":461,"title":{},"body":{"controllers/FileController.html":{}}}],["end",{"_index":1892,"title":{},"body":{"index.html":{}}}],["entities/grouping",{"_index":624,"title":{},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["entities/hangman",{"_index":759,"title":{},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{}}}],["entities/mirror",{"_index":871,"title":{},"body":{"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["entities/puzzle.entity",{"_index":973,"title":{},"body":{"modules/PuzzleModule.html":{},"classes/PuzzleResolver.html":{}}}],["entities/puzzle.repository",{"_index":974,"title":{},"body":{"modules/PuzzleModule.html":{},"injectables/PuzzleService.html":{}}}],["entities/quiz",{"_index":1066,"title":{},"body":{"modules/QuizAnswerModule.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{}}}],["entities/quiz.entity",{"_index":1129,"title":{},"body":{"modules/QuizModule.html":{},"classes/QuizResolver.html":{}}}],["entities/quiz.repository",{"_index":1130,"title":{},"body":{"modules/QuizModule.html":{},"injectables/QuizService.html":{}}}],["entities/role.entity",{"_index":1263,"title":{},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{}}}],["entities/role.repository",{"_index":1264,"title":{},"body":{"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["entities/school.entity",{"_index":1336,"title":{},"body":{"modules/SchoolModule.html":{},"classes/SchoolResolver.html":{}}}],["entities/school.repository",{"_index":1337,"title":{},"body":{"modules/SchoolModule.html":{},"injectables/SchoolService.html":{}}}],["entities/token.entity",{"_index":1437,"title":{},"body":{"modules/TokenModule.html":{},"classes/TokenResolver.html":{}}}],["entities/token.repository",{"_index":1438,"title":{},"body":{"modules/TokenModule.html":{},"injectables/TokenService.html":{}}}],["entities/user.entity",{"_index":1603,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["entities/user.repository",{"_index":1602,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["environment",{"_index":1679,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eq",{"_index":1398,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["error",{"_index":473,"title":{},"body":{"controllers/FileController.html":{}}}],["error('new",{"_index":1586,"title":{},"body":{"injectables/UserRepository.html":{}}}],["error('only",{"_index":1988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error('please",{"_index":1577,"title":{},"body":{"injectables/UserRepository.html":{}}}],["error('user",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{}}}],["eslint",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["eslint/no",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["etc",{"_index":1830,"title":{},"body":{"index.html":{}}}],["even",{"_index":1917,"title":{},"body":{"index.html":{}}}],["exec",{"_index":1197,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["execute",{"_index":1887,"title":{},"body":{"index.html":{}}}],["execution",{"_index":1910,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":576,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["experience",{"_index":1936,"title":{},"body":{"index.html":{}}}],["expiresat",{"_index":1415,"title":{},"body":{"classes/Token.html":{},"injectables/TokenRepository.html":{}}}],["expiresin",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateTokenInput.html":{},"injectables/TokenRepository.html":{}}}],["export",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"modules/PuzzleModule.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"modules/TokenModule.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":229,"title":{},"body":{"modules/CoreModule.html":{},"modules/FileModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/PuzzleModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/TokenModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"dependencies.html":{},"index.html":{}}}],["extends",{"_index":243,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{}}}],["extensible",{"_index":1807,"title":{},"body":{"index.html":{}}}],["extractjwt",{"_index":837,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":844,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":846,"title":{},"body":{"injectables/JwtStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/SimpleRepository.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1806,"title":{},"body":{"index.html":{}}}],["features",{"_index":1815,"title":{},"body":{"index.html":{}}}],["few",{"_index":791,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["field",{"_index":249,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Token.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["field()@isnotempty",{"_index":264,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetTokenArgs.html":{},"classes/IdArg.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{}}}],["field()@isnotempty()@isemail",{"_index":363,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["field()@prop",{"_index":596,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["field(undefined",{"_index":251,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArrayArg.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["field(undefined)@isarray",{"_index":330,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["field(undefined)@isarray()@arraynotempty",{"_index":343,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["field(undefined)@prop",{"_index":1049,"title":{},"body":{"classes/QuizAnswer.html":{},"classes/Token.html":{}}}],["field(undefined)@prop({type",{"_index":593,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["field({nullable",{"_index":365,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetUserArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Token.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"modules/PuzzleModule.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"modules/TokenModule.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.controller",{"_index":481,"title":{},"body":{"modules/FileModule.html":{}}}],["file.filename",{"_index":452,"title":{},"body":{"controllers/FileController.html":{}}}],["file.originalname",{"_index":451,"title":{},"body":{"controllers/FileController.html":{}}}],["file.originalname.match(/\\.(jpg|jpeg|png|gif|tiff",{"_index":1986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file.service",{"_index":480,"title":{},"body":{"modules/FileModule.html":{}}}],["file/file.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["filecontroller",{"_index":393,"title":{"controllers/FileController.html":{}},"body":{"controllers/FileController.html":{},"modules/FileModule.html":{},"coverage.html":{}}}],["filefilter",{"_index":445,"title":{},"body":{"controllers/FileController.html":{}}}],["filemodule",{"_index":41,"title":{"modules/FileModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FileModule.html":{},"modules.html":{},"overview.html":{}}}],["filename",{"_index":444,"title":{},"body":{"controllers/FileController.html":{}}}],["filenamegenerator",{"_index":427,"title":{},"body":{"controllers/FileController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filenamegenerator(file.originalname",{"_index":1985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filenamegenerator(name",{"_index":459,"title":{},"body":{"controllers/FileController.html":{}}}],["filenamegenerator(original",{"_index":1793,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fileresponse",{"_index":449,"title":{},"body":{"controllers/FileController.html":{}}}],["files",{"_index":415,"title":{},"body":{"controllers/FileController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["files.foreach((file",{"_index":448,"title":{},"body":{"controllers/FileController.html":{}}}],["fileservice",{"_index":478,"title":{"injectables/FileService.html":{}},"body":{"modules/FileModule.html":{},"injectables/FileService.html":{},"coverage.html":{},"overview.html":{}}}],["filesinterceptor",{"_index":422,"title":{},"body":{"controllers/FileController.html":{}}}],["filesinterceptor('image",{"_index":440,"title":{},"body":{"controllers/FileController.html":{}}}],["filtering",{"_index":1196,"title":{},"body":{"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["filterkey",{"_index":1354,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["filters",{"_index":1353,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["filters['types",{"_index":1357,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["filters[filterkey",{"_index":1356,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["findall",{"_index":633,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findall(data",{"_index":649,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":631,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findone().skip",{"_index":796,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["findone(__data",{"_index":639,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["findone(data",{"_index":729,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["flag",{"_index":1882,"title":{},"body":{"index.html":{}}}],["flatten",{"_index":913,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["flatten(user.roles.map((role",{"_index":934,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["float",{"_index":235,"title":{},"body":{"classes/CoreResolver.html":{}}}],["forwardref",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["found",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/UserRepository.html":{}}}],["framework",{"_index":1841,"title":{},"body":{"index.html":{}}}],["free",{"_index":1092,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["frontend",{"_index":1938,"title":{},"body":{"index.html":{}}}],["frontends",{"_index":1842,"title":{},"body":{"index.html":{}}}],["fs/promises",{"_index":437,"title":{},"body":{"controllers/FileController.html":{}}}],["fstatasync",{"_index":1690,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["fstatasync(path",{"_index":1795,"title":{},"body":{"miscellaneous/functions.html":{}}}],["full",{"_index":1926,"title":{},"body":{"index.html":{}}}],["function",{"_index":1682,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1790,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1901,"title":{},"body":{"index.html":{}}}],["g",{"_index":1853,"title":{},"body":{"index.html":{}}}],["gain",{"_index":1923,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1850,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1802,"title":{},"body":{"index.html":{}}}],["generateschema",{"_index":1684,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["generatetoken",{"_index":1442,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["generating",{"_index":1828,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1932,"title":{},"body":{"index.html":{}}}],["get(':path",{"_index":407,"title":{},"body":{"controllers/FileController.html":{}}}],["get('hello",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["getdata",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getfiles",{"_index":396,"title":{},"body":{"controllers/FileController.html":{}}}],["getgroupingitemargs",{"_index":487,"title":{"classes/GetGroupingItemArgs.html":{}},"body":{"classes/GetGroupingItemArgs.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["getgroupingitemsargs",{"_index":494,"title":{"classes/GetGroupingItemsArgs.html":{}},"body":{"classes/GetGroupingItemsArgs.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["gethangmanwordargs",{"_index":500,"title":{"classes/GetHangmanWordArgs.html":{}},"body":{"classes/GetHangmanWordArgs.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["gethangmanwordsargs",{"_index":504,"title":{"classes/GetHangmanWordsArgs.html":{}},"body":{"classes/GetHangmanWordsArgs.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["getmirrorwordargs",{"_index":507,"title":{"classes/GetMirrorWordArgs.html":{}},"body":{"classes/GetMirrorWordArgs.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["getmirrorwordsargs",{"_index":510,"title":{"classes/GetMirrorWordsArgs.html":{}},"body":{"classes/GetMirrorWordsArgs.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["getpuzzleargs",{"_index":511,"title":{"classes/GetPuzzleArgs.html":{}},"body":{"classes/GetPuzzleArgs.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"coverage.html":{}}}],["getpuzzlesargs",{"_index":515,"title":{"classes/GetPuzzlesArgs.html":{}},"body":{"classes/GetPuzzlesArgs.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"coverage.html":{}}}],["getquizanswerargs",{"_index":517,"title":{"classes/GetQuizAnswerArgs.html":{}},"body":{"classes/GetQuizAnswerArgs.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["getquizanswersargs",{"_index":520,"title":{"classes/GetQuizAnswersArgs.html":{}},"body":{"classes/GetQuizAnswersArgs.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["getquizargs",{"_index":523,"title":{"classes/GetQuizArgs.html":{}},"body":{"classes/GetQuizArgs.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["getquizquestionargs",{"_index":526,"title":{"classes/GetQuizQuestionArgs.html":{}},"body":{"classes/GetQuizQuestionArgs.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["getquizquestionsargs",{"_index":529,"title":{"classes/GetQuizQuestionsArgs.html":{}},"body":{"classes/GetQuizQuestionsArgs.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["getquizzesargs",{"_index":531,"title":{"classes/GetQuizzesArgs.html":{}},"body":{"classes/GetQuizzesArgs.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["getrequest",{"_index":574,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["getrequest(context",{"_index":575,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["getroleargs",{"_index":534,"title":{"classes/GetRoleArgs.html":{}},"body":{"classes/GetRoleArgs.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["getrolesargs",{"_index":537,"title":{"classes/GetRolesArgs.html":{}},"body":{"classes/GetRolesArgs.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["getschoolargs",{"_index":539,"title":{"classes/GetSchoolArgs.html":{}},"body":{"classes/GetSchoolArgs.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["getschoolsargs",{"_index":542,"title":{"classes/GetSchoolsArgs.html":{}},"body":{"classes/GetSchoolsArgs.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["getting",{"_index":1798,"title":{"index.html":{}},"body":{}}],["gettokenargs",{"_index":549,"title":{"classes/GetTokenArgs.html":{}},"body":{"classes/GetTokenArgs.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"coverage.html":{}}}],["gettokensargs",{"_index":557,"title":{"classes/GetTokensArgs.html":{}},"body":{"classes/GetTokensArgs.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"coverage.html":{}}}],["getuserargs",{"_index":559,"title":{"classes/GetUserArgs.html":{}},"body":{"classes/GetUserArgs.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["getusersargs",{"_index":566,"title":{"classes/GetUsersArgs.html":{}},"body":{"classes/GetUsersArgs.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["gql",{"_index":827,"title":{},"body":{"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{}}}],["gqlarg",{"_index":552,"title":{"classes/GqlArg.html":{}},"body":{"classes/GetTokenArgs.html":{},"classes/GetUserArgs.html":{},"classes/GqlArg.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"coverage.html":{}}}],["gqlauthguard",{"_index":571,"title":{"classes/GqlAuthGuard.html":{}},"body":{"classes/GqlAuthGuard.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["gqlexecutioncontext",{"_index":580,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext().req",{"_index":582,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext().req.user",{"_index":928,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["gqlinput",{"_index":244,"title":{"classes/GqlInput.html":{}},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/GqlInput.html":{},"classes/IdInput.html":{},"coverage.html":{}}}],["graph",{"_index":1898,"title":{},"body":{"index.html":{},"modules.html":{}}}],["graphql",{"_index":1754,"title":{},"body":{"dependencies.html":{}}}],["graphqlmodule",{"_index":204,"title":{},"body":{"modules/CoreModule.html":{}}}],["graphqlmodule.forroot",{"_index":220,"title":{},"body":{"modules/CoreModule.html":{}}}],["grouping",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateGroupingItemInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["groupingitem",{"_index":584,"title":{"classes/GroupingItem.html":{}},"body":{"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"coverage.html":{}}}],["groupingitem(@args",{"_index":706,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitem(data",{"_index":687,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitem.name",{"_index":628,"title":{},"body":{"modules/GroupingItemModule.html":{}}}],["groupingitemdocument",{"_index":611,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"miscellaneous/typealiases.html":{}}}],["groupingitemmodule",{"_index":42,"title":{"modules/GroupingItemModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GroupingItemModule.html":{},"modules.html":{},"overview.html":{}}}],["groupingitemrepository",{"_index":618,"title":{"injectables/GroupingItemRepository.html":{}},"body":{"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{},"overview.html":{}}}],["groupingitemresolver",{"_index":622,"title":{"classes/GroupingItemResolver.html":{}},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"coverage.html":{}}}],["groupingitems",{"_index":675,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitems(@args",{"_index":710,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitems(data",{"_index":689,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitemschema",{"_index":613,"title":{},"body":{"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["groupingitemservice",{"_index":619,"title":{"injectables/GroupingItemService.html":{}},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{},"overview.html":{}}}],["groups",{"_index":247,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/GroupingItem.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["guard",{"_index":903,"title":{"guards/PermissionGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":703,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{}}}],["guard.service.ts",{"_index":906,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["guard.service.ts:10",{"_index":912,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guard.service.ts:7",{"_index":910,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guards",{"_index":904,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guards/local",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["hammerjs",{"_index":1758,"title":{},"body":{"dependencies.html":{}}}],["hangman",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateHangmanWordInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/UpdateHangmanWordInput.html":{},"coverage.html":{}}}],["hangmanword",{"_index":737,"title":{"classes/HangmanWord.html":{}},"body":{"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"coverage.html":{}}}],["hangmanword(@args",{"_index":818,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanword(data",{"_index":810,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanword.name",{"_index":762,"title":{},"body":{"modules/HangmanWordModule.html":{}}}],["hangmanworddocument",{"_index":747,"title":{},"body":{"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"miscellaneous/typealiases.html":{}}}],["hangmanwordmodel",{"_index":766,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["hangmanwordmodule",{"_index":43,"title":{"modules/HangmanWordModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HangmanWordModule.html":{},"modules.html":{},"overview.html":{}}}],["hangmanwordrepository",{"_index":753,"title":{"injectables/HangmanWordRepository.html":{}},"body":{"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{},"overview.html":{}}}],["hangmanwordresolver",{"_index":757,"title":{"classes/HangmanWordResolver.html":{}},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"coverage.html":{}}}],["hangmanwords",{"_index":803,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanwords(@args",{"_index":819,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanwords(data",{"_index":813,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanwordschema",{"_index":748,"title":{},"body":{"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hangmanwordservice",{"_index":754,"title":{"injectables/HangmanWordService.html":{}},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":1902,"title":{},"body":{"index.html":{}}}],["http",{"_index":926,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1869,"title":{},"body":{"index.html":{}}}],["hundred",{"_index":792,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["iapiresource",{"_index":1393,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["id",{"_index":350,"title":{},"body":{"classes/CreateTokenInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetUserArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"injectables/UserRepository.html":{}}}],["idarg",{"_index":490,"title":{"classes/IdArg.html":{}},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["idarg:7",{"_index":491,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{}}}],["idarg:9",{"_index":514,"title":{},"body":{"classes/GetPuzzleArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{}}}],["idarrayarg",{"_index":496,"title":{"classes/IdArrayArg.html":{}},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["idarrayarg:9",{"_index":499,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUsersArgs.html":{}}}],["identifier",{"_index":1657,"title":{},"body":{"coverage.html":{}}}],["idinput",{"_index":349,"title":{"classes/IdInput.html":{}},"body":{"classes/CreateTokenInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"classes/IdInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["idinput:10",{"_index":1485,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["idinput:11",{"_index":1500,"title":{},"body":{"classes/UpdateQuizInput.html":{},"classes/UpdateTokenInput.html":{}}}],["idinput:4",{"_index":356,"title":{},"body":{"classes/CreateTokenInput.html":{}}}],["idinput:9",{"_index":373,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["ids",{"_index":497,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{}}}],["ignoreexpiration",{"_index":845,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["igroupingitem",{"_index":588,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{}}}],["ihangmanword",{"_index":740,"title":{},"body":{"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{}}}],["image",{"_index":403,"title":{},"body":{"controllers/FileController.html":{},"miscellaneous/variables.html":{}}}],["image.split(';base64,').pop",{"_index":458,"title":{},"body":{"controllers/FileController.html":{}}}],["imagefilefilter",{"_index":428,"title":{},"body":{"controllers/FileController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["imirrorword",{"_index":861,"title":{},"body":{"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{}}}],["implement",{"_index":1524,"title":{},"body":{"classes/UpdateTokenInput.html":{}}}],["implements",{"_index":587,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Token.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"modules/PuzzleModule.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"modules/TokenModule.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["imported",{"_index":1863,"title":{},"body":{"index.html":{}}}],["imports",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FileModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/PuzzleModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/TokenModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["include",{"_index":1827,"title":{},"body":{"index.html":{}}}],["incorrect",{"_index":1583,"title":{},"body":{"injectables/UserRepository.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"controllers/FileController.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"modules/PuzzleModule.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"modules/TokenModule.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":355,"title":{},"body":{"classes/CreateTokenInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUsersArgs.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{}}}],["inject",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/JwtStrategy.html":{}}}],["inject(forwardref",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["injectable",{"_index":80,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":81,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/FileService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":654,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/PuzzleRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/TokenRepository.html":{},"injectables/UserRepository.html":{}}}],["injectmodel(quizanswer.name",{"_index":1081,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["injectmodel(role.name",{"_index":1571,"title":{},"body":{"injectables/UserRepository.html":{}}}],["injectmodel(user.name",{"_index":1570,"title":{},"body":{"injectables/UserRepository.html":{}}}],["input",{"_index":1526,"title":{},"body":{"classes/UpdateTokenInput.html":{}}}],["input.abstract",{"_index":257,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/IdInput.html":{}}}],["input.abstract.ts",{"_index":583,"title":{},"body":{"classes/GqlInput.html":{},"coverage.html":{}}}],["inputs/gql",{"_index":256,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/GqlInput.html":{},"coverage.html":{}}}],["inputs/id.input",{"_index":357,"title":{},"body":{"classes/CreateTokenInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{}}}],["inputs/id.input.ts",{"_index":829,"title":{},"body":{"classes/IdInput.html":{},"coverage.html":{}}}],["inputs/id.input.ts:4",{"_index":830,"title":{},"body":{"classes/IdInput.html":{}}}],["inputtype",{"_index":254,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{}}}],["instantly",{"_index":1922,"title":{},"body":{"index.html":{}}}],["int",{"_index":296,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/CreateTokenInput.html":{},"classes/QuizAnswer.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["interactive",{"_index":1816,"title":{},"body":{"index.html":{}}}],["interfaces",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateQuizInput.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["ionic/angular",{"_index":1714,"title":{},"body":{"dependencies.html":{}}}],["ionic/storage",{"_index":1716,"title":{},"body":{"dependencies.html":{}}}],["ipuzzle",{"_index":943,"title":{},"body":{"classes/Puzzle.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{}}}],["iquiz",{"_index":1018,"title":{},"body":{"classes/Quiz.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"classes/Token.html":{}}}],["iquizanswer",{"_index":1040,"title":{},"body":{"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{}}}],["iquizquestion",{"_index":307,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/Quiz.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"classes/UpdateQuizInput.html":{}}}],["irole",{"_index":1242,"title":{},"body":{"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["isarray",{"_index":332,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["ischool",{"_index":1314,"title":{},"body":{"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{}}}],["iscorrect",{"_index":283,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{}}}],["isemail",{"_index":370,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["isglobal",{"_index":217,"title":{},"body":{"modules/CoreModule.html":{}}}],["isnotempty",{"_index":267,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetTokenArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{}}}],["isoptional",{"_index":565,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["item",{"_index":248,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/GroupingItem.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["item.args",{"_index":661,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["item.args.ts",{"_index":489,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"coverage.html":{}}}],["item.entity",{"_index":625,"title":{},"body":{"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{}}}],["item.entity.ts",{"_index":586,"title":{},"body":{"classes/GroupingItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["item.entity.ts:13",{"_index":595,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:17",{"_index":602,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:21",{"_index":601,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:25",{"_index":597,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:29",{"_index":598,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:33",{"_index":603,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:37",{"_index":600,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.input",{"_index":657,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["item.input.ts",{"_index":242,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["item.input.ts:10",{"_index":252,"title":{},"body":{"classes/CreateGroupingItemInput.html":{}}}],["item.input.ts:13",{"_index":250,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:16",{"_index":1484,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:19",{"_index":1483,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:21",{"_index":1486,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:7",{"_index":253,"title":{},"body":{"classes/CreateGroupingItemInput.html":{}}}],["item.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["item.module.ts",{"_index":620,"title":{},"body":{"modules/GroupingItemModule.html":{}}}],["item.repository",{"_index":626,"title":{},"body":{"modules/GroupingItemModule.html":{},"injectables/GroupingItemService.html":{}}}],["item.repository.ts",{"_index":629,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"coverage.html":{}}}],["item.repository.ts:22",{"_index":637,"title":{},"body":{"injectables/GroupingItemRepository.html":{}}}],["item.resolver",{"_index":623,"title":{},"body":{"modules/GroupingItemModule.html":{}}}],["item.resolver.ts",{"_index":672,"title":{},"body":{"classes/GroupingItemResolver.html":{},"coverage.html":{}}}],["item.resolver.ts:17",{"_index":678,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:21",{"_index":688,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:28",{"_index":692,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:35",{"_index":683,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:42",{"_index":695,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:49",{"_index":686,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.service",{"_index":621,"title":{},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{}}}],["item.service.ts",{"_index":721,"title":{},"body":{"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["item.service.ts:18",{"_index":724,"title":{},"body":{"injectables/GroupingItemService.html":{}}}],["item/dto/args/get",{"_index":488,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"coverage.html":{}}}],["item/dto/inputs/create",{"_index":241,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"coverage.html":{}}}],["item/dto/inputs/delete",{"_index":372,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"coverage.html":{}}}],["item/dto/inputs/update",{"_index":1482,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["item/entities/grouping",{"_index":585,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["item/grouping",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["items",{"_index":705,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{}}}],["items'})@permission('browse')@useguards(gqlauthguard",{"_index":690,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/TokenResolver.html":{}}}],["items'})@useguards(gqlauthguard",{"_index":1623,"title":{},"body":{"classes/UsersResolver.html":{}}}],["items.args",{"_index":660,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["items.args.ts",{"_index":495,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"coverage.html":{}}}],["itemsandlist",{"_index":319,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/CreateUserInput.html":{},"classes/QuizQuestion.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["itemsandlist'})@isoptional()@isarray",{"_index":1512,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["itemsandlist'})@isoptional()@isarray()@arraynotempty",{"_index":1519,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["itemsandlist'})@prop({type",{"_index":1136,"title":{},"body":{"classes/QuizQuestion.html":{},"classes/User.html":{}}}],["itoken",{"_index":1414,"title":{},"body":{"classes/Token.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{}}}],["iupdatedat",{"_index":1394,"title":{},"body":{"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{}}}],["iuser",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["jest",{"_index":1889,"title":{},"body":{"index.html":{}}}],["joi",{"_index":1760,"title":{},"body":{"dependencies.html":{}}}],["joi.number().default(3000",{"_index":2016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":2012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('development",{"_index":2014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.stringify(res",{"_index":1457,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["json.stringify(user.roles",{"_index":932,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["jsonwebtoken",{"_index":1762,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":433,"title":{"classes/JwtAuthGuard.html":{}},"body":{"controllers/FileController.html":{},"classes/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":843,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":120,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["learn",{"_index":1904,"title":{},"body":{"index.html":{}}}],["lib",{"_index":1861,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1829,"title":{},"body":{"index.html":{}}}],["library",{"_index":1859,"title":{},"body":{"index.html":{}}}],["lifetime",{"_index":351,"title":{},"body":{"classes/CreateTokenInput.html":{}}}],["line",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["literal",{"_index":835,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["load",{"_index":219,"title":{},"body":{"modules/CoreModule.html":{}}}],["loader",{"_index":1729,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":850,"title":{},"body":{"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":106,"title":{"classes/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":121,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":418,"title":{},"body":{"controllers/FileController.html":{},"guards/PermissionGuard.html":{},"injectables/TokenRepository.html":{}}}],["logger.debug(`tokenrepository.findone",{"_index":1456,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["logger.log(`deleting",{"_index":470,"title":{},"body":{"controllers/FileController.html":{}}}],["logger.warn(`${user.email",{"_index":929,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["login",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@req",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["many",{"_index":1822,"title":{},"body":{"index.html":{}}}],["map((permission",{"_index":936,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["match",{"_index":1588,"title":{},"body":{"injectables/UserRepository.html":{}}}],["matching",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"modules/PuzzleModule.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"modules/TokenModule.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":670,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["math.random().tostring(36).substring(2",{"_index":1451,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["message",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["metadata",{"_index":1775,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"controllers/FileController.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["minute",{"_index":1812,"title":{},"body":{"index.html":{}}}],["mirror",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateMirrorWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["mirrorword",{"_index":859,"title":{"classes/MirrorWord.html":{}},"body":{"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"coverage.html":{}}}],["mirrorword(@args",{"_index":893,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorword(data",{"_index":887,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorword.name",{"_index":872,"title":{},"body":{"modules/MirrorWordModule.html":{}}}],["mirrorworddocument",{"_index":862,"title":{},"body":{"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"miscellaneous/typealiases.html":{}}}],["mirrorwordmodel",{"_index":874,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["mirrorwordmodule",{"_index":44,"title":{"modules/MirrorWordModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MirrorWordModule.html":{},"modules.html":{},"overview.html":{}}}],["mirrorwordrepository",{"_index":868,"title":{"injectables/MirrorWordRepository.html":{}},"body":{"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{},"overview.html":{}}}],["mirrorwordresolver",{"_index":870,"title":{"classes/MirrorWordResolver.html":{}},"body":{"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"coverage.html":{}}}],["mirrorwords",{"_index":880,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorwords(@args",{"_index":895,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorwords(data",{"_index":888,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorwordschema",{"_index":863,"title":{},"body":{"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mirrorwordservice",{"_index":869,"title":{"injectables/MirrorWordService.html":{}},"body":{"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{},"overview.html":{}}}],["miscellaneous",{"_index":1789,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":636,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/PuzzleRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/UserRepository.html":{}}}],["model.populate('quiz",{"_index":1462,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["module",{"_index":32,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FileModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/PuzzleModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/TokenModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FileModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/PuzzleModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/TokenModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":34,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FileModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/PuzzleModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/TokenModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb+srv://${configservice.get('database_user')}:${configservice.get",{"_index":2002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodb+srv://${configservice.get('database_user')}@${configservice.get",{"_index":1994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose",{"_index":610,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/Puzzle.html":{},"injectables/PuzzleRepository.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"injectables/TokenRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"dependencies.html":{}}}],["mongooseconfigfactory",{"_index":213,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongooseconfigfactory.imports",{"_index":225,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseconfigfactory.mongooseconfigfactory",{"_index":227,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseconfigfactory.providers",{"_index":228,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongoosemodule",{"_index":208,"title":{},"body":{"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/PuzzleModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/TokenModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":627,"title":{},"body":{"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/PuzzleModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/TokenModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":224,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseschema",{"_index":608,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["mongooseschema.types.mixed",{"_index":1034,"title":{},"body":{"classes/Quiz.html":{}}}],["mongooseschema.types.objectid",{"_index":612,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["more",{"_index":790,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"index.html":{}}}],["multer",{"_index":425,"title":{},"body":{"controllers/FileController.html":{}}}],["multerconfigfactory",{"_index":483,"title":{},"body":{"modules/FileModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["multermodule",{"_index":482,"title":{},"body":{"modules/FileModule.html":{}}}],["multermodule.registerasync",{"_index":485,"title":{},"body":{"modules/FileModule.html":{}}}],["multiple",{"_index":1857,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":696,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{}}}],["mutation(undefined",{"_index":1366,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard",{"_index":681,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('create",{"_index":1284,"title":{},"body":{"classes/RoleResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('delete",{"_index":1287,"title":{},"body":{"classes/RoleResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('update",{"_index":1295,"title":{},"body":{"classes/RoleResolver.html":{}}}],["name",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"controllers/FileController.html":{},"classes/GetSchoolsArgs.html":{},"classes/GqlAuthGuard.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"modules/PuzzleModule.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"modules/TokenModule.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["navigate",{"_index":1868,"title":{},"body":{"index.html":{}}}],["needs",{"_index":988,"title":{},"body":{"injectables/PuzzleRepository.html":{},"injectables/QuizQuestionRepository.html":{}}}],["nest",{"_index":1844,"title":{},"body":{"index.html":{}}}],["nestjs/apollo",{"_index":212,"title":{},"body":{"modules/CoreModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GqlAuthGuard.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"modules/PuzzleModule.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"modules/TokenModule.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":914,"title":{},"body":{"guards/PermissionGuard.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":205,"title":{},"body":{"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"classes/PuzzleResolver.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/Token.html":{},"classes/TokenResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":209,"title":{},"body":{"modules/CoreModule.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/Puzzle.html":{},"modules/PuzzleModule.html":{},"injectables/PuzzleRepository.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/Token.html":{},"modules/TokenModule.html":{},"injectables/TokenRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":423,"title":{},"body":{"controllers/FileController.html":{},"modules/FileModule.html":{},"dependencies.html":{}}}],["new",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"index.html":{}}}],["newpassword",{"_index":1529,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["newpasswordconfirm",{"_index":1530,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["next",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["ng",{"_index":1837,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":1725,"title":{},"body":{"dependencies.html":{}}}],["node",{"_index":1847,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":2013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":788,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["notfoundexception",{"_index":1075,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{}}}],["notfoundexception(`model",{"_index":1402,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{}}}],["notfoundexception(`question",{"_index":1089,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["nrwl/angular",{"_index":1731,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nrwl/angular:app",{"_index":1854,"title":{},"body":{"index.html":{}}}],["nrwl/angular:lib",{"_index":1860,"title":{},"body":{"index.html":{}}}],["nrwl/express",{"_index":1846,"title":{},"body":{"index.html":{}}}],["nrwl/nest",{"_index":1845,"title":{},"body":{"index.html":{}}}],["nrwl/node",{"_index":1848,"title":{},"body":{"index.html":{}}}],["nrwl/react",{"_index":1839,"title":{},"body":{"index.html":{}}}],["nrwl/web",{"_index":1843,"title":{},"body":{"index.html":{}}}],["null",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateQuizAnswerInput.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["nullable",{"_index":318,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Puzzle.html":{},"classes/PuzzleResolver.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/Token.html":{},"classes/TokenResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}}}],["number",{"_index":293,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/CreateTokenInput.html":{},"classes/Puzzle.html":{},"classes/QuizAnswer.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["nx",{"_index":1804,"title":{},"body":{"index.html":{}}}],["nx/api",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateQuizInput.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["nx/mylib",{"_index":1864,"title":{},"body":{"index.html":{}}}],["nxtend/capacitor",{"_index":1733,"title":{},"body":{"dependencies.html":{}}}],["nxtend/ionic",{"_index":1735,"title":{},"body":{"dependencies.html":{}}}],["nx’s",{"_index":1930,"title":{},"body":{"index.html":{}}}],["object",{"_index":1990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(data).length",{"_index":1395,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["objecttype",{"_index":604,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["om",{"_index":284,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/GetSchoolsArgs.html":{},"classes/QuizAnswer.html":{},"classes/School.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["optional",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateUserInput.html":{},"controllers/FileController.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArrayArg.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":780,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["order",{"_index":1912,"title":{},"body":{"index.html":{}}}],["original",{"_index":1794,"title":{},"body":{"miscellaneous/functions.html":{}}}],["originalname",{"_index":450,"title":{},"body":{"controllers/FileController.html":{}}}],["originalquestion",{"_index":1085,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["originalquestion.answers.includes(data.answer",{"_index":1095,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["originalquestion.type",{"_index":1091,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["originalquiz",{"_index":1083,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["originalquiz.questions.find((q",{"_index":1086,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["out",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/PuzzleModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/TokenModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overridden",{"_index":989,"title":{},"body":{"injectables/PuzzleRepository.html":{},"injectables/QuizQuestionRepository.html":{}}}],["override",{"_index":666,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/TokenRepository.html":{}}}],["overview",{"_index":1945,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1693,"title":{"dependencies.html":{}},"body":{}}],["pairs",{"_index":1911,"title":{},"body":{"index.html":{}}}],["param",{"_index":419,"title":{},"body":{"controllers/FileController.html":{},"injectables/HangmanWordRepository.html":{}}}],["param['category",{"_index":778,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["parameters",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FileController.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parseint(process.env.port",{"_index":1980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":839,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":840,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":841,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["passwords",{"_index":1587,"title":{},"body":{"injectables/UserRepository.html":{}}}],["path",{"_index":1796,"title":{},"body":{"miscellaneous/functions.html":{}}}],["payload",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":848,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["per",{"_index":794,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["permission",{"_index":699,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission('add",{"_index":1631,"title":{},"body":{"classes/UsersResolver.html":{}}}],["permission('browse",{"_index":708,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('create",{"_index":712,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/TokenResolver.html":{}}}],["permission('delete",{"_index":718,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('edit",{"_index":1634,"title":{},"body":{"classes/UsersResolver.html":{}}}],["permission('read",{"_index":1009,"title":{},"body":{"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('update",{"_index":715,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{}}}],["permission.replace(/^\\*::/g",{"_index":937,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["permissionguard",{"_index":691,"title":{"guards/PermissionGuard.html":{}},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["permissionguard)@permission('add",{"_index":1613,"title":{},"body":{"classes/UsersResolver.html":{}}}],["permissionguard)@permission('browse",{"_index":1624,"title":{},"body":{"classes/UsersResolver.html":{}}}],["permissionguard)@permission('create",{"_index":682,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/TokenResolver.html":{}}}],["permissionguard)@permission('delete",{"_index":685,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{}}}],["permissionguard)@permission('edit",{"_index":1618,"title":{},"body":{"classes/UsersResolver.html":{}}}],["permissionguard)@permission('read",{"_index":1002,"title":{},"body":{"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permissionguard)@permission('update",{"_index":694,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["permissions",{"_index":327,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/Role.html":{},"classes/UpdateRoleInput.html":{}}}],["piecesize",{"_index":949,"title":{},"body":{"classes/Puzzle.html":{}}}],["playground",{"_index":223,"title":{},"body":{"modules/CoreModule.html":{}}}],["plugins",{"_index":1823,"title":{},"body":{"index.html":{}}}],["plus",{"_index":1934,"title":{},"body":{"index.html":{}}}],["polyfill",{"_index":1781,"title":{},"body":{"dependencies.html":{}}}],["populate('quiz').exec",{"_index":1455,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["populate('roles",{"_index":1573,"title":{},"body":{"injectables/UserRepository.html":{}}}],["port",{"_index":1979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FileController.html":{}}}],["post('')@useguards(jwtauthguard)@useinterceptors(undefined",{"_index":413,"title":{},"body":{"controllers/FileController.html":{}}}],["post('base64",{"_index":454,"title":{},"body":{"controllers/FileController.html":{}}}],["post('base64')@useguards(jwtauthguard",{"_index":410,"title":{},"body":{"controllers/FileController.html":{}}}],["post('login",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["preferred",{"_index":1928,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FileController.html":{}}}],["primeflex",{"_index":1768,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":1770,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":1772,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/TokenRepository.html":{},"injectables/UserRepository.html":{}}}],["process.env.jwt_expires",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_secret",{"_index":138,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.node_env",{"_index":1978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.uptime",{"_index":238,"title":{},"body":{"classes/CoreResolver.html":{}}}],["prod",{"_index":1881,"title":{},"body":{"index.html":{}}}],["production",{"_index":1883,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1801,"title":{},"body":{"index.html":{}}}],["project=my",{"_index":1876,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1834,"title":{},"body":{"index.html":{}}}],["promise",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["promise.all(data.ids.map((id",{"_index":1396,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["promise.reject(new",{"_index":1401,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{}}}],["prop",{"_index":605,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["properties",{"_index":245,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Token.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["provide",{"_index":1578,"title":{},"body":{"injectables/UserRepository.html":{}}}],["providers",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/FileModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/PuzzleModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/TokenModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["proxy.service",{"_index":735,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"injectables/TokenService.html":{}}}],["proxy.service.ts",{"_index":1225,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"coverage.html":{}}}],["proxy.service.ts:22",{"_index":1227,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:25",{"_index":1228,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:29",{"_index":1230,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:33",{"_index":1231,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:37",{"_index":1232,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:41",{"_index":1229,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["public",{"_index":271,"title":{},"body":{"classes/CreateMirrorWordInput.html":{},"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/PuzzleRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["puzzle",{"_index":941,"title":{"classes/Puzzle.html":{}},"body":{"classes/Puzzle.html":{},"modules/PuzzleModule.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"coverage.html":{}}}],["puzzle(@args",{"_index":1010,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["puzzle(data",{"_index":1000,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["puzzle.args",{"_index":983,"title":{},"body":{"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{}}}],["puzzle.args.ts",{"_index":513,"title":{},"body":{"classes/GetPuzzleArgs.html":{},"coverage.html":{}}}],["puzzle.entity",{"_index":979,"title":{},"body":{"injectables/PuzzleRepository.html":{}}}],["puzzle.input",{"_index":981,"title":{},"body":{"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{}}}],["puzzle.input.ts",{"_index":274,"title":{},"body":{"classes/CreatePuzzleInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/UpdatePuzzleInput.html":{},"coverage.html":{}}}],["puzzle.input.ts:12",{"_index":1492,"title":{},"body":{"classes/UpdatePuzzleInput.html":{}}}],["puzzle.input.ts:7",{"_index":276,"title":{},"body":{"classes/CreatePuzzleInput.html":{}}}],["puzzle.name",{"_index":975,"title":{},"body":{"modules/PuzzleModule.html":{}}}],["puzzle.resolver",{"_index":972,"title":{},"body":{"modules/PuzzleModule.html":{}}}],["puzzle.service",{"_index":970,"title":{},"body":{"modules/PuzzleModule.html":{},"classes/PuzzleResolver.html":{}}}],["puzzle/puzzle.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["puzzledocument",{"_index":961,"title":{},"body":{"classes/Puzzle.html":{},"injectables/PuzzleRepository.html":{},"miscellaneous/typealiases.html":{}}}],["puzzlemodule",{"_index":45,"title":{"modules/PuzzleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PuzzleModule.html":{},"modules.html":{},"overview.html":{}}}],["puzzlerepository",{"_index":967,"title":{"injectables/PuzzleRepository.html":{}},"body":{"modules/PuzzleModule.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"coverage.html":{},"overview.html":{}}}],["puzzleresolver",{"_index":971,"title":{"classes/PuzzleResolver.html":{}},"body":{"modules/PuzzleModule.html":{},"classes/PuzzleResolver.html":{},"coverage.html":{}}}],["puzzles",{"_index":993,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["puzzles(@args",{"_index":1011,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["puzzles(data",{"_index":1004,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["puzzles.args",{"_index":982,"title":{},"body":{"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{}}}],["puzzles.args.ts",{"_index":516,"title":{},"body":{"classes/GetPuzzlesArgs.html":{},"coverage.html":{}}}],["puzzleschema",{"_index":962,"title":{},"body":{"classes/Puzzle.html":{},"modules/PuzzleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["puzzleservice",{"_index":968,"title":{"injectables/PuzzleService.html":{}},"body":{"modules/PuzzleModule.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"coverage.html":{},"overview.html":{}}}],["q._id.tostring",{"_index":1087,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["query",{"_index":236,"title":{},"body":{"classes/CoreResolver.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{}}}],["query(undefined",{"_index":233,"title":{},"body":{"classes/CoreResolver.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{}}}],["question",{"_index":317,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/QuizQuestion.html":{},"injectables/QuizRepository.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["question.args",{"_index":1162,"title":{},"body":{"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{}}}],["question.args.ts",{"_index":528,"title":{},"body":{"classes/GetQuizQuestionArgs.html":{},"coverage.html":{}}}],["question.entity",{"_index":1032,"title":{},"body":{"classes/Quiz.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{}}}],["question.entity.ts",{"_index":1134,"title":{},"body":{"classes/QuizQuestion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["question.entity.ts:13",{"_index":1135,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:17",{"_index":1141,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:21",{"_index":1142,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:25",{"_index":1137,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:29",{"_index":1138,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:33",{"_index":1139,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:37",{"_index":1143,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:41",{"_index":1140,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.input",{"_index":313,"title":{},"body":{"classes/CreateQuizInput.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"classes/UpdateQuizInput.html":{}}}],["question.input.ts",{"_index":314,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{}}}],["question.input.ts:10",{"_index":323,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{}}}],["question.input.ts:13",{"_index":320,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:16",{"_index":321,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:19",{"_index":1505,"title":{},"body":{"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:22",{"_index":1506,"title":{},"body":{"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:24",{"_index":1507,"title":{},"body":{"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:7",{"_index":322,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{}}}],["question.module.ts",{"_index":1153,"title":{},"body":{"modules/QuizQuestionModule.html":{}}}],["question.repository",{"_index":1157,"title":{},"body":{"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionService.html":{}}}],["question.repository.ts",{"_index":1158,"title":{},"body":{"injectables/QuizQuestionRepository.html":{},"coverage.html":{}}}],["question.repository.ts:22",{"_index":1159,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["question.resolver",{"_index":1156,"title":{},"body":{"modules/QuizQuestionModule.html":{}}}],["question.resolver.ts",{"_index":1164,"title":{},"body":{"classes/QuizQuestionResolver.html":{},"coverage.html":{}}}],["question.resolver.ts:17",{"_index":1169,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:23",{"_index":1175,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:30",{"_index":1177,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:37",{"_index":1171,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:44",{"_index":1179,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:51",{"_index":1173,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.service",{"_index":1154,"title":{},"body":{"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{}}}],["question.service.ts",{"_index":1185,"title":{},"body":{"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["question.service.ts:18",{"_index":1186,"title":{},"body":{"injectables/QuizQuestionService.html":{}}}],["question/dto/args/get",{"_index":527,"title":{},"body":{"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"coverage.html":{}}}],["question/dto/inputs/create",{"_index":312,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"coverage.html":{}}}],["question/dto/inputs/delete",{"_index":384,"title":{},"body":{"classes/DeleteQuizQuestionInput.html":{},"coverage.html":{}}}],["question/dto/inputs/update",{"_index":1504,"title":{},"body":{"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{}}}],["question/entities/quiz",{"_index":1031,"title":{},"body":{"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["question/quiz",{"_index":1152,"title":{},"body":{"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["questionid",{"_index":285,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["questions",{"_index":302,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/Quiz.html":{},"classes/QuizQuestionResolver.html":{},"classes/UpdateQuizInput.html":{}}}],["questions.args",{"_index":1161,"title":{},"body":{"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{}}}],["questions.args.ts",{"_index":530,"title":{},"body":{"classes/GetQuizQuestionsArgs.html":{},"coverage.html":{}}}],["quick",{"_index":1810,"title":{},"body":{"index.html":{}}}],["quiz",{"_index":74,"title":{"classes/Quiz.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/Quiz.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"classes/Token.html":{},"injectables/TokenRepository.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{}}}],["quiz(@args",{"_index":1217,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quiz(data",{"_index":1210,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quiz.args",{"_index":1194,"title":{},"body":{"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{}}}],["quiz.args.ts",{"_index":525,"title":{},"body":{"classes/GetQuizArgs.html":{},"coverage.html":{}}}],["quiz.entity",{"_index":1190,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["quiz.input",{"_index":1192,"title":{},"body":{"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{}}}],["quiz.input.ts",{"_index":299,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/DeleteQuizInput.html":{},"classes/UpdateQuizInput.html":{},"coverage.html":{}}}],["quiz.input.ts:12",{"_index":306,"title":{},"body":{"classes/CreateQuizInput.html":{}}}],["quiz.input.ts:14",{"_index":1502,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:15",{"_index":305,"title":{},"body":{"classes/CreateQuizInput.html":{}}}],["quiz.input.ts:17",{"_index":1499,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:18",{"_index":308,"title":{},"body":{"classes/CreateQuizInput.html":{}}}],["quiz.input.ts:20",{"_index":1498,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:21",{"_index":309,"title":{},"body":{"classes/CreateQuizInput.html":{}}}],["quiz.input.ts:23",{"_index":1501,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:25",{"_index":1503,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:9",{"_index":310,"title":{},"body":{"classes/CreateQuizInput.html":{}}}],["quiz.name",{"_index":1133,"title":{},"body":{"modules/QuizModule.html":{},"classes/Token.html":{}}}],["quiz.resolver",{"_index":1128,"title":{},"body":{"modules/QuizModule.html":{}}}],["quiz.service",{"_index":1126,"title":{},"body":{"modules/QuizModule.html":{},"classes/QuizResolver.html":{}}}],["quiz/entities/quiz.entity",{"_index":1424,"title":{},"body":{"classes/Token.html":{}}}],["quiz/quiz.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/QuizAnswerModule.html":{}}}],["quiz/quiz.service",{"_index":1080,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["quizanswer",{"_index":1037,"title":{"classes/QuizAnswer.html":{}},"body":{"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"coverage.html":{}}}],["quizanswer(@args",{"_index":1114,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["quizanswer(data",{"_index":1107,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["quizanswer.name",{"_index":1069,"title":{},"body":{"modules/QuizAnswerModule.html":{}}}],["quizanswerdocument",{"_index":1053,"title":{},"body":{"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"miscellaneous/typealiases.html":{}}}],["quizanswermodule",{"_index":46,"title":{"modules/QuizAnswerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QuizAnswerModule.html":{},"modules.html":{},"overview.html":{}}}],["quizanswerrepository",{"_index":1060,"title":{"injectables/QuizAnswerRepository.html":{}},"body":{"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{},"overview.html":{}}}],["quizanswerresolver",{"_index":1064,"title":{"classes/QuizAnswerResolver.html":{}},"body":{"modules/QuizAnswerModule.html":{},"classes/QuizAnswerResolver.html":{},"coverage.html":{}}}],["quizanswers",{"_index":1100,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["quizanswers(@args",{"_index":1115,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["quizanswers(data",{"_index":1109,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["quizanswerschema",{"_index":1054,"title":{},"body":{"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quizanswerservice",{"_index":1061,"title":{"injectables/QuizAnswerService.html":{}},"body":{"modules/QuizAnswerModule.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{},"overview.html":{}}}],["quizdocument",{"_index":1033,"title":{},"body":{"classes/Quiz.html":{},"injectables/QuizRepository.html":{},"miscellaneous/typealiases.html":{}}}],["quizid",{"_index":286,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/CreateTokenInput.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/TokenRepository.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["quizmodule",{"_index":47,"title":{"modules/QuizModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules.html":{},"overview.html":{}}}],["quizquestion",{"_index":1030,"title":{"classes/QuizQuestion.html":{}},"body":{"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"coverage.html":{}}}],["quizquestion(@args",{"_index":1180,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestion(data",{"_index":1174,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestion.name",{"_index":1132,"title":{},"body":{"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{}}}],["quizquestiondocument",{"_index":1144,"title":{},"body":{"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"miscellaneous/typealiases.html":{}}}],["quizquestionmodule",{"_index":1146,"title":{"modules/QuizQuestionModule.html":{}},"body":{"modules/QuizQuestionModule.html":{},"modules.html":{},"overview.html":{}}}],["quizquestionrepository",{"_index":1150,"title":{"injectables/QuizQuestionRepository.html":{}},"body":{"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{},"overview.html":{}}}],["quizquestionresolver",{"_index":1155,"title":{"classes/QuizQuestionResolver.html":{}},"body":{"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{},"coverage.html":{}}}],["quizquestions",{"_index":1167,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestions(@args",{"_index":1181,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestions(data",{"_index":1176,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestionschema",{"_index":1131,"title":{},"body":{"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quizquestionservice",{"_index":1151,"title":{"injectables/QuizQuestionService.html":{}},"body":{"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{},"overview.html":{}}}],["quizrepository",{"_index":1124,"title":{"injectables/QuizRepository.html":{}},"body":{"modules/QuizModule.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"coverage.html":{},"overview.html":{}}}],["quizresolver",{"_index":1127,"title":{"classes/QuizResolver.html":{}},"body":{"modules/QuizModule.html":{},"classes/QuizResolver.html":{},"coverage.html":{}}}],["quizschema",{"_index":1035,"title":{},"body":{"classes/Quiz.html":{},"modules/QuizModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quizservice",{"_index":1071,"title":{"injectables/QuizService.html":{}},"body":{"injectables/QuizAnswerRepository.html":{},"modules/QuizModule.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{},"overview.html":{}}}],["quizzes",{"_index":1203,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quizzes(@args",{"_index":1218,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quizzes(data",{"_index":1212,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quizzes.args",{"_index":1193,"title":{},"body":{"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{}}}],["quizzes.args.ts",{"_index":532,"title":{},"body":{"classes/GetQuizzesArgs.html":{},"coverage.html":{}}}],["quizzes.args.ts:12",{"_index":533,"title":{},"body":{"classes/GetQuizzesArgs.html":{}}}],["random",{"_index":669,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["randomly",{"_index":811,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["rapidly",{"_index":1914,"title":{},"body":{"index.html":{}}}],["react",{"_index":1838,"title":{},"body":{"index.html":{}}}],["readdirasync",{"_index":429,"title":{},"body":{"controllers/FileController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["readdirasync(path",{"_index":1797,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readdirasync(upload_path",{"_index":463,"title":{},"body":{"controllers/FileController.html":{}}}],["readonly",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"injectables/RepositoryProxyService.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"classes/TokenResolver.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["ref",{"_index":1420,"title":{},"body":{"classes/Token.html":{},"classes/User.html":{}}}],["reflect",{"_index":1774,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":909,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["regex",{"_index":779,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["reload",{"_index":1871,"title":{},"body":{"index.html":{}}}],["repository",{"_index":725,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SchoolService.html":{},"injectables/TokenService.html":{}}}],["repositoryproxyservice",{"_index":722,"title":{"injectables/RepositoryProxyService.html":{}},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"injectables/TokenService.html":{},"coverage.html":{}}}],["repositoryproxyservice:25",{"_index":726,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"injectables/TokenService.html":{}}}],["repositoryproxyservice:29",{"_index":728,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"injectables/TokenService.html":{}}}],["repositoryproxyservice:33",{"_index":731,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"injectables/TokenService.html":{}}}],["repositoryproxyservice:37",{"_index":733,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"injectables/TokenService.html":{}}}],["repositoryproxyservice:41",{"_index":727,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"injectables/TokenService.html":{}}}],["req",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["request",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{}}}],["require('bcryptjs",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":923,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities",{"_index":919,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities?.length",{"_index":921,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities[0]}::${requiredresource[0",{"_index":924,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities[0]}::`).replace(/::\\*$/g",{"_index":938,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource",{"_index":915,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource?.length",{"_index":922,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource[0",{"_index":939,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requires",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["res",{"_index":406,"title":{},"body":{"controllers/FileController.html":{},"injectables/HangmanWordRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{}}}],["res.filter((x",{"_index":784,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["res.length",{"_index":799,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["res.sendfile(image",{"_index":465,"title":{},"body":{"controllers/FileController.html":{}}}],["res?.deletedat",{"_index":1400,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{}}}],["res[math.floor(math.random",{"_index":798,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["reset",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/PuzzleModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/TokenModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolver",{"_index":237,"title":{},"body":{"classes/CoreResolver.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{}}}],["resource",{"_index":700,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resource('grouping",{"_index":704,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["resource('hangman",{"_index":817,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["resource('mirror",{"_index":892,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["resource('puzzles",{"_index":1008,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["resource('quiz",{"_index":1113,"title":{},"body":{"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{}}}],["resource('quizzes",{"_index":1216,"title":{},"body":{"classes/QuizResolver.html":{}}}],["resource('roles",{"_index":1297,"title":{},"body":{"classes/RoleResolver.html":{}}}],["resource('schools",{"_index":1376,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["resource('tokens",{"_index":1475,"title":{},"body":{"classes/TokenResolver.html":{}}}],["resource('users",{"_index":1626,"title":{},"body":{"classes/UsersResolver.html":{}}}],["resourcemodel",{"_index":638,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/PuzzleRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/TokenRepository.html":{}}}],["resources",{"_index":2009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":447,"title":{},"body":{"controllers/FileController.html":{}}}],["response.push(fileresponse",{"_index":453,"title":{},"body":{"controllers/FileController.html":{}}}],["results",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"modules/PuzzleModule.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"modules/TokenModule.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrywrites=true&w=majority",{"_index":2005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["return",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"controllers/FileController.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/PuzzleResolver.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/RepositoryProxyService.html":{},"classes/RoleResolver.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"controllers/FileController.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":1240,"title":{"classes/Role.html":{}},"body":{"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["role(@args",{"_index":1298,"title":{},"body":{"classes/RoleResolver.html":{}}}],["role(data",{"_index":1289,"title":{},"body":{"classes/RoleResolver.html":{}}}],["role.args",{"_index":1274,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["role.args.ts",{"_index":536,"title":{},"body":{"classes/GetRoleArgs.html":{},"coverage.html":{}}}],["role.entity",{"_index":1270,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["role.input",{"_index":1272,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["role.input.ts",{"_index":326,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/DeleteRoleInput.html":{},"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["role.input.ts:13",{"_index":328,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.input.ts:15",{"_index":1511,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:17",{"_index":331,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.input.ts:20",{"_index":1510,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:25",{"_index":1513,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:27",{"_index":1514,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:9",{"_index":329,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.name",{"_index":1265,"title":{},"body":{"modules/RoleModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["role.permissions",{"_index":935,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["role.resolver",{"_index":1262,"title":{},"body":{"modules/RoleModule.html":{}}}],["role.service",{"_index":1260,"title":{},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{}}}],["role/entities/role.entity",{"_index":1550,"title":{},"body":{"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{}}}],["role/role.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["roledocument",{"_index":1250,"title":{},"body":{"classes/Role.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":1269,"title":{},"body":{"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["rolemodule",{"_index":48,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["rolerepository",{"_index":1257,"title":{"injectables/RoleRepository.html":{}},"body":{"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["roleresolver",{"_index":1261,"title":{"classes/RoleResolver.html":{}},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{},"coverage.html":{}}}],["roles",{"_index":361,"title":{},"body":{"classes/CreateUserInput.html":{},"guards/PermissionGuard.html":{},"classes/RoleResolver.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["roles(@args",{"_index":1300,"title":{},"body":{"classes/RoleResolver.html":{}}}],["roles(data",{"_index":1292,"title":{},"body":{"classes/RoleResolver.html":{}}}],["roles.args",{"_index":1273,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["roles.args.ts",{"_index":538,"title":{},"body":{"classes/GetRolesArgs.html":{},"coverage.html":{}}}],["roleschema",{"_index":1251,"title":{},"body":{"classes/Role.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleservice",{"_index":1258,"title":{"injectables/RoleService.html":{}},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["root",{"_index":466,"title":{},"body":{"controllers/FileController.html":{}}}],["run",{"_index":1852,"title":{},"body":{"index.html":{}}}],["running",{"_index":1884,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1777,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":1858,"title":{},"body":{"index.html":{}}}],["save",{"_index":1406,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/UserRepository.html":{}}}],["saving",{"_index":1920,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":1874,"title":{},"body":{"index.html":{}}}],["schema",{"_index":606,"title":{},"body":{"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"classes/Puzzle.html":{},"modules/PuzzleModule.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"classes/Token.html":{},"modules/TokenModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":607,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(groupingitem",{"_index":614,"title":{},"body":{"classes/GroupingItem.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(hangmanword",{"_index":749,"title":{},"body":{"classes/HangmanWord.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(mirrorword",{"_index":864,"title":{},"body":{"classes/MirrorWord.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(puzzle",{"_index":963,"title":{},"body":{"classes/Puzzle.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(quiz",{"_index":1036,"title":{},"body":{"classes/Quiz.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(quizanswer",{"_index":1055,"title":{},"body":{"classes/QuizAnswer.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(quizquestion",{"_index":1145,"title":{},"body":{"classes/QuizQuestion.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1252,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(school",{"_index":1326,"title":{},"body":{"classes/School.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(token",{"_index":1427,"title":{},"body":{"classes/Token.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1555,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schematypes",{"_index":1551,"title":{},"body":{"classes/User.html":{}}}],["schematypes.objectid",{"_index":1553,"title":{},"body":{"classes/User.html":{}}}],["school",{"_index":1312,"title":{"classes/School.html":{}},"body":{"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"coverage.html":{}}}],["school(@args",{"_index":1377,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["school(data",{"_index":1370,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["school.args",{"_index":1345,"title":{},"body":{"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{}}}],["school.args.ts",{"_index":541,"title":{},"body":{"classes/GetSchoolArgs.html":{},"coverage.html":{}}}],["school.entity",{"_index":1341,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["school.input",{"_index":1343,"title":{},"body":{"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{}}}],["school.input.ts",{"_index":335,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/UpdateSchoolInput.html":{},"coverage.html":{}}}],["school.input.ts:13",{"_index":341,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:16",{"_index":1518,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:17",{"_index":339,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["school.input.ts:19",{"_index":1516,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:21",{"_index":340,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["school.input.ts:22",{"_index":1517,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:26",{"_index":344,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["school.input.ts:28",{"_index":1520,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:30",{"_index":1521,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:9",{"_index":342,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["school.name",{"_index":1338,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.resolver",{"_index":1335,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.service",{"_index":1333,"title":{},"body":{"modules/SchoolModule.html":{},"classes/SchoolResolver.html":{}}}],["school/school.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["schooldocument",{"_index":1324,"title":{},"body":{"classes/School.html":{},"injectables/SchoolRepository.html":{},"miscellaneous/typealiases.html":{}}}],["schoolmodule",{"_index":49,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolrepository",{"_index":1330,"title":{"injectables/SchoolRepository.html":{}},"body":{"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["schoolresolver",{"_index":1334,"title":{"classes/SchoolResolver.html":{}},"body":{"modules/SchoolModule.html":{},"classes/SchoolResolver.html":{},"coverage.html":{}}}],["schools",{"_index":1362,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["schools(@args",{"_index":1378,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["schools(data",{"_index":1372,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["schools.args",{"_index":1344,"title":{},"body":{"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{}}}],["schools.args.ts",{"_index":543,"title":{},"body":{"classes/GetSchoolsArgs.html":{},"coverage.html":{}}}],["schools.args.ts:12",{"_index":547,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schools.args.ts:15",{"_index":546,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schools.args.ts:18",{"_index":544,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schools.args.ts:21",{"_index":545,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schools.args.ts:24",{"_index":548,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schoolschema",{"_index":1325,"title":{},"body":{"classes/School.html":{},"modules/SchoolModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolservice",{"_index":1331,"title":{"injectables/SchoolService.html":{}},"body":{"modules/SchoolModule.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["seconds",{"_index":352,"title":{},"body":{"classes/CreateTokenInput.html":{}}}],["secret",{"_index":137,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":847,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["see",{"_index":1899,"title":{},"body":{"index.html":{}}}],["seeuploadedfile",{"_index":397,"title":{},"body":{"controllers/FileController.html":{}}}],["seeuploadedfile(@param('path",{"_index":464,"title":{},"body":{"controllers/FileController.html":{}}}],["seeuploadedfile(image",{"_index":405,"title":{},"body":{"controllers/FileController.html":{}}}],["serve",{"_index":1866,"title":{},"body":{"index.html":{}}}],["server",{"_index":1742,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["service",{"_index":679,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{}}}],["setmetadata('abilities",{"_index":2008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata('resources",{"_index":2010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shareable",{"_index":1862,"title":{},"body":{"index.html":{}}}],["shared/gql",{"_index":255,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{}}}],["shared/proxies/repository",{"_index":734,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"injectables/TokenService.html":{}}}],["shared/proxies/simple.repository",{"_index":663,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/PuzzleRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/TokenRepository.html":{}}}],["showing",{"_index":1814,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":139,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":1352,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["simple.repository",{"_index":1233,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["simplerepository",{"_index":630,"title":{"injectables/SimpleRepository.html":{}},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/PuzzleRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"coverage.html":{}}}],["simplerepository:19",{"_index":651,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/PuzzleRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/RoleRepository.html":{},"injectables/TokenRepository.html":{}}}],["simplerepository:25",{"_index":978,"title":{},"body":{"injectables/PuzzleRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{}}}],["simplerepository:27",{"_index":640,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["simplerepository:31",{"_index":1074,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"injectables/TokenRepository.html":{}}}],["simplerepository:32",{"_index":644,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/PuzzleRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{}}}],["simplerepository:33",{"_index":1189,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["simplerepository:37",{"_index":767,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["simplerepository:39",{"_index":1073,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"injectables/TokenRepository.html":{}}}],["simplerepository:42",{"_index":653,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/PuzzleRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/TokenRepository.html":{}}}],["simplerepository:50",{"_index":648,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/PuzzleRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/TokenRepository.html":{}}}],["smart",{"_index":1805,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"controllers/FileController.html":{},"modules/FileModule.html":{},"injectables/FileService.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"modules/PuzzleModule.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"modules/TokenModule.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sslcert",{"_index":2001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sslkey",{"_index":2000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stack",{"_index":1927,"title":{},"body":{"index.html":{}}}],["start",{"_index":1811,"title":{},"body":{"index.html":{}}}],["started",{"_index":1799,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1658,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1441,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["storage",{"_index":442,"title":{},"body":{"controllers/FileController.html":{}}}],["stored",{"_index":1878,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":838,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"controllers/FileController.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Token.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["super",{"_index":842,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(hangmanwordmodel",{"_index":773,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["super(mirrorwordmodel",{"_index":877,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["super(repository",{"_index":736,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/SchoolService.html":{},"injectables/TokenService.html":{}}}],["super(resourcemodel",{"_index":665,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/PuzzleRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/TokenRepository.html":{}}}],["super(rolemodel",{"_index":1276,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["super(rolerepository",{"_index":1311,"title":{},"body":{"injectables/RoleService.html":{}}}],["super.create(data",{"_index":1096,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"injectables/QuizRepository.html":{}}}],["super.findall(data",{"_index":776,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["super.findone(data",{"_index":787,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["support",{"_index":1941,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1821,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1942,"title":{},"body":{"modules.html":{}}}],["system",{"_index":1809,"title":{},"body":{"index.html":{}}}],["szakszolg",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateQuizInput.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["szakszolgnx",{"_index":1800,"title":{},"body":{"index.html":{}}}],["table",{"_index":1692,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1691,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":1909,"title":{},"body":{"index.html":{}}}],["tcreateinput",{"_index":643,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenService.html":{}}}],["tdeleteinput",{"_index":647,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{}}}],["teams",{"_index":1918,"title":{},"body":{"index.html":{}}}],["template",{"_index":303,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/Quiz.html":{}}}],["test",{"_index":1833,"title":{},"body":{"index.html":{}}}],["test').required",{"_index":2015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":1886,"title":{},"body":{"index.html":{}}}],["text",{"_index":1093,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["tfindmanyargs",{"_index":650,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{}}}],["tfindoneargs",{"_index":730,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenService.html":{}}}],["this.appservice.getdata",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login((req",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validate(email",{"_index":857,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.configservice.get('jwt_expires",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_secret",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.findone",{"_index":1397,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["this.jwtservice.sign(payload",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mirrorwordservice.create(data",{"_index":898,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.delete(data",{"_index":902,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.findall(data",{"_index":896,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.findone(data",{"_index":894,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.update(data",{"_index":900,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.model",{"_index":1404,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{}}}],["this.model.estimateddocumentcount",{"_index":668,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["this.model.find",{"_index":797,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SimpleRepository.html":{}}}],["this.model.find(filters).exec",{"_index":1358,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["this.model.find(param",{"_index":781,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["this.model.findbyid(data.id",{"_index":1399,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findbyidandupdate(data.id",{"_index":1411,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findbyidandupdate(id",{"_index":1410,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findone",{"_index":1453,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["this.model.findone().skip(random).limit(1",{"_index":671,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["this.quizservice.findone",{"_index":1084,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["this.reflector.get('abilities",{"_index":920,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.reflector.getallandmerge('resources",{"_index":916,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.repository.create(data",{"_index":1235,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.delete(data",{"_index":1239,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.findall(data",{"_index":1236,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.findone(data",{"_index":1237,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.update(data",{"_index":1238,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.roleservice.create(data",{"_index":1303,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.delete(data",{"_index":1307,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.findall(data",{"_index":1301,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.findone(data",{"_index":1299,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.update(data",{"_index":1305,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.service.create(data",{"_index":714,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{}}}],["this.service.delete(data",{"_index":720,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{}}}],["this.service.findall(data",{"_index":711,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{}}}],["this.service.findone(data",{"_index":707,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{}}}],["this.service.update(data",{"_index":717,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["this.usermodel",{"_index":1579,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.find",{"_index":1572,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyid(data.id",{"_index":1580,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyid(data.id).populate('roles",{"_index":1574,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyidandupdate(data.id",{"_index":1594,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findone",{"_index":1576,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.userrepository.create(data",{"_index":1652,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.delete(data",{"_index":1654,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findall(data",{"_index":1647,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone(data",{"_index":1648,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.update(data",{"_index":1653,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.findone",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.usersservice.create(data",{"_index":1633,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.delete(data",{"_index":1638,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findall(data",{"_index":1630,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findone(data",{"_index":1628,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.update(data",{"_index":1636,"title":{},"body":{"classes/UsersResolver.html":{}}}],["throw",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/UserRepository.html":{}}}],["time",{"_index":1921,"title":{},"body":{"index.html":{}}}],["times",{"_index":1916,"title":{},"body":{"index.html":{}}}],["title",{"_index":304,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/Quiz.html":{},"classes/UpdateQuizInput.html":{}}}],["todo",{"_index":985,"title":{},"body":{"injectables/PuzzleRepository.html":{},"injectables/QuizQuestionRepository.html":{},"classes/UpdateTokenInput.html":{}}}],["token",{"_index":164,"title":{"classes/Token.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateTokenInput.html":{},"classes/GetTokenArgs.html":{},"classes/Token.html":{},"modules/TokenModule.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"coverage.html":{}}}],["token(@args",{"_index":1476,"title":{},"body":{"classes/TokenResolver.html":{}}}],["token(data",{"_index":1471,"title":{},"body":{"classes/TokenResolver.html":{}}}],["token.args",{"_index":1449,"title":{},"body":{"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{}}}],["token.args.ts",{"_index":551,"title":{},"body":{"classes/GetTokenArgs.html":{},"coverage.html":{}}}],["token.args.ts:12",{"_index":554,"title":{},"body":{"classes/GetTokenArgs.html":{}}}],["token.args.ts:8",{"_index":553,"title":{},"body":{"classes/GetTokenArgs.html":{}}}],["token.entity",{"_index":1445,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["token.input",{"_index":1447,"title":{},"body":{"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{}}}],["token.input.ts",{"_index":348,"title":{},"body":{"classes/CreateTokenInput.html":{},"classes/DeleteTokenInput.html":{},"classes/UpdateTokenInput.html":{},"coverage.html":{}}}],["token.input.ts:12",{"_index":353,"title":{},"body":{"classes/CreateTokenInput.html":{}}}],["token.input.ts:15",{"_index":1523,"title":{},"body":{"classes/UpdateTokenInput.html":{}}}],["token.input.ts:9",{"_index":354,"title":{},"body":{"classes/CreateTokenInput.html":{}}}],["token.name",{"_index":1439,"title":{},"body":{"modules/TokenModule.html":{}}}],["token.resolver",{"_index":1436,"title":{},"body":{"modules/TokenModule.html":{}}}],["token.service",{"_index":1434,"title":{},"body":{"modules/TokenModule.html":{},"classes/TokenResolver.html":{}}}],["token/token.module",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["tokendocument",{"_index":1425,"title":{},"body":{"classes/Token.html":{},"injectables/TokenRepository.html":{},"miscellaneous/typealiases.html":{}}}],["tokenmodule",{"_index":50,"title":{"modules/TokenModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TokenModule.html":{},"modules.html":{},"overview.html":{}}}],["tokenrepository",{"_index":1431,"title":{"injectables/TokenRepository.html":{}},"body":{"modules/TokenModule.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{},"coverage.html":{},"overview.html":{}}}],["tokenrepository.generatetoken",{"_index":1458,"title":{},"body":{"injectables/TokenRepository.html":{}}}],["tokenresolver",{"_index":1435,"title":{"classes/TokenResolver.html":{}},"body":{"modules/TokenModule.html":{},"classes/TokenResolver.html":{},"coverage.html":{}}}],["tokens",{"_index":1019,"title":{},"body":{"classes/Quiz.html":{},"classes/TokenResolver.html":{}}}],["tokens(@args",{"_index":1477,"title":{},"body":{"classes/TokenResolver.html":{}}}],["tokens(data",{"_index":1473,"title":{},"body":{"classes/TokenResolver.html":{}}}],["tokens.args",{"_index":1448,"title":{},"body":{"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{}}}],["tokens.args.ts",{"_index":558,"title":{},"body":{"classes/GetTokensArgs.html":{},"coverage.html":{}}}],["tokenschema",{"_index":1426,"title":{},"body":{"classes/Token.html":{},"modules/TokenModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenservice",{"_index":1432,"title":{"injectables/TokenService.html":{}},"body":{"modules/TokenModule.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"coverage.html":{},"overview.html":{}}}],["tools",{"_index":1756,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["translate/core",{"_index":1726,"title":{},"body":{"dependencies.html":{}}}],["translate/http",{"_index":1728,"title":{},"body":{"dependencies.html":{}}}],["trepository",{"_index":1226,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["true",{"_index":218,"title":{},"body":{"modules/CoreModule.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"classes/PuzzleResolver.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/Token.html":{},"classes/TokenResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"miscellaneous/variables.html":{}}}],["true})@isarray",{"_index":498,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArrayArg.html":{}}}],["true})@isemail",{"_index":1531,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["true})@isoptional",{"_index":562,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["true})@isoptional()@isnotempty",{"_index":1509,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["true})@prop",{"_index":599,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["true})@prop({nullable",{"_index":1046,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["true})@useguards(gqlauthguard",{"_index":1001,"title":{},"body":{"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["true})@useguards(gqlauthguard)@permission('read",{"_index":1290,"title":{},"body":{"classes/RoleResolver.html":{}}}],["try",{"_index":469,"title":{},"body":{"controllers/FileController.html":{}}}],["trying",{"_index":930,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["tslib",{"_index":1779,"title":{},"body":{"dependencies.html":{}}}],["tupdateinput",{"_index":732,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenService.html":{}}}],["tutorial",{"_index":1817,"title":{},"body":{"index.html":{}}}],["type",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreatePuzzleInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"controllers/FileController.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Puzzle.html":{},"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1951,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":338,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"injectables/TokenRepository.html":{},"classes/UpdateSchoolInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"index.html":{}}}],["types.objectid",{"_index":1405,"title":{},"body":{"injectables/SimpleRepository.html":{},"classes/Token.html":{},"injectables/TokenRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["types.objectid(roleid",{"_index":1592,"title":{},"body":{"injectables/UserRepository.html":{}}}],["typescript",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":855,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":594,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/Token.html":{},"classes/User.html":{}}}],["understand",{"_index":1896,"title":{},"body":{"index.html":{}}}],["unified",{"_index":1935,"title":{},"body":{"index.html":{}}}],["unit",{"_index":1885,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FileController.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["unlink",{"_index":435,"title":{},"body":{"controllers/FileController.html":{}}}],["unlink(`${upload_path}/${image",{"_index":471,"title":{},"body":{"controllers/FileController.html":{}}}],["unused",{"_index":509,"title":{},"body":{"classes/GetMirrorWordArgs.html":{}}}],["up",{"_index":1915,"title":{},"body":{"index.html":{}}}],["update",{"_index":634,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["update(data",{"_index":652,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/PuzzleRepository.html":{},"injectables/PuzzleService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/TokenRepository.html":{},"injectables/TokenService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["updatedat",{"_index":592,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Puzzle.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/Token.html":{},"injectables/TokenRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["updategroupingitem",{"_index":676,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["updategroupingitem(@args('updategroupingitemdata",{"_index":716,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["updategroupingitem(data",{"_index":693,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["updategroupingiteminput",{"_index":655,"title":{"classes/UpdateGroupingItemInput.html":{}},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["updatehangmanword",{"_index":804,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["updatehangmanword(@args('updatehangmanworddata",{"_index":821,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["updatehangmanword(data",{"_index":815,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["updatehangmanwordinput",{"_index":768,"title":{"classes/UpdateHangmanWordInput.html":{}},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/UpdateHangmanWordInput.html":{},"coverage.html":{}}}],["updatemirrorword",{"_index":881,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["updatemirrorword(@args('updatemirrorworddata",{"_index":899,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["updatemirrorword(data",{"_index":890,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["updatemirrorwordinput",{"_index":875,"title":{"classes/UpdateMirrorWordInput.html":{}},"body":{"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["updatepuzzle",{"_index":994,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["updatepuzzle(@args('updatepuzzledata",{"_index":1013,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["updatepuzzle(data",{"_index":1006,"title":{},"body":{"classes/PuzzleResolver.html":{}}}],["updatepuzzleinput",{"_index":980,"title":{"classes/UpdatePuzzleInput.html":{}},"body":{"injectables/PuzzleRepository.html":{},"classes/PuzzleResolver.html":{},"injectables/PuzzleService.html":{},"classes/UpdatePuzzleInput.html":{},"coverage.html":{}}}],["updatequiz",{"_index":1204,"title":{},"body":{"classes/QuizResolver.html":{}}}],["updatequiz(@args('updatequizdata",{"_index":1220,"title":{},"body":{"classes/QuizResolver.html":{}}}],["updatequiz(data",{"_index":1214,"title":{},"body":{"classes/QuizResolver.html":{}}}],["updatequizanswer",{"_index":1101,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["updatequizanswer(@args('updatequizanswerdata",{"_index":1117,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["updatequizanswer(data",{"_index":1111,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["updatequizanswerinput",{"_index":1076,"title":{"classes/UpdateQuizAnswerInput.html":{}},"body":{"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/UpdateQuizAnswerInput.html":{},"coverage.html":{}}}],["updatequizinput",{"_index":1191,"title":{"classes/UpdateQuizInput.html":{}},"body":{"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"classes/UpdateQuizInput.html":{},"coverage.html":{}}}],["updatequizquestion",{"_index":1168,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["updatequizquestion(@args('updatequizquestiondata",{"_index":1183,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["updatequizquestion(data",{"_index":1178,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["updatequizquestioninput",{"_index":1160,"title":{"classes/UpdateQuizQuestionInput.html":{}},"body":{"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{}}}],["updaterole",{"_index":1280,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updaterole(@args('updateroledata",{"_index":1304,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updaterole(data",{"_index":1294,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updateroleinput",{"_index":1271,"title":{"classes/UpdateRoleInput.html":{}},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["updateschool",{"_index":1363,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["updateschool(@args('updateschooldata",{"_index":1380,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["updateschool(data",{"_index":1374,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["updateschoolinput",{"_index":1342,"title":{"classes/UpdateSchoolInput.html":{}},"body":{"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolInput.html":{},"coverage.html":{}}}],["updatetokeninput",{"_index":1446,"title":{"classes/UpdateTokenInput.html":{}},"body":{"injectables/TokenRepository.html":{},"classes/TokenResolver.html":{},"injectables/TokenService.html":{},"classes/UpdateTokenInput.html":{},"coverage.html":{}}}],["updateuser",{"_index":1608,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuser(@args('updateuserdata",{"_index":1635,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuser(data",{"_index":1617,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuserinput",{"_index":1527,"title":{"classes/UpdateUserInput.html":{}},"body":{"classes/UpdateUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["upload_path",{"_index":431,"title":{},"body":{"controllers/FileController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadbase64",{"_index":398,"title":{},"body":{"controllers/FileController.html":{}}}],["uploadbase64(@body('name",{"_index":455,"title":{},"body":{"controllers/FileController.html":{}}}],["uploadbase64(name",{"_index":409,"title":{},"body":{"controllers/FileController.html":{}}}],["uploadedfiles",{"_index":420,"title":{},"body":{"controllers/FileController.html":{}}}],["uploadmultiplefiles",{"_index":399,"title":{},"body":{"controllers/FileController.html":{}}}],["uploadmultiplefiles(@uploadedfiles",{"_index":446,"title":{},"body":{"controllers/FileController.html":{}}}],["uploadmultiplefiles(files",{"_index":412,"title":{},"body":{"controllers/FileController.html":{}}}],["uploads",{"_index":2011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uptime",{"_index":232,"title":{},"body":{"classes/CoreResolver.html":{}}}],["uri",{"_index":1993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":275,"title":{},"body":{"classes/CreatePuzzleInput.html":{},"classes/Puzzle.html":{},"dependencies.html":{}}}],["use",{"_index":795,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"index.html":{}}}],["usefactory",{"_index":226,"title":{},"body":{"modules/CoreModule.html":{},"modules/FileModule.html":{}}}],["useguards",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FileController.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{}}}],["useguards(gqlauthguard",{"_index":709,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/PuzzleResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/TokenResolver.html":{},"classes/UsersResolver.html":{}}}],["useguards(jwtauthguard",{"_index":439,"title":{},"body":{"controllers/FileController.html":{}}}],["useguards(localauthguard",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":421,"title":{},"body":{"controllers/FileController.html":{}}}],["user",{"_index":155,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["user(@args",{"_index":1627,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user(data",{"_index":1620,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user._id",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.args",{"_index":1568,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.args.ts",{"_index":561,"title":{},"body":{"classes/GetUserArgs.html":{},"coverage.html":{}}}],["user.args.ts:13",{"_index":563,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["user.args.ts:9",{"_index":564,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["user.decorator.ts",{"_index":1664,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.entity",{"_index":1566,"title":{},"body":{"injectables/UserRepository.html":{}}}],["user.input",{"_index":1567,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.input.ts",{"_index":360,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["user.input.ts:10",{"_index":364,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:13",{"_index":1532,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:14",{"_index":369,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:16",{"_index":1539,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:18",{"_index":367,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:20",{"_index":1536,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:21",{"_index":366,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:23",{"_index":1533,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:24",{"_index":368,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:26",{"_index":1534,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:29",{"_index":1535,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:32",{"_index":1537,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:34",{"_index":1538,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.name",{"_index":1604,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{}}}],["user.roles",{"_index":1590,"title":{},"body":{"injectables/UserRepository.html":{}}}],["user.save",{"_index":1593,"title":{},"body":{"injectables/UserRepository.html":{}}}],["userdocument",{"_index":1552,"title":{},"body":{"classes/User.html":{},"injectables/UserRepository.html":{},"miscellaneous/typealiases.html":{}}}],["usermodel",{"_index":1560,"title":{},"body":{"injectables/UserRepository.html":{}}}],["username",{"_index":362,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["usernamefield",{"_index":856,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userpermissions",{"_index":933,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["userpermissions.includes(required",{"_index":940,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["userrepository",{"_index":1556,"title":{"injectables/UserRepository.html":{}},"body":{"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":1609,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users(@args",{"_index":1629,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users(data",{"_index":1622,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users.args",{"_index":1569,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["users.args.ts",{"_index":567,"title":{},"body":{"classes/GetUsersArgs.html":{},"coverage.html":{}}}],["users.resolver",{"_index":1601,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1599,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["users/users.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{}}}],["users/users.service",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userschema",{"_index":1554,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["usersmodule",{"_index":51,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersresolver",{"_index":1600,"title":{"classes/UsersResolver.html":{}},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["usersservice",{"_index":148,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":1803,"title":{},"body":{"index.html":{}}}],["utils/constants",{"_index":432,"title":{},"body":{"controllers/FileController.html":{}}}],["utils/factories/mongo",{"_index":214,"title":{},"body":{"modules/CoreModule.html":{}}}],["utils/factories/multer",{"_index":484,"title":{},"body":{"modules/FileModule.html":{}}}],["utils/file.utils",{"_index":430,"title":{},"body":{"controllers/FileController.html":{}}}],["uuid",{"_index":1783,"title":{},"body":{"dependencies.html":{}}}],["validate",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":834,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationschema",{"_index":202,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":268,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateTokenInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeletePuzzleInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteTokenInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetPuzzleArgs.html":{},"classes/GetPuzzlesArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetTokenArgs.html":{},"classes/GetTokensArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdatePuzzleInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateTokenInput.html":{},"classes/UpdateUserInput.html":{},"dependencies.html":{}}}],["value",{"_index":1977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["variable",{"_index":1661,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1963,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["verify(token",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["via",{"_index":1888,"title":{},"body":{"index.html":{}}}],["video",{"_index":1813,"title":{},"body":{"index.html":{}}}],["visit",{"_index":1903,"title":{},"body":{"index.html":{}}}],["want",{"_index":789,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["web",{"_index":1840,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["well",{"_index":1831,"title":{},"body":{"index.html":{}}}],["word",{"_index":263,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWord.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{}}}],["word.args",{"_index":771,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["word.args.ts",{"_index":502,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"coverage.html":{}}}],["word.args.ts:10",{"_index":503,"title":{},"body":{"classes/GetHangmanWordArgs.html":{}}}],["word.entity",{"_index":760,"title":{},"body":{"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{}}}],["word.entity.ts",{"_index":739,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["word.entity.ts:13",{"_index":741,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:17",{"_index":746,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:21",{"_index":742,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:25",{"_index":743,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:29",{"_index":745,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:33",{"_index":744,"title":{},"body":{"classes/HangmanWord.html":{}}}],["word.input",{"_index":769,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["word.input.ts",{"_index":261,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["word.input.ts:13",{"_index":265,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/UpdateHangmanWordInput.html":{}}}],["word.input.ts:14",{"_index":1490,"title":{},"body":{"classes/UpdateMirrorWordInput.html":{}}}],["word.input.ts:16",{"_index":1488,"title":{},"body":{"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{}}}],["word.input.ts:18",{"_index":1489,"title":{},"body":{"classes/UpdateHangmanWordInput.html":{}}}],["word.input.ts:9",{"_index":266,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{}}}],["word.module",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["word.module.ts",{"_index":755,"title":{},"body":{"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{}}}],["word.repository",{"_index":761,"title":{},"body":{"modules/HangmanWordModule.html":{},"injectables/HangmanWordService.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordService.html":{}}}],["word.repository.ts",{"_index":763,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"coverage.html":{}}}],["word.repository.ts:22",{"_index":765,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["word.resolver",{"_index":758,"title":{},"body":{"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{}}}],["word.resolver.ts",{"_index":800,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"coverage.html":{}}}],["word.resolver.ts:17",{"_index":805,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:21",{"_index":812,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:26",{"_index":814,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["word.resolver.ts:28",{"_index":889,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:33",{"_index":807,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["word.resolver.ts:35",{"_index":884,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:40",{"_index":816,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["word.resolver.ts:42",{"_index":891,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:47",{"_index":809,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["word.resolver.ts:49",{"_index":886,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["word.service",{"_index":756,"title":{},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{}}}],["word.service.ts",{"_index":823,"title":{},"body":{"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["word.service.ts:18",{"_index":824,"title":{},"body":{"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{}}}],["word/dto/args/get",{"_index":501,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"coverage.html":{}}}],["word/dto/inputs/create",{"_index":260,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"coverage.html":{}}}],["word/dto/inputs/delete",{"_index":375,"title":{},"body":{"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"coverage.html":{}}}],["word/dto/inputs/update",{"_index":1487,"title":{},"body":{"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["word/entities/hangman",{"_index":738,"title":{},"body":{"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["word/entities/mirror",{"_index":860,"title":{},"body":{"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["word/hangman",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["word/mirror",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["words",{"_index":793,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["words.args",{"_index":770,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["words.args.ts",{"_index":505,"title":{},"body":{"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"coverage.html":{}}}],["words.args.ts:12",{"_index":506,"title":{},"body":{"classes/GetHangmanWordsArgs.html":{}}}],["workspace",{"_index":1820,"title":{},"body":{"index.html":{}}}],["writefile",{"_index":436,"title":{},"body":{"controllers/FileController.html":{}}}],["writefile(`${upload_path}/${filename",{"_index":460,"title":{},"body":{"controllers/FileController.html":{}}}],["x509&ssl=true&retrywrites=true&w=majority",{"_index":1999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yarn",{"_index":1785,"title":{},"body":{"dependencies.html":{}}}],["zone.js",{"_index":1787,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FileModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/PuzzleModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/TokenModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/core/app.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Message\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\nimport { Message } from '@szakszolg-nx/api-interfaces'\n\nimport { AppService } from './app.service'\n\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get('hello')\n    getData(): Message {\n        return this.appService.getData()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nGroupingItemModule\n\nGroupingItemModule\n\nAppModule -->\n\nGroupingItemModule->AppModule\n\n\n\n\n\nHangmanWordModule\n\nHangmanWordModule\n\nAppModule -->\n\nHangmanWordModule->AppModule\n\n\n\n\n\nMirrorWordModule\n\nMirrorWordModule\n\nAppModule -->\n\nMirrorWordModule->AppModule\n\n\n\n\n\nPuzzleModule\n\nPuzzleModule\n\nAppModule -->\n\nPuzzleModule->AppModule\n\n\n\n\n\nQuizAnswerModule\n\nQuizAnswerModule\n\nAppModule -->\n\nQuizAnswerModule->AppModule\n\n\n\n\n\nQuizModule\n\nQuizModule\n\nAppModule -->\n\nQuizModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nTokenModule\n\nTokenModule\n\nAppModule -->\n\nTokenModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            FileModule\n                        \n                        \n                            GroupingItemModule\n                        \n                        \n                            HangmanWordModule\n                        \n                        \n                            MirrorWordModule\n                        \n                        \n                            PuzzleModule\n                        \n                        \n                            QuizAnswerModule\n                        \n                        \n                            QuizModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            TokenModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { AppController } from './core/app.controller'\nimport { AppService } from './core/app.service'\nimport { CoreModule } from './core/core.module'\nimport { UsersModule } from './users/users.module'\nimport { AuthModule } from './auth/auth.module'\nimport { RoleModule } from './role/role.module'\nimport { MirrorWordModule } from './mirror-word/mirror-word.module'\nimport { HangmanWordModule } from './hangman-word/hangman-word.module'\nimport { GroupingItemModule } from './grouping-item/grouping-item.module'\nimport { SchoolModule } from './school/school.module'\nimport { QuizModule } from './quiz/quiz.module'\nimport { QuizAnswerModule } from './quiz-answer/quiz-answer.module'\nimport { FileModule } from './file/file.module'\nimport { TokenModule } from './token/token.module'\nimport { PuzzleModule } from './puzzle/puzzle.module'\n\n@Module({\n    imports: [\n        CoreModule,\n        FileModule,\n        UsersModule,\n        AuthModule,\n        RoleModule,\n        MirrorWordModule,\n        HangmanWordModule,\n        GroupingItemModule,\n        SchoolModule,\n        QuizModule,\n        QuizAnswerModule,\n        TokenModule,\n        PuzzleModule,\n    ],\n    controllers: [AppController],\n    providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/core/app.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Message\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { Message } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class AppService {\n    getData(): Message {\n        return { message: 'Welcome to api!' }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Req, UseGuards } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { LocalAuthGuard } from './guards/local-auth.guard'\nimport { Request } from 'express'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService) {}\n\n    @UseGuards(LocalAuthGuard)\n    @Post('login')\n    async login(@Req() req: Request) {\n        return await this.authService.login((req as any).user as IUser)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { UsersModule } from '../users/users.module'\nimport { JwtModule } from '@nestjs/jwt'\nimport { ConfigModule } from '@nestjs/config'\nimport { PassportModule } from '@nestjs/passport'\nimport { JwtStrategy } from './strategies/jwt.strategy'\nimport { LocalStrategy } from './strategies/local.strategy'\nimport { AuthController } from './auth.controller'\n\n@Module({\n    imports: [\n        ConfigModule,\n        forwardRef(() => UsersModule),\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        JwtModule.register({\n            secret: process.env.JWT_SECRET,\n            signOptions: {\n                expiresIn: process.env.JWT_EXPIRES || '7d',\n            },\n        }),\n    ],\n    controllers: [AuthController],\n    providers: [AuthService, JwtStrategy, LocalStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Async\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verify\n                        \n                    \n                \n            \n            \n                \n                    \n                    verify(token: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\nimport { UsersService } from '../users/users.service'\nimport { JwtService } from '@nestjs/jwt'\nimport { ConfigService } from '@nestjs/config'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        @Inject(forwardRef(() => UsersService))\n        private readonly userService: UsersService,\n        private readonly jwtService: JwtService,\n        private readonly configService: ConfigService,\n    ) {}\n\n    async validate(email: string, password: string): Promise {\n        const user = await this.userService.findOne({ email })\n        return user && (await bcrypt.compare(password, user.password)) ? user : null\n    }\n\n    async login(user: IUser) {\n        const payload = { email: user.email, sub: user._id }\n        return {\n            access_token: this.jwtService.sign(payload, {\n                secret: this.configService.get('JWT_SECRET'),\n                expiresIn: this.configService.get('JWT_EXPIRES') || '7d',\n            }),\n        }\n    }\n\n    async verify(token: string) {\n        const decoded = this.jwtService.verify(token, { secret: this.configService.get('JWT_SECRET')! })\n        const user = await this.userService.findOne({ email: decoded.email })\n        if (!user) throw new Error('User not found')\n        return user\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { configuration } from './config/configuration'\nimport { validationSchema } from './config/validation'\nimport { GraphQLModule } from '@nestjs/graphql'\nimport { CoreResolver } from './core.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo'\nimport { mongooseConfigFactory } from '../../utils/factories/mongo-config.factory'\n\n@Module({\n    imports: [\n        ConfigModule.forRoot({\n            isGlobal: true,\n            load: [configuration],\n            validationSchema,\n        }),\n        GraphQLModule.forRoot({\n            driver: ApolloDriver,\n            autoSchemaFile: true,\n            playground: true,\n        }),\n        MongooseModule.forRootAsync({\n            imports: mongooseConfigFactory.imports,\n            useFactory: mongooseConfigFactory.mongooseConfigFactory,\n            inject: mongooseConfigFactory.providers,\n        }),\n    ],\n    controllers: [],\n    providers: [CoreResolver],\n    exports: [],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoreResolver.html":{"url":"classes/CoreResolver.html","title":"class - CoreResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoreResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/core.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                uptime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        uptime\n                        \n                    \n                \n            \n            \n                \nuptime()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/core/core.resolver.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Float, Query, Resolver } from '@nestjs/graphql'\n\n@Resolver()\nexport class CoreResolver {\n    @Query(() => Float)\n    uptime() {\n        return process.uptime()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGroupingItemInput.html":{"url":"classes/CreateGroupingItemInput.html","title":"class - CreateGroupingItemInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGroupingItemInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                correct\n                            \n                            \n                                groups\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateGroupingItemInput extends GqlInput {\n    @Field()\n    item: string\n\n    @Field(() => [String])\n    groups: string[]\n\n    @Field()\n    correct: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateHangmanWordInput.html":{"url":"classes/CreateHangmanWordInput.html","title":"class - CreateHangmanWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateHangmanWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class CreateHangmanWordInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    word: string\n\n    @Field()\n    @IsNotEmpty()\n    category: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMirrorWordInput.html":{"url":"classes/CreateMirrorWordInput.html","title":"class - CreateMirrorWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMirrorWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/inputs/create-mirror-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/dto/inputs/create-mirror-word.input.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateMirrorWordInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    public word: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePuzzleInput.html":{"url":"classes/CreatePuzzleInput.html","title":"class - CreatePuzzleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePuzzleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/puzzle/dto/inputs/create-puzzle.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/puzzle/dto/inputs/create-puzzle.input.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreatePuzzleInput extends GqlInput {\n    @Field()\n    url: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuizAnswerInput.html":{"url":"classes/CreateQuizAnswerInput.html","title":"class - CreateQuizAnswerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuizAnswerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer\n                            \n                            \n                                    Optional\n                                answeredAt\n                            \n                            \n                                    Optional\n                                isCorrect\n                            \n                            \n                                om\n                            \n                            \n                                questionId\n                            \n                            \n                                quizId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answeredAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isCorrect\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, Int } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateQuizAnswerInput extends GqlInput {\n    @Field()\n    quizId: string\n\n    @Field(() => Int)\n    questionId: number\n\n    @Field()\n    answer: string\n\n    @Field()\n    om: string\n\n    @Field()\n    answeredAt?: Date\n\n    isCorrect?: boolean | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuizInput.html":{"url":"classes/CreateQuizInput.html","title":"class - CreateQuizInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuizInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                description\n                            \n                            \n                                questions\n                            \n                            \n                                template\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IQuizQuestion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\nimport { IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { CreateQuizQuestionInput } from '../../../quiz-question/dto/inputs/create-quiz-question.input'\n\n@InputType()\nexport class CreateQuizInput extends GqlInput {\n    @Field()\n    title: string\n\n    @Field()\n    description: string\n\n    @Field(() => [String])\n    categories: string[]\n\n    @Field(() => [CreateQuizQuestionInput])\n    questions: IQuizQuestion[]\n\n    @Field()\n    template: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuizQuestionInput.html":{"url":"classes/CreateQuizQuestionInput.html","title":"class - CreateQuizQuestionInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuizQuestionInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                answers\n                            \n                            \n                                    Optional\n                                correctAnswers\n                            \n                            \n                                question\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        correctAnswers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateQuizQuestionInput extends GqlInput {\n    @Field()\n    question: string\n\n    @Field()\n    type: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    answers?: string[]\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    correctAnswers?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleInput.html":{"url":"classes/CreateRoleInput.html","title":"class - CreateRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/create-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateRoleInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    name: string\n\n    @Field()\n    @IsNotEmpty()\n    description: string\n\n    @Field(() => [String])\n    @IsArray()\n    permissions: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolInput.html":{"url":"classes/CreateSchoolInput.html","title":"class - CreateSchoolInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/inputs/create-school.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                county\n                            \n                            \n                                name\n                            \n                            \n                                om\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        county\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsArray()@ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\nimport { ArrayNotEmpty, IsArray, IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class CreateSchoolInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    om: string\n\n    @Field()\n    @IsNotEmpty()\n    name: string\n\n    @Field()\n    @IsNotEmpty()\n    address: string\n\n    @Field()\n    @IsNotEmpty()\n    county: string\n\n    @Field(() => [String])\n    @IsArray()\n    @ArrayNotEmpty()\n    types: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTokenInput.html":{"url":"classes/CreateTokenInput.html","title":"class - CreateTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/token/dto/inputs/create-token.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                expiresIn\n                            \n                            \n                                quizId\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        expiresIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true, description: 'The token lifetime in seconds'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/token/dto/inputs/create-token.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/token/dto/inputs/create-token.input.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:4\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, Int } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\n\n@InputType()\nexport class CreateTokenInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    quizId: string\n\n    @Field(() => Int, { nullable: true, description: 'The token lifetime in seconds' })\n    expiresIn: number\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/create-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsEmail, IsNotEmpty } from 'class-validator'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateUserInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @Field()\n    @IsNotEmpty()\n    username: string\n\n    @Field()\n    @IsNotEmpty()\n    password: string\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    roles?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteGroupingItemInput.html":{"url":"classes/DeleteGroupingItemInput.html","title":"class - DeleteGroupingItemInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteGroupingItemInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/inputs/delete-grouping-item.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteGroupingItemInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteHangmanWordInput.html":{"url":"classes/DeleteHangmanWordInput.html","title":"class - DeleteHangmanWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteHangmanWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/inputs/delete-hangman-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteHangmanWordInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMirrorWordInput.html":{"url":"classes/DeleteMirrorWordInput.html","title":"class - DeleteMirrorWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMirrorWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/inputs/delete-mirror-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteMirrorWordInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeletePuzzleInput.html":{"url":"classes/DeletePuzzleInput.html","title":"class - DeletePuzzleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeletePuzzleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/puzzle/dto/inputs/delete-puzzle.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeletePuzzleInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteQuizAnswerInput.html":{"url":"classes/DeleteQuizAnswerInput.html","title":"class - DeleteQuizAnswerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteQuizAnswerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/dto/inputs/delete-quiz-answer.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteQuizAnswerInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteQuizInput.html":{"url":"classes/DeleteQuizInput.html","title":"class - DeleteQuizInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteQuizInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/inputs/delete-quiz.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteQuizInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteQuizQuestionInput.html":{"url":"classes/DeleteQuizQuestionInput.html","title":"class - DeleteQuizQuestionInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteQuizQuestionInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/inputs/delete-quiz-question.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteQuizQuestionInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteRoleInput.html":{"url":"classes/DeleteRoleInput.html","title":"class - DeleteRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/delete-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteRoleInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteSchoolInput.html":{"url":"classes/DeleteSchoolInput.html","title":"class - DeleteSchoolInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteSchoolInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/inputs/delete-school.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteSchoolInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteTokenInput.html":{"url":"classes/DeleteTokenInput.html","title":"class - DeleteTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/token/dto/inputs/delete-token.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteTokenInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserInput.html":{"url":"classes/DeleteUserInput.html","title":"class - DeleteUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/delete-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteUserInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FileController.html":{"url":"controllers/FileController.html","title":"controller - FileController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FileController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/file/file.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                file\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Async\n                                getFiles\n                            \n                            \n                                seeUploadedFile\n                            \n                            \n                                    Async\n                                uploadBase64\n                            \n                            \n                                    Async\n                                uploadMultipleFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(image)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':path')@UseGuards(JwtAuthGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/file/file.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFiles()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/file/file.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seeUploadedFile\n                        \n                    \n                \n            \n            \n                \nseeUploadedFile(image, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':path')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/file/file.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadBase64\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadBase64(name: string, image: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('base64')@UseGuards(JwtAuthGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/file/file.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    image\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadMultipleFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadMultipleFiles(files)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('')@UseGuards(JwtAuthGuard)@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/file/file.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    Controller,\n    Delete,\n    Get,\n    Logger,\n    Param,\n    Post,\n    Res,\n    UploadedFiles,\n    UseGuards,\n    UseInterceptors,\n} from '@nestjs/common'\nimport { FilesInterceptor } from '@nestjs/platform-express'\nimport { diskStorage } from 'multer'\nimport { editFileName, fileNameGenerator, imageFileFilter, readDirAsync } from '../../utils/file.utils'\nimport { UPLOAD_PATH } from '../../utils/constants'\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard'\nimport { unlink, writeFile } from 'fs/promises'\n\n@Controller('file')\nexport class FileController {\n    @Post('')\n    @UseGuards(JwtAuthGuard)\n    @UseInterceptors(\n        FilesInterceptor('image', 20, {\n            storage: diskStorage({\n                destination: UPLOAD_PATH,\n                filename: editFileName,\n            }),\n            fileFilter: imageFileFilter,\n        }),\n    )\n    async uploadMultipleFiles(@UploadedFiles() files) {\n        const response = []\n        files.forEach((file) => {\n            const fileResponse = {\n                originalName: file.originalname,\n                filename: file.filename,\n            }\n            response.push(fileResponse)\n        })\n        return response\n    }\n\n    @Post('base64')\n    @UseGuards(JwtAuthGuard)\n    async uploadBase64(@Body('name') name: string, @Body('image') image: string) {\n        const buffer = image.split(';base64,').pop()\n        const fileName = fileNameGenerator(name)\n        await writeFile(`${UPLOAD_PATH}/${fileName}`, buffer, { encoding: 'base64' })\n        return {\n            originalName: name,\n            filename: fileName,\n        }\n    }\n\n    @Get('')\n    async getFiles() {\n        return readDirAsync(UPLOAD_PATH)\n    }\n\n    @Get(':path')\n    seeUploadedFile(@Param('path') image, @Res() res) {\n        return res.sendFile(image, { root: UPLOAD_PATH })\n    }\n\n    @Delete(':path')\n    @UseGuards(JwtAuthGuard)\n    async deleteFile(@Param('path') image) {\n        try {\n            Logger.log(`Deleting file ${image}`)\n            await unlink(`${UPLOAD_PATH}/${image}`)\n            return ''\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FileModule.html":{"url":"modules/FileModule.html","title":"module - FileModule","body":"\n                   \n\n\n\n\n    Modules\n    FileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FileModule\n\n\n\ncluster_FileModule_providers\n\n\n\ncluster_FileModule_exports\n\n\n\n\nFileService \n\nFileService \n\n\n\nFileModule\n\nFileModule\n\nFileService  -->\n\nFileModule->FileService \n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/file/file.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FileService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FileController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FileService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { FileService } from './file.service'\nimport { FileController } from './file.controller'\nimport { MulterModule } from '@nestjs/platform-express'\nimport { multerConfigFactory } from '../../utils/factories/multer-config.factory'\n\n@Module({\n    imports: [MulterModule.registerAsync({ useFactory: multerConfigFactory })],\n    providers: [FileService],\n    exports: [FileService],\n    controllers: [FileController],\n})\nexport class FileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileService.html":{"url":"injectables/FileService.html","title":"injectable - FileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/file/file.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\n\n@Injectable()\nexport class FileService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetGroupingItemArgs.html":{"url":"classes/GetGroupingItemArgs.html","title":"class - GetGroupingItemArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetGroupingItemArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/args/get-grouping-item.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\n\n@ArgsType()\nexport class GetGroupingItemArgs extends IdArg {\n    @Field({ nullable: true })\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetGroupingItemsArgs.html":{"url":"classes/GetGroupingItemsArgs.html","title":"class - GetGroupingItemsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetGroupingItemsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/args/get-grouping-items.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetGroupingItemsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetHangmanWordArgs.html":{"url":"classes/GetHangmanWordArgs.html","title":"class - GetHangmanWordArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetHangmanWordArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/args/get-hangman-word.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/args/get-hangman-word.args.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\n\n@ArgsType()\nexport class GetHangmanWordArgs extends IdArg {\n    @Field({ nullable: true })\n    id: string\n\n    @Field({ nullable: true })\n    category?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetHangmanWordsArgs.html":{"url":"classes/GetHangmanWordsArgs.html","title":"class - GetHangmanWordsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetHangmanWordsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/args/get-hangman-words.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/args/get-hangman-words.args.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetHangmanWordsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n\n    @Field(() => String, { nullable: true })\n    category?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetMirrorWordArgs.html":{"url":"classes/GetMirrorWordArgs.html","title":"class - GetMirrorWordArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetMirrorWordArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/args/get-mirror-word.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true, deprecationReason: 'This field is unused.'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\n\n@ArgsType()\nexport class GetMirrorWordArgs extends IdArg {\n    @Field({ nullable: true, deprecationReason: 'This field is unused.' })\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetMirrorWordsArgs.html":{"url":"classes/GetMirrorWordsArgs.html","title":"class - GetMirrorWordsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetMirrorWordsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/args/get-mirror-words.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetMirrorWordsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetPuzzleArgs.html":{"url":"classes/GetPuzzleArgs.html","title":"class - GetPuzzleArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetPuzzleArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/puzzle/dto/args/get-puzzle.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetPuzzleArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetPuzzlesArgs.html":{"url":"classes/GetPuzzlesArgs.html","title":"class - GetPuzzlesArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetPuzzlesArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/puzzle/dto/args/get-puzzles.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetPuzzlesArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizAnswerArgs.html":{"url":"classes/GetQuizAnswerArgs.html","title":"class - GetQuizAnswerArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizAnswerArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/dto/args/get-quiz-answer.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizAnswerArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizAnswersArgs.html":{"url":"classes/GetQuizAnswersArgs.html","title":"class - GetQuizAnswersArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizAnswersArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/dto/args/get-quiz-answers.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                            \n                                    Optional\n                                quizId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        quizId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/args/get-quiz-answers.args.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizAnswersArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n\n    @Field({ nullable: true })\n    quizId?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizArgs.html":{"url":"classes/GetQuizArgs.html","title":"class - GetQuizArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/args/get-quiz.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizQuestionArgs.html":{"url":"classes/GetQuizQuestionArgs.html","title":"class - GetQuizQuestionArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizQuestionArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/args/get-quiz-question.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizQuestionArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizQuestionsArgs.html":{"url":"classes/GetQuizQuestionsArgs.html","title":"class - GetQuizQuestionsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizQuestionsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/args/get-quiz-questions.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizQuestionsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizzesArgs.html":{"url":"classes/GetQuizzesArgs.html","title":"class - GetQuizzesArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizzesArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/args/get-quizzes.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/args/get-quizzes.args.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizzesArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n\n    @Field({ nullable: true })\n    category?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRoleArgs.html":{"url":"classes/GetRoleArgs.html","title":"class - GetRoleArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRoleArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/args/get-role.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetRoleArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRolesArgs.html":{"url":"classes/GetRolesArgs.html","title":"class - GetRolesArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRolesArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/args/get-roles.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetRolesArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSchoolArgs.html":{"url":"classes/GetSchoolArgs.html","title":"class - GetSchoolArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSchoolArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/args/get-school.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetSchoolArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSchoolsArgs.html":{"url":"classes/GetSchoolsArgs.html","title":"class - GetSchoolsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSchoolsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/args/get-schools.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                county\n                            \n                            \n                                    Optional\n                                ids\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        county\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetSchoolsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field({ nullable: true })\n    name?: string\n\n    @Field({ nullable: true })\n    address?: string\n\n    @Field({ nullable: true })\n    county?: string\n\n    @Field({ nullable: true })\n    type: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetTokenArgs.html":{"url":"classes/GetTokenArgs.html","title":"class - GetTokenArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetTokenArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/token/dto/args/get-token.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/token/dto/args/get-token.args.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/token/dto/args/get-token.args.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { GqlArg } from '../../../../shared/gql-args/gql-arg.abstract'\n\n@ArgsType()\nexport class GetTokenArgs extends GqlArg {\n    @Field({ nullable: true })\n    id: string\n\n    @Field()\n    @IsNotEmpty()\n    token: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetTokensArgs.html":{"url":"classes/GetTokensArgs.html","title":"class - GetTokensArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetTokensArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/token/dto/args/get-tokens.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetTokensArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserArgs.html":{"url":"classes/GetUserArgs.html","title":"class - GetUserArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/args/get-user.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/args/get-user.args.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/args/get-user.args.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field } from '@nestjs/graphql'\nimport { IsOptional } from 'class-validator'\nimport { GqlArg } from '../../../../shared/gql-args/gql-arg.abstract'\n\n@ArgsType()\nexport class GetUserArgs extends GqlArg {\n    @Field({ nullable: true })\n    @IsOptional()\n    id?: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    email?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersArgs.html":{"url":"classes/GetUsersArgs.html","title":"class - GetUsersArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/args/get-users.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetUsersArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlArg.html":{"url":"classes/GqlArg.html","title":"class - GqlArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/gql-arg.abstract.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType } from '@nestjs/graphql'\n\n@ArgsType()\nexport abstract class GqlArg {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlAuthGuard.html":{"url":"classes/GqlAuthGuard.html","title":"class - GqlAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/gql-auth.guard.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRequest\n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/guards/gql-auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\nimport {ExecutionContext} from \"@nestjs/common\";\nimport {GqlExecutionContext} from \"@nestjs/graphql\";\n\nexport class GqlAuthGuard extends AuthGuard('jwt') {\n    getRequest(context: ExecutionContext) {\n        return GqlExecutionContext.create(context).getContext().req\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlInput.html":{"url":"classes/GqlInput.html","title":"class - GqlInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-inputs/gql-input.abstract.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class GqlInput {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupingItem.html":{"url":"classes/GroupingItem.html","title":"class - GroupingItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupingItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGroupingItem\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                correct\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                groups\n                            \n                            \n                                item\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IGroupingItem } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type GroupingItemDocument = IGroupingItem & Document\n\n@ObjectType()\n@Schema()\nexport class GroupingItem implements IGroupingItem {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    item: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    groups: string[]\n\n    @Field()\n    @Prop()\n    correct: string\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const GroupingItemSchema = SchemaFactory.createForClass(GroupingItem)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupingItemModule.html":{"url":"modules/GroupingItemModule.html","title":"module - GroupingItemModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupingItemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GroupingItemModule\n\n\n\ncluster_GroupingItemModule_providers\n\n\n\ncluster_GroupingItemModule_exports\n\n\n\n\nGroupingItemRepository \n\nGroupingItemRepository \n\n\n\nGroupingItemService \n\nGroupingItemService \n\n\n\nGroupingItemModule\n\nGroupingItemModule\n\nGroupingItemRepository  -->\n\nGroupingItemModule->GroupingItemRepository \n\n\n\nGroupingItemService  -->\n\nGroupingItemModule->GroupingItemService \n\n\n\n\n\nGroupingItemRepository\n\nGroupingItemRepository\n\nGroupingItemModule -->\n\nGroupingItemRepository->GroupingItemModule\n\n\n\n\n\nGroupingItemService\n\nGroupingItemService\n\nGroupingItemModule -->\n\nGroupingItemService->GroupingItemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/grouping-item.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GroupingItemRepository\n                        \n                        \n                            GroupingItemService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GroupingItemRepository\n                        \n                        \n                            GroupingItemService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { GroupingItemService } from './grouping-item.service'\nimport { GroupingItemResolver } from './grouping-item.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { GroupingItem, GroupingItemSchema } from './entities/grouping-item.entity'\nimport { GroupingItemRepository } from './entities/grouping-item.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: GroupingItem.name,\n                schema: GroupingItemSchema,\n            },\n        ]),\n    ],\n    providers: [GroupingItemResolver, GroupingItemService, GroupingItemRepository],\n    exports: [GroupingItemService, GroupingItemRepository],\n})\nexport class GroupingItemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupingItemRepository.html":{"url":"injectables/GroupingItemRepository.html","title":"injectable - GroupingItemRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupingItemRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/entities/grouping-item.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(__data: GetGroupingItemArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    __data\n                                    \n                                                GetGroupingItemArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { GroupingItem, GroupingItemDocument } from './grouping-item.entity'\nimport { Model } from 'mongoose'\nimport { UpdateGroupingItemInput } from '../dto/inputs/update-grouping-item.input'\nimport { CreateGroupingItemInput } from '../dto/inputs/create-grouping-item.input'\nimport { GetGroupingItemsArgs } from '../dto/args/get-grouping-items.args'\nimport { GetGroupingItemArgs } from '../dto/args/get-grouping-item.args'\nimport { IGroupingItem } from '@szakszolg-nx/api-interfaces'\nimport { DeleteGroupingItemInput } from '../dto/inputs/delete-grouping-item.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class GroupingItemRepository extends SimpleRepository {\n    constructor(@InjectModel(GroupingItem.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    override async findOne(__data: GetGroupingItemArgs): Promise {\n        const count = await this.model.estimatedDocumentCount()\n        const random = Math.floor(Math.random() * count)\n        return this.model.findOne().skip(random).limit(1)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupingItemResolver.html":{"url":"classes/GroupingItemResolver.html","title":"class - GroupingItemResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupingItemResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/grouping-item.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGroupingItem\n                            \n                            \n                                deleteGroupingItem\n                            \n                            \n                                groupingItem\n                            \n                            \n                                groupingItems\n                            \n                            \n                                updateGroupingItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: GroupingItemService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        GroupingItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createGroupingItem\n                        \n                    \n                \n            \n            \n                \ncreateGroupingItem(data: CreateGroupingItemInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateGroupingItemInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroupingItem\n                        \n                    \n                \n            \n            \n                \ndeleteGroupingItem(data: DeleteGroupingItemInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteGroupingItemInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupingItem\n                        \n                    \n                \n            \n            \n                \ngroupingItem(data: GetGroupingItemArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetGroupingItemArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupingItems\n                        \n                    \n                \n            \n            \n                \ngroupingItems(data: GetGroupingItemsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetGroupingItemsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateGroupingItem\n                        \n                    \n                \n            \n            \n                \nupdateGroupingItem(data: UpdateGroupingItemInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateGroupingItemInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { GroupingItemService } from './grouping-item.service'\nimport { GroupingItem } from './entities/grouping-item.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetGroupingItemArgs } from './dto/args/get-grouping-item.args'\nimport { IGroupingItem } from '@szakszolg-nx/api-interfaces'\nimport { GetGroupingItemsArgs } from './dto/args/get-grouping-items.args'\nimport { CreateGroupingItemInput } from './dto/inputs/create-grouping-item.input'\nimport { UpdateGroupingItemInput } from './dto/inputs/update-grouping-item.input'\nimport { DeleteGroupingItemInput } from './dto/inputs/delete-grouping-item.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => GroupingItem)\n@Resource('grouping-items')\nexport class GroupingItemResolver {\n    constructor(private readonly service: GroupingItemService) {}\n\n    @Query(() => GroupingItem, { nullable: true })\n    groupingItem(@Args({ nullable: true }) data: GetGroupingItemArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [GroupingItem], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    groupingItems(@Args({ nullable: true }) data: GetGroupingItemsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => GroupingItem)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createGroupingItem(@Args('createGroupingItemData') data: CreateGroupingItemInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => GroupingItem)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateGroupingItem(@Args('updateGroupingItemData') data: UpdateGroupingItemInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => GroupingItem)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteGroupingItem(@Args('deleteGroupingItemData') data: DeleteGroupingItemInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupingItemService.html":{"url":"injectables/GroupingItemService.html","title":"injectable - GroupingItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupingItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/grouping-item.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: GroupingItemRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/grouping-item/grouping-item.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        GroupingItemRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateGroupingItemInput } from './dto/inputs/create-grouping-item.input'\nimport { UpdateGroupingItemInput } from './dto/inputs/update-grouping-item.input'\nimport { GroupingItemRepository } from './entities/grouping-item.repository'\nimport { GetGroupingItemsArgs } from './dto/args/get-grouping-items.args'\nimport { GetGroupingItemArgs } from './dto/args/get-grouping-item.args'\nimport { DeleteGroupingItemInput } from './dto/inputs/delete-grouping-item.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class GroupingItemService extends RepositoryProxyService {\n    constructor(repository: GroupingItemRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HangmanWord.html":{"url":"classes/HangmanWord.html","title":"class - HangmanWord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HangmanWord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IHangmanWord\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                category\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IHangmanWord } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type HangmanWordDocument = IHangmanWord & Document\n\n@ObjectType()\n@Schema()\nexport class HangmanWord implements IHangmanWord {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    word: string\n\n    @Field()\n    @Prop()\n    category: string\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const HangmanWordSchema = SchemaFactory.createForClass(HangmanWord)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HangmanWordModule.html":{"url":"modules/HangmanWordModule.html","title":"module - HangmanWordModule","body":"\n                   \n\n\n\n\n    Modules\n    HangmanWordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HangmanWordModule\n\n\n\ncluster_HangmanWordModule_exports\n\n\n\ncluster_HangmanWordModule_providers\n\n\n\n\nHangmanWordRepository \n\nHangmanWordRepository \n\n\n\nHangmanWordService \n\nHangmanWordService \n\n\n\nHangmanWordModule\n\nHangmanWordModule\n\nHangmanWordRepository  -->\n\nHangmanWordModule->HangmanWordRepository \n\n\n\nHangmanWordService  -->\n\nHangmanWordModule->HangmanWordService \n\n\n\n\n\nHangmanWordRepository\n\nHangmanWordRepository\n\nHangmanWordModule -->\n\nHangmanWordRepository->HangmanWordModule\n\n\n\n\n\nHangmanWordService\n\nHangmanWordService\n\nHangmanWordModule -->\n\nHangmanWordService->HangmanWordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/hangman-word.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HangmanWordRepository\n                        \n                        \n                            HangmanWordService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HangmanWordRepository\n                        \n                        \n                            HangmanWordService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { HangmanWordService } from './hangman-word.service'\nimport { HangmanWordResolver } from './hangman-word.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { HangmanWord, HangmanWordSchema } from './entities/hangman-word.entity'\nimport { HangmanWordRepository } from './entities/hangman-word.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: HangmanWord.name,\n                schema: HangmanWordSchema,\n            },\n        ]),\n    ],\n    providers: [HangmanWordResolver, HangmanWordService, HangmanWordRepository],\n    exports: [HangmanWordService, HangmanWordRepository],\n})\nexport class HangmanWordModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HangmanWordRepository.html":{"url":"injectables/HangmanWordRepository.html","title":"injectable - HangmanWordRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HangmanWordRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/entities/hangman-word.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(hangmanWordModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hangmanWordModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetHangmanWordsArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetHangmanWordsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetHangmanWordArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetHangmanWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { HangmanWord, HangmanWordDocument } from './hangman-word.entity'\nimport { Model } from 'mongoose'\nimport { UpdateHangmanWordInput } from '../dto/inputs/update-hangman-word.input'\nimport { CreateHangmanWordInput } from '../dto/inputs/create-hangman-word.input'\nimport { GetHangmanWordsArgs } from '../dto/args/get-hangman-words.args'\nimport { GetHangmanWordArgs } from '../dto/args/get-hangman-word.args'\nimport { IHangmanWord } from '@szakszolg-nx/api-interfaces'\nimport { DeleteHangmanWordInput } from '../dto/inputs/delete-hangman-word.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class HangmanWordRepository extends SimpleRepository {\n    constructor(@InjectModel(HangmanWord.name) hangmanWordModel: Model) {\n        super(hangmanWordModel)\n    }\n\n    override async findAll(data: GetHangmanWordsArgs | null): Promise {\n        if (!data?.category && !data?.ids) return super.findAll(data)\n        let res: any[]\n        const param = {}\n        if (data.category) param['category'] = { $regex: data.category, $options: 'i' }\n        res = await this.model.find(param)\n        if (data.ids?.length > 0) res = res.filter((x) => data.ids.includes(x._id.toString()))\n        return res\n    }\n\n    override async findOne(data: GetHangmanWordArgs): Promise {\n        if (data.id) return super.findOne(data)\n\n        if (data?.category) {\n            // Note: If we want more than a few hundred words per category, we should use findOne().skip()\n            const res = await this.model.find({ category: { $regex: data.category, $options: 'i' } })\n            return res[Math.floor(Math.random() * res.length)]\n        }\n\n        const count = await this.model.estimatedDocumentCount()\n        const random = Math.floor(Math.random() * count)\n        return this.model.findOne().skip(random).limit(1)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HangmanWordResolver.html":{"url":"classes/HangmanWordResolver.html","title":"class - HangmanWordResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HangmanWordResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/hangman-word.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createHangmanWord\n                            \n                            \n                                deleteHangmanWord\n                            \n                            \n                                hangmanWord\n                            \n                            \n                                hangmanWords\n                            \n                            \n                                updateHangmanWord\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: HangmanWordService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        HangmanWordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createHangmanWord\n                        \n                    \n                \n            \n            \n                \ncreateHangmanWord(data: CreateHangmanWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateHangmanWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteHangmanWord\n                        \n                    \n                \n            \n            \n                \ndeleteHangmanWord(data: DeleteHangmanWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteHangmanWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hangmanWord\n                        \n                    \n                \n            \n            \n                \nhangmanWord(data: GetHangmanWordArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true, description: 'Get a hangman word randomly'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetHangmanWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hangmanWords\n                        \n                    \n                \n            \n            \n                \nhangmanWords(data: GetHangmanWordsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetHangmanWordsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateHangmanWord\n                        \n                    \n                \n            \n            \n                \nupdateHangmanWord(data: UpdateHangmanWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateHangmanWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { HangmanWordService } from './hangman-word.service'\nimport { HangmanWord } from './entities/hangman-word.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetHangmanWordArgs } from './dto/args/get-hangman-word.args'\nimport { IHangmanWord } from '@szakszolg-nx/api-interfaces'\nimport { GetHangmanWordsArgs } from './dto/args/get-hangman-words.args'\nimport { CreateHangmanWordInput } from './dto/inputs/create-hangman-word.input'\nimport { UpdateHangmanWordInput } from './dto/inputs/update-hangman-word.input'\nimport { DeleteHangmanWordInput } from './dto/inputs/delete-hangman-word.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => HangmanWord)\n@Resource('hangman-words')\nexport class HangmanWordResolver {\n    constructor(private readonly service: HangmanWordService) {}\n\n    @Query(() => HangmanWord, { nullable: true, description: 'Get a hangman word randomly' })\n    hangmanWord(@Args({ nullable: true }) data: GetHangmanWordArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [HangmanWord], { nullable: 'items' })\n    hangmanWords(@Args({ nullable: true }) data: GetHangmanWordsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => HangmanWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createHangmanWord(@Args('createHangmanWordData') data: CreateHangmanWordInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => HangmanWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateHangmanWord(@Args('updateHangmanWordData') data: UpdateHangmanWordInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => HangmanWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteHangmanWord(@Args('deleteHangmanWordData') data: DeleteHangmanWordInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HangmanWordService.html":{"url":"injectables/HangmanWordService.html","title":"injectable - HangmanWordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HangmanWordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/hangman-word.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: HangmanWordRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/hangman-word/hangman-word.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        HangmanWordRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateHangmanWordInput } from './dto/inputs/create-hangman-word.input'\nimport { UpdateHangmanWordInput } from './dto/inputs/update-hangman-word.input'\nimport { HangmanWordRepository } from './entities/hangman-word.repository'\nimport { GetHangmanWordsArgs } from './dto/args/get-hangman-words.args'\nimport { GetHangmanWordArgs } from './dto/args/get-hangman-word.args'\nimport { DeleteHangmanWordInput } from './dto/inputs/delete-hangman-word.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class HangmanWordService extends RepositoryProxyService {\n    constructor(repository: HangmanWordRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdArg.html":{"url":"classes/IdArg.html","title":"class - IdArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/id.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-args/id.args.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlArg } from './gql-arg.abstract'\n\nexport class IdArrayArg extends GqlArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\nexport class IdArg extends GqlArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdArrayArg.html":{"url":"classes/IdArrayArg.html","title":"class - IdArrayArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdArrayArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/id.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-args/id.args.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlArg } from './gql-arg.abstract'\n\nexport class IdArrayArg extends GqlArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\nexport class IdArg extends GqlArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdInput.html":{"url":"classes/IdInput.html","title":"class - IdInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-inputs/id.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-inputs/id.input.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GqlInput } from './gql-input.abstract'\n\nexport class IdInput extends GqlInput {\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtAuthGuard.html":{"url":"classes/JwtAuthGuard.html","title":"class - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\n\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/strategies/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/strategies/jwt.strategy.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { forwardRef, Inject, Injectable } from '@nestjs/common'\nimport { UsersService } from '../../users/users.service'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        @Inject(forwardRef(() => UsersService))\n        private readonly userService: UsersService,\n    ) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: process.env.JWT_SECRET,\n        })\n    }\n\n    async validate(payload: { email: string; sub: string }) {\n        return this.userService.findOne({ email: payload.email })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalAuthGuard.html":{"url":"classes/LocalAuthGuard.html","title":"class - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\n\nexport class LocalAuthGuard extends AuthGuard\n('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/strategies/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/strategies/local.strategy.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport'\nimport { Strategy } from 'passport-local'\nimport { AuthService } from '../auth.service'\nimport { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private readonly authService: AuthService) {\n        super({ usernameField: 'email' })\n    }\n\n    async validate(email: string, password: string): Promise {\n        const user = await this.authService.validate(email, password)\n        console.log('user', user)\n        if (!user) {\n            throw new UnauthorizedException()\n        }\n        return user\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MirrorWord.html":{"url":"classes/MirrorWord.html","title":"class - MirrorWord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MirrorWord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IMirrorWord\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IMirrorWord } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type MirrorWordDocument = IMirrorWord & Document\n\n@ObjectType()\n@Schema()\nexport class MirrorWord implements IMirrorWord {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    word: string\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const MirrorWordSchema = SchemaFactory.createForClass(MirrorWord)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MirrorWordModule.html":{"url":"modules/MirrorWordModule.html","title":"module - MirrorWordModule","body":"\n                   \n\n\n\n\n    Modules\n    MirrorWordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MirrorWordModule\n\n\n\ncluster_MirrorWordModule_exports\n\n\n\ncluster_MirrorWordModule_providers\n\n\n\n\nMirrorWordRepository \n\nMirrorWordRepository \n\n\n\nMirrorWordService \n\nMirrorWordService \n\n\n\nMirrorWordModule\n\nMirrorWordModule\n\nMirrorWordRepository  -->\n\nMirrorWordModule->MirrorWordRepository \n\n\n\nMirrorWordService  -->\n\nMirrorWordModule->MirrorWordService \n\n\n\n\n\nMirrorWordRepository\n\nMirrorWordRepository\n\nMirrorWordModule -->\n\nMirrorWordRepository->MirrorWordModule\n\n\n\n\n\nMirrorWordService\n\nMirrorWordService\n\nMirrorWordModule -->\n\nMirrorWordService->MirrorWordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/mirror-word.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MirrorWordRepository\n                        \n                        \n                            MirrorWordService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MirrorWordRepository\n                        \n                        \n                            MirrorWordService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { MirrorWordService } from './mirror-word.service'\nimport { MirrorWordResolver } from './mirror-word.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { MirrorWord, MirrorWordSchema } from './entities/mirror-word.entity'\nimport { MirrorWordRepository } from './entities/mirror-word.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: MirrorWord.name,\n                schema: MirrorWordSchema,\n            },\n        ]),\n    ],\n    providers: [MirrorWordResolver, MirrorWordService, MirrorWordRepository],\n    exports: [MirrorWordService, MirrorWordRepository],\n})\nexport class MirrorWordModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MirrorWordRepository.html":{"url":"injectables/MirrorWordRepository.html","title":"injectable - MirrorWordRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MirrorWordRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/entities/mirror-word.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mirrorWordModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mirrorWordModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(__data: GetMirrorWordArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    __data\n                                    \n                                                GetMirrorWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { MirrorWord, MirrorWordDocument } from './mirror-word.entity'\nimport { Model } from 'mongoose'\nimport { UpdateMirrorWordInput } from '../dto/inputs/update-mirror-word.input'\nimport { CreateMirrorWordInput } from '../dto/inputs/create-mirror-word.input'\nimport { GetMirrorWordsArgs } from '../dto/args/get-mirror-words.args'\nimport { GetMirrorWordArgs } from '../dto/args/get-mirror-word.args'\nimport { IMirrorWord } from '@szakszolg-nx/api-interfaces'\nimport { DeleteMirrorWordInput } from '../dto/inputs/delete-mirror-word.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class MirrorWordRepository extends SimpleRepository {\n    constructor(@InjectModel(MirrorWord.name) mirrorWordModel: Model) {\n        super(mirrorWordModel)\n    }\n\n    override async findOne(__data: GetMirrorWordArgs): Promise {\n        const count = await this.model.estimatedDocumentCount()\n        const random = Math.floor(Math.random() * count)\n        return this.model.findOne().skip(random).limit(1)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MirrorWordResolver.html":{"url":"classes/MirrorWordResolver.html","title":"class - MirrorWordResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MirrorWordResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/mirror-word.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMirrorWord\n                            \n                            \n                                deleteMirrorWord\n                            \n                            \n                                mirrorWord\n                            \n                            \n                                mirrorWords\n                            \n                            \n                                updateMirrorWord\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mirrorWordService: MirrorWordService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mirrorWordService\n                                                  \n                                                        \n                                                                        MirrorWordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMirrorWord\n                        \n                    \n                \n            \n            \n                \ncreateMirrorWord(data: CreateMirrorWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateMirrorWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMirrorWord\n                        \n                    \n                \n            \n            \n                \ndeleteMirrorWord(data: DeleteMirrorWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteMirrorWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mirrorWord\n                        \n                    \n                \n            \n            \n                \nmirrorWord(data: GetMirrorWordArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetMirrorWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mirrorWords\n                        \n                    \n                \n            \n            \n                \nmirrorWords(data: GetMirrorWordsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetMirrorWordsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMirrorWord\n                        \n                    \n                \n            \n            \n                \nupdateMirrorWord(data: UpdateMirrorWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateMirrorWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { MirrorWordService } from './mirror-word.service'\nimport { MirrorWord } from './entities/mirror-word.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetMirrorWordArgs } from './dto/args/get-mirror-word.args'\nimport { IMirrorWord } from '@szakszolg-nx/api-interfaces'\nimport { GetMirrorWordsArgs } from './dto/args/get-mirror-words.args'\nimport { CreateMirrorWordInput } from './dto/inputs/create-mirror-word.input'\nimport { UpdateMirrorWordInput } from './dto/inputs/update-mirror-word.input'\nimport { DeleteMirrorWordInput } from './dto/inputs/delete-mirror-word.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => MirrorWord)\n@Resource('mirror-words')\nexport class MirrorWordResolver {\n    constructor(private readonly mirrorWordService: MirrorWordService) {}\n\n    @Query(() => MirrorWord, { nullable: true })\n    mirrorWord(@Args({ nullable: true }) data: GetMirrorWordArgs): Promise {\n        return this.mirrorWordService.findOne(data)\n    }\n\n    @Query(() => [MirrorWord], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    mirrorWords(@Args({ nullable: true }) data: GetMirrorWordsArgs | null): Promise {\n        return this.mirrorWordService.findAll(data)\n    }\n\n    @Mutation(() => MirrorWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createMirrorWord(@Args('createMirrorWordData') data: CreateMirrorWordInput): Promise {\n        return this.mirrorWordService.create(data)\n    }\n\n    @Mutation(() => MirrorWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateMirrorWord(@Args('updateMirrorWordData') data: UpdateMirrorWordInput): Promise {\n        return this.mirrorWordService.update(data)\n    }\n\n    @Mutation(() => MirrorWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteMirrorWord(@Args('deleteMirrorWordData') data: DeleteMirrorWordInput): Promise {\n        return this.mirrorWordService.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MirrorWordService.html":{"url":"injectables/MirrorWordService.html","title":"injectable - MirrorWordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MirrorWordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/mirror-word.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: MirrorWordRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/mirror-word/mirror-word.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        MirrorWordRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateMirrorWordInput } from './dto/inputs/create-mirror-word.input'\nimport { UpdateMirrorWordInput } from './dto/inputs/update-mirror-word.input'\nimport { MirrorWordRepository } from './entities/mirror-word.repository'\nimport { GetMirrorWordsArgs } from './dto/args/get-mirror-words.args'\nimport { GetMirrorWordArgs } from './dto/args/get-mirror-word.args'\nimport { DeleteMirrorWordInput } from './dto/inputs/delete-mirror-word.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class MirrorWordService extends RepositoryProxyService {\n    constructor(repository: MirrorWordRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PermissionGuard.html":{"url":"guards/PermissionGuard.html","title":"guard - PermissionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PermissionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/api/src/app/auth/guards/permission-guard.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/guards/permission-guard.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/guards/permission-guard.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, flatten, Injectable, Logger } from '@nestjs/common'\nimport { Reflector } from '@nestjs/core'\nimport { GqlExecutionContext } from '@nestjs/graphql'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class PermissionGuard implements CanActivate {\n    constructor(private reflector: Reflector) {}\n\n    canActivate(context: ExecutionContext) {\n        const requiredResource = this.reflector.getAllAndMerge('resources', [\n            context.getClass(),\n            context.getHandler(),\n        ])\n        const requiredAbilities = this.reflector.get('abilities', context.getHandler())\n        if (requiredAbilities?.length == 0 && requiredResource?.length == 0) return true\n        const required = `${requiredAbilities[0]}::${requiredResource[0]}`\n        let user: IUser\n        if (context.getType() === 'http') user = context.switchToHttp().getRequest().user\n        user = GqlExecutionContext.create(context).getContext().req.user\n        if (!user) return false\n        Logger.warn(`${user.email} is trying to access ${required} with roles ${JSON.stringify(user.roles)}`)\n        const userPermissions = flatten(user.roles.map((role) => role.permissions ?? [])).map((permission: string) =>\n            permission.replace(/^\\*::/g, `${requiredAbilities[0]}::`).replace(/::\\*$/g, `::${requiredResource[0]}`),\n        )\n\n        return userPermissions.includes(required)\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Puzzle.html":{"url":"classes/Puzzle.html","title":"class - Puzzle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Puzzle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/puzzle/entities/puzzle.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IPuzzle\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                columns\n                            \n                            \n                                createdAt\n                            \n                            \n                                cropHeight\n                            \n                            \n                                cropLeft\n                            \n                            \n                                cropTop\n                            \n                            \n                                cropWidth\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                pieceSize\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/puzzle/entities/puzzle.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/puzzle/entities/puzzle.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/puzzle/entities/puzzle.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cropHeight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/puzzle/entities/puzzle.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cropLeft\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/puzzle/entities/puzzle.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cropTop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/puzzle/entities/puzzle.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cropWidth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/puzzle/entities/puzzle.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/puzzle/entities/puzzle.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pieceSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/puzzle/entities/puzzle.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/puzzle/entities/puzzle.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/puzzle/entities/puzzle.entity.ts:53\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IPuzzle } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type PuzzleDocument = IPuzzle & Document\n\n@ObjectType()\n@Schema()\nexport class Puzzle implements IPuzzle {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n\n    @Field()\n    @Prop()\n    columns: number\n\n    @Field()\n    @Prop()\n    cropHeight: number\n\n    @Field()\n    @Prop()\n    cropLeft: number\n\n    @Field()\n    @Prop()\n    cropTop: number\n\n    @Field()\n    @Prop()\n    cropWidth: number\n\n    @Field()\n    @Prop()\n    pieceSize: number\n\n    @Field()\n    @Prop()\n    url: string\n}\n\nexport const PuzzleSchema = SchemaFactory.createForClass(Puzzle)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PuzzleModule.html":{"url":"modules/PuzzleModule.html","title":"module - PuzzleModule","body":"\n                   \n\n\n\n\n    Modules\n    PuzzleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PuzzleModule\n\n\n\ncluster_PuzzleModule_exports\n\n\n\ncluster_PuzzleModule_providers\n\n\n\n\nPuzzleRepository \n\nPuzzleRepository \n\n\n\nPuzzleService \n\nPuzzleService \n\n\n\nPuzzleModule\n\nPuzzleModule\n\nPuzzleRepository  -->\n\nPuzzleModule->PuzzleRepository \n\n\n\nPuzzleService  -->\n\nPuzzleModule->PuzzleService \n\n\n\n\n\nPuzzleRepository\n\nPuzzleRepository\n\nPuzzleModule -->\n\nPuzzleRepository->PuzzleModule\n\n\n\n\n\nPuzzleService\n\nPuzzleService\n\nPuzzleModule -->\n\nPuzzleService->PuzzleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/puzzle/puzzle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PuzzleRepository\n                        \n                        \n                            PuzzleService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PuzzleRepository\n                        \n                        \n                            PuzzleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { PuzzleService } from './puzzle.service'\nimport { PuzzleResolver } from './puzzle.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Puzzle, PuzzleSchema } from './entities/puzzle.entity'\nimport { PuzzleRepository } from './entities/puzzle.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: Puzzle.name,\n                schema: PuzzleSchema,\n            },\n        ]),\n    ],\n    providers: [PuzzleResolver, PuzzleService, PuzzleRepository],\n    exports: [PuzzleService, PuzzleRepository],\n})\nexport class PuzzleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PuzzleRepository.html":{"url":"injectables/PuzzleRepository.html","title":"injectable - PuzzleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PuzzleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/puzzle/entities/puzzle.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/puzzle/entities/puzzle.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Puzzle, PuzzleDocument } from './puzzle.entity'\nimport { Model } from 'mongoose'\nimport { UpdatePuzzleInput } from '../dto/inputs/update-puzzle.input'\nimport { CreatePuzzleInput } from '../dto/inputs/create-puzzle.input'\nimport { GetPuzzlesArgs } from '../dto/args/get-puzzles.args'\nimport { GetPuzzleArgs } from '../dto/args/get-puzzle.args'\nimport { IPuzzle } from '@szakszolg-nx/api-interfaces'\nimport { DeletePuzzleInput } from '../dto/inputs/delete-puzzle.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class PuzzleRepository extends SimpleRepository {\n    constructor(@InjectModel(Puzzle.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    // TODO: Check if anything needs to be overridden\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PuzzleResolver.html":{"url":"classes/PuzzleResolver.html","title":"class - PuzzleResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PuzzleResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/puzzle/puzzle.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPuzzle\n                            \n                            \n                                deletePuzzle\n                            \n                            \n                                puzzle\n                            \n                            \n                                puzzles\n                            \n                            \n                                updatePuzzle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: PuzzleService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/puzzle/puzzle.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        PuzzleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createPuzzle\n                        \n                    \n                \n            \n            \n                \ncreatePuzzle(data: CreatePuzzleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/puzzle/puzzle.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreatePuzzleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deletePuzzle\n                        \n                    \n                \n            \n            \n                \ndeletePuzzle(data: DeletePuzzleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/puzzle/puzzle.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeletePuzzleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        puzzle\n                        \n                    \n                \n            \n            \n                \npuzzle(data: GetPuzzleArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/puzzle/puzzle.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetPuzzleArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        puzzles\n                        \n                    \n                \n            \n            \n                \npuzzles(data: GetPuzzlesArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/puzzle/puzzle.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetPuzzlesArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePuzzle\n                        \n                    \n                \n            \n            \n                \nupdatePuzzle(data: UpdatePuzzleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/puzzle/puzzle.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdatePuzzleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { PuzzleService } from './puzzle.service'\nimport { Puzzle } from './entities/puzzle.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetPuzzleArgs } from './dto/args/get-puzzle.args'\nimport { IPuzzle } from '@szakszolg-nx/api-interfaces'\nimport { GetPuzzlesArgs } from './dto/args/get-puzzles.args'\nimport { CreatePuzzleInput } from './dto/inputs/create-puzzle.input'\nimport { UpdatePuzzleInput } from './dto/inputs/update-puzzle.input'\nimport { DeletePuzzleInput } from './dto/inputs/delete-puzzle.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => Puzzle)\n@Resource('puzzles')\nexport class PuzzleResolver {\n    constructor(private readonly service: PuzzleService) {}\n\n    @Query(() => Puzzle, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    puzzle(@Args({ nullable: true }) data: GetPuzzleArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [Puzzle], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    puzzles(@Args({ nullable: true }) data: GetPuzzlesArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => Puzzle)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createPuzzle(@Args('createPuzzleData') data: CreatePuzzleInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => Puzzle)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updatePuzzle(@Args('updatePuzzleData') data: UpdatePuzzleInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => Puzzle)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deletePuzzle(@Args('deletePuzzleData') data: DeletePuzzleInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PuzzleService.html":{"url":"injectables/PuzzleService.html","title":"injectable - PuzzleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PuzzleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/puzzle/puzzle.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: PuzzleRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/puzzle/puzzle.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        PuzzleRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreatePuzzleInput } from './dto/inputs/create-puzzle.input'\nimport { UpdatePuzzleInput } from './dto/inputs/update-puzzle.input'\nimport { PuzzleRepository } from './entities/puzzle.repository'\nimport { GetPuzzlesArgs } from './dto/args/get-puzzles.args'\nimport { GetPuzzleArgs } from './dto/args/get-puzzle.args'\nimport { DeletePuzzleInput } from './dto/inputs/delete-puzzle.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class PuzzleService extends RepositoryProxyService {\n    constructor(repository: PuzzleRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Quiz.html":{"url":"classes/Quiz.html","title":"class - Quiz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Quiz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/entities/quiz.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IQuiz\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                categories\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                questions\n                            \n                            \n                                template\n                            \n                            \n                                title\n                            \n                            \n                                tokens\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IQuizQuestion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tokens\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IQuiz, IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\nimport { QuizQuestion } from '../../quiz-question/entities/quiz-question.entity'\n\nexport type QuizDocument = IQuiz & Document\n\n@ObjectType()\n@Schema()\nexport class Quiz implements IQuiz {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    title: string\n\n    @Field()\n    @Prop()\n    template: string\n\n    @Field()\n    @Prop()\n    description: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    categories: string[]\n\n    @Field(() => [QuizQuestion])\n    @Prop({ type: [MongooseSchema.Types.Mixed] })\n    questions: IQuizQuestion[]\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    tokens: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const QuizSchema = SchemaFactory.createForClass(Quiz)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizAnswer.html":{"url":"classes/QuizAnswer.html","title":"class - QuizAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQuizAnswer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                answer\n                            \n                            \n                                    Optional\n                                answeredAt\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                isCorrect\n                            \n                            \n                                om\n                            \n                            \n                                questionId\n                            \n                            \n                                quizId\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answeredAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isCorrect\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Int, ObjectType } from '@nestjs/graphql'\nimport { IQuizAnswer } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type QuizAnswerDocument = IQuizAnswer & Document\n\n@ObjectType()\n@Schema()\nexport class QuizAnswer implements IQuizAnswer {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    quizId: string\n\n    @Field(() => Int)\n    @Prop()\n    questionId: number\n\n    @Field()\n    @Prop()\n    answer: string\n\n    @Field()\n    @Prop()\n    om: string\n\n    @Field(() => Boolean, { nullable: true })\n    @Prop({ nullable: true })\n    isCorrect?: boolean | null\n\n    @Field()\n    @Prop()\n    answeredAt?: Date\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const QuizAnswerSchema = SchemaFactory.createForClass(QuizAnswer)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuizAnswerModule.html":{"url":"modules/QuizAnswerModule.html","title":"module - QuizAnswerModule","body":"\n                   \n\n\n\n\n    Modules\n    QuizAnswerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_QuizAnswerModule\n\n\n\ncluster_QuizAnswerModule_providers\n\n\n\ncluster_QuizAnswerModule_imports\n\n\n\ncluster_QuizAnswerModule_exports\n\n\n\n\nQuizModule\n\nQuizModule\n\n\n\nQuizAnswerModule\n\nQuizAnswerModule\n\nQuizAnswerModule -->\n\nQuizModule->QuizAnswerModule\n\n\n\n\n\nQuizAnswerRepository \n\nQuizAnswerRepository \n\nQuizAnswerRepository  -->\n\nQuizAnswerModule->QuizAnswerRepository \n\n\n\n\n\nQuizAnswerService \n\nQuizAnswerService \n\nQuizAnswerService  -->\n\nQuizAnswerModule->QuizAnswerService \n\n\n\n\n\nQuizAnswerRepository\n\nQuizAnswerRepository\n\nQuizAnswerModule -->\n\nQuizAnswerRepository->QuizAnswerModule\n\n\n\n\n\nQuizAnswerService\n\nQuizAnswerService\n\nQuizAnswerModule -->\n\nQuizAnswerService->QuizAnswerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/quiz-answer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QuizAnswerRepository\n                        \n                        \n                            QuizAnswerService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            QuizModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuizAnswerRepository\n                        \n                        \n                            QuizAnswerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { QuizAnswerService } from './quiz-answer.service'\nimport { QuizAnswerResolver } from './quiz-answer.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { QuizAnswer, QuizAnswerSchema } from './entities/quiz-answer.entity'\nimport { QuizAnswerRepository } from './entities/quiz-answer.repository'\nimport { QuizModule } from '../quiz/quiz.module'\n\n@Module({\n    imports: [\n        QuizModule,\n        MongooseModule.forFeature([\n            {\n                name: QuizAnswer.name,\n                schema: QuizAnswerSchema,\n            },\n        ]),\n    ],\n    providers: [QuizAnswerResolver, QuizAnswerService, QuizAnswerRepository],\n    exports: [QuizAnswerService, QuizAnswerRepository],\n})\nexport class QuizAnswerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizAnswerRepository.html":{"url":"injectables/QuizAnswerRepository.html","title":"injectable - QuizAnswerRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizAnswerRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/entities/quiz-answer.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model, quizService: QuizService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.repository.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateQuizAnswerInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizAnswerInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetQuizAnswersArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizAnswersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { QuizAnswer, QuizAnswerDocument } from './quiz-answer.entity'\nimport { Model } from 'mongoose'\nimport { UpdateQuizAnswerInput } from '../dto/inputs/update-quiz-answer.input'\nimport { CreateQuizAnswerInput } from '../dto/inputs/create-quiz-answer.input'\nimport { GetQuizAnswersArgs } from '../dto/args/get-quiz-answers.args'\nimport { GetQuizAnswerArgs } from '../dto/args/get-quiz-answer.args'\nimport { IQuiz, IQuizAnswer } from '@szakszolg-nx/api-interfaces'\nimport { DeleteQuizAnswerInput } from '../dto/inputs/delete-quiz-answer.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\nimport { QuizService } from '../../quiz/quiz.service'\n\n@Injectable()\nexport class QuizAnswerRepository extends SimpleRepository {\n    constructor(\n        @InjectModel(QuizAnswer.name) resourceModel: Model,\n        private readonly quizService: QuizService,\n    ) {\n        super(resourceModel)\n    }\n\n    override async findAll(data: GetQuizAnswersArgs | null): Promise {\n        if (data.ids?.length > 0) {\n            return super.findAll(data)\n        }\n\n        return this.model.find({ quizId: data.quizId })\n    }\n\n    override async create(data: CreateQuizAnswerInput): Promise {\n        const originalQuiz: IQuiz = await this.quizService.findOne({ id: data.quizId })\n        const originalQuestion = originalQuiz.questions.find((q) => q._id.toString() === data.questionId)\n        if (!originalQuestion) {\n            throw new NotFoundException(`Question not found: ${data.quizId}/${data.questionId}`)\n        }\n\n        if (originalQuestion.type !== 'free-text') {\n            data.isCorrect = originalQuestion.answers.includes(data.answer)\n        }\n        return super.create(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizAnswerResolver.html":{"url":"classes/QuizAnswerResolver.html","title":"class - QuizAnswerResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizAnswerResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/quiz-answer.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createQuizAnswer\n                            \n                            \n                                deleteQuizAnswer\n                            \n                            \n                                quizAnswer\n                            \n                            \n                                quizAnswers\n                            \n                            \n                                updateQuizAnswer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: QuizAnswerService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        QuizAnswerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createQuizAnswer\n                        \n                    \n                \n            \n            \n                \ncreateQuizAnswer(data: CreateQuizAnswerInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizAnswerInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteQuizAnswer\n                        \n                    \n                \n            \n            \n                \ndeleteQuizAnswer(data: DeleteQuizAnswerInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteQuizAnswerInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizAnswer\n                        \n                    \n                \n            \n            \n                \nquizAnswer(data: GetQuizAnswerArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetQuizAnswerArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizAnswers\n                        \n                    \n                \n            \n            \n                \nquizAnswers(data: GetQuizAnswersArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizAnswersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateQuizAnswer\n                        \n                    \n                \n            \n            \n                \nupdateQuizAnswer(data: UpdateQuizAnswerInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateQuizAnswerInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { QuizAnswerService } from './quiz-answer.service'\nimport { QuizAnswer } from './entities/quiz-answer.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetQuizAnswerArgs } from './dto/args/get-quiz-answer.args'\nimport { IQuizAnswer } from '@szakszolg-nx/api-interfaces'\nimport { GetQuizAnswersArgs } from './dto/args/get-quiz-answers.args'\nimport { CreateQuizAnswerInput } from './dto/inputs/create-quiz-answer.input'\nimport { UpdateQuizAnswerInput } from './dto/inputs/update-quiz-answer.input'\nimport { DeleteQuizAnswerInput } from './dto/inputs/delete-quiz-answer.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => QuizAnswer)\n@Resource('quiz-answers')\nexport class QuizAnswerResolver {\n    constructor(private readonly service: QuizAnswerService) {}\n\n    @Query(() => QuizAnswer, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    quizAnswer(@Args({ nullable: true }) data: GetQuizAnswerArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [QuizAnswer], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    quizAnswers(@Args({ nullable: true }) data: GetQuizAnswersArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => QuizAnswer)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createQuizAnswer(@Args('createQuizAnswerData') data: CreateQuizAnswerInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => QuizAnswer)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateQuizAnswer(@Args('updateQuizAnswerData') data: UpdateQuizAnswerInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => QuizAnswer)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteQuizAnswer(@Args('deleteQuizAnswerData') data: DeleteQuizAnswerInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizAnswerService.html":{"url":"injectables/QuizAnswerService.html","title":"injectable - QuizAnswerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizAnswerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/quiz-answer.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: QuizAnswerRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-answer/quiz-answer.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        QuizAnswerRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateQuizAnswerInput } from './dto/inputs/create-quiz-answer.input'\nimport { UpdateQuizAnswerInput } from './dto/inputs/update-quiz-answer.input'\nimport { QuizAnswerRepository } from './entities/quiz-answer.repository'\nimport { GetQuizAnswersArgs } from './dto/args/get-quiz-answers.args'\nimport { GetQuizAnswerArgs } from './dto/args/get-quiz-answer.args'\nimport { DeleteQuizAnswerInput } from './dto/inputs/delete-quiz-answer.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class QuizAnswerService extends RepositoryProxyService {\n    constructor(repository: QuizAnswerRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuizModule.html":{"url":"modules/QuizModule.html","title":"module - QuizModule","body":"\n                   \n\n\n\n\n    Modules\n    QuizModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_QuizModule\n\n\n\ncluster_QuizModule_providers\n\n\n\ncluster_QuizModule_exports\n\n\n\n\nQuizRepository \n\nQuizRepository \n\n\n\nQuizService \n\nQuizService \n\n\n\nQuizModule\n\nQuizModule\n\nQuizRepository  -->\n\nQuizModule->QuizRepository \n\n\n\nQuizService  -->\n\nQuizModule->QuizService \n\n\n\n\n\nQuizRepository\n\nQuizRepository\n\nQuizModule -->\n\nQuizRepository->QuizModule\n\n\n\n\n\nQuizService\n\nQuizService\n\nQuizModule -->\n\nQuizService->QuizModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/quiz/quiz.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QuizRepository\n                        \n                        \n                            QuizService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuizRepository\n                        \n                        \n                            QuizService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { QuizService } from './quiz.service'\nimport { QuizResolver } from './quiz.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Quiz, QuizSchema } from './entities/quiz.entity'\nimport { QuizRepository } from './entities/quiz.repository'\nimport { QuizQuestion, QuizQuestionSchema } from '../quiz-question/entities/quiz-question.entity'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: QuizQuestion.name,\n                schema: QuizQuestionSchema,\n            },\n            {\n                name: Quiz.name,\n                schema: QuizSchema,\n            },\n        ]),\n    ],\n    providers: [QuizResolver, QuizService, QuizRepository],\n    exports: [QuizService, QuizRepository],\n})\nexport class QuizModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizQuestion.html":{"url":"classes/QuizQuestion.html","title":"class - QuizQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQuizQuestion\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    Optional\n                                answers\n                            \n                            \n                                    Optional\n                                correctAnswers\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                question\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        correctAnswers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type QuizQuestionDocument = IQuizQuestion & Document\n\n@ObjectType()\n@Schema()\nexport class QuizQuestion implements IQuizQuestion {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    question: string\n\n    @Field()\n    @Prop()\n    type: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @Prop({ type: [String] })\n    answers?: string[]\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @Prop({ type: [String] })\n    correctAnswers?: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const QuizQuestionSchema = SchemaFactory.createForClass(QuizQuestion)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuizQuestionModule.html":{"url":"modules/QuizQuestionModule.html","title":"module - QuizQuestionModule","body":"\n                   \n\n\n\n\n    Modules\n    QuizQuestionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_QuizQuestionModule\n\n\n\ncluster_QuizQuestionModule_exports\n\n\n\ncluster_QuizQuestionModule_providers\n\n\n\n\nQuizQuestionRepository \n\nQuizQuestionRepository \n\n\n\nQuizQuestionService \n\nQuizQuestionService \n\n\n\nQuizQuestionModule\n\nQuizQuestionModule\n\nQuizQuestionRepository  -->\n\nQuizQuestionModule->QuizQuestionRepository \n\n\n\nQuizQuestionService  -->\n\nQuizQuestionModule->QuizQuestionService \n\n\n\n\n\nQuizQuestionRepository\n\nQuizQuestionRepository\n\nQuizQuestionModule -->\n\nQuizQuestionRepository->QuizQuestionModule\n\n\n\n\n\nQuizQuestionService\n\nQuizQuestionService\n\nQuizQuestionModule -->\n\nQuizQuestionService->QuizQuestionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/quiz-question.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QuizQuestionRepository\n                        \n                        \n                            QuizQuestionService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuizQuestionRepository\n                        \n                        \n                            QuizQuestionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { QuizQuestionService } from './quiz-question.service'\nimport { QuizQuestionResolver } from './quiz-question.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { QuizQuestion, QuizQuestionSchema } from './entities/quiz-question.entity'\nimport { QuizQuestionRepository } from './entities/quiz-question.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: QuizQuestion.name,\n                schema: QuizQuestionSchema,\n            },\n        ]),\n    ],\n    providers: [QuizQuestionResolver, QuizQuestionService, QuizQuestionRepository],\n    exports: [QuizQuestionService, QuizQuestionRepository],\n})\nexport class QuizQuestionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizQuestionRepository.html":{"url":"injectables/QuizQuestionRepository.html","title":"injectable - QuizQuestionRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizQuestionRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/entities/quiz-question.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { QuizQuestion, QuizQuestionDocument } from './quiz-question.entity'\nimport { Model } from 'mongoose'\nimport { UpdateQuizQuestionInput } from '../dto/inputs/update-quiz-question.input'\nimport { CreateQuizQuestionInput } from '../dto/inputs/create-quiz-question.input'\nimport { GetQuizQuestionsArgs } from '../dto/args/get-quiz-questions.args'\nimport { GetQuizQuestionArgs } from '../dto/args/get-quiz-question.args'\nimport { IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { DeleteQuizQuestionInput } from '../dto/inputs/delete-quiz-question.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class QuizQuestionRepository extends SimpleRepository {\n    constructor(@InjectModel(QuizQuestion.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    // TODO: Check if anything needs to be overridden\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizQuestionResolver.html":{"url":"classes/QuizQuestionResolver.html","title":"class - QuizQuestionResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizQuestionResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/quiz-question.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createQuizQuestion\n                            \n                            \n                                deleteQuizQuestion\n                            \n                            \n                                quizQuestion\n                            \n                            \n                                quizQuestions\n                            \n                            \n                                updateQuizQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: QuizQuestionService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        QuizQuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createQuizQuestion\n                        \n                    \n                \n            \n            \n                \ncreateQuizQuestion(data: CreateQuizQuestionInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizQuestionInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteQuizQuestion\n                        \n                    \n                \n            \n            \n                \ndeleteQuizQuestion(data: DeleteQuizQuestionInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteQuizQuestionInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizQuestion\n                        \n                    \n                \n            \n            \n                \nquizQuestion(data: GetQuizQuestionArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetQuizQuestionArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizQuestions\n                        \n                    \n                \n            \n            \n                \nquizQuestions(data: GetQuizQuestionsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizQuestionsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateQuizQuestion\n                        \n                    \n                \n            \n            \n                \nupdateQuizQuestion(data: UpdateQuizQuestionInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateQuizQuestionInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { QuizQuestionService } from './quiz-question.service'\nimport { QuizQuestion } from './entities/quiz-question.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetQuizQuestionArgs } from './dto/args/get-quiz-question.args'\nimport { IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { GetQuizQuestionsArgs } from './dto/args/get-quiz-questions.args'\nimport { CreateQuizQuestionInput } from './dto/inputs/create-quiz-question.input'\nimport { UpdateQuizQuestionInput } from './dto/inputs/update-quiz-question.input'\nimport { DeleteQuizQuestionInput } from './dto/inputs/delete-quiz-question.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => QuizQuestion)\n@Resource('quiz-questions')\nexport class QuizQuestionResolver {\n    constructor(private readonly service: QuizQuestionService) {}\n\n    @Query(() => QuizQuestion, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    quizQuestion(@Args({ nullable: true }) data: GetQuizQuestionArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [QuizQuestion], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    quizQuestions(@Args({ nullable: true }) data: GetQuizQuestionsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => QuizQuestion)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createQuizQuestion(@Args('createQuizQuestionData') data: CreateQuizQuestionInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => QuizQuestion)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateQuizQuestion(@Args('updateQuizQuestionData') data: UpdateQuizQuestionInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => QuizQuestion)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteQuizQuestion(@Args('deleteQuizQuestionData') data: DeleteQuizQuestionInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizQuestionService.html":{"url":"injectables/QuizQuestionService.html","title":"injectable - QuizQuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizQuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/quiz-question.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: QuizQuestionRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-question/quiz-question.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        QuizQuestionRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateQuizQuestionInput } from './dto/inputs/create-quiz-question.input'\nimport { UpdateQuizQuestionInput } from './dto/inputs/update-quiz-question.input'\nimport { QuizQuestionRepository } from './entities/quiz-question.repository'\nimport { GetQuizQuestionsArgs } from './dto/args/get-quiz-questions.args'\nimport { GetQuizQuestionArgs } from './dto/args/get-quiz-question.args'\nimport { DeleteQuizQuestionInput } from './dto/inputs/delete-quiz-question.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class QuizQuestionService extends RepositoryProxyService {\n    constructor(repository: QuizQuestionRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizRepository.html":{"url":"injectables/QuizRepository.html","title":"injectable - QuizRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/entities/quiz.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz/entities/quiz.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateQuizInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetQuizzesArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizzesArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Quiz, QuizDocument } from './quiz.entity'\nimport { Model } from 'mongoose'\nimport { UpdateQuizInput } from '../dto/inputs/update-quiz.input'\nimport { CreateQuizInput } from '../dto/inputs/create-quiz.input'\nimport { GetQuizzesArgs } from '../dto/args/get-quizzes.args'\nimport { GetQuizArgs } from '../dto/args/get-quiz.args'\nimport { IQuiz } from '@szakszolg-nx/api-interfaces'\nimport { DeleteQuizInput } from '../dto/inputs/delete-quiz.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class QuizRepository extends SimpleRepository {\n    constructor(@InjectModel(Quiz.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    override async findAll(data: GetQuizzesArgs | null): Promise {\n        if (!data.category) return super.findAll(data) // No filtering\n\n        return this.model.find({ categories: { $regex: data.category, $options: 'i' } }).exec()\n    }\n\n    override async create(data: CreateQuizInput): Promise {\n        data.questions = data.questions.map((question, index) => ({ _id: index, ...question }))\n        return super.create(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizResolver.html":{"url":"classes/QuizResolver.html","title":"class - QuizResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/quiz.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createQuiz\n                            \n                            \n                                deleteQuiz\n                            \n                            \n                                quiz\n                            \n                            \n                                quizzes\n                            \n                            \n                                updateQuiz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: QuizService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz/quiz.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createQuiz\n                        \n                    \n                \n            \n            \n                \ncreateQuiz(data: CreateQuizInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteQuiz\n                        \n                    \n                \n            \n            \n                \ndeleteQuiz(data: DeleteQuizInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteQuizInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quiz\n                        \n                    \n                \n            \n            \n                \nquiz(data: GetQuizArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetQuizArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizzes\n                        \n                    \n                \n            \n            \n                \nquizzes(data: GetQuizzesArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizzesArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateQuiz\n                        \n                    \n                \n            \n            \n                \nupdateQuiz(data: UpdateQuizInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateQuizInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { QuizService } from './quiz.service'\nimport { Quiz } from './entities/quiz.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetQuizArgs } from './dto/args/get-quiz.args'\nimport { IQuiz } from '@szakszolg-nx/api-interfaces'\nimport { GetQuizzesArgs } from './dto/args/get-quizzes.args'\nimport { CreateQuizInput } from './dto/inputs/create-quiz.input'\nimport { UpdateQuizInput } from './dto/inputs/update-quiz.input'\nimport { DeleteQuizInput } from './dto/inputs/delete-quiz.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => Quiz)\n@Resource('quizzes')\nexport class QuizResolver {\n    constructor(private readonly service: QuizService) {}\n\n    @Query(() => Quiz, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    quiz(@Args({ nullable: true }) data: GetQuizArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [Quiz], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    quizzes(@Args({ nullable: true }) data: GetQuizzesArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => Quiz)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createQuiz(@Args('createQuizData') data: CreateQuizInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => Quiz)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateQuiz(@Args('updateQuizData') data: UpdateQuizInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => Quiz)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteQuiz(@Args('deleteQuizData') data: DeleteQuizInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizService.html":{"url":"injectables/QuizService.html","title":"injectable - QuizService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/quiz.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: QuizRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz/quiz.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        QuizRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateQuizInput } from './dto/inputs/create-quiz.input'\nimport { UpdateQuizInput } from './dto/inputs/update-quiz.input'\nimport { QuizRepository } from './entities/quiz.repository'\nimport { GetQuizzesArgs } from './dto/args/get-quizzes.args'\nimport { GetQuizArgs } from './dto/args/get-quiz.args'\nimport { DeleteQuizInput } from './dto/inputs/delete-quiz.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class QuizService extends RepositoryProxyService {\n    constructor(repository: QuizRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepositoryProxyService.html":{"url":"injectables/RepositoryProxyService.html","title":"injectable - RepositoryProxyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepositoryProxyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/proxies/repository-proxy.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: TRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    TRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { SimpleRepository } from './simple.repository'\nimport { IdArg, IdArrayArg } from '../gql-args/id.args'\nimport { IdInput } from '../gql-inputs/id.input'\n\n@Injectable()\nexport class RepositoryProxyService,\n    TFindOneArgs extends IdArg,\n    TFindManyArgs extends IdArrayArg,\n    TCreateInput,\n    TUpdateInput extends IdInput,\n    TDeleteInput extends IdInput,\n> {\n    constructor(protected readonly repository: TRepository) {}\n\n    create(data: TCreateInput) {\n        return this.repository.create(data)\n    }\n\n    findAll(data: TFindManyArgs) {\n        return this.repository.findAll(data)\n    }\n\n    findOne(data: TFindOneArgs) {\n        return this.repository.findOne(data)\n    }\n\n    update(data: TUpdateInput) {\n        return this.repository.update(data)\n    }\n\n    delete(data: TDeleteInput) {\n        return this.repository.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/entities/role.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IRole\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type RoleDocument = IRole & Document\n\n@ObjectType()\n@Schema()\nexport class Role implements IRole {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    description: string\n\n    @Field()\n    @Prop()\n    name: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    permissions: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nAuthModule->RoleModule\n\n\n\n\n\nRoleRepository \n\nRoleRepository \n\nRoleRepository  -->\n\nRoleModule->RoleRepository \n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nRoleRepository\n\nRoleRepository\n\nRoleModule -->\n\nRoleRepository->RoleModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepository\n                        \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleRepository\n                        \n                        \n                            RoleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common'\nimport { RoleService } from './role.service'\nimport { RoleResolver } from './role.resolver'\nimport { AuthModule } from '../auth/auth.module'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Role, RoleSchema } from './entities/role.entity'\nimport { RoleRepository } from './entities/role.repository'\nimport { UsersModule } from '../users/users.module'\n\n@Module({\n    imports: [\n        AuthModule,\n        forwardRef(() => UsersModule),\n        MongooseModule.forFeature([\n            {\n                name: Role.name,\n                schema: RoleSchema,\n            },\n        ]),\n    ],\n    providers: [RoleResolver, RoleService, RoleRepository],\n    exports: [RoleService, RoleRepository],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepository.html":{"url":"injectables/RoleRepository.html","title":"injectable - RoleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/entities/role.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/entities/role.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Role, RoleDocument } from './role.entity'\nimport { Model } from 'mongoose'\nimport { UpdateRoleInput } from '../dto/inputs/update-role.input'\nimport { CreateRoleInput } from '../dto/inputs/create-role.input'\nimport { GetRolesArgs } from '../dto/args/get-roles.args'\nimport { GetRoleArgs } from '../dto/args/get-role.args'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { DeleteRoleInput } from '../dto/inputs/delete-role.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class RoleRepository extends SimpleRepository {\n    constructor(@InjectModel(Role.name) roleModel: Model) {\n        super(roleModel)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleResolver.html":{"url":"classes/RoleResolver.html","title":"class - RoleResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/role.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createRole\n                            \n                            \n                                deleteRole\n                            \n                            \n                                role\n                            \n                            \n                                roles\n                            \n                            \n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/role.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createRole\n                        \n                    \n                \n            \n            \n                \ncreateRole(data: CreateRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRole\n                        \n                    \n                \n            \n            \n                \ndeleteRole(data: DeleteRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n            \n                \nrole(data: GetRoleArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetRoleArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n            \n                \nroles(data: GetRolesArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetRolesArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRole\n                        \n                    \n                \n            \n            \n                \nupdateRole(data: UpdateRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { RoleService } from './role.service'\nimport { Role } from './entities/role.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetRoleArgs } from './dto/args/get-role.args'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { GetRolesArgs } from './dto/args/get-roles.args'\nimport { CreateRoleInput } from './dto/inputs/create-role.input'\nimport { UpdateRoleInput } from './dto/inputs/update-role.input'\nimport { DeleteRoleInput } from './dto/inputs/delete-role.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => Role)\n@Resource('roles')\nexport class RoleResolver {\n    constructor(private readonly roleService: RoleService) {}\n\n    @Query(() => Role, { nullable: true })\n    @UseGuards(GqlAuthGuard)\n    @Permission('read')\n    role(@Args({ nullable: true }) data: GetRoleArgs): Promise {\n        return this.roleService.findOne(data)\n    }\n\n    @Query(() => [Role], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    roles(@Args({ nullable: true }) data: GetRolesArgs | null): Promise {\n        return this.roleService.findAll(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('create')\n    createRole(@Args('createRoleData') data: CreateRoleInput): Promise {\n        return this.roleService.create(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('update')\n    updateRole(@Args('updateRoleData') data: UpdateRoleInput): Promise {\n        return this.roleService.update(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('delete')\n    deleteRole(@Args('deleteRoleData') data: DeleteRoleInput): Promise {\n        return this.roleService.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/role.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: RoleRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/role.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        RoleRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateRoleInput } from './dto/inputs/create-role.input'\nimport { UpdateRoleInput } from './dto/inputs/update-role.input'\nimport { RoleRepository } from './entities/role.repository'\nimport { GetRolesArgs } from './dto/args/get-roles.args'\nimport { GetRoleArgs } from './dto/args/get-role.args'\nimport { DeleteRoleInput } from './dto/inputs/delete-role.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class RoleService extends RepositoryProxyService {\n    constructor(roleRepository: RoleRepository) {\n        super(roleRepository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/entities/school.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ISchool\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                address\n                            \n                            \n                                county\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                name\n                            \n                            \n                                om\n                            \n                            \n                                types\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        county\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { ISchool } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type SchoolDocument = ISchool & Document\n\n@ObjectType()\n@Schema()\nexport class School implements ISchool {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    om: string\n\n    @Field()\n    @Prop()\n    name: string\n\n    @Field()\n    @Prop()\n    address: string\n\n    @Field()\n    @Prop()\n    county: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    types: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const SchoolSchema = SchemaFactory.createForClass(School)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_exports\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nSchoolRepository \n\nSchoolRepository \n\n\n\nSchoolService \n\nSchoolService \n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolRepository  -->\n\nSchoolModule->SchoolRepository \n\n\n\nSchoolService  -->\n\nSchoolModule->SchoolService \n\n\n\n\n\nSchoolRepository\n\nSchoolRepository\n\nSchoolModule -->\n\nSchoolRepository->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolRepository\n                        \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SchoolRepository\n                        \n                        \n                            SchoolService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { SchoolService } from './school.service'\nimport { SchoolResolver } from './school.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { School, SchoolSchema } from './entities/school.entity'\nimport { SchoolRepository } from './entities/school.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: School.name,\n                schema: SchoolSchema,\n            },\n        ]),\n    ],\n    providers: [SchoolResolver, SchoolService, SchoolRepository],\n    exports: [SchoolService, SchoolRepository],\n})\nexport class SchoolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolRepository.html":{"url":"injectables/SchoolRepository.html","title":"injectable - SchoolRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/entities/school.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/school/entities/school.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetSchoolsArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetSchoolsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { School, SchoolDocument } from './school.entity'\nimport { Model } from 'mongoose'\nimport { UpdateSchoolInput } from '../dto/inputs/update-school.input'\nimport { CreateSchoolInput } from '../dto/inputs/create-school.input'\nimport { GetSchoolsArgs } from '../dto/args/get-schools.args'\nimport { GetSchoolArgs } from '../dto/args/get-school.args'\nimport { ISchool } from '@szakszolg-nx/api-interfaces'\nimport { DeleteSchoolInput } from '../dto/inputs/delete-school.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class SchoolRepository extends SimpleRepository {\n    constructor(@InjectModel(School.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    override async findAll(data: GetSchoolsArgs | null): Promise {\n        if (!data.om && !data.name && !data.address && !data.county && !data.type) return super.findAll(data) // Simple findAll, no filtering\n\n        const filters = {}\n        for (const filterKey in data) {\n            if (data[filterKey] && data[filterKey] !== 'type')\n                filters[filterKey] = {\n                    $regex: data[filterKey],\n                    $options: 'i',\n                }\n        }\n\n        if (data.type) filters['types'] = { $regex: data.type, $options: 'i' }\n\n        return this.model.find(filters).exec()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolResolver.html":{"url":"classes/SchoolResolver.html","title":"class - SchoolResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/school.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSchool\n                            \n                            \n                                deleteSchool\n                            \n                            \n                                school\n                            \n                            \n                                schools\n                            \n                            \n                                updateSchool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SchoolService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/school/school.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SchoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createSchool\n                        \n                    \n                \n            \n            \n                \ncreateSchool(data: CreateSchoolInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateSchoolInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSchool\n                        \n                    \n                \n            \n            \n                \ndeleteSchool(data: DeleteSchoolInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteSchoolInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n            \n                \nschool(data: GetSchoolArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetSchoolArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schools\n                        \n                    \n                \n            \n            \n                \nschools(data: GetSchoolsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetSchoolsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSchool\n                        \n                    \n                \n            \n            \n                \nupdateSchool(data: UpdateSchoolInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateSchoolInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { SchoolService } from './school.service'\nimport { School } from './entities/school.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetSchoolArgs } from './dto/args/get-school.args'\nimport { ISchool } from '@szakszolg-nx/api-interfaces'\nimport { GetSchoolsArgs } from './dto/args/get-schools.args'\nimport { CreateSchoolInput } from './dto/inputs/create-school.input'\nimport { UpdateSchoolInput } from './dto/inputs/update-school.input'\nimport { DeleteSchoolInput } from './dto/inputs/delete-school.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => School)\n@Resource('schools')\nexport class SchoolResolver {\n    constructor(private readonly service: SchoolService) {}\n\n    @Query(() => School, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    school(@Args({ nullable: true }) data: GetSchoolArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [School], { nullable: 'items' })\n    schools(@Args({ nullable: true }) data: GetSchoolsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => School)\n    createSchool(@Args('createSchoolData') data: CreateSchoolInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => School)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateSchool(@Args('updateSchoolData') data: UpdateSchoolInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => School)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteSchool(@Args('deleteSchoolData') data: DeleteSchoolInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/school.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: SchoolRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/school/school.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        SchoolRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateSchoolInput } from './dto/inputs/create-school.input'\nimport { UpdateSchoolInput } from './dto/inputs/update-school.input'\nimport { SchoolRepository } from './entities/school.repository'\nimport { GetSchoolsArgs } from './dto/args/get-schools.args'\nimport { GetSchoolArgs } from './dto/args/get-school.args'\nimport { DeleteSchoolInput } from './dto/inputs/delete-school.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class SchoolService extends RepositoryProxyService {\n    constructor(repository: SchoolRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SimpleRepository.html":{"url":"injectables/SimpleRepository.html","title":"injectable - SimpleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SimpleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/proxies/simple.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/shared/proxies/simple.repository.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common'\nimport { Document, Model, Types } from 'mongoose'\nimport { IdArg, IdArrayArg } from '../gql-args/id.args'\nimport { IdInput } from '../gql-inputs/id.input'\nimport { IApiResource, IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class SimpleRepository {\n    constructor(protected readonly model: Model) {}\n\n    public async findAll(data: TFindManyArgs | null): Promise {\n        return data && Object.keys(data).length > 0\n            ? Promise.all(data.ids.map((id) => this.findOne({ id } as TFindOneArgs)))\n            : (this.model.find({ deletedAt: { $eq: null } }) as any)\n    }\n\n    public async findOne(data: TFindOneArgs): Promise {\n        const res = this.model.findById(data.id) as any\n        return res?.deletedAt\n            ? Promise.reject(new NotFoundException(`Model with id ${data.id} not found or has been deleted`))\n            : res\n    }\n\n    public async create(data: TCreateInput): Promise {\n        return (await new this.model({\n            ...data,\n            _id: new Types.ObjectId(),\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            deletedAt: null,\n        }).save()) as any\n    }\n\n    public async update(data: TUpdateInput & IUpdatedAt): Promise {\n        const id = data.id\n        delete data.id\n        if ((data as any).deletedAt) return Promise.reject(new BadRequestException('Cannot update deleted resource'))\n        data.updatedAt = new Date()\n        return this.model.findByIdAndUpdate(id, data, { new: false }) as any\n    }\n\n    public async delete(data: TDeleteInput): Promise {\n        return this.model.findByIdAndUpdate(data.id, { deletedAt: Date.now() }) as any\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Token.html":{"url":"classes/Token.html","title":"class - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/token/entities/token.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IToken\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                expiresAt\n                            \n                            \n                                quiz\n                            \n                            \n                                token\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/token/entities/token.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/token/entities/token.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/token/entities/token.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        expiresAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/token/entities/token.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quiz\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Types.ObjectId | IQuiz\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/token/entities/token.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/token/entities/token.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/token/entities/token.entity.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IQuiz, IToken } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document, Types } from 'mongoose'\nimport { Quiz } from '../../quiz/entities/quiz.entity'\n\nexport type TokenDocument = IToken & Document\n\n@ObjectType()\n@Schema()\nexport class Token implements IToken {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field(() => String)\n    @Prop()\n    token: string\n\n    @Field(() => Quiz)\n    @Prop({ type: MongooseSchema.Types.ObjectId, ref: Quiz.name })\n    quiz: Types.ObjectId | IQuiz\n\n    @Field(() => Date)\n    @Prop({ type: Date })\n    expiresAt: Date\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const TokenSchema = SchemaFactory.createForClass(Token)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TokenModule.html":{"url":"modules/TokenModule.html","title":"module - TokenModule","body":"\n                   \n\n\n\n\n    Modules\n    TokenModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TokenModule\n\n\n\ncluster_TokenModule_providers\n\n\n\ncluster_TokenModule_exports\n\n\n\n\nTokenRepository \n\nTokenRepository \n\n\n\nTokenService \n\nTokenService \n\n\n\nTokenModule\n\nTokenModule\n\nTokenRepository  -->\n\nTokenModule->TokenRepository \n\n\n\nTokenService  -->\n\nTokenModule->TokenService \n\n\n\n\n\nTokenRepository\n\nTokenRepository\n\nTokenModule -->\n\nTokenRepository->TokenModule\n\n\n\n\n\nTokenService\n\nTokenService\n\nTokenModule -->\n\nTokenService->TokenModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/token/token.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TokenRepository\n                        \n                        \n                            TokenService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TokenRepository\n                        \n                        \n                            TokenService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { TokenService } from './token.service'\nimport { TokenResolver } from './token.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Token, TokenSchema } from './entities/token.entity'\nimport { TokenRepository } from './entities/token.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: Token.name,\n                schema: TokenSchema,\n            },\n        ]),\n    ],\n    providers: [TokenResolver, TokenService, TokenRepository],\n    exports: [TokenService, TokenRepository],\n})\nexport class TokenModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenRepository.html":{"url":"injectables/TokenRepository.html","title":"injectable - TokenRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/token/entities/token.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    \n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    Private\n                                    Static\n                                generateToken\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/token/entities/token.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateTokenInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateTokenInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetTokenArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetTokenArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Static\n                        generateToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateToken()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/token/entities/token.repository.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NotFoundException } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Token, TokenDocument } from './token.entity'\nimport { Model, Types } from 'mongoose'\nimport { UpdateTokenInput } from '../dto/inputs/update-token.input'\nimport { CreateTokenInput } from '../dto/inputs/create-token.input'\nimport { GetTokensArgs } from '../dto/args/get-tokens.args'\nimport { GetTokenArgs } from '../dto/args/get-token.args'\nimport { IToken } from '@szakszolg-nx/api-interfaces'\nimport { DeleteTokenInput } from '../dto/inputs/delete-token.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class TokenRepository extends SimpleRepository {\n    constructor(@InjectModel(Token.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    private static generateToken() {\n        return Math.random().toString(36).substring(2, 8).toUpperCase()\n    }\n\n    public override async findOne(data: GetTokenArgs): Promise {\n        const res = (await this.model.findOne({ token: data.token }).populate('quiz').exec()) as any\n        Logger.debug(`TokenRepository.findOne: ${JSON.stringify(res)}`)\n        return res?.deletedAt\n            ? Promise.reject(new NotFoundException(`Model with token ${data.token} not found or has been deleted`))\n            : res\n    }\n\n    public override async create(data: CreateTokenInput): Promise {\n        const { expiresIn, quizId } = data\n        const model = await new this.model({\n            _id: new Types.ObjectId(),\n            token: TokenRepository.generateToken(),\n            quiz: quizId,\n            expiresAt: new Date(Date.now() + (expiresIn ?? 3600) * 1000),\n            createdAt: Date.now(),\n            updatedAt: Date.now(),\n            deletedAt: null,\n        }).save()\n        return model.populate('quiz')\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenResolver.html":{"url":"classes/TokenResolver.html","title":"class - TokenResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/token/token.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createToken\n                            \n                            \n                                deleteToken\n                            \n                            \n                                token\n                            \n                            \n                                tokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: TokenService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/token/token.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        TokenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createToken\n                        \n                    \n                \n            \n            \n                \ncreateToken(data: CreateTokenInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/token/token.resolver.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateTokenInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteToken\n                        \n                    \n                \n            \n            \n                \ndeleteToken(data: DeleteTokenInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/token/token.resolver.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteTokenInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n            \n                \ntoken(data: GetTokenArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/token/token.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetTokenArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tokens\n                        \n                    \n                \n            \n            \n                \ntokens(data: GetTokensArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/token/token.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetTokensArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { TokenService } from './token.service'\nimport { Token } from './entities/token.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetTokenArgs } from './dto/args/get-token.args'\nimport { IToken } from '@szakszolg-nx/api-interfaces'\nimport { GetTokensArgs } from './dto/args/get-tokens.args'\nimport { CreateTokenInput } from './dto/inputs/create-token.input'\nimport { UpdateTokenInput } from './dto/inputs/update-token.input'\nimport { DeleteTokenInput } from './dto/inputs/delete-token.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => Token)\n@Resource('tokens')\nexport class TokenResolver {\n    constructor(private readonly service: TokenService) {}\n\n    @Query(() => Token, { nullable: true })\n    token(@Args({ nullable: true }) data: GetTokenArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [Token], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    tokens(@Args({ nullable: true }) data: GetTokensArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => Token)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createToken(@Args('createTokenData') data: CreateTokenInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => Token)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteToken(@Args('deleteTokenData') data: DeleteTokenInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenService.html":{"url":"injectables/TokenService.html","title":"injectable - TokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/token/token.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: TokenRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/token/token.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        TokenRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateTokenInput } from './dto/inputs/create-token.input'\nimport { UpdateTokenInput } from './dto/inputs/update-token.input'\nimport { TokenRepository } from './entities/token.repository'\nimport { GetTokensArgs } from './dto/args/get-tokens.args'\nimport { GetTokenArgs } from './dto/args/get-token.args'\nimport { DeleteTokenInput } from './dto/inputs/delete-token.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class TokenService extends RepositoryProxyService {\n    constructor(repository: TokenRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGroupingItemInput.html":{"url":"classes/UpdateGroupingItemInput.html","title":"class - UpdateGroupingItemInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGroupingItemInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                correct\n                            \n                            \n                                    Optional\n                                groups\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                item\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateGroupingItemInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    item?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    groups?: string[]\n\n    @Field({ nullable: true })\n    correct?: string\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateHangmanWordInput.html":{"url":"classes/UpdateHangmanWordInput.html","title":"class - UpdateHangmanWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateHangmanWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateHangmanWordInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    word?: string\n\n    @Field({ nullable: true })\n    category?: string\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMirrorWordInput.html":{"url":"classes/UpdateMirrorWordInput.html","title":"class - UpdateMirrorWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMirrorWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class UpdateMirrorWordInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field()\n    @IsNotEmpty()\n    word: string\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePuzzleInput.html":{"url":"classes/UpdatePuzzleInput.html","title":"class - UpdatePuzzleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePuzzleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/puzzle/dto/inputs/update-puzzle.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/puzzle/dto/inputs/update-puzzle.input.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdatePuzzleInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateQuizAnswerInput.html":{"url":"classes/UpdateQuizAnswerInput.html","title":"class - UpdateQuizAnswerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateQuizAnswerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                answer\n                            \n                            \n                                    Optional\n                                answeredAt\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                    Optional\n                                questionId\n                            \n                            \n                                    Optional\n                                quizId\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answeredAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        questionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        quizId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType, Int } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateQuizAnswerInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    quizId?: string\n\n    @Field(() => Int, { nullable: true })\n    questionId?: number\n\n    @Field({ nullable: true })\n    answer?: string\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field({ nullable: true })\n    answeredAt?: Date\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateQuizInput.html":{"url":"classes/UpdateQuizInput.html","title":"class - UpdateQuizInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateQuizInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                questions\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IQuizQuestion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IQuizQuestion, IUpdatedAt } from '@szakszolg-nx/api-interfaces'\nimport { UpdateQuizQuestionInput } from '../../../quiz-question/dto/inputs/update-quiz-question.input'\n\n@InputType()\nexport class UpdateQuizInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    title: string\n\n    @Field({ nullable: true })\n    description: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    categories: string[]\n\n    @Field(() => [UpdateQuizQuestionInput], { nullable: 'itemsAndList' })\n    questions: IQuizQuestion[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateQuizQuestionInput.html":{"url":"classes/UpdateQuizQuestionInput.html","title":"class - UpdateQuizQuestionInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateQuizQuestionInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                answers\n                            \n                            \n                                    Optional\n                                correctAnswers\n                            \n                            \n                                id\n                            \n                            \n                                question\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        correctAnswers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateQuizQuestionInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    question: string\n\n    @Field({ nullable: true })\n    type: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    answers?: string[]\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    correctAnswers?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleInput.html":{"url":"classes/UpdateRoleInput.html","title":"class - UpdateRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/update-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                permissions\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty, IsOptional } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateRoleInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    @IsNotEmpty()\n    name?: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    @IsNotEmpty()\n    description?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @IsOptional()\n    @IsArray()\n    permissions?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSchoolInput.html":{"url":"classes/UpdateSchoolInput.html","title":"class - UpdateSchoolInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSchoolInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/inputs/update-school.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                county\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                    Optional\n                                types\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        county\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@IsOptional()@IsArray()@ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { ArrayNotEmpty, IsArray, IsNotEmpty, IsOptional } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateSchoolInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field({ nullable: true })\n    name?: string\n\n    @Field({ nullable: true })\n    address?: string\n\n    @Field({ nullable: true })\n    county?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @IsOptional()\n    @IsArray()\n    @ArrayNotEmpty()\n    types?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTokenInput.html":{"url":"classes/UpdateTokenInput.html","title":"class - UpdateTokenInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTokenInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/token/dto/inputs/update-token.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/token/dto/inputs/update-token.input.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateTokenInput extends IdInput implements IUpdatedAt {\n\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    // TODO: Implement based on create input\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserInput.html":{"url":"classes/UpdateUserInput.html","title":"class - UpdateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/update-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                newPassword\n                            \n                            \n                                    Optional\n                                newPasswordConfirm\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newPasswordConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsEmail, IsNotEmpty } from 'class-validator'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateUserInput extends IdInput implements IUpdatedAt {\n    @Field({ nullable: true })\n    id: string\n\n    @Field({ nullable: true })\n    @IsEmail()\n    email?: string\n\n    @Field({ nullable: true })\n    username?: string\n\n    @Field()\n    @IsNotEmpty()\n    password: string\n\n    @Field({ nullable: true })\n    newPassword?: string\n\n    @Field({ nullable: true })\n    newPasswordConfirm?: string\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    roles?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/entities/user.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Types.ObjectId[] | IRole[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { Document, Schema as MongooseSchema, Types } from 'mongoose'\nimport { IRole, IUser } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Role } from '../../role/entities/role.entity'\nimport { SchemaTypes } from 'mongoose'\n\nexport type UserDocument = User & Document\n\n@ObjectType()\n@Schema()\nexport class User implements IUser {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    username: string\n\n    @Field({ nullable: true })\n    @Prop()\n    om?: string\n\n    @Prop()\n    password?: string\n\n    @Field()\n    @Prop()\n    email: string\n\n    @Field(() => [Role], { nullable: 'itemsAndList' })\n    @Prop({ type: [SchemaTypes.ObjectId], ref: Role.name })\n    roles: Types.ObjectId[] | IRole[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/entities/user.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, roleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/entities/user.repository.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: DeleteUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetUsersArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetUserArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: UpdateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { User, UserDocument } from './user.entity'\nimport { CreateUserInput } from '../dto/inputs/create-user.input'\nimport { UpdateUserInput } from '../dto/inputs/update-user.input'\nimport { DeleteUserInput } from '../dto/inputs/delete-user.input'\nimport { GetUserArgs } from '../dto/args/get-user.args'\nimport { GetUsersArgs } from '../dto/args/get-users.args'\nimport { BadRequestException, Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\nimport { IRole, IUser } from '@szakszolg-nx/api-interfaces'\nimport { Types } from 'mongoose'\nimport { Role, RoleDocument } from '../../role/entities/role.entity'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class UserRepository {\n    constructor(\n        @InjectModel(User.name) private readonly userModel: Model,\n        @InjectModel(Role.name) private readonly roleModel: Model,\n    ) {}\n\n    public async findAll(data: GetUsersArgs | null): Promise {\n        return data && Object.keys(data).length > 0\n            ? Promise.all(data.ids.map((id) => this.findOne({ id })))\n            : this.userModel.find({ deletedAt: { $eq: null } }).populate('roles')\n    }\n\n    public async findOne(data: GetUserArgs): Promise {\n        if (data.id) return this.userModel.findById(data.id).populate('roles')\n\n        if (data.email) return this.userModel.findOne({ email: data.email }).populate('roles')\n\n        throw new Error('Please provide either an id or an email address')\n    }\n\n    public async create(data: CreateUserInput): Promise {\n        return new this.userModel({\n            ...data,\n            _id: new Types.ObjectId(),\n            createdAt: Date.now(),\n            updatedAt: Date.now(),\n        }).save()\n    }\n\n    public async update(data: UpdateUserInput): Promise {\n        const user = await this.userModel.findById(data.id)\n\n        if (!user) throw new Error('User not found')\n        if (!(await bcrypt.compare(data.password, user.password)))\n            throw new BadRequestException('Current password is incorrect')\n\n        if (data.newPassword && data.newPassword !== data.newPasswordConfirm)\n            throw new Error('New passwords do not match')\n        // const id = data.id\n        delete data.id\n        ;(data as any).updatedAt = new Date()\n\n        user.roles = data?.roles?.map((roleId) => new Types.ObjectId(roleId))\n\n        user.save()\n        return user\n    }\n\n    public async delete(data: DeleteUserInput): Promise {\n        return this.userModel.findByIdAndUpdate(data.id, { deletedAt: new Date() })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserRepository\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common'\nimport { UsersService } from './users.service'\nimport { UsersResolver } from './users.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { UserRepository } from './entities/user.repository'\nimport { AuthModule } from '../auth/auth.module'\nimport { User, UserSchema } from './entities/user.entity'\nimport { RoleModule } from '../role/role.module'\nimport { Role, RoleSchema } from '../role/entities/role.entity'\n\n@Module({\n    imports: [\n        forwardRef(() => AuthModule),\n        forwardRef(() => RoleModule),\n        MongooseModule.forFeature([\n            {\n                name: Role.name,\n                schema: RoleSchema,\n            },\n            {\n                name: User.name,\n                schema: UserSchema,\n            },\n        ]),\n    ],\n    providers: [UsersResolver, UsersService, UserRepository],\n    exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersResolver.html":{"url":"classes/UsersResolver.html","title":"class - UsersResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/users.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                updateUser\n                            \n                            \n                                user\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/users.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(data: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('add')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(data: DeleteUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(data: UpdateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('edit')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n            \n                \nuser(data: GetUserArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n            \n                \nusers(data: GetUsersArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('browse')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Args, Mutation } from '@nestjs/graphql'\nimport { UsersService } from './users.service'\nimport { User } from './entities/user.entity'\nimport { GetUserArgs } from './dto/args/get-user.args'\nimport { GetUsersArgs } from './dto/args/get-users.args'\nimport { CreateUserInput } from './dto/inputs/create-user.input'\nimport { UpdateUserInput } from './dto/inputs/update-user.input'\nimport { DeleteUserInput } from './dto/inputs/delete-user.input'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => User)\n@Resource('users')\nexport class UsersResolver {\n    constructor(private readonly usersService: UsersService) {}\n\n    @Query(() => User, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    user(@Args() data: GetUserArgs): Promise {\n        return this.usersService.findOne(data)\n    }\n\n    @Query(() => [User], { nullable: 'items' })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('browse')\n    users(@Args({ nullable: true }) data: GetUsersArgs | null): Promise {\n        return this.usersService.findAll(data)\n    }\n\n    @Mutation(() => User)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('add')\n    createUser(@Args('createUserData') data: CreateUserInput): Promise {\n        return this.usersService.create(data)\n    }\n\n    @Mutation(() => User)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('edit')\n    updateUser(@Args('updateUserData') data: UpdateUserInput): Promise {\n        return this.usersService.update(data)\n    }\n\n    @Mutation(() => User)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteUser(@Args('deleteUserData') data: DeleteUserInput): Promise {\n        return this.usersService.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/users.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: DeleteUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetUsersArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetUserArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: UpdateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateUserInput } from './dto/inputs/create-user.input'\nimport { UpdateUserInput } from './dto/inputs/update-user.input'\nimport { DeleteUserInput } from './dto/inputs/delete-user.input'\nimport { GetUserArgs } from './dto/args/get-user.args'\nimport { GetUsersArgs } from './dto/args/get-users.args'\nimport { UserRepository } from './entities/user.repository'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class UsersService {\n    constructor(private readonly userRepository: UserRepository) {}\n\n    public findAll(data: GetUsersArgs | null): Promise {\n        return this.userRepository.findAll(data)\n    }\n\n    public findOne(data: GetUserArgs): Promise {\n        return this.userRepository.findOne(data)\n    }\n\n    public async create(data: CreateUserInput): Promise {\n        data.password = await bcrypt.hash(data.password, 10)\n        return this.userRepository.create(data)\n    }\n\n    public async update(data: UpdateUserInput): Promise {\n        return this.userRepository.update(data)\n    }\n\n    public async delete(data: DeleteUserInput): Promise {\n        return this.userRepository.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/auth.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/permission.decorator.ts\n            \n            variable\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/permission.decorator.ts\n            \n            variable\n            Resource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/gql-auth.guard.ts\n            \n            class\n            GqlAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/jwt-auth.guard.ts\n            \n            class\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/local-auth.guard.ts\n            \n            class\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/permission-guard.service.ts\n            \n            guard\n            PermissionGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/config/validation.ts\n            \n            variable\n            validationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/core.resolver.ts\n            \n            class\n            CoreResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/file/file.controller.ts\n            \n            controller\n            FileController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/file/file.service.ts\n            \n            injectable\n            FileService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/args/get-grouping-item.args.ts\n            \n            class\n            GetGroupingItemArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/args/get-grouping-items.args.ts\n            \n            class\n            GetGroupingItemsArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts\n            \n            class\n            CreateGroupingItemInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/inputs/delete-grouping-item.input.ts\n            \n            class\n            DeleteGroupingItemInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts\n            \n            class\n            UpdateGroupingItemInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n            \n            class\n            GroupingItem\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n            \n            variable\n            GroupingItemSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/entities/grouping-item.repository.ts\n            \n            injectable\n            GroupingItemRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/grouping-item.resolver.ts\n            \n            class\n            GroupingItemResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/grouping-item.service.ts\n            \n            injectable\n            GroupingItemService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/args/get-hangman-word.args.ts\n            \n            class\n            GetHangmanWordArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/args/get-hangman-words.args.ts\n            \n            class\n            GetHangmanWordsArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts\n            \n            class\n            CreateHangmanWordInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/inputs/delete-hangman-word.input.ts\n            \n            class\n            DeleteHangmanWordInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts\n            \n            class\n            UpdateHangmanWordInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n            \n            class\n            HangmanWord\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n            \n            variable\n            HangmanWordSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/entities/hangman-word.repository.ts\n            \n            injectable\n            HangmanWordRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/hangman-word.resolver.ts\n            \n            class\n            HangmanWordResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/hangman-word.service.ts\n            \n            injectable\n            HangmanWordService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/args/get-mirror-word.args.ts\n            \n            class\n            GetMirrorWordArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/args/get-mirror-words.args.ts\n            \n            class\n            GetMirrorWordsArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/inputs/create-mirror-word.input.ts\n            \n            class\n            CreateMirrorWordInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/inputs/delete-mirror-word.input.ts\n            \n            class\n            DeleteMirrorWordInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts\n            \n            class\n            UpdateMirrorWordInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n            \n            class\n            MirrorWord\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n            \n            variable\n            MirrorWordSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/entities/mirror-word.repository.ts\n            \n            injectable\n            MirrorWordRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/mirror-word.resolver.ts\n            \n            class\n            MirrorWordResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/mirror-word.service.ts\n            \n            injectable\n            MirrorWordService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/puzzle/dto/args/get-puzzle.args.ts\n            \n            class\n            GetPuzzleArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/puzzle/dto/args/get-puzzles.args.ts\n            \n            class\n            GetPuzzlesArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/puzzle/dto/inputs/create-puzzle.input.ts\n            \n            class\n            CreatePuzzleInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/puzzle/dto/inputs/delete-puzzle.input.ts\n            \n            class\n            DeletePuzzleInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/puzzle/dto/inputs/update-puzzle.input.ts\n            \n            class\n            UpdatePuzzleInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/puzzle/entities/puzzle.entity.ts\n            \n            class\n            Puzzle\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                apps/api/src/app/puzzle/entities/puzzle.entity.ts\n            \n            variable\n            PuzzleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/puzzle/entities/puzzle.repository.ts\n            \n            injectable\n            PuzzleRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/puzzle/puzzle.resolver.ts\n            \n            class\n            PuzzleResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/puzzle/puzzle.service.ts\n            \n            injectable\n            PuzzleService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/dto/args/get-quiz-answer.args.ts\n            \n            class\n            GetQuizAnswerArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/dto/args/get-quiz-answers.args.ts\n            \n            class\n            GetQuizAnswersArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts\n            \n            class\n            CreateQuizAnswerInput\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/dto/inputs/delete-quiz-answer.input.ts\n            \n            class\n            DeleteQuizAnswerInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts\n            \n            class\n            UpdateQuizAnswerInput\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts\n            \n            class\n            QuizAnswer\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts\n            \n            variable\n            QuizAnswerSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/entities/quiz-answer.repository.ts\n            \n            injectable\n            QuizAnswerRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/quiz-answer.resolver.ts\n            \n            class\n            QuizAnswerResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/quiz-answer.service.ts\n            \n            injectable\n            QuizAnswerService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/args/get-quiz-question.args.ts\n            \n            class\n            GetQuizQuestionArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/args/get-quiz-questions.args.ts\n            \n            class\n            GetQuizQuestionsArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts\n            \n            class\n            CreateQuizQuestionInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/inputs/delete-quiz-question.input.ts\n            \n            class\n            DeleteQuizQuestionInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts\n            \n            class\n            UpdateQuizQuestionInput\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n            \n            class\n            QuizQuestion\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n            \n            variable\n            QuizQuestionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/entities/quiz-question.repository.ts\n            \n            injectable\n            QuizQuestionRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/quiz-question.resolver.ts\n            \n            class\n            QuizQuestionResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/quiz-question.service.ts\n            \n            injectable\n            QuizQuestionService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/args/get-quiz.args.ts\n            \n            class\n            GetQuizArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/args/get-quizzes.args.ts\n            \n            class\n            GetQuizzesArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts\n            \n            class\n            CreateQuizInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/inputs/delete-quiz.input.ts\n            \n            class\n            DeleteQuizInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts\n            \n            class\n            UpdateQuizInput\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/entities/quiz.entity.ts\n            \n            class\n            Quiz\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/entities/quiz.entity.ts\n            \n            variable\n            QuizSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/entities/quiz.repository.ts\n            \n            injectable\n            QuizRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/quiz.resolver.ts\n            \n            class\n            QuizResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/quiz.service.ts\n            \n            injectable\n            QuizService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/args/get-role.args.ts\n            \n            class\n            GetRoleArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/args/get-roles.args.ts\n            \n            class\n            GetRolesArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/create-role.input.ts\n            \n            class\n            CreateRoleInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/delete-role.input.ts\n            \n            class\n            DeleteRoleInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/update-role.input.ts\n            \n            class\n            UpdateRoleInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.entity.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.repository.ts\n            \n            injectable\n            RoleRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/role.resolver.ts\n            \n            class\n            RoleResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/args/get-school.args.ts\n            \n            class\n            GetSchoolArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/args/get-schools.args.ts\n            \n            class\n            GetSchoolsArgs\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/inputs/create-school.input.ts\n            \n            class\n            CreateSchoolInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/inputs/delete-school.input.ts\n            \n            class\n            DeleteSchoolInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/inputs/update-school.input.ts\n            \n            class\n            UpdateSchoolInput\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/entities/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/entities/school.entity.ts\n            \n            variable\n            SchoolSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/entities/school.repository.ts\n            \n            injectable\n            SchoolRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/school.resolver.ts\n            \n            class\n            SchoolResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/token/dto/args/get-token.args.ts\n            \n            class\n            GetTokenArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/token/dto/args/get-tokens.args.ts\n            \n            class\n            GetTokensArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/token/dto/inputs/create-token.input.ts\n            \n            class\n            CreateTokenInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/token/dto/inputs/delete-token.input.ts\n            \n            class\n            DeleteTokenInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/token/dto/inputs/update-token.input.ts\n            \n            class\n            UpdateTokenInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/token/entities/token.entity.ts\n            \n            class\n            Token\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/token/entities/token.entity.ts\n            \n            variable\n            TokenSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/token/entities/token.repository.ts\n            \n            injectable\n            TokenRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/token/token.resolver.ts\n            \n            class\n            TokenResolver\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/token/token.service.ts\n            \n            injectable\n            TokenService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/args/get-user.args.ts\n            \n            class\n            GetUserArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/args/get-users.args.ts\n            \n            class\n            GetUsersArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/create-user.input.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/delete-user.input.ts\n            \n            class\n            DeleteUserInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/update-user.input.ts\n            \n            class\n            UpdateUserInput\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.entity.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.repository.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.resolver.ts\n            \n            class\n            UsersResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            function\n            generateSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/gql-arg.abstract.ts\n            \n            class\n            GqlArg\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/id.args.ts\n            \n            class\n            IdArg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/id.args.ts\n            \n            class\n            IdArrayArg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-inputs/gql-input.abstract.ts\n            \n            class\n            GqlInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-inputs/id.input.ts\n            \n            class\n            IdInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/proxies/repository-proxy.service.ts\n            \n            injectable\n            RepositoryProxyService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/shared/proxies/simple.repository.ts\n            \n            injectable\n            SimpleRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/utils/constants.ts\n            \n            variable\n            UPLOAD_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/utils/factories/mongo-config.factory.ts\n            \n            variable\n            mongooseConfigFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/utils/factories/multer-config.factory.ts\n            \n            variable\n            multerConfigFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/utils/file.utils.ts\n            \n            function\n            fileNameGenerator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/utils/file.utils.ts\n            \n            function\n            fstatAsync\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/utils/file.utils.ts\n            \n            function\n            readDirAsync\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/utils/file.utils.ts\n            \n            variable\n            editFileName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/utils/file.utils.ts\n            \n            variable\n            imageFileFilter\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 13.2.3\n        \n            @angular/cdk : ^13.2.4\n        \n            @angular/common : 13.2.3\n        \n            @angular/compiler : 13.2.3\n        \n            @angular/core : 13.2.3\n        \n            @angular/forms : 13.2.3\n        \n            @angular/platform-browser : 13.2.3\n        \n            @angular/platform-browser-dynamic : 13.2.3\n        \n            @angular/router : 13.2.3\n        \n            @apollo/client : ^3.5.9\n        \n            @auth0/angular-jwt : ^5.0.2\n        \n            @capacitor/core : ^3.4.1\n        \n            @compodoc/compodoc : ^1.1.18\n        \n            @ionic/angular : ^6.0.8\n        \n            @ionic/storage-angular : ^3.0.6\n        \n            @nestjs/apollo : ^10.0.4\n        \n            @nestjs/common : ^8.3.1\n        \n            @nestjs/config : ^1.2.0\n        \n            @nestjs/core : ^8.3.1\n        \n            @nestjs/graphql : ^10.0.4\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mongoose : ^9.0.2\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.3.1\n        \n            @ngx-translate/core : ^14.0.0\n        \n            @ngx-translate/http-loader : ^7.0.0\n        \n            @nrwl/angular : 13.8.4\n        \n            @nxtend/capacitor : 13.0.0\n        \n            @nxtend/ionic-angular : 13.0.0\n        \n            add : 2.0.6\n        \n            angular-cropperjs : ^1.0.2\n        \n            apollo-angular : ^3.0.0\n        \n            apollo-server-express : ^3.6.3\n        \n            bcryptjs : ^2.4.3\n        \n            bootstrap : ^5.1.3\n        \n            class-validator : ^0.13.2\n        \n            cropperjs : ^1.5.12\n        \n            del-cli : ^4.0.1\n        \n            dotenv : ^16.0.0\n        \n            graphql : ^16.3.0\n        \n            graphql-tools : ^8.2.0\n        \n            hammerjs : ^2.0.8\n        \n            joi : ^17.6.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^6.2.2\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            primeflex : ^3.1.3\n        \n            primeicons : ^5.0.0\n        \n            primeng : ^13.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~7.5.4\n        \n            tslib : ^2.0.0\n        \n            url-polyfill : ^1.1.12\n        \n            uuid : ^8.3.2\n        \n            yarn : 1.22.17\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                        \n                            fileNameGenerator   (apps/.../file.utils.ts)\n                        \n                        \n                            fstatAsync   (apps/.../file.utils.ts)\n                        \n                        \n                            generateSchema   (apps/.../main.ts)\n                        \n                        \n                            readDirAsync   (apps/.../file.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateSchema\n                        \n                    \n                \n            \n            \n                \ngenerateSchema()\n                \n            \n\n\n\n\n        \n    \n    apps/api/src/utils/file.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fileNameGenerator\n                        \n                    \n                \n            \n            \n                \nfileNameGenerator(original: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    original\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fstatAsync\n                        \n                    \n                \n            \n            \n                \nfstatAsync(path: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readDirAsync\n                        \n                    \n                \n            \n            \n                \nreadDirAsync(path: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSzakszolgNx\nThis project was generated using Nx.\n\n\n🔎 Smart, Fast and Extensible Build System\nQuick Start & Documentation\nNx Documentation\n10-minute video showing all Nx features\nInteractive Tutorial\nAdding capabilities to your workspace\nNx supports many plugins which add capabilities for developing different types of applications and different tools.\nThese capabilities include generating applications, libraries, etc as well as the devtools to test, and build projects as well.\nBelow are our core plugins:\n\nAngular\nng add @nrwl/angular\n\n\nReact\nng add @nrwl/react\n\n\nWeb (no framework frontends)\nng add @nrwl/web\n\n\nNest\nng add @nrwl/nest\n\n\nExpress\nng add @nrwl/express\n\n\nNode\nng add @nrwl/node\n\n\n\nThere are also many community plugins you could add.\nGenerate an application\nRun ng g @nrwl/angular:app my-app to generate an application.\n\nYou can use any of the plugins above to generate applications as well.\n\nWhen using Nx, you can create multiple applications and libraries in the same workspace.\nGenerate a library\nRun ng g @nrwl/angular:lib my-lib to generate a library.\n\nYou can also use any of the plugins above to generate libraries as well.\n\nLibraries are shareable across libraries and applications. They can be imported from @szakszolg-nx/mylib.\nDevelopment server\nRun ng serve my-app for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng g component my-component --project=my-app to generate a new component.\nBuild\nRun ng build my-app to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test my-app to execute the unit tests via Jest.\nRun nx affected:test to execute the unit tests affected by a change.\nRunning end-to-end tests\nRun ng e2e my-app to execute the end-to-end tests via Cypress.\nRun nx affected:e2e to execute the end-to-end tests affected by a change.\nUnderstand your workspace\nRun nx dep-graph to see a diagram of the dependencies of your projects.\nFurther help\nVisit the Nx Documentation to learn more.\n☁ Nx Cloud\nDistributed Computation Caching & Distributed Task Execution\n\n\nNx Cloud pairs with Nx in order to enable you to build and test code more rapidly, by up to 10 times. Even teams that are new to Nx can connect to Nx Cloud and start saving time instantly.\nTeams using Nx gain the advantage of building full-stack applications with their preferred framework alongside Nx’s advanced code generation and project dependency graph, plus a unified experience for both frontend and backend developers.\nVisit Nx Cloud to learn more.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupingItemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HangmanWordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MirrorWordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PuzzleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuizAnswerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuizModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuizQuestionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TokenModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_FileModule\n\n\n\ncluster_FileModule_exports\n\n\n\ncluster_FileModule_providers\n\n\n\ncluster_GroupingItemModule\n\n\n\ncluster_GroupingItemModule_exports\n\n\n\ncluster_GroupingItemModule_providers\n\n\n\ncluster_HangmanWordModule\n\n\n\ncluster_HangmanWordModule_exports\n\n\n\ncluster_HangmanWordModule_providers\n\n\n\ncluster_MirrorWordModule\n\n\n\ncluster_MirrorWordModule_exports\n\n\n\ncluster_MirrorWordModule_providers\n\n\n\ncluster_PuzzleModule\n\n\n\ncluster_PuzzleModule_exports\n\n\n\ncluster_PuzzleModule_providers\n\n\n\ncluster_QuizAnswerModule\n\n\n\ncluster_QuizAnswerModule_exports\n\n\n\ncluster_QuizAnswerModule_providers\n\n\n\ncluster_QuizModule\n\n\n\ncluster_QuizModule_exports\n\n\n\ncluster_QuizModule_providers\n\n\n\ncluster_QuizQuestionModule\n\n\n\ncluster_QuizQuestionModule_exports\n\n\n\ncluster_QuizQuestionModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_exports\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_TokenModule\n\n\n\ncluster_TokenModule_exports\n\n\n\ncluster_TokenModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nAuthModule->RoleModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nFileModule\n\nFileModule\n\nAppModule -->\n\nFileModule->AppModule\n\n\n\n\n\nFileService \n\nFileService \n\nFileService  -->\n\nFileModule->FileService \n\n\n\n\n\nGroupingItemModule\n\nGroupingItemModule\n\nAppModule -->\n\nGroupingItemModule->AppModule\n\n\n\n\n\nGroupingItemRepository \n\nGroupingItemRepository \n\nGroupingItemRepository  -->\n\nGroupingItemModule->GroupingItemRepository \n\n\n\n\n\nGroupingItemService \n\nGroupingItemService \n\nGroupingItemService  -->\n\nGroupingItemModule->GroupingItemService \n\n\n\n\n\nHangmanWordModule\n\nHangmanWordModule\n\nAppModule -->\n\nHangmanWordModule->AppModule\n\n\n\n\n\nHangmanWordRepository \n\nHangmanWordRepository \n\nHangmanWordRepository  -->\n\nHangmanWordModule->HangmanWordRepository \n\n\n\n\n\nHangmanWordService \n\nHangmanWordService \n\nHangmanWordService  -->\n\nHangmanWordModule->HangmanWordService \n\n\n\n\n\nMirrorWordModule\n\nMirrorWordModule\n\nAppModule -->\n\nMirrorWordModule->AppModule\n\n\n\n\n\nMirrorWordRepository \n\nMirrorWordRepository \n\nMirrorWordRepository  -->\n\nMirrorWordModule->MirrorWordRepository \n\n\n\n\n\nMirrorWordService \n\nMirrorWordService \n\nMirrorWordService  -->\n\nMirrorWordModule->MirrorWordService \n\n\n\n\n\nPuzzleModule\n\nPuzzleModule\n\nAppModule -->\n\nPuzzleModule->AppModule\n\n\n\n\n\nPuzzleRepository \n\nPuzzleRepository \n\nPuzzleRepository  -->\n\nPuzzleModule->PuzzleRepository \n\n\n\n\n\nPuzzleService \n\nPuzzleService \n\nPuzzleService  -->\n\nPuzzleModule->PuzzleService \n\n\n\n\n\nQuizAnswerModule\n\nQuizAnswerModule\n\nAppModule -->\n\nQuizAnswerModule->AppModule\n\n\n\n\n\nQuizAnswerRepository \n\nQuizAnswerRepository \n\nQuizAnswerRepository  -->\n\nQuizAnswerModule->QuizAnswerRepository \n\n\n\n\n\nQuizAnswerService \n\nQuizAnswerService \n\nQuizAnswerService  -->\n\nQuizAnswerModule->QuizAnswerService \n\n\n\n\n\nQuizModule\n\nQuizModule\n\nQuizAnswerModule -->\n\nQuizModule->QuizAnswerModule\n\n\n\nAppModule -->\n\nQuizModule->AppModule\n\n\n\n\n\nQuizRepository \n\nQuizRepository \n\nQuizRepository  -->\n\nQuizModule->QuizRepository \n\n\n\n\n\nQuizService \n\nQuizService \n\nQuizService  -->\n\nQuizModule->QuizService \n\n\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoleRepository \n\nRoleRepository \n\nRoleRepository  -->\n\nRoleModule->RoleRepository \n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nSchoolRepository \n\nSchoolRepository \n\nSchoolRepository  -->\n\nSchoolModule->SchoolRepository \n\n\n\n\n\nSchoolService \n\nSchoolService \n\nSchoolService  -->\n\nSchoolModule->SchoolService \n\n\n\n\n\nTokenModule\n\nTokenModule\n\nAppModule -->\n\nTokenModule->AppModule\n\n\n\n\n\nTokenRepository \n\nTokenRepository \n\nTokenRepository  -->\n\nTokenModule->TokenRepository \n\n\n\n\n\nTokenService \n\nTokenService \n\nTokenService  -->\n\nTokenModule->TokenService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nFileService\n\nFileService\n\nFileModule -->\n\nFileService->FileModule\n\n\n\n\n\nGroupingItemRepository\n\nGroupingItemRepository\n\nGroupingItemModule -->\n\nGroupingItemRepository->GroupingItemModule\n\n\n\n\n\nGroupingItemService\n\nGroupingItemService\n\nGroupingItemModule -->\n\nGroupingItemService->GroupingItemModule\n\n\n\n\n\nHangmanWordRepository\n\nHangmanWordRepository\n\nHangmanWordModule -->\n\nHangmanWordRepository->HangmanWordModule\n\n\n\n\n\nHangmanWordService\n\nHangmanWordService\n\nHangmanWordModule -->\n\nHangmanWordService->HangmanWordModule\n\n\n\n\n\nMirrorWordRepository\n\nMirrorWordRepository\n\nMirrorWordModule -->\n\nMirrorWordRepository->MirrorWordModule\n\n\n\n\n\nMirrorWordService\n\nMirrorWordService\n\nMirrorWordModule -->\n\nMirrorWordService->MirrorWordModule\n\n\n\n\n\nPuzzleRepository\n\nPuzzleRepository\n\nPuzzleModule -->\n\nPuzzleRepository->PuzzleModule\n\n\n\n\n\nPuzzleService\n\nPuzzleService\n\nPuzzleModule -->\n\nPuzzleService->PuzzleModule\n\n\n\n\n\nQuizAnswerRepository\n\nQuizAnswerRepository\n\nQuizAnswerModule -->\n\nQuizAnswerRepository->QuizAnswerModule\n\n\n\n\n\nQuizAnswerService\n\nQuizAnswerService\n\nQuizAnswerModule -->\n\nQuizAnswerService->QuizAnswerModule\n\n\n\n\n\nQuizRepository\n\nQuizRepository\n\nQuizModule -->\n\nQuizRepository->QuizModule\n\n\n\n\n\nQuizService\n\nQuizService\n\nQuizModule -->\n\nQuizService->QuizModule\n\n\n\n\n\nQuizQuestionRepository \n\nQuizQuestionRepository \n\n\n\nQuizQuestionService \n\nQuizQuestionService \n\n\n\nQuizQuestionModule\n\nQuizQuestionModule\n\nQuizQuestionRepository  -->\n\nQuizQuestionModule->QuizQuestionRepository \n\n\n\nQuizQuestionService  -->\n\nQuizQuestionModule->QuizQuestionService \n\n\n\n\n\nQuizQuestionRepository\n\nQuizQuestionRepository\n\nQuizQuestionModule -->\n\nQuizQuestionRepository->QuizQuestionModule\n\n\n\n\n\nQuizQuestionService\n\nQuizQuestionService\n\nQuizQuestionModule -->\n\nQuizQuestionService->QuizQuestionModule\n\n\n\n\n\nRoleRepository\n\nRoleRepository\n\nRoleModule -->\n\nRoleRepository->RoleModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nSchoolRepository\n\nSchoolRepository\n\nSchoolModule -->\n\nSchoolRepository->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nTokenRepository\n\nTokenRepository\n\nTokenModule -->\n\nTokenRepository->TokenModule\n\n\n\n\n\nTokenService\n\nTokenService\n\nTokenModule -->\n\nTokenService->TokenModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        15 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    29 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    86 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GroupingItemDocument   (apps/.../grouping-item.entity.ts)\n                        \n                        \n                            HangmanWordDocument   (apps/.../hangman-word.entity.ts)\n                        \n                        \n                            MirrorWordDocument   (apps/.../mirror-word.entity.ts)\n                        \n                        \n                            PuzzleDocument   (apps/.../puzzle.entity.ts)\n                        \n                        \n                            QuizAnswerDocument   (apps/.../quiz-answer.entity.ts)\n                        \n                        \n                            QuizDocument   (apps/.../quiz.entity.ts)\n                        \n                        \n                            QuizQuestionDocument   (apps/.../quiz-question.entity.ts)\n                        \n                        \n                            RoleDocument   (apps/.../role.entity.ts)\n                        \n                        \n                            SchoolDocument   (apps/.../school.entity.ts)\n                        \n                        \n                            TokenDocument   (apps/.../token.entity.ts)\n                        \n                        \n                            UserDocument   (apps/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n    \n    \n        \n            \n                \n                    \n                    GroupingItemDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n    \n    \n        \n            \n                \n                    \n                    HangmanWordDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n    \n    \n        \n            \n                \n                    \n                    MirrorWordDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/puzzle/entities/puzzle.entity.ts\n    \n    \n        \n            \n                \n                    \n                    PuzzleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts\n    \n    \n        \n            \n                \n                    \n                    QuizAnswerDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/quiz/entities/quiz.entity.ts\n    \n    \n        \n            \n                \n                    \n                    QuizDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n    \n    \n        \n            \n                \n                    \n                    QuizQuestionDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/role/entities/role.entity.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/school/entities/school.entity.ts\n    \n    \n        \n            \n                \n                    \n                    SchoolDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/token/entities/token.entity.ts\n    \n    \n        \n            \n                \n                    \n                    TokenDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/users/entities/user.entity.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bcrypt   (apps/.../auth.service.ts)\n                        \n                        \n                            bcrypt   (apps/.../users.service.ts)\n                        \n                        \n                            bcrypt   (apps/.../user.repository.ts)\n                        \n                        \n                            configuration   (apps/.../configuration.ts)\n                        \n                        \n                            CurrentUser   (apps/.../current-user.decorator.ts)\n                        \n                        \n                            editFileName   (apps/.../file.utils.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            GroupingItemSchema   (apps/.../grouping-item.entity.ts)\n                        \n                        \n                            HangmanWordSchema   (apps/.../hangman-word.entity.ts)\n                        \n                        \n                            imageFileFilter   (apps/.../file.utils.ts)\n                        \n                        \n                            MirrorWordSchema   (apps/.../mirror-word.entity.ts)\n                        \n                        \n                            mongooseConfigFactory   (apps/.../mongo-config.factory.ts)\n                        \n                        \n                            multerConfigFactory   (apps/.../multer-config.factory.ts)\n                        \n                        \n                            Permission   (apps/.../permission.decorator.ts)\n                        \n                        \n                            PuzzleSchema   (apps/.../puzzle.entity.ts)\n                        \n                        \n                            QuizAnswerSchema   (apps/.../quiz-answer.entity.ts)\n                        \n                        \n                            QuizQuestionSchema   (apps/.../quiz-question.entity.ts)\n                        \n                        \n                            QuizSchema   (apps/.../quiz.entity.ts)\n                        \n                        \n                            Resource   (apps/.../permission.decorator.ts)\n                        \n                        \n                            RoleSchema   (apps/.../role.entity.ts)\n                        \n                        \n                            SchoolSchema   (apps/.../school.entity.ts)\n                        \n                        \n                            TokenSchema   (apps/.../token.entity.ts)\n                        \n                        \n                            UPLOAD_PATH   (apps/.../constants.ts)\n                        \n                        \n                            UserSchema   (apps/.../user.entity.ts)\n                        \n                        \n                            validationSchema   (apps/.../validation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/entities/user.repository.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/core/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => ({\n    environment: process.env.NODE_ENV,\n    port: parseInt(process.env.PORT || '3000', 10),\n})\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/auth/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_data: unknown, context: ExecutionContext) => {\n    if (context.getType() === 'http') return context.switchToHttp().getRequest().user\n    return GqlExecutionContext.create(context).getContext().req.user\n})\n                    \n                \n\n\n        \n    \n\n    apps/api/src/utils/file.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        editFileName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n    callback(null, fileNameGenerator(file.originalname))\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageFileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n    if (!file.originalname.match(/\\.(jpg|jpeg|png|gif|tiff)$/)) {\n        return callback(new Error('Only image files are allowed!'), false)\n    }\n    callback(null, true)\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GroupingItemSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(GroupingItem)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HangmanWordSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(HangmanWord)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MirrorWordSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(MirrorWord)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/utils/factories/mongo-config.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mongooseConfigFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    imports: [ConfigModule],\n    providers: [ConfigService],\n    mongooseConfigFactory: async (configService: ConfigService): Promise => {\n        const cert = configService.get('DATABASE_CERT')\n        let uri: string\n        if (cert) {\n            uri = `mongodb+srv://${configService.get('DATABASE_USER')}@${configService.get(\n                'DATABASE_HOST',\n            )}/${configService.get(\n                'DATABASE_NAME',\n            )}?authMechanism=MONGODB-X509&ssl=true&retryWrites=true&w=majority`\n            return {\n                uri,\n                sslKey: cert,\n                sslCert: cert,\n            }\n        } else {\n            uri = `mongodb+srv://${configService.get('DATABASE_USER')}:${configService.get(\n                'DATABASE_PASSWORD',\n            )}@${configService.get('DATABASE_HOST')}/${configService.get(\n                'DATABASE_NAME',\n            )}?retryWrites=true&w=majority`\n            return {\n                uri,\n            }\n        }\n    },\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/utils/factories/multer-config.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        multerConfigFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n    return {\n        dest: UPLOAD_PATH,\n    }\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/auth/decorators/permission.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Permission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...abilities: string[]) => SetMetadata('abilities', abilities)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Resource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...resources: string[]) => SetMetadata('resources', resources)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/puzzle/entities/puzzle.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PuzzleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Puzzle)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        QuizAnswerSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(QuizAnswer)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        QuizQuestionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(QuizQuestion)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/quiz/entities/quiz.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        QuizSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Quiz)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/role/entities/role.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/school/entities/school.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SchoolSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(School)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/token/entities/token.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TokenSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Token)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/utils/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UPLOAD_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : './uploads'\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/entities/user.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/core/config/validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n    NODE_ENV: Joi.string().valid('development', 'production', 'test').required(),\n    PORT: Joi.number().default(3000),\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
