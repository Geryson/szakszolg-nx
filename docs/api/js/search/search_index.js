var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,3.109,1,3.311]],["body/controllers/AppController.html",[0,5.12,1,5.454,2,3.89,3,0.098,4,0.086,5,0.086,6,5.164,7,0.25,8,1.888,9,7.328,10,0.748,11,0.009,12,7.278,13,0.305,14,5.846,15,1.517,16,7.002,17,0.149,18,1.155,19,1.265,20,1.294,21,1.294,22,5.273,23,5.846,24,0.098,25,0.403,26,2.819,27,2.424,28,1.872,29,5.846,30,0.007,31,0.007]],["title/modules/AppModule.html",[32,1.602,33,3.311]],["body/modules/AppModule.html",[1,4.876,2,3.724,3,0.066,4,0.058,5,0.058,11,0.009,17,0.163,18,0.779,22,5.17,24,0.066,25,0.272,30,0.005,31,0.005,32,2.029,33,6.843,34,1.842,35,2.614,36,3.484,37,3.484,38,3.484,39,4.916,40,5.466,41,5.466,42,5.466,43,5.466,44,5.466,45,5.17,46,5.17,47,5.466,48,4.916,49,2.889,50,2.035,51,2.035,52,3.943,53,2.791,54,2.791,55,3.943,56,3.943,57,3.943,58,3.181,59,3.181,60,3.484,61,2.11,62,2.774,63,5.597,64,2.11,65,2.774,66,2.11,67,2.774,68,3.943,69,3.943,70,3.484,71,1.326,72,2.774,73,3.943]],["title/injectables/AppService.html",[22,2.94,74,0.873]],["body/injectables/AppService.html",[3,0.102,4,0.089,5,0.089,7,0.259,8,1.93,9,7.419,11,0.009,13,0.316,15,1.571,16,7.419,17,0.14,18,1.196,19,1.31,20,1.34,21,1.34,22,4.95,24,0.102,25,0.418,28,1.939,30,0.007,31,0.007,74,1.469,75,2.14,76,5.35,77,6.056,78,6.056,79,6.056]],["title/controllers/AuthController.html",[0,3.109,80,3.311]],["body/controllers/AuthController.html",[0,3.701,2,3.501,3,0.088,4,0.077,5,0.077,7,0.225,8,1.766,10,0.673,11,0.009,13,0.274,15,1.365,17,0.156,18,1.039,19,1.138,20,1.164,21,1.164,24,0.088,25,0.363,26,2.537,27,2.182,28,1.685,30,0.006,31,0.006,80,5.101,81,4.648,82,5.261,83,5.261,84,3.417,85,6.014,86,5.261,87,7.98,88,5.261,89,5.261,90,1.462,91,1.016,92,0.274,93,0.673,94,7.547,95,3.942,96,5.261,97,2.925,98,4.775,99,4.244,100,3.942,101,5.261,102,2.925,103,4.244,104,4.113,105,5.261,106,5.261,107,5.261,108,5.261,109,2.925,110,5.261,111,5.261]],["title/modules/AuthModule.html",[32,1.602,39,2.796]],["body/modules/AuthModule.html",[2,4.246,3,0.08,4,0.07,5,0.07,11,0.009,17,0.163,18,0.942,24,0.08,25,0.329,30,0.006,31,0.006,32,2.314,34,2.228,35,2.981,39,5.535,48,4.038,49,3.294,50,2.462,51,2.462,53,3.182,54,2.378,58,3.848,80,5.389,98,5.213,99,3.848,112,4.214,113,4.214,114,5.796,115,5.796,116,4.77,117,4.49,118,4.77,119,3.848,120,5.148,121,3.574,122,4.77,123,3.018,124,4.77,125,4.77,126,4.77,127,4.77,128,4.77,129,3.848,130,4.77,131,4.214,132,4.214,133,4.77,134,4.214,135,4.77,136,4.214]],["title/injectables/AuthService.html",[74,0.873,98,2.796]],["body/injectables/AuthService.html",[3,0.061,4,0.053,5,0.053,7,0.154,8,1.364,11,0.009,13,0.355,15,1.607,17,0.136,18,0.714,19,0.782,20,0.8,21,0.8,24,0.061,25,0.249,27,2.569,28,1.984,30,0.005,31,0.005,74,1.038,75,1.277,84,3.683,85,4.644,90,1.891,91,1.313,92,0.355,93,0.87,95,3.939,98,3.326,104,4.11,109,3.444,117,2.542,119,2.915,121,2.708,131,4.644,134,3.192,136,3.192,137,2.915,138,4.24,139,5.257,140,1.531,141,3.192,142,4.367,143,7.785,144,6.878,145,3.614,146,4.644,147,5.257,148,3.614,149,4.506,150,4.644,151,1.211,152,4.123,153,3.614,154,4.11,155,1.956,156,5.257,157,3.614,158,3.614,159,2.915,160,3.192,161,2.915,162,2.915,163,2.915,164,2.915,165,2.915,166,2.915,167,2.915,168,2.915,169,2.837,170,2.542,171,2.708,172,3.192,173,4.642,174,4.644,175,3.614,176,3.192,177,1.345,178,3.192,179,3.614,180,3.192,181,3.614,182,3.614,183,3.614,184,5.257,185,3.614,186,3.614,187,3.614,188,3.614,189,2.708,190,2.286,191,3.192,192,2.708]],["title/modules/CoreModule.html",[32,1.602,40,3.109]],["body/modules/CoreModule.html",[2,3.545,3,0.089,4,0.078,5,0.078,11,0.009,17,0.165,18,1.052,24,0.089,25,0.368,30,0.007,31,0.007,32,2.488,34,2.489,40,4.828,53,2.656,54,3.422,120,4.298,121,3.992,159,4.298,193,5.328,194,5.536,195,5.328,196,5.536,197,5.328,198,5.328,199,0.63,200,5.142,201,5.328,202,2.962,203,1.706,204,4.298,205,5.328,206,5.328,207,5.328,208,5.328,209,1.719,210,5.328,211,5.328,212,5.328,213,5.328,214,5.328,215,5.328,216,5.328,217,5.328,218,5.328,219,2.962]],["title/classes/CoreResolver.html",[25,0.305,200,3.311]],["body/classes/CoreResolver.html",[3,0.103,4,0.091,5,0.091,7,0.264,8,1.951,10,0.789,11,0.009,13,0.321,15,1.6,17,0.116,24,0.103,25,0.426,28,1.975,30,0.007,31,0.007,199,0.729,200,5.636,220,0.69,221,5.448,222,8.45,223,3.428,224,6.167,225,7.522,226,4.182,227,4.182,228,6.167]],["title/classes/CreateGroupingItemInput.html",[25,0.305,229,2.94]],["body/classes/CreateGroupingItemInput.html",[3,0.089,4,0.078,5,0.078,7,0.226,10,0.968,11,0.009,13,0.394,17,0.129,24,0.089,25,0.365,30,0.007,31,0.007,66,4.281,92,0.394,151,1.284,199,0.626,220,0.592,229,4.548,230,3.988,231,7.067,232,3.967,233,0.83,234,3.774,235,1.148,236,6.106,237,6.106,238,6.106,239,1.458,240,4.677,241,1.871,242,5.295,243,5.295,244,2.298,245,1.172,246,2.834,247,2.943]],["title/classes/CreateHangmanWordInput.html",[25,0.305,248,2.94]],["body/classes/CreateHangmanWordInput.html",[3,0.092,4,0.081,5,0.081,7,0.234,10,0.893,11,0.009,13,0.364,17,0.145,24,0.092,25,0.481,30,0.007,31,0.007,64,4.113,92,0.364,151,1.205,199,0.646,220,0.612,233,0.847,234,3.831,235,1.171,239,1.321,244,2.346,245,1.21,246,2.925,247,3.039,248,4.642,249,3.831,250,6.199,251,3.459,252,4.862,253,4.862,254,2.234,255,4.829,256,4.829,257,2.402,258,1.325]],["title/classes/CreateMirrorWordInput.html",[25,0.305,259,2.94]],["body/classes/CreateMirrorWordInput.html",[3,0.096,4,0.084,5,0.084,7,0.245,10,0.733,11,0.009,13,0.298,17,0.148,24,0.096,25,0.496,30,0.007,31,0.007,61,3.845,92,0.298,151,1.07,199,0.677,220,0.641,233,0.872,234,3.915,235,1.206,239,1.235,244,2.416,245,1.267,246,3.065,247,3.184,250,5.796,251,3.623,253,4.968,254,1.834,256,5.059,257,2.246,258,1.388,259,4.781,260,3.582,261,4.053]],["title/classes/CreateQuizAnswerInput.html",[25,0.305,262,2.94]],["body/classes/CreateQuizAnswerInput.html",[3,0.076,4,0.067,5,0.067,7,0.194,10,1.007,11,0.009,13,0.423,17,0.116,24,0.076,25,0.313,30,0.006,31,0.006,71,2.793,92,0.423,93,0.963,151,1.209,177,2.296,199,0.536,220,0.508,233,0.749,234,3.496,235,1.036,239,1.49,241,1.604,244,2.075,245,1.004,246,2.429,247,2.523,262,4.106,263,3.091,264,7.338,265,3.401,266,5.657,267,5.657,268,6.195,269,3.899,270,5.657,271,4.933,272,4.009,273,2.422,274,4.009,275,5.452,276,4.538,277,4.009,278,4.978,279,4.538,280,4.538,281,4.978]],["title/classes/CreateQuizInput.html",[25,0.305,282,2.94]],["body/classes/CreateQuizInput.html",[3,0.083,4,0.073,5,0.073,7,0.211,10,0.996,11,0.009,13,0.406,17,0.147,19,1.068,20,1.093,21,1.093,24,0.083,25,0.341,30,0.006,31,0.006,71,2.196,92,0.406,151,1.263,199,0.583,220,0.552,233,0.793,234,3.648,235,1.096,239,1.459,241,2.308,244,2.196,245,1.093,246,2.642,247,2.745,282,4.345,283,7.154,284,3.7,285,5.483,286,4.63,287,5.483,288,5.902,289,4.938,290,4.938,291,4.63,292,4.938,293,4.938,294,4.132,295,3.983,296,3.474]],["title/classes/CreateQuizQuestionInput.html",[25,0.305,294,2.796]],["body/classes/CreateQuizQuestionInput.html",[3,0.08,4,0.07,5,0.07,7,0.204,10,0.984,11,0.009,13,0.401,17,0.12,24,0.08,25,0.33,30,0.006,31,0.006,71,2.694,92,0.439,93,0.984,151,1.303,199,0.565,220,0.535,233,0.776,234,3.591,235,1.074,239,1.447,241,2.26,244,2.15,245,1.059,246,2.56,247,2.659,263,2.982,294,4.046,295,6.464,297,3.584,298,5.397,299,5.81,300,5.397,301,1.78,302,4.274,303,4.226,304,4.226,305,4.783,306,4.783]],["title/classes/CreateRoleInput.html",[25,0.305,307,2.94]],["body/classes/CreateRoleInput.html",[3,0.088,4,0.077,5,0.077,7,0.225,10,0.966,11,0.009,13,0.393,17,0.142,24,0.088,25,0.47,30,0.006,31,0.006,91,1.457,92,0.393,151,1.283,199,0.622,220,0.589,233,0.826,234,3.763,235,1.143,239,1.372,244,2.289,245,1.164,246,2.816,247,2.925,254,2.18,257,2.359,258,1.275,286,4.775,307,4.53,308,7.05,309,3.942,310,6.088,311,5.261,312,5.261,313,5.261,314,5.261,315,3.18]],["title/classes/CreateSchoolInput.html",[25,0.305,316,2.94]],["body/classes/CreateSchoolInput.html",[3,0.08,4,0.07,5,0.07,7,0.204,10,1.025,11,0.009,13,0.418,17,0.136,24,0.08,25,0.441,30,0.006,31,0.006,91,1.39,92,0.418,151,1.314,199,0.565,220,0.535,233,0.776,234,3.591,235,1.074,239,1.417,244,2.15,245,1.059,246,2.56,247,2.659,254,2.462,257,2.505,258,1.159,269,4.004,315,2.986,316,4.254,317,7.284,318,3.584,319,5.067,320,5.397,321,4.557,322,4.783,323,4.783,324,4.226,325,4.783,326,4.783,327,4.783,328,5.649]],["title/classes/CreateUserInput.html",[25,0.305,329,2.94]],["body/classes/CreateUserInput.html",[3,0.079,4,0.069,5,0.069,7,0.201,10,1.018,11,0.009,13,0.415,17,0.134,24,0.079,25,0.435,30,0.006,31,0.006,92,0.415,93,0.976,151,1.309,152,4.745,154,4.308,199,0.554,220,0.525,233,0.766,234,3.556,235,1.059,239,1.44,241,1.658,244,2.122,245,1.038,246,2.51,247,2.607,254,2.021,257,2.384,258,1.136,269,3.965,301,1.461,302,3.508,329,4.199,330,7.243,331,3.514,332,5.344,333,5.753,334,4.69,335,4.69,336,4.69,337,4.69,338,4.69,339,4.69,340,5.575]],["title/classes/DeleteGroupingItemInput.html",[25,0.305,341,2.94]],["body/classes/DeleteGroupingItemInput.html",[3,0.098,4,0.086,5,0.086,7,0.249,10,0.745,11,0.009,13,0.304,17,0.149,24,0.098,25,0.501,30,0.007,31,0.007,66,3.118,92,0.304,151,1.081,199,0.688,220,0.652,230,2.905,232,4.365,233,0.882,235,1.219,239,1.248,244,2.442,245,1.289,254,1.865,257,2.27,258,1.412,341,4.832,342,5.146,343,3.082,344,2.304,345,1.125,346,3.239,347,2.349]],["title/classes/DeleteHangmanWordInput.html",[25,0.305,348,2.94]],["body/classes/DeleteHangmanWordInput.html",[3,0.098,4,0.086,5,0.086,7,0.249,10,0.745,11,0.009,13,0.304,17,0.149,24,0.098,25,0.501,30,0.007,31,0.007,64,3.118,92,0.304,151,1.081,199,0.688,220,0.652,233,0.882,235,1.219,239,1.248,244,2.442,245,1.289,249,2.905,251,3.686,254,1.865,257,2.27,258,1.412,343,3.082,344,2.304,345,1.125,346,3.239,347,2.349,348,4.832,349,4.699]],["title/classes/DeleteMirrorWordInput.html",[25,0.305,350,2.94]],["body/classes/DeleteMirrorWordInput.html",[3,0.098,4,0.086,5,0.086,7,0.249,10,0.745,11,0.009,13,0.304,17,0.149,24,0.098,25,0.501,30,0.007,31,0.007,61,3.118,92,0.304,151,1.081,199,0.688,220,0.652,233,0.882,235,1.219,239,1.248,244,2.442,245,1.289,251,3.686,254,1.865,257,2.27,258,1.412,260,2.905,343,3.082,344,2.304,345,1.125,346,3.239,347,2.349,349,4.699,350,4.832]],["title/classes/DeleteQuizAnswerInput.html",[25,0.305,351,2.94]],["body/classes/DeleteQuizAnswerInput.html",[3,0.098,4,0.086,5,0.086,7,0.249,10,0.745,11,0.009,13,0.304,17,0.149,24,0.098,25,0.501,30,0.007,31,0.007,71,1.959,92,0.304,151,1.081,199,0.688,220,0.652,233,0.882,235,1.219,239,1.248,244,2.442,245,1.289,254,1.865,257,2.27,258,1.412,263,2.168,265,4.365,343,3.082,344,2.304,345,1.125,346,3.239,347,2.349,351,4.832,352,5.146]],["title/classes/DeleteQuizInput.html",[25,0.305,353,2.94]],["body/classes/DeleteQuizInput.html",[3,0.098,4,0.086,5,0.086,7,0.251,10,0.751,11,0.009,13,0.306,17,0.149,24,0.098,25,0.503,30,0.007,31,0.007,92,0.306,151,1.086,199,0.693,220,0.656,233,0.885,235,1.225,239,1.254,244,2.452,245,1.298,254,1.878,257,2.28,258,1.421,284,4.395,343,3.09,344,2.311,345,1.132,346,3.261,347,2.366,353,4.853,354,5.182]],["title/classes/DeleteQuizQuestionInput.html",[25,0.305,355,2.94]],["body/classes/DeleteQuizQuestionInput.html",[3,0.098,4,0.086,5,0.086,7,0.249,10,0.745,11,0.009,13,0.304,17,0.149,24,0.098,25,0.501,30,0.007,31,0.007,71,1.959,92,0.304,151,1.081,199,0.688,220,0.652,233,0.882,235,1.219,239,1.248,244,2.442,245,1.289,254,1.865,257,2.27,258,1.412,263,2.168,297,4.365,343,3.082,344,2.304,345,1.125,346,3.239,347,2.349,355,4.832,356,5.146]],["title/classes/DeleteRoleInput.html",[25,0.305,357,2.94]],["body/classes/DeleteRoleInput.html",[3,0.098,4,0.086,5,0.086,7,0.251,10,0.751,11,0.009,13,0.306,17,0.149,24,0.098,25,0.503,30,0.007,31,0.007,92,0.306,151,1.086,199,0.693,220,0.656,233,0.885,235,1.225,239,1.254,244,2.452,245,1.298,254,1.878,257,2.28,258,1.421,309,4.395,343,3.09,344,2.311,345,1.132,346,3.261,347,2.366,357,4.853,358,5.182]],["title/classes/DeleteSchoolInput.html",[25,0.305,359,2.94]],["body/classes/DeleteSchoolInput.html",[3,0.098,4,0.086,5,0.086,7,0.251,10,0.751,11,0.009,13,0.306,17,0.149,24,0.098,25,0.503,30,0.007,31,0.007,92,0.306,151,1.086,199,0.693,220,0.656,233,0.885,235,1.225,239,1.254,244,2.452,245,1.298,254,1.878,257,2.28,258,1.421,318,4.395,343,3.09,344,2.311,345,1.132,346,3.261,347,2.366,359,4.853,360,5.182]],["title/classes/DeleteUserInput.html",[25,0.305,361,2.94]],["body/classes/DeleteUserInput.html",[3,0.098,4,0.086,5,0.086,7,0.251,10,0.751,11,0.009,13,0.306,17,0.149,24,0.098,25,0.503,30,0.007,31,0.007,92,0.306,151,1.086,199,0.693,220,0.656,233,0.885,235,1.225,239,1.254,244,2.452,245,1.298,254,1.878,257,2.28,258,1.421,331,4.395,343,3.09,344,2.311,345,1.132,346,3.261,347,2.366,361,4.853,362,5.182]],["title/classes/GetGroupingItemArgs.html",[25,0.305,363,2.94]],["body/classes/GetGroupingItemArgs.html",[3,0.099,4,0.087,5,0.087,7,0.252,10,0.753,11,0.009,13,0.307,17,0.138,24,0.099,25,0.406,30,0.007,31,0.007,66,3.15,92,0.307,151,1.088,199,0.696,209,1.655,220,0.659,230,2.935,233,0.887,235,1.227,239,1.257,245,1.303,301,1.363,344,2.315,345,1.136,363,4.864,364,4.748,365,5.2,366,4.01,367,2.134,368,4.748,369,2.441,370,3.031]],["title/classes/GetGroupingItemsArgs.html",[25,0.305,371,2.94]],["body/classes/GetGroupingItemsArgs.html",[3,0.094,4,0.083,5,0.083,7,0.241,10,0.72,11,0.009,13,0.293,17,0.147,24,0.094,25,0.491,30,0.007,31,0.007,66,3.013,92,0.293,93,0.91,151,1.16,199,0.665,209,1.275,220,0.63,230,2.807,233,0.863,235,1.194,239,1.222,241,1.99,245,1.246,258,1.364,301,1.646,315,3.32,345,1.087,364,4.542,369,2.335,370,2.948,371,4.73,372,4.974,373,3.822,374,4.17,375,3.13,376,3.259]],["title/classes/GetHangmanWordArgs.html",[25,0.305,377,2.94]],["body/classes/GetHangmanWordArgs.html",[3,0.09,4,0.079,5,0.079,7,0.229,10,0.882,11,0.009,13,0.359,17,0.13,24,0.09,25,0.37,30,0.007,31,0.007,64,3.688,92,0.359,93,0.882,151,1.196,199,0.634,209,1.819,220,0.6,233,0.836,235,1.157,239,1.429,245,1.187,249,3.436,252,4.818,301,1.596,344,2.217,345,1.035,366,3.876,367,2.499,368,4.325,369,2.223,370,2.858,377,4.585,378,4.848,379,4.325,380,5.362,381,6.088,382,6.088]],["title/classes/GetHangmanWordsArgs.html",[25,0.305,383,2.94]],["body/classes/GetHangmanWordsArgs.html",[3,0.087,4,0.076,5,0.076,7,0.221,10,0.862,11,0.009,13,0.351,17,0.141,24,0.087,25,0.465,30,0.006,31,0.006,64,3.607,92,0.351,93,1.015,151,1.255,199,0.612,209,1.696,220,0.58,233,0.818,235,1.132,239,1.288,241,2.382,245,1.147,249,3.36,252,4.74,258,1.255,301,1.837,315,3.148,345,1,369,2.148,370,2.795,373,3.705,374,4.009,375,2.88,376,2.998,378,4.741,383,4.484,384,4.179,385,5.181]],["title/classes/GetMirrorWordArgs.html",[25,0.305,386,2.94]],["body/classes/GetMirrorWordArgs.html",[3,0.097,4,0.085,5,0.085,7,0.246,10,0.738,11,0.009,13,0.3,17,0.136,24,0.097,25,0.398,30,0.007,31,0.007,61,3.086,92,0.3,151,1.074,199,0.681,209,1.634,220,0.645,233,0.876,235,1.211,239,1.419,245,1.276,260,2.875,301,1.335,344,2.293,345,1.113,366,3.981,367,2.091,368,4.651,369,2.391,370,2.992,378,4.056,379,4.651,381,6.375,382,6.375,386,4.801]],["title/classes/GetMirrorWordsArgs.html",[25,0.305,387,2.94]],["body/classes/GetMirrorWordsArgs.html",[3,0.094,4,0.083,5,0.083,7,0.241,10,0.72,11,0.009,13,0.293,17,0.147,24,0.094,25,0.491,30,0.007,31,0.007,61,3.013,92,0.293,93,0.91,151,1.16,199,0.665,209,1.275,220,0.63,233,0.863,235,1.194,239,1.222,241,1.99,245,1.246,258,1.364,260,2.807,301,1.646,315,3.32,345,1.087,369,2.335,370,2.948,373,3.822,374,4.17,375,3.13,376,3.259,378,3.961,384,4.542,387,4.73]],["title/classes/GetQuizAnswerArgs.html",[25,0.305,388,2.94]],["body/classes/GetQuizAnswerArgs.html",[3,0.098,4,0.086,5,0.086,7,0.249,10,0.745,11,0.009,13,0.304,17,0.149,24,0.098,25,0.501,30,0.007,31,0.007,71,1.959,92,0.304,151,1.081,199,0.688,220,0.652,233,0.882,235,1.219,239,1.248,245,1.289,254,1.865,257,2.27,258,1.412,263,2.168,344,2.304,345,1.125,366,3.995,369,2.416,370,3.012,388,4.832,389,4.699,390,5.146,391,4.098]],["title/classes/GetQuizAnswersArgs.html",[25,0.305,392,2.94]],["body/classes/GetQuizAnswersArgs.html",[3,0.088,4,0.077,5,0.077,7,0.224,10,0.869,11,0.009,13,0.354,17,0.142,24,0.088,25,0.469,30,0.006,31,0.006,71,2.284,92,0.354,93,1.02,151,1.229,199,0.62,209,1.706,220,0.587,233,0.825,235,1.141,239,1.295,241,1.854,245,1.161,258,1.271,263,2.528,271,5.301,301,1.745,315,3.173,345,1.013,367,1.902,369,2.175,370,2.817,373,3.723,374,4.033,375,2.916,376,3.036,389,5.48,392,4.52,393,4.634,394,5.245]],["title/classes/GetQuizArgs.html",[25,0.305,395,2.94]],["body/classes/GetQuizArgs.html",[3,0.098,4,0.086,5,0.086,7,0.251,10,0.751,11,0.009,13,0.306,17,0.149,24,0.098,25,0.503,30,0.007,31,0.007,92,0.306,151,1.086,199,0.693,220,0.656,233,0.885,235,1.225,239,1.254,245,1.298,254,1.878,257,2.28,258,1.421,344,2.311,345,1.132,366,4.005,369,2.433,370,3.025,391,4.127,395,4.853,396,4.732,397,5.182]],["title/classes/GetQuizQuestionArgs.html",[25,0.305,398,2.94]],["body/classes/GetQuizQuestionArgs.html",[3,0.098,4,0.086,5,0.086,7,0.249,10,0.745,11,0.009,13,0.304,17,0.149,24,0.098,25,0.501,30,0.007,31,0.007,71,1.959,92,0.304,151,1.081,199,0.688,220,0.652,233,0.882,235,1.219,239,1.248,245,1.289,254,1.865,257,2.27,258,1.412,263,2.168,344,2.304,345,1.125,366,3.995,369,2.416,370,3.012,391,4.098,398,4.832,399,4.699,400,5.146]],["title/classes/GetQuizQuestionsArgs.html",[25,0.305,401,2.94]],["body/classes/GetQuizQuestionsArgs.html",[3,0.094,4,0.083,5,0.083,7,0.241,10,0.72,11,0.009,13,0.293,17,0.147,24,0.094,25,0.491,30,0.007,31,0.007,71,1.893,92,0.293,93,0.91,151,1.16,199,0.665,209,1.275,220,0.63,233,0.863,235,1.194,239,1.222,241,1.99,245,1.246,258,1.364,263,2.095,301,1.646,315,3.32,345,1.087,369,2.335,370,2.948,373,3.822,374,4.17,375,3.13,376,3.259,399,4.542,401,4.73,402,4.974]],["title/classes/GetQuizzesArgs.html",[25,0.305,403,2.94]],["body/classes/GetQuizzesArgs.html",[3,0.089,4,0.078,5,0.078,7,0.227,10,0.876,11,0.009,13,0.357,17,0.143,24,0.089,25,0.473,30,0.007,31,0.007,92,0.357,93,1.025,151,1.234,199,0.628,209,1.716,220,0.594,233,0.831,235,1.15,239,1.303,241,1.877,245,1.175,252,4.796,258,1.287,301,1.755,315,3.199,345,1.025,367,1.926,369,2.202,370,2.84,373,3.74,374,4.057,375,2.953,376,3.074,396,5.525,403,4.557,404,4.692,405,5.311]],["title/classes/GetRoleArgs.html",[25,0.305,406,2.94]],["body/classes/GetRoleArgs.html",[3,0.098,4,0.086,5,0.086,7,0.251,10,0.751,11,0.009,13,0.306,17,0.149,24,0.098,25,0.503,30,0.007,31,0.007,92,0.306,151,1.086,199,0.693,220,0.656,233,0.885,235,1.225,239,1.254,245,1.298,254,1.878,257,2.28,258,1.421,344,2.311,345,1.132,366,4.005,369,2.433,370,3.025,391,4.127,406,4.853,407,4.732,408,5.182]],["title/classes/GetRolesArgs.html",[25,0.305,409,2.94]],["body/classes/GetRolesArgs.html",[3,0.095,4,0.083,5,0.083,7,0.242,10,0.725,11,0.009,13,0.295,17,0.147,24,0.095,25,0.493,30,0.007,31,0.007,92,0.295,93,0.913,151,1.163,199,0.67,209,1.283,220,0.634,233,0.867,235,1.199,239,1.227,241,2.004,245,1.255,258,1.374,301,1.653,315,3.335,345,1.094,369,2.351,370,2.96,373,3.832,374,4.183,375,3.151,376,3.281,407,4.573,409,4.75,410,5.008]],["title/classes/GetSchoolArgs.html",[25,0.305,411,2.94]],["body/classes/GetSchoolArgs.html",[3,0.098,4,0.086,5,0.086,7,0.251,10,0.751,11,0.009,13,0.306,17,0.149,24,0.098,25,0.503,30,0.007,31,0.007,92,0.306,151,1.086,199,0.693,220,0.656,233,0.885,235,1.225,239,1.254,245,1.298,254,1.878,257,2.28,258,1.421,344,2.311,345,1.132,366,4.005,369,2.433,370,3.025,391,4.127,411,4.853,412,4.732,413,5.182]],["title/classes/GetSchoolsArgs.html",[25,0.305,414,2.94]],["body/classes/GetSchoolsArgs.html",[3,0.071,4,0.063,5,0.063,7,0.182,10,1.019,11,0.009,13,0.415,17,0.128,24,0.071,25,0.408,30,0.006,31,0.006,91,1.31,92,0.441,93,1.095,151,1.308,199,0.504,209,1.958,220,0.477,233,0.718,235,0.993,239,1.404,241,1.507,245,0.943,258,1.033,269,3.773,301,1.892,315,2.761,319,4.774,320,5.085,345,0.823,367,2.791,369,1.768,370,2.451,373,3.423,374,3.632,375,2.37,376,2.467,412,6.425,414,3.933,415,3.766,416,4.263,417,4.263,418,4.263,419,4.263,420,4.263]],["title/classes/GetUserArgs.html",[25,0.305,421,2.94]],["body/classes/GetUserArgs.html",[3,0.09,4,0.079,5,0.079,7,0.229,10,0.882,11,0.009,13,0.359,17,0.143,24,0.09,25,0.476,30,0.007,31,0.007,92,0.359,93,1.028,151,1.196,154,4.601,199,0.634,209,1.56,220,0.6,233,0.836,235,1.157,239,1.309,245,1.187,258,1.299,301,1.596,344,2.217,367,2.499,370,2.858,421,4.585,422,6.143,423,4.737,424,5.067,425,6.891,426,5.362,427,5.362,428,6.143,429,4.325,430,4.325]],["title/classes/GetUsersArgs.html",[25,0.305,431,2.94]],["body/classes/GetUsersArgs.html",[3,0.095,4,0.083,5,0.083,7,0.242,10,0.725,11,0.009,13,0.295,17,0.147,24,0.095,25,0.493,30,0.007,31,0.007,92,0.295,93,0.913,151,1.163,199,0.67,209,1.283,220,0.634,233,0.867,235,1.199,239,1.227,241,2.004,245,1.255,258,1.374,301,1.653,315,3.335,345,1.094,369,2.351,370,2.96,373,3.832,374,4.183,375,3.151,376,3.281,422,4.573,431,4.75,432,5.008]],["title/classes/GqlArg.html",[25,0.305,424,2.94]],["body/classes/GqlArg.html",[3,0.112,4,0.098,5,0.098,11,0.008,17,0.126,24,0.112,25,0.461,30,0.008,31,0.008,199,0.789,220,0.747,370,3.273,424,5.251,429,5.389,433,4.445,434,5.902,435,5.902]],["title/classes/GqlAuthGuard.html",[25,0.305,436,2.281]],["body/classes/GqlAuthGuard.html",[3,0.1,4,0.088,5,0.088,7,0.256,8,1.917,11,0.009,13,0.312,15,1.554,17,0.151,18,1.183,24,0.1,25,0.413,28,1.918,30,0.007,31,0.007,90,1.665,91,1.157,92,0.312,93,0.767,123,3.791,199,0.708,220,0.67,233,0.727,436,3.814,437,6.529,438,4.489,439,7.39,440,7.39,441,6.749,442,5.991,443,4.833,444,4.833,445,5.293,446,5.293,447,5.991]],["title/classes/GqlInput.html",[25,0.305,234,2.203]],["body/classes/GqlInput.html",[3,0.115,4,0.101,5,0.101,11,0.008,24,0.115,25,0.472,30,0.008,31,0.008,220,0.766,234,3.991,246,3.662,433,4.553,435,6.046,448,6.046]],["title/classes/GroupingItem.html",[25,0.305,449,2.94]],["body/classes/GroupingItem.html",[3,0.067,4,0.058,5,0.058,7,0.17,10,1.025,11,0.009,13,0.417,17,0.134,19,0.859,20,0.879,21,0.879,24,0.11,25,0.274,30,0.005,31,0.005,92,0.44,93,0.909,151,1.239,169,1.558,199,0.469,203,1.272,209,0.899,220,0.444,230,4.079,235,0.944,236,5.269,237,5.269,238,5.269,239,1.406,273,3.056,301,0.92,367,1.44,449,3.743,450,5.755,451,2.976,452,2.333,453,5.731,454,3.372,455,3.631,456,3.496,457,2.709,458,3.256,459,3.256,460,3.971,461,4.112,462,3.971,463,3.971,464,2.299,465,3.971,466,3.971,467,3.971,468,3.971,469,3.256,470,4.735,471,2.787,472,2.299,473,2.299,474,3.127,475,1.601,476,3.203,477,2.299,478,2.976,479,3.508]],["title/modules/GroupingItemModule.html",[32,1.602,41,3.109]],["body/modules/GroupingItemModule.html",[3,0.083,4,0.073,5,0.073,11,0.009,17,0.157,18,0.975,24,0.083,25,0.341,30,0.006,31,0.006,32,2.368,34,2.306,35,3.05,41,6.192,49,3.371,50,2.549,51,2.549,53,3.256,54,2.462,66,3.495,67,3.474,91,0.953,202,2.745,203,1.581,219,3.631,230,2.462,449,3.285,471,2.107,478,4.893,480,4.362,481,4.362,482,4.362,483,5.943,484,5.943,485,4.938,486,4.362,487,4.893,488,4.938,489,5.268,490,3.983,491,4.362,492,2.858,493,4.938]],["title/injectables/GroupingItemRepository.html",[74,0.873,483,2.94]],["body/injectables/GroupingItemRepository.html",[3,0.06,4,0.053,5,0.053,7,0.153,8,1.351,11,0.009,13,0.391,15,1.866,17,0.157,18,0.705,19,0.772,20,0.79,21,0.79,24,0.06,25,0.246,28,1.142,30,0.005,31,0.005,66,4.019,74,1.029,75,1.261,84,3.78,90,2.087,91,1.45,92,0.375,93,0.961,109,1.983,140,1.039,155,2.794,169,2.044,177,1.938,203,1.142,229,2.374,230,2.597,233,0.632,261,4.103,341,2.374,345,1.388,363,4.5,371,2.374,449,2.374,450,3.664,453,2.878,475,1.439,476,2.878,483,3.465,490,2.878,494,3.152,495,4.103,496,2.1,497,2.044,498,2.1,499,2.1,500,2.1,501,2.51,502,3.76,503,3.568,504,3.664,505,4.601,506,2.51,507,3.152,508,1.439,509,2.358,510,2.374,511,2.165,512,1.439,513,2.222,514,2.155,515,1.439,516,2.512,517,2.673,518,1.439,519,2.155,520,2.065,521,2.374,522,1.199,523,4.961,524,1.199,525,1.751,526,2.878,527,2.878,528,1.199,529,2.155,530,3.568,531,2.51,532,2.374,533,4.201,534,2.878,535,2.878,536,2.878,537,2.878]],["title/classes/GroupingItemResolver.html",[25,0.305,487,3.311]],["body/classes/GroupingItemResolver.html",[3,0.051,4,0.044,5,0.044,7,0.129,8,1.193,10,0.857,11,0.009,13,0.368,15,1.738,17,0.155,18,0.596,19,0.653,20,0.668,21,0.668,24,0.051,25,0.208,26,1.455,27,1.251,28,2.145,30,0.004,31,0.004,66,3.778,67,5.163,90,1.962,91,1.363,92,0.368,93,0.903,97,1.678,102,1.678,140,0.879,155,2.942,177,2.072,199,0.357,209,1.409,220,0.338,223,2.556,226,3.095,227,2.556,229,4.142,230,3.659,301,1.635,341,4.142,363,4.142,371,4.142,436,1.558,449,5.157,453,2.434,484,4.142,486,2.666,487,3.444,489,2.434,490,2.434,511,2.531,521,4.142,522,1.015,523,4.491,524,1.015,525,1.546,526,2.434,527,2.434,528,1.015,538,2.666,539,4.597,540,4.597,541,4.597,542,4.597,543,2.008,544,3.018,545,3.059,546,3.018,547,3.364,548,1.909,549,3.018,550,3.018,551,1.823,552,3.018,553,3.018,554,3.018,555,3.018,556,1.909,557,3.643,558,3.018,559,3.018,560,1.823,561,3.018,562,3.603,563,1.747,564,1.747,565,1.615,566,1.558,567,1.747,568,1.747,569,1.747,570,3.018,571,2.661,572,3.018,573,2.008,574,1.823,575,3.603,576,3.018,577,2.008,578,1.823,579,3.018,580,2.008,581,1.747,582,3.018,583,2.008,584,1.747,585,3.018,586,2.008]],["title/injectables/GroupingItemService.html",[74,0.873,484,2.94]],["body/injectables/GroupingItemService.html",[3,0.069,4,0.06,5,0.06,7,0.176,8,1.494,11,0.009,13,0.41,15,1.97,17,0.155,18,0.811,24,0.069,25,0.283,30,0.005,31,0.005,66,4.064,67,4.052,74,1.138,75,1.452,90,2.188,91,1.52,92,0.41,93,1.007,140,1.196,229,2.733,230,2.872,233,0.699,341,2.733,345,1.466,363,2.733,371,2.733,483,4.798,484,3.833,489,3.313,491,3.628,496,2.323,497,2.26,498,2.323,499,2.323,500,2.323,508,1.656,509,2.608,511,2.432,512,1.656,513,2.458,515,1.656,516,2.778,518,1.656,521,2.733,522,1.381,523,5.366,524,1.381,525,1.937,526,3.313,527,3.313,528,1.381,587,3.628,588,4.416,589,3.48,590,4.107,591,2.481,592,2.481,593,2.481,594,2.481,595,1.752,596,2.69,597,2.481,598,3.202,599,2.481,600,2.481,601,2.481,602,2.599]],["title/classes/HangmanWord.html",[25,0.305,603,2.94]],["body/classes/HangmanWord.html",[3,0.07,4,0.062,5,0.062,7,0.179,10,1.014,11,0.009,13,0.413,17,0.137,19,0.906,20,0.927,21,0.927,24,0.113,25,0.289,30,0.006,31,0.006,92,0.432,93,0.931,151,1.139,169,1.644,199,0.495,203,1.341,209,0.948,220,0.469,235,0.98,239,1.397,249,4.053,252,4.254,253,4.254,273,3.108,301,0.97,367,1.519,452,2.422,454,3.47,455,3.738,456,3.598,457,2.788,458,2.424,459,2.424,461,4.21,464,2.424,469,3.38,470,4.705,471,2.869,472,2.424,473,2.424,474,3.247,475,1.689,477,2.424,603,3.886,604,5.719,605,2.947,606,5.867,607,3.7,608,3.7,609,3.7,610,4.189,611,3.7,612,3.7,613,3.379,614,3.139,615,3.7]],["title/modules/HangmanWordModule.html",[32,1.602,42,3.109]],["body/modules/HangmanWordModule.html",[3,0.083,4,0.073,5,0.073,11,0.009,17,0.157,18,0.975,24,0.083,25,0.341,30,0.006,31,0.006,32,2.368,34,2.306,35,3.05,42,6.192,49,3.371,50,2.549,51,2.549,53,3.256,54,2.462,64,3.495,65,3.474,91,0.953,202,2.745,203,1.581,219,3.631,249,2.462,471,2.107,492,2.858,603,3.285,614,4.893,616,4.362,617,4.362,618,4.362,619,5.943,620,5.943,621,4.362,622,3.7,623,4.893,624,4.362,625,5.268,626,3.285,627,3.7,628,4.938]],["title/injectables/HangmanWordRepository.html",[74,0.873,619,2.94]],["body/injectables/HangmanWordRepository.html",[3,0.052,4,0.046,5,0.046,7,0.133,8,1.221,11,0.009,13,0.372,15,1.762,17,0.152,18,0.615,19,0.673,20,0.689,21,0.689,24,0.052,25,0.215,28,2.025,30,0.004,31,0.004,64,3.823,74,0.93,75,1.1,84,3.716,90,1.986,91,1.379,92,0.354,93,0.914,109,3.154,140,0.906,155,2.76,169,2.482,177,2.111,203,0.997,233,0.571,248,2.071,249,2.346,252,2.978,261,3.687,345,1.311,348,2.071,377,4.208,383,4.208,475,1.255,495,3.942,496,1.898,497,1.847,498,1.898,499,1.898,500,1.898,502,3.516,506,2.19,508,1.255,509,2.131,510,2.071,511,2.175,512,1.255,513,2.008,514,1.881,515,1.898,518,1.255,519,1.881,520,1.802,522,1.047,524,1.047,525,1.582,528,1.047,529,1.881,532,3.131,533,3.796,534,2.511,535,2.511,536,2.511,537,2.511,595,2.008,603,2.071,604,3.311,606,2.511,613,2.511,619,3.131,626,2.071,629,2.511,630,3.113,631,2.75,632,4.706,633,3.113,634,2.071,635,3.775,636,2.071,637,2.071,638,3.113,639,3.113,640,4.706,641,3.113,642,2.332,643,6,644,3.113,645,5.013,646,3.113,647,3.796,648,3.796,649,3.113,650,2.75,651,2.071,652,3.113,653,3.113,654,3.113,655,3.113,656,2.75,657,3.113,658,3.113,659,2.511,660,3.113,661,2.75,662,3.113,663,2.332,664,3.113,665,3.113]],["title/classes/HangmanWordResolver.html",[25,0.305,623,3.311]],["body/classes/HangmanWordResolver.html",[3,0.05,4,0.044,5,0.044,7,0.127,8,1.18,10,0.852,11,0.009,13,0.366,15,1.727,17,0.155,18,0.588,19,0.644,20,0.658,21,0.658,24,0.05,25,0.205,26,1.435,27,1.234,28,2.132,30,0.004,31,0.004,64,4.031,65,5.138,90,1.951,91,1.355,92,0.366,93,0.898,97,1.654,102,1.654,140,0.866,155,2.931,177,2.054,199,0.352,209,1.399,220,0.333,223,2.528,226,3.068,227,2.528,248,4.112,249,3.641,253,2.877,286,2.877,301,1.626,348,4.112,377,4.112,383,4.112,436,1.536,511,2.522,522,1,524,1,525,1.529,528,1,543,1.98,545,3.026,547,3.334,548,1.883,551,1.798,556,1.883,557,3.623,560,1.798,562,3.577,563,1.722,564,1.722,565,1.592,566,1.536,567,1.722,568,1.722,569,1.722,571,1.722,573,1.98,574,1.798,575,3.577,577,1.98,578,1.798,580,1.98,581,1.722,583,1.98,584,1.722,586,1.98,603,5.136,606,2.4,620,4.112,622,2.229,623,3.407,625,2.4,626,1.98,634,4.112,635,3.672,636,1.98,637,1.98,659,2.4,666,2.4,667,4.547,668,4.547,669,4.547,670,4.547,671,2.628,672,2.975,673,2.628,674,2.975,675,2.628,676,2.975,677,4.547,678,2.628,679,2.975,680,2.628,681,2.975,682,2.628,683,2.975,684,2.975,685,2.975,686,2.975,687,2.975,688,2.975]],["title/injectables/HangmanWordService.html",[74,0.873,620,2.94]],["body/injectables/HangmanWordService.html",[3,0.069,4,0.06,5,0.06,7,0.176,8,1.494,11,0.009,13,0.41,15,1.97,17,0.155,18,0.811,24,0.069,25,0.283,30,0.005,31,0.005,64,4.064,65,4.052,74,1.138,75,1.452,90,2.188,91,1.52,92,0.41,93,1.007,140,1.196,233,0.699,248,2.733,249,2.872,345,1.466,348,2.733,377,2.733,383,2.733,496,2.323,497,2.26,498,2.323,499,2.323,500,2.323,508,1.656,509,2.608,511,2.432,512,1.656,513,2.458,515,1.656,516,2.778,518,1.656,522,1.381,524,1.381,525,1.937,528,1.381,588,4.416,589,3.48,591,2.481,592,2.481,593,2.481,594,2.481,595,1.752,596,2.69,597,2.481,598,3.202,599,2.481,600,2.481,601,2.481,602,2.599,619,4.798,620,3.833,625,3.313,627,3.077,634,2.733,635,4.426,636,2.733,637,2.733,689,3.313,690,3.628]],["title/classes/IdArg.html",[25,0.305,366,2.131]],["body/classes/IdArg.html",[3,0.093,4,0.082,5,0.082,7,0.238,10,0.713,11,0.009,13,0.291,17,0.146,24,0.118,25,0.535,30,0.007,31,0.007,92,0.291,151,1.214,199,0.659,209,1.262,220,0.624,233,0.941,235,1.186,239,1.333,254,1.785,257,2.208,258,1.351,301,1.291,315,3.3,344,2.258,366,3.407,373,2.604,374,2.984,424,5.425,430,4.497,433,4.701,691,4.497,692,5.575,693,3.922]],["title/classes/IdArrayArg.html",[25,0.305,373,2.064]],["body/classes/IdArrayArg.html",[3,0.092,4,0.081,5,0.081,7,0.235,10,0.704,11,0.009,13,0.287,17,0.145,24,0.117,25,0.532,30,0.007,31,0.007,92,0.287,93,0.896,151,1.208,199,0.65,209,1.246,220,0.616,233,0.936,235,1.176,239,1.325,241,1.945,257,2.19,258,1.333,301,1.622,315,3.272,344,1.602,366,2.654,373,3.272,374,4.125,375,3.059,424,5.399,430,4.438,433,4.661,691,4.438,693,3.871,694,5.502]],["title/classes/IdInput.html",[25,0.305,343,1.644]],["body/classes/IdInput.html",[3,0.105,4,0.093,5,0.093,7,0.269,11,0.009,13,0.327,17,0.118,24,0.105,25,0.434,30,0.007,31,0.007,92,0.327,151,1.132,220,0.703,233,0.923,234,4.08,235,1.277,247,3.492,343,2.83,344,2.382,433,5.061,693,4.419,695,5.55,696,6.282]],["title/classes/JwtAuthGuard.html",[25,0.305,697,3.565]],["body/classes/JwtAuthGuard.html",[3,0.113,4,0.1,5,0.1,11,0.008,17,0.127,24,0.113,25,0.467,30,0.008,31,0.008,123,4.278,220,0.756,233,0.821,438,5.066,444,5.454,446,5.973,697,6.411,698,5.973]],["title/injectables/JwtStrategy.html",[74,0.873,114,3.109]],["body/injectables/JwtStrategy.html",[3,0.083,4,0.073,5,0.073,7,0.212,8,1.697,11,0.009,13,0.341,15,1.285,17,0.147,18,0.978,24,0.083,25,0.342,27,2.053,28,1.586,30,0.006,31,0.006,74,1.292,75,1.75,84,3.318,90,1.819,91,1.263,92,0.406,93,0.837,95,3.711,114,4.603,117,3.484,123,3.133,129,3.995,132,4.375,138,5.278,140,1.905,141,4.375,142,4.897,146,5.78,151,0.974,154,3.953,159,3.995,160,4.375,172,4.375,173,3.711,174,4.375,178,4.375,180,4.375,233,0.601,699,4.375,700,4.952,701,6.543,702,6.543,703,4.952,704,4.952,705,4.375,706,3.995,707,4.375,708,4.375,709,4.375,710,4.952,711,4.952,712,4.952,713,3.711,714,4.952,715,4.952]],["title/classes/LocalAuthGuard.html",[25,0.305,100,3.311]],["body/classes/LocalAuthGuard.html",[3,0.113,4,0.099,5,0.099,11,0.008,17,0.127,24,0.113,25,0.465,30,0.008,31,0.008,100,5.941,123,4.261,220,0.753,233,0.817,438,5.046,444,6.396,716,5.949,717,5.432]],["title/injectables/LocalStrategy.html",[74,0.873,115,3.109]],["body/injectables/LocalStrategy.html",[3,0.081,4,0.071,5,0.071,7,0.207,8,1.675,11,0.009,13,0.336,15,1.259,17,0.152,18,0.958,19,1.05,20,1.074,21,1.074,24,0.081,25,0.335,26,2.34,27,2.012,28,1.554,30,0.006,31,0.006,74,1.275,75,1.715,84,3.285,90,1.794,91,1.246,92,0.336,93,0.826,98,5.238,99,3.914,104,2.932,109,2.698,115,4.541,123,3.07,138,5.207,140,1.413,149,4.476,150,5.703,151,1.232,152,5.145,154,3.9,155,2.402,169,1.904,189,3.636,190,3.07,233,0.589,705,4.287,706,3.914,707,4.287,708,4.287,709,4.287,717,3.914,718,4.287,719,4.852,720,4.852,721,4.852,722,6.455,723,4.852,724,4.852,725,4.852]],["title/classes/MirrorWord.html",[25,0.305,726,2.94]],["body/classes/MirrorWord.html",[3,0.073,4,0.064,5,0.064,7,0.186,10,0.993,11,0.009,13,0.405,17,0.139,19,0.944,20,0.965,21,0.965,24,0.115,25,0.301,30,0.006,31,0.006,92,0.428,93,0.947,151,1.023,169,1.712,199,0.515,203,1.397,209,0.988,220,0.488,235,1.008,239,1.379,253,4.347,260,4,273,3.148,301,1.01,367,1.582,452,2.491,454,3.546,455,3.819,456,3.676,457,2.849,458,2.525,459,2.525,461,3.976,464,2.525,469,3.476,470,4.643,471,2.931,472,2.525,473,2.525,474,3.339,475,1.759,477,2.525,605,3.069,607,3.854,608,3.854,609,3.854,611,3.854,612,3.854,726,3.997,727,5.644,728,5.97,729,3.519,730,3.269,731,3.854]],["title/modules/MirrorWordModule.html",[32,1.602,43,3.109]],["body/modules/MirrorWordModule.html",[3,0.083,4,0.073,5,0.073,11,0.009,17,0.157,18,0.975,24,0.083,25,0.341,30,0.006,31,0.006,32,2.368,34,2.306,35,3.05,43,6.192,49,3.371,50,2.549,51,2.549,53,3.256,54,2.462,61,3.495,62,3.474,91,0.953,202,2.745,203,1.581,219,3.631,260,2.462,471,2.107,492,2.858,621,4.362,622,3.7,624,4.362,626,3.285,627,3.7,726,3.285,730,4.893,732,4.362,733,4.362,734,4.362,735,5.943,736,5.943,737,4.893,738,5.268,739,4.938]],["title/injectables/MirrorWordRepository.html",[74,0.873,735,2.94]],["body/injectables/MirrorWordRepository.html",[3,0.06,4,0.053,5,0.053,7,0.153,8,1.351,11,0.009,13,0.391,15,1.866,17,0.157,18,0.705,19,0.772,20,0.79,21,0.79,24,0.06,25,0.246,28,1.142,30,0.005,31,0.005,61,4.019,74,1.029,75,1.261,84,3.78,90,2.087,91,1.45,92,0.375,93,0.961,109,1.983,140,1.039,155,2.794,169,2.044,177,1.938,203,1.142,233,0.632,259,2.374,260,2.597,261,4.103,345,1.388,350,2.374,386,4.5,387,2.374,475,1.439,495,4.103,496,2.1,497,2.044,498,2.1,499,2.1,500,2.1,502,3.76,505,4.601,506,2.51,507,3.152,508,1.439,509,2.358,510,2.374,511,2.165,512,1.439,513,2.222,514,2.155,515,1.439,516,2.512,517,2.673,518,1.439,519,2.155,520,2.065,522,1.199,524,1.199,525,1.751,528,1.199,529,2.155,532,2.374,533,4.201,534,2.878,535,2.878,536,2.878,537,2.878,626,2.374,629,2.878,631,3.152,635,4.092,636,2.374,637,2.374,726,2.374,727,3.664,728,2.878,729,2.878,735,3.465,740,3.568,741,5.208,742,2.374,743,3.568,744,3.568]],["title/classes/MirrorWordResolver.html",[25,0.305,737,3.311]],["body/classes/MirrorWordResolver.html",[3,0.051,4,0.044,5,0.044,7,0.129,8,1.193,10,0.857,11,0.009,13,0.368,15,1.738,17,0.155,18,0.596,19,0.653,20,0.668,21,0.668,24,0.051,25,0.208,26,1.455,27,1.251,28,2.145,30,0.004,31,0.004,61,3.778,62,5.163,90,1.962,91,1.363,92,0.368,93,0.903,97,1.678,102,1.678,140,0.879,155,2.942,177,2.072,199,0.357,209,1.409,220,0.338,223,2.556,226,3.095,227,2.556,259,4.142,260,3.659,301,1.635,350,4.142,386,4.142,387,4.142,436,1.558,511,2.531,522,1.015,524,1.015,525,1.546,528,1.015,547,3.364,548,1.909,551,1.823,556,1.909,557,3.643,560,1.823,562,3.603,563,1.747,564,1.747,565,1.615,566,1.558,567,1.747,568,1.747,569,1.747,571,1.747,574,1.823,575,3.603,578,1.823,581,1.747,584,1.747,622,2.261,626,2.008,635,3.705,636,2.008,637,2.008,659,2.434,666,2.434,671,2.666,673,2.666,675,2.666,678,2.666,680,2.666,682,2.666,726,5.157,728,2.434,736,4.697,737,3.444,738,2.434,742,4.142,745,4.597,746,4.597,747,4.597,748,4.597,749,3.018,750,3.018,751,3.018,752,3.018,753,3.018,754,3.018,755,3.018,756,3.018,757,3.018,758,3.018,759,3.018,760,3.018,761,3.018,762,3.018,763,3.018,764,3.018,765,3.018]],["title/injectables/MirrorWordService.html",[74,0.873,736,2.94]],["body/injectables/MirrorWordService.html",[3,0.069,4,0.06,5,0.06,7,0.176,8,1.494,11,0.009,13,0.41,15,1.97,17,0.155,18,0.811,24,0.069,25,0.283,30,0.005,31,0.005,61,4.064,62,4.052,74,1.138,75,1.452,90,2.188,91,1.52,92,0.41,93,1.007,140,1.196,233,0.699,259,2.733,260,2.872,345,1.466,350,2.733,386,2.733,387,2.733,496,2.323,497,2.26,498,2.323,499,2.323,500,2.323,508,1.656,509,2.608,511,2.432,512,1.656,513,2.458,515,1.656,516,2.778,518,1.656,522,1.381,524,1.381,525,1.937,528,1.381,588,4.416,589,3.48,591,2.481,592,2.481,593,2.481,594,2.481,595,1.752,596,2.69,597,2.481,598,3.202,599,2.481,600,2.481,601,2.481,602,2.599,627,3.077,635,4.426,636,2.733,637,2.733,689,3.313,690,3.628,735,4.798,736,3.833,738,3.313,742,2.733]],["title/guards/PermissionGuard.html",[557,2.281,766,3.565]],["body/guards/PermissionGuard.html",[3,0.077,4,0.067,5,0.067,7,0.195,8,1.607,11,0.009,13,0.323,15,1.184,17,0.142,18,0.901,19,0.987,20,1.01,21,1.01,24,0.077,25,0.315,26,2.201,28,2.252,30,0.006,31,0.006,74,1.223,90,1.722,91,1.196,92,0.323,93,0.793,104,3.742,140,1.329,149,4.365,151,0.679,169,2.96,199,0.539,209,1.033,441,6.084,443,3.681,445,4.031,452,1.892,557,3.197,651,4.122,713,3.419,767,4.563,768,6.212,769,4.031,770,7.542,771,4.563,772,8.132,773,4.563,774,6.194,775,4.563,776,4.563,777,4.031,778,4.563,779,4.563,780,4.563,781,6.194,782,4.563,783,4.563,784,4.563,785,4.563,786,4.563,787,4.563,788,4.031,789,4.031,790,4.031,791,4.031,792,4.563,793,4.563,794,4.563,795,4.563,796,4.563,797,4.563,798,4.563,799,4.563]],["title/classes/Quiz.html",[25,0.305,71,1.486]],["body/classes/Quiz.html",[3,0.062,4,0.054,5,0.054,7,0.158,10,1.046,11,0.009,13,0.426,17,0.137,19,0.799,20,0.817,21,0.817,24,0.105,25,0.255,30,0.005,31,0.005,71,2.109,92,0.451,93,0.879,151,1.277,169,1.449,199,0.436,203,1.182,209,0.836,220,0.413,235,0.897,239,1.427,273,2.982,285,4.7,286,3.969,287,4.7,288,5.06,291,3.969,301,0.855,367,1.339,452,2.214,454,3.238,455,3.487,456,3.357,457,2.601,458,3.978,459,3.978,461,3.978,464,2.137,469,3.091,470,4.806,471,2.676,472,2.137,473,2.137,474,2.969,475,1.489,477,2.137,800,2.767,801,5.15,802,6.273,803,3.693,804,3.693,805,3.693,806,3.693,807,3.693,808,3.693,809,3.693,810,3.693,811,3.693,812,3.226,813,2.336,814,2.598,815,2.979,816,3.693,817,2.767,818,3.262]],["title/classes/QuizAnswer.html",[25,0.305,819,2.94]],["body/classes/QuizAnswer.html",[3,0.058,4,0.051,5,0.051,7,0.147,10,1.045,11,0.009,13,0.426,17,0.125,19,0.745,20,0.762,21,0.762,24,0.101,25,0.238,30,0.005,31,0.005,92,0.437,93,1.007,151,1.142,169,1.351,177,1.888,199,0.407,203,1.103,209,1.505,220,0.385,235,0.852,239,1.424,241,1.217,263,3.083,266,4.861,267,4.861,268,5.323,269,3.35,270,4.861,271,4.239,273,3.088,275,5.323,278,4.093,281,4.093,301,1.54,367,1.249,452,2.104,454,3.11,455,3.35,456,3.225,457,2.499,458,1.993,459,1.993,461,4.292,464,1.993,469,2.937,470,4.795,471,2.571,472,1.993,473,1.993,474,2.821,475,1.389,477,1.993,819,3.377,820,5.829,821,2.58,822,5.363,823,3.444,824,3.444,825,3.444,826,3.444,827,3.444,828,3.444,829,3.444,830,3.444,831,3.444,832,3.444,833,3.444,834,3.444,835,2.778,836,2.58,837,3.042]],["title/modules/QuizAnswerModule.html",[32,1.602,44,3.109]],["body/modules/QuizAnswerModule.html",[3,0.079,4,0.07,5,0.07,11,0.009,17,0.158,18,0.934,24,0.079,25,0.326,30,0.006,31,0.006,32,2.301,34,2.209,35,2.964,44,6.242,45,5.468,49,3.275,50,2.441,51,2.441,53,3.164,54,3.164,70,4.178,71,2.134,72,3.327,91,0.913,202,2.629,203,1.514,219,3.528,263,1.76,471,2.018,492,2.737,819,3.147,836,4.755,838,4.178,839,4.178,840,4.178,841,4.73,842,5.904,843,5.904,844,4.73,845,4.178,846,4.755,847,4.73,848,4.222,849,3.815,850,4.178,851,4.73]],["title/injectables/QuizAnswerRepository.html",[74,0.873,842,2.94]],["body/injectables/QuizAnswerRepository.html",[3,0.053,4,0.047,5,0.047,7,0.135,8,1.236,11,0.009,13,0.375,15,1.775,17,0.155,18,0.625,19,0.685,20,0.701,21,0.701,24,0.053,25,0.218,27,1.313,28,1.835,30,0.005,31,0.005,71,2.417,74,0.941,75,1.119,84,3.729,90,1.998,91,1.388,92,0.357,93,0.92,109,1.76,140,1.388,155,2.776,169,1.87,173,2.372,177,2.133,189,2.372,190,2.003,192,2.372,203,1.014,233,0.578,261,3.711,262,4.244,263,1.773,271,2.227,291,2.003,344,0.922,345,1.321,351,2.106,388,2.106,392,4.244,475,1.276,495,3.963,496,1.922,497,1.87,498,1.922,499,1.922,500,1.922,501,2.227,502,3.546,504,3.353,508,1.922,511,2.191,512,1.276,513,2.034,514,1.912,515,1.922,518,1.276,519,1.912,520,1.832,522,1.064,524,1.064,525,1.602,528,1.064,529,1.912,531,2.227,532,3.171,595,1.351,596,2.226,642,2.372,650,2.796,651,2.106,663,2.372,801,3.571,819,2.106,820,3.353,822,2.553,835,2.553,842,3.171,849,2.553,852,2.796,853,4.72,854,3.165,855,3.165,856,3.165,857,2.227,858,2.796,859,2.106,860,4.624,861,2.553,862,2.553,863,3.165,864,3.165,865,4.766,866,3.165,867,3.165,868,4.766,869,3.165,870,3.165,871,3.165,872,3.165,873,3.165,874,3.165,875,3.165,876,3.165,877,3.165,878,3.165,879,2.796]],["title/classes/QuizAnswerResolver.html",[25,0.305,846,3.311]],["body/classes/QuizAnswerResolver.html",[3,0.05,4,0.044,5,0.044,7,0.128,8,1.186,10,0.855,11,0.009,13,0.367,15,1.733,17,0.155,18,0.592,19,0.648,20,0.663,21,0.663,24,0.05,25,0.207,26,1.445,27,1.243,28,2.138,30,0.004,31,0.004,71,2.367,72,5.151,90,1.956,91,1.359,92,0.367,93,0.901,97,1.666,102,1.666,140,0.872,155,2.936,177,2.063,199,0.354,209,1.255,220,0.335,223,2.542,226,3.082,227,2.542,262,4.127,263,2.724,298,2.245,301,1.63,351,4.127,388,4.127,392,4.127,436,1.547,511,2.527,522,1.007,524,1.007,525,1.537,528,1.007,543,1.994,545,3.042,547,3.349,548,1.896,551,1.81,556,1.896,557,3.779,560,1.81,562,3.59,563,1.734,564,1.734,565,1.604,566,1.547,567,1.734,568,1.734,569,1.734,571,1.734,573,1.994,574,1.81,575,3.865,577,1.994,578,1.81,580,1.994,581,1.734,583,1.994,584,1.734,586,1.994,819,5.147,822,2.417,843,4.127,845,2.647,846,3.426,848,1.994,849,2.417,859,4.127,860,4.472,861,2.417,862,2.417,880,2.647,881,4.572,882,4.572,883,4.572,884,4.572,885,2.996,886,2.996,887,2.996,888,2.996,889,2.996,890,2.996,891,2.108,892,2.108,893,2.996,894,2.996,895,2.996,896,2.996,897,2.996,898,2.647,899,1.994,900,2.996,901,2.996,902,2.996,903,2.996,904,2.996]],["title/injectables/QuizAnswerService.html",[74,0.873,843,2.94]],["body/injectables/QuizAnswerService.html",[3,0.069,4,0.06,5,0.06,7,0.176,8,1.494,11,0.009,13,0.41,15,1.97,17,0.155,18,0.811,24,0.069,25,0.283,30,0.005,31,0.005,71,2.553,72,4.052,74,1.138,75,1.452,90,2.188,91,1.52,92,0.41,93,1.007,140,1.196,233,0.699,262,2.733,263,2.143,345,1.466,351,2.733,388,2.733,392,2.733,496,2.323,497,2.26,498,2.323,499,2.323,500,2.323,508,1.656,509,2.608,511,2.432,512,1.656,513,2.458,515,1.656,516,2.778,518,1.656,522,1.381,524,1.381,525,1.937,528,1.381,588,4.416,589,3.48,591,2.481,592,2.481,593,2.481,594,2.481,595,1.752,596,2.69,597,2.481,598,3.202,599,2.481,600,2.481,601,2.481,602,2.599,842,4.798,843,3.833,848,2.733,850,3.628,859,2.733,860,5.366,861,3.313,862,3.313,905,3.628,906,4.107]],["title/modules/QuizModule.html",[32,1.602,45,2.94]],["body/modules/QuizModule.html",[3,0.081,4,0.071,5,0.071,11,0.009,17,0.159,18,0.953,24,0.081,25,0.333,30,0.006,31,0.006,32,2.332,34,2.253,35,3.004,45,5.832,49,3.319,50,2.49,51,2.49,53,3.206,54,2.405,71,2.162,91,1.241,202,2.682,203,1.545,219,3.575,471,2.744,492,2.792,812,2.915,813,3.053,814,3.394,817,4.818,853,5.631,907,4.262,908,4.262,909,4.262,910,5.922,911,4.824,912,4.262,913,4.818,914,4.824,915,4.262,916,4.262,917,4.524,918,4.262,919,4.824]],["title/classes/QuizQuestion.html",[25,0.305,812,2.67]],["body/classes/QuizQuestion.html",[3,0.061,4,0.054,5,0.054,7,0.156,10,1.023,11,0.009,13,0.417,17,0.129,19,0.789,20,0.807,21,0.807,24,0.104,25,0.252,30,0.005,31,0.005,92,0.453,93,1.023,151,1.274,169,1.43,199,0.431,203,1.167,209,0.825,220,0.408,235,0.888,239,1.401,241,1.87,263,3.033,273,2.969,291,4.322,298,4.665,299,5.022,300,4.665,301,1.68,302,2.941,367,1.322,452,2.193,454,3.214,455,3.461,456,3.332,457,2.582,458,2.11,459,3.604,461,3.954,464,2.11,469,3.062,470,4.717,471,2.657,472,2.11,473,2.11,474,2.941,475,1.47,477,2.11,812,3.196,813,5.157,917,2.564,920,2.731,921,3.645,922,4.673,923,3.645,924,3.645,925,3.645,926,3.645,927,3.645,928,3.645,929,3.645,930,2.94,931,3.22]],["title/modules/QuizQuestionModule.html",[32,1.602,932,3.311]],["body/modules/QuizQuestionModule.html",[3,0.083,4,0.073,5,0.073,11,0.009,17,0.157,18,0.975,24,0.083,25,0.341,30,0.006,31,0.006,32,2.368,34,2.306,35,3.05,49,3.371,50,2.549,51,2.549,53,3.256,54,2.462,71,2.196,91,0.953,202,2.745,203,1.581,219,3.631,263,1.837,471,2.107,492,2.858,812,2.983,814,3.474,848,4.345,917,4.594,918,4.362,932,6.595,933,4.362,934,4.362,935,4.362,936,5.943,937,5.943,938,3.7,939,4.938,940,4.362,941,4.893,942,4.938,943,4.362]],["title/injectables/QuizQuestionRepository.html",[74,0.873,936,2.94]],["body/injectables/QuizQuestionRepository.html",[3,0.061,4,0.054,5,0.054,7,0.156,8,1.377,11,0.009,13,0.395,15,1.885,17,0.158,18,0.723,19,0.792,20,0.81,21,0.81,24,0.061,25,0.253,30,0.005,31,0.005,71,2.548,74,1.048,75,1.294,84,3.752,90,2.106,91,1.463,92,0.379,93,0.969,140,1.066,155,2.704,177,1.974,203,1.172,233,0.644,261,4.277,263,1.974,291,2.316,294,2.316,296,4.391,345,1.403,355,2.436,398,2.436,401,2.436,475,1.476,495,4.132,496,2.14,497,2.082,498,2.14,499,2.14,500,2.14,501,2.575,502,3.805,504,3.733,508,1.476,509,2.403,510,2.436,511,2.327,512,1.476,513,2.264,514,2.212,515,1.476,516,2.559,517,2.743,518,1.476,519,2.212,520,2.119,522,1.231,524,1.231,525,1.784,528,1.231,529,2.212,531,2.575,595,1.562,596,2.478,812,2.212,813,3.357,814,2.575,857,2.575,930,2.953,936,3.531,944,3.234,945,3.661,946,2.316,947,2.953,948,2.953,949,3.661,950,3.661,951,3.661,952,3.661,953,3.661,954,3.661]],["title/classes/QuizQuestionResolver.html",[25,0.305,941,3.311]],["body/classes/QuizQuestionResolver.html",[3,0.05,4,0.044,5,0.044,7,0.128,8,1.186,10,0.855,11,0.009,13,0.367,15,1.733,17,0.155,18,0.592,19,0.648,20,0.663,21,0.663,24,0.05,25,0.207,26,1.445,27,1.243,28,2.138,30,0.004,31,0.004,71,2.367,90,1.956,91,1.359,92,0.367,93,0.901,97,1.666,102,1.666,140,0.872,155,2.936,177,2.063,199,0.354,209,1.255,220,0.335,223,2.542,226,3.082,227,2.542,263,2.724,287,2.245,291,1.896,294,3.924,296,3.9,301,1.63,355,4.127,398,4.127,401,4.127,436,1.547,511,2.527,522,1.007,524,1.007,525,1.537,528,1.007,543,1.994,545,3.042,547,3.349,548,1.896,551,1.81,556,1.896,557,3.779,560,1.81,562,3.59,563,1.734,564,1.734,565,1.604,566,1.547,567,1.734,568,1.734,569,1.734,571,1.734,573,1.994,574,1.81,575,3.865,577,1.994,578,1.81,580,1.994,581,1.734,583,1.994,584,1.734,586,1.994,812,4.673,814,2.108,848,1.994,891,2.108,892,2.108,898,2.647,899,1.994,937,4.127,938,5.486,940,2.647,941,3.426,946,3.924,947,2.417,948,2.417,955,2.647,956,4.572,957,4.572,958,4.572,959,4.572,960,2.996,961,2.996,962,2.996,963,2.996,964,2.996,965,2.996,966,2.996,967,2.996,968,2.996,969,2.996,970,2.996,971,2.996,972,2.996,973,2.996,974,2.996,975,2.996]],["title/injectables/QuizQuestionService.html",[74,0.873,937,2.94]],["body/injectables/QuizQuestionService.html",[3,0.069,4,0.06,5,0.06,7,0.176,8,1.494,11,0.009,13,0.41,15,1.97,17,0.155,18,0.811,24,0.069,25,0.283,30,0.005,31,0.005,71,2.553,74,1.138,75,1.452,90,2.188,91,1.52,92,0.41,93,1.007,140,1.196,233,0.699,263,2.143,294,2.599,296,4.68,345,1.466,355,2.733,398,2.733,401,2.733,496,2.323,497,2.26,498,2.323,499,2.323,500,2.323,508,1.656,509,2.608,511,2.432,512,1.656,513,2.458,515,1.656,516,2.778,518,1.656,522,1.381,524,1.381,525,1.937,528,1.381,588,4.416,589,3.48,591,2.481,592,2.481,593,2.481,594,2.481,595,1.752,596,2.69,597,2.481,598,3.202,599,2.481,600,2.481,601,2.481,602,2.599,848,2.733,936,4.798,937,3.833,938,4.316,943,3.628,946,2.599,947,3.313,948,3.313,976,3.628,977,4.107]],["title/injectables/QuizRepository.html",[74,0.873,910,2.94]],["body/injectables/QuizRepository.html",[3,0.059,4,0.051,5,0.051,7,0.26,8,1.331,11,0.009,13,0.388,15,1.85,17,0.156,18,0.69,19,0.756,20,0.773,21,0.773,24,0.059,25,0.241,28,1.946,30,0.005,31,0.005,71,1.175,74,1.013,75,1.235,84,3.807,90,2.072,91,1.439,92,0.372,93,0.954,140,1.017,155,2.867,177,2.261,203,1.119,233,0.623,261,3.848,282,4.455,285,2.618,300,2.618,345,1.377,353,2.325,395,2.325,403,4.455,454,1.803,475,1.409,495,4.079,496,2.068,497,2.012,498,2.068,499,2.068,500,2.068,501,2.458,502,3.722,504,3.608,506,2.458,508,2.068,511,2.283,512,1.409,513,2.188,514,2.111,515,2.068,518,1.409,519,2.111,520,2.022,522,1.175,524,1.175,525,1.724,528,1.175,529,2.111,531,2.458,532,3.412,595,1.491,596,2.395,642,2.618,645,4.531,647,2.818,648,2.818,663,2.618,801,2.618,815,2.818,857,2.458,879,3.086,910,3.412,978,3.086,979,3.494,980,3.494,981,3.494,982,2.325,983,4.902,984,2.818,985,2.818,986,3.494,987,3.086,988,3.494,989,3.494,990,3.494]],["title/classes/QuizResolver.html",[25,0.305,913,3.311]],["body/classes/QuizResolver.html",[3,0.052,4,0.046,5,0.046,7,0.133,8,1.223,10,0.87,11,0.009,13,0.373,15,1.763,17,0.156,18,0.616,19,0.675,20,0.69,21,0.69,24,0.052,25,0.215,26,1.504,27,1.293,28,2.176,30,0.004,31,0.004,71,2.63,90,1.987,91,1.38,92,0.373,93,0.915,97,1.734,102,1.734,140,0.908,155,2.967,177,2.114,199,0.368,209,1.286,220,0.349,223,2.62,226,3.158,227,2.62,282,4.212,301,1.655,353,4.212,395,4.212,403,4.212,436,1.61,511,2.553,522,1.048,524,1.048,525,1.584,528,1.048,543,2.075,545,3.136,547,3.432,548,1.973,551,1.884,556,1.973,557,3.831,560,1.884,562,3.664,563,1.805,564,1.805,565,1.669,566,1.61,567,1.805,568,1.805,569,1.805,571,1.805,573,2.075,574,1.884,575,3.934,577,2.075,578,1.884,580,2.075,581,1.805,583,2.075,584,1.805,586,2.075,801,2.337,853,4.005,891,2.194,892,2.194,899,2.075,912,2.755,913,3.531,915,2.755,982,4.212,983,4.582,984,2.516,985,2.516,991,2.755,992,4.713,993,4.713,994,4.713,995,4.713,996,3.118,997,3.118,998,3.118,999,3.118,1000,3.118,1001,3.118,1002,3.118,1003,3.118,1004,3.118,1005,3.118,1006,3.118,1007,3.118,1008,3.118,1009,3.118,1010,3.118,1011,3.118,1012,3.118]],["title/injectables/QuizService.html",[74,0.873,853,2.796]],["body/injectables/QuizService.html",[3,0.071,4,0.062,5,0.062,7,0.18,8,1.52,11,0.009,13,0.413,15,1.988,17,0.156,18,0.831,24,0.071,25,0.29,30,0.006,31,0.006,74,1.157,75,1.488,90,2.205,91,1.532,92,0.413,93,1.015,140,1.226,233,0.711,282,2.801,345,1.479,353,2.801,395,2.801,403,2.801,496,2.363,497,2.299,498,2.363,499,2.363,500,2.363,508,1.698,509,2.653,511,2.454,512,1.698,513,2.5,515,1.698,516,2.826,518,1.698,522,1.415,524,1.415,525,1.97,528,1.415,588,4.443,589,3.54,591,2.543,592,2.543,593,2.543,594,2.543,595,1.796,596,2.737,597,2.543,598,3.258,599,2.543,600,2.543,601,2.543,602,2.663,853,3.708,910,4.85,916,3.719,982,2.801,983,5.438,984,3.396,985,3.396,1013,3.719,1014,4.21]],["title/injectables/RepositoryProxyService.html",[74,0.873,588,2.365]],["body/injectables/RepositoryProxyService.html",[3,0.068,4,0.06,5,0.06,7,0.174,8,1.484,11,0.009,13,0.409,15,1.963,17,0.135,18,0.803,24,0.068,25,0.281,27,1.687,28,2.423,30,0.005,31,0.005,74,1.13,75,1.438,90,2.181,91,1.515,92,0.409,93,1.004,140,1.184,233,0.872,343,2.462,347,1.64,366,2.759,369,1.687,373,2.672,495,2.099,496,2.307,497,2.245,498,2.307,499,2.307,500,2.307,508,2.307,509,3.251,511,2.423,512,2.307,513,3.064,515,2.307,516,3.463,518,2.307,588,3.062,589,2.457,591,3.456,595,2.441,596,3.354,598,3.992,693,4.025,1015,7.122,1016,3.593,1017,6.618,1018,4.067,1019,4.067,1020,4.067,1021,4.067,1022,4.067,1023,4.067,1024,4.067,1025,3.593,1026,4.067,1027,4.067,1028,4.067,1029,4.067,1030,4.067]],["title/classes/Role.html",[25,0.305,1031,2.558]],["body/classes/Role.html",[3,0.069,4,0.061,5,0.061,7,0.176,10,1.036,11,0.009,13,0.422,17,0.136,19,0.893,20,0.913,21,0.913,24,0.112,25,0.285,30,0.006,31,0.006,91,1.288,92,0.443,93,0.925,151,1.25,169,1.619,199,0.488,203,1.321,209,0.934,220,0.462,235,0.97,239,1.42,273,3.094,286,4.22,301,0.956,310,5.38,367,1.496,452,2.397,454,3.443,455,3.708,456,3.57,457,2.766,458,3.345,459,3.345,461,4.183,464,2.389,469,3.345,470,4.781,471,2.846,472,2.389,473,2.389,474,3.213,475,1.664,477,2.389,1031,3.345,1032,3.092,1033,5.084,1034,4.127,1035,4.127,1036,4.127,1037,4.127,1038,4.127,1039,4.127,1040,4.127,1041,3.092,1042,2.903,1043,3.646]],["title/modules/RoleModule.html",[32,1.602,46,2.94]],["body/modules/RoleModule.html",[3,0.079,4,0.069,5,0.069,11,0.009,17,0.16,18,0.926,24,0.079,25,0.324,30,0.006,31,0.006,32,2.288,34,2.191,35,2.947,39,5.187,46,5.896,48,3.993,49,3.257,50,2.421,51,2.421,53,3.146,54,3.146,58,3.783,59,3.783,91,0.905,117,4.439,202,2.607,203,1.502,219,3.508,471,2.001,492,2.715,1031,2.715,1042,4.439,1044,4.143,1045,4.143,1046,4.143,1047,4.69,1048,5.896,1049,5.896,1050,4.69,1051,4.143,1052,4.728,1053,4.69,1054,4.143,1055,4.143,1056,3.783]],["title/injectables/RoleRepository.html",[74,0.873,1048,2.94]],["body/injectables/RoleRepository.html",[3,0.064,4,0.056,5,0.056,7,0.162,8,1.412,11,0.009,13,0.4,15,1.912,17,0.159,18,0.749,19,0.821,20,0.839,21,0.839,24,0.064,25,0.262,30,0.005,31,0.005,74,1.075,75,1.34,84,3.782,90,2.132,91,1.481,92,0.384,93,0.981,140,1.104,155,2.742,177,2.025,203,1.214,233,0.661,261,4.311,307,2.523,345,1.422,357,2.523,406,2.523,409,2.523,475,1.529,495,4.172,496,2.195,497,2.136,498,2.195,499,2.195,500,2.195,502,3.868,508,1.529,509,2.465,510,2.523,511,2.359,512,1.529,513,2.323,514,2.291,515,1.529,516,2.625,517,2.842,518,1.529,519,2.291,520,2.195,522,1.275,524,1.275,525,1.83,528,1.275,529,2.291,595,1.618,596,2.542,857,2.668,1031,2.195,1033,2.668,1041,2.842,1048,3.622,1057,3.35,1058,3.793,1059,3.793,1060,4.809,1061,3.793,1062,2.523,1063,5.136,1064,3.059,1065,3.059,1066,3.793,1067,3.793]],["title/classes/RoleResolver.html",[25,0.305,1052,3.311]],["body/classes/RoleResolver.html",[3,0.053,4,0.047,5,0.047,7,0.135,8,1.236,10,0.875,11,0.009,13,0.375,15,1.775,17,0.157,18,0.625,19,0.685,20,0.701,21,0.701,24,0.053,25,0.218,26,1.527,27,1.313,28,2.191,30,0.005,31,0.005,90,1.998,91,1.388,92,0.375,93,0.92,97,1.76,102,1.76,140,0.922,155,2.978,177,2.133,199,0.374,209,1.298,220,0.354,223,2.65,226,3.187,227,2.65,301,1.665,307,4.244,332,3.571,357,4.244,406,4.244,409,4.244,436,1.634,511,2.563,522,1.064,524,1.064,525,1.602,528,1.064,556,2.003,557,2.959,562,3.692,563,1.832,564,1.832,565,1.694,566,1.634,567,1.832,568,1.832,569,1.832,571,1.832,574,1.912,575,3.96,578,1.912,581,1.832,584,1.832,899,2.106,1031,4.546,1033,2.227,1049,4.784,1051,2.796,1052,3.571,1054,2.796,1062,4.244,1063,4.624,1064,2.553,1065,2.553,1068,2.796,1069,4.766,1070,4.766,1071,4.766,1072,3.165,1073,3.165,1074,3.165,1075,3.165,1076,3.165,1077,3.165,1078,3.165,1079,3.165,1080,3.165,1081,3.165,1082,3.165,1083,3.165,1084,3.165,1085,3.165,1086,3.165,1087,3.165,1088,3.165,1089,3.165,1090,3.165,1091,3.165,1092,3.165,1093,3.165,1094,3.165,1095,3.165,1096,3.165,1097,3.165,1098,3.165]],["title/injectables/RoleService.html",[74,0.873,1049,2.94]],["body/injectables/RoleService.html",[3,0.071,4,0.062,5,0.062,7,0.18,8,1.52,11,0.009,13,0.413,15,1.988,17,0.156,18,0.831,24,0.071,25,0.29,30,0.006,31,0.006,74,1.157,75,1.488,90,2.205,91,1.532,92,0.413,93,1.015,140,1.226,233,0.711,307,2.801,345,1.479,357,2.801,406,2.801,409,2.801,496,2.363,497,2.299,498,2.363,499,2.363,500,2.363,508,1.698,509,2.653,511,2.454,512,1.698,513,2.5,515,1.698,516,2.826,518,1.698,522,1.415,524,1.415,525,1.97,528,1.415,588,4.443,592,2.543,593,2.543,594,2.543,595,1.796,596,2.737,597,2.543,598,3.258,599,2.543,600,2.543,601,2.543,1048,5.099,1049,3.899,1055,3.719,1062,2.801,1063,5.438,1064,3.396,1065,3.396,1099,3.719,1100,5.86,1101,4.21,1102,4.21]],["title/classes/School.html",[25,0.305,1103,2.94]],["body/classes/School.html",[3,0.065,4,0.057,5,0.057,7,0.165,10,1.058,11,0.009,13,0.431,17,0.132,19,0.836,20,0.855,21,0.855,24,0.108,25,0.267,30,0.005,31,0.005,91,1.242,92,0.447,93,0.898,151,1.287,169,1.515,199,0.456,203,1.237,209,0.874,220,0.432,235,0.926,239,1.441,269,3.576,273,3.028,301,0.894,319,4.525,320,4.82,321,4.07,367,1.4,452,2.287,454,3.32,455,3.576,456,3.442,457,2.667,458,3.192,459,3.192,461,4.466,464,2.235,469,3.192,470,4.853,471,2.745,472,2.235,473,2.235,474,3.066,475,1.557,477,2.235,1103,3.669,1104,2.894,1105,5.66,1106,3.862,1107,3.862,1108,3.862,1109,3.862,1110,3.862,1111,3.862,1112,3.862,1113,3.862,1114,3.862,1115,3.115,1116,2.894,1117,3.412]],["title/modules/SchoolModule.html",[32,1.602,47,3.109]],["body/modules/SchoolModule.html",[3,0.084,4,0.074,5,0.074,11,0.009,17,0.157,18,0.993,24,0.084,25,0.347,30,0.006,31,0.006,32,2.396,34,2.347,35,3.086,47,6.212,49,3.41,50,2.594,51,2.594,53,3.294,54,2.506,91,0.97,202,2.794,203,1.609,219,3.673,471,2.144,492,2.909,1103,3.344,1116,4.951,1118,4.44,1119,4.44,1120,4.44,1121,5.959,1122,5.959,1123,5.026,1124,4.44,1125,4.951,1126,5.026,1127,4.44,1128,4.44,1129,5.026]],["title/injectables/SchoolRepository.html",[74,0.873,1121,2.94]],["body/injectables/SchoolRepository.html",[3,0.057,4,0.05,5,0.05,7,0.145,8,1.301,11,0.009,13,0.384,15,1.827,17,0.155,18,0.669,19,0.733,20,0.75,21,0.75,24,0.057,25,0.234,28,1.606,30,0.005,31,0.005,74,0.99,75,1.198,84,3.738,90,2.049,91,1.423,92,0.384,93,0.943,140,0.987,155,2.743,169,1.967,177,2.221,203,1.085,233,0.609,261,4.043,316,2.254,345,1.359,359,2.254,411,2.254,414,4.39,475,1.366,495,4.043,496,2.022,497,1.967,498,2.022,499,2.407,500,2.022,501,2.384,502,3.668,504,3.527,506,2.384,508,1.366,509,2.27,510,2.254,511,2.361,512,1.366,513,2.139,514,2.047,515,2.022,518,1.366,519,2.047,520,1.961,522,1.139,524,1.139,525,1.686,528,1.139,529,2.047,531,2.384,532,2.254,595,1.446,596,2.342,642,2.539,647,4.045,648,4.045,857,2.384,987,2.993,1103,2.254,1105,2.733,1115,2.733,1121,3.336,1130,2.993,1131,3.388,1132,3.388,1133,2.254,1134,4.815,1135,2.733,1136,2.733,1137,3.388,1138,3.388,1139,3.388,1140,3.388,1141,3.388,1142,5.969,1143,3.388,1144,3.388,1145,3.388,1146,5.969,1147,3.388,1148,3.388,1149,3.388]],["title/classes/SchoolResolver.html",[25,0.305,1125,3.311]],["body/classes/SchoolResolver.html",[3,0.053,4,0.047,5,0.047,7,0.135,8,1.236,10,0.875,11,0.009,13,0.375,15,1.775,17,0.157,18,0.625,19,0.685,20,0.701,21,0.701,24,0.053,25,0.218,26,1.527,27,1.313,28,2.191,30,0.005,31,0.005,90,1.998,91,1.388,92,0.375,93,0.92,97,1.76,102,1.76,140,0.922,155,2.978,177,2.133,199,0.374,209,1.298,220,0.354,223,2.65,226,3.187,227,2.65,301,1.665,316,4.244,359,4.244,411,4.244,414,4.244,436,1.634,511,2.563,522,1.064,524,1.064,525,1.602,528,1.064,543,2.106,545,3.171,547,2.879,551,1.912,557,3.292,560,1.912,562,3.692,563,1.832,564,1.832,565,1.694,566,1.634,567,1.832,568,1.832,569,1.832,571,2.758,573,2.106,575,3.318,577,2.106,580,2.106,581,1.832,583,2.106,584,1.832,586,2.106,891,2.227,892,2.227,899,2.106,1103,5.227,1105,2.553,1122,4.244,1124,2.796,1125,3.571,1127,2.796,1133,4.244,1134,4.624,1135,2.553,1136,2.553,1150,2.796,1151,4.766,1152,4.766,1153,4.766,1154,4.766,1155,3.165,1156,3.165,1157,3.165,1158,3.165,1159,3.165,1160,3.165,1161,3.165,1162,3.165,1163,3.165,1164,3.165,1165,3.165,1166,3.165,1167,3.165,1168,3.165,1169,3.165,1170,3.165,1171,3.165,1172,3.165]],["title/injectables/SchoolService.html",[74,0.873,1122,2.94]],["body/injectables/SchoolService.html",[3,0.071,4,0.062,5,0.062,7,0.18,8,1.52,11,0.009,13,0.413,15,1.988,17,0.156,18,0.831,24,0.071,25,0.29,30,0.006,31,0.006,74,1.157,75,1.488,90,2.205,91,1.532,92,0.413,93,1.015,140,1.226,233,0.711,316,2.801,345,1.479,359,2.801,411,2.801,414,2.801,496,2.363,497,2.299,498,2.363,499,2.363,500,2.363,508,1.698,509,2.653,511,2.454,512,1.698,513,2.5,515,1.698,516,2.826,518,1.698,522,1.415,524,1.415,525,1.97,528,1.415,588,4.443,589,3.54,591,2.543,592,2.543,593,2.543,594,2.543,595,1.796,596,2.737,597,2.543,598,3.258,599,2.543,600,2.543,601,2.543,602,2.663,1121,4.85,1122,3.899,1128,3.719,1133,2.801,1134,5.438,1135,3.396,1136,3.396,1173,3.719,1174,4.21]],["title/injectables/SimpleRepository.html",[74,0.873,495,2.281]],["body/injectables/SimpleRepository.html",[3,0.054,4,0.047,5,0.047,7,0.137,8,1.251,11,0.009,13,0.377,15,1.786,17,0.13,18,0.635,19,0.695,20,0.711,21,0.711,24,0.054,25,0.222,27,1.333,28,2.315,30,0.005,31,0.005,74,0.952,75,1.136,84,3.852,90,2.01,91,1.396,92,0.359,93,0.925,109,1.787,140,0.936,155,2.989,169,1.891,177,2.562,190,4.575,192,2.408,261,4.391,273,2.27,321,2.033,343,1.196,344,1.684,347,1.296,366,1.55,369,1.333,373,1.501,454,1.659,455,1.787,456,3.096,457,1.333,474,1.787,475,1.296,495,2.488,496,1.944,497,1.891,498,2.333,499,1.944,500,2.333,502,4.02,508,1.944,509,2.619,511,2.526,512,1.944,513,2.468,515,1.944,516,2.79,518,1.944,566,1.659,595,2.057,596,3.002,598,1.787,643,4.259,651,2.138,663,2.408,693,3.391,713,2.408,858,2.839,1025,2.839,1175,2.839,1176,3.214,1177,3.214,1178,3.214,1179,3.214,1180,3.214,1181,3.214,1182,3.214,1183,2.839,1184,3.214,1185,2.68,1186,2.839,1187,2.839,1188,2.839,1189,3.214,1190,3.214,1191,3.214,1192,4.82,1193,3.214,1194,5.11,1195,4.82,1196,3.214,1197,2.592,1198,2.839,1199,3.214,1200,3.214,1201,3.214,1202,3.214,1203,3.214,1204,3.214]],["title/classes/UpdateGroupingItemInput.html",[25,0.305,521,2.94]],["body/classes/UpdateGroupingItemInput.html",[3,0.074,4,0.065,5,0.065,7,0.187,10,0.949,11,0.009,13,0.405,17,0.14,19,0.949,20,0.97,21,0.97,24,0.074,25,0.416,30,0.006,31,0.006,66,4.162,92,0.405,93,1.073,151,1.266,199,0.518,209,1.679,220,0.491,230,3.877,232,3.286,233,0.732,235,1.012,236,5.556,237,5.556,238,5.556,239,1.337,240,3.874,241,1.55,244,2.027,245,0.97,254,1.404,257,1.884,258,1.062,273,2.365,301,1.718,302,3.351,343,2.76,344,2.006,345,0.846,347,1.768,367,2.186,452,2.5,457,2.856,521,4.011,1185,3.829,1205,6.87,1206,4.385,1207,4.385,1208,2.774,1209,4.385]],["title/classes/UpdateHangmanWordInput.html",[25,0.305,634,2.94]],["body/classes/UpdateHangmanWordInput.html",[3,0.079,4,0.069,5,0.069,7,0.201,10,0.914,11,0.009,13,0.398,17,0.144,19,1.018,20,1.041,21,1.041,24,0.079,25,0.436,30,0.006,31,0.006,64,4.087,92,0.398,93,1.05,151,1.221,199,0.556,209,1.729,220,0.526,233,0.767,235,1.061,239,1.313,244,2.126,245,1.041,249,3.807,251,2.976,252,4.519,253,4.519,254,1.506,255,4.155,257,1.976,258,1.14,273,2.481,301,1.464,343,2.841,344,2.079,345,0.908,347,1.897,367,2.292,452,2.622,457,2.961,634,4.207,1185,3.97,1208,2.976,1210,6.16,1211,4.155,1212,4.703]],["title/classes/UpdateMirrorWordInput.html",[25,0.305,742,2.94]],["body/classes/UpdateMirrorWordInput.html",[3,0.085,4,0.075,5,0.075,7,0.217,10,0.852,11,0.009,13,0.387,17,0.148,19,1.1,20,1.126,21,1.126,24,0.085,25,0.46,30,0.006,31,0.006,61,3.974,92,0.387,93,0.852,151,1.173,199,0.601,220,0.569,233,0.808,235,1.118,239,1.276,244,2.239,245,1.126,251,3.218,253,4.698,254,2.132,257,2.321,258,1.233,260,3.702,273,2.613,343,2.931,344,2.162,345,0.982,347,2.051,452,2.761,457,3.079,742,4.431,1185,4.128,1208,3.218,1210,5.989,1211,4.494,1213,5.087]],["title/classes/UpdateQuizAnswerInput.html",[25,0.305,859,2.94]],["body/classes/UpdateQuizAnswerInput.html",[3,0.066,4,0.058,5,0.058,7,0.168,10,0.993,11,0.009,13,0.416,17,0.133,19,0.849,20,0.869,21,0.869,24,0.066,25,0.385,30,0.005,31,0.005,71,2.683,92,0.416,93,1.1,151,1.214,199,0.464,209,1.905,220,0.439,233,0.677,235,0.937,239,1.372,241,1.387,244,1.876,245,0.869,254,1.257,257,1.744,258,0.951,263,2.969,265,2.941,266,5.235,267,5.235,269,3.608,270,5.235,271,4.566,272,3.468,273,2.773,274,3.468,277,3.468,278,4.5,281,4.5,301,1.796,343,2.63,344,1.89,345,0.758,347,1.583,367,2.563,452,2.313,457,2.691,859,3.712,1185,3.608,1208,2.483,1214,7.05,1215,3.925,1216,3.925,1217,3.925]],["title/classes/UpdateQuizInput.html",[25,0.305,982,2.94]],["body/classes/UpdateQuizInput.html",[3,0.071,4,0.062,5,0.062,7,0.18,10,0.981,11,0.009,13,0.414,17,0.144,19,0.913,20,0.934,21,0.934,24,0.071,25,0.405,30,0.006,31,0.006,71,1.974,92,0.414,93,0.751,151,1.256,199,0.499,209,1.652,220,0.472,233,0.713,235,0.986,239,1.365,241,2.075,244,1.974,245,0.934,254,1.351,257,1.835,258,1.023,273,2.303,284,3.162,285,5.058,286,4.271,287,5.058,288,5.445,291,4.271,296,2.969,301,1.839,302,4.057,343,2.715,344,1.966,345,0.815,347,1.702,367,2.128,452,2.434,457,2.799,946,3.714,982,3.906,1185,3.753,1218,7.015,1219,4.22,1220,4.22,1221,4.22,1222,4.22,1223,4.22,1224,4.22,1225,3.404]],["title/classes/UpdateQuizQuestionInput.html",[25,0.305,946,2.796]],["body/classes/UpdateQuizQuestionInput.html",[3,0.07,4,0.061,5,0.061,7,0.177,10,0.975,11,0.009,13,0.412,17,0.136,19,0.897,20,0.918,21,0.918,24,0.07,25,0.4,30,0.006,31,0.006,71,2.655,92,0.438,93,1.01,151,1.292,199,0.49,209,1.64,220,0.464,233,0.704,235,0.974,239,1.357,241,2.05,244,1.95,245,0.918,254,1.328,257,1.813,258,1.005,263,2.938,273,2.276,297,3.108,298,5.011,299,5.395,300,5.011,301,1.829,302,4.026,303,3.664,304,3.664,343,2.695,344,1.947,345,0.801,347,1.672,367,2.103,452,2.405,457,2.773,946,3.67,1185,3.718,1208,2.624,1225,6.37,1226,4.147,1227,4.147,1228,4.147]],["title/classes/UpdateRoleInput.html",[25,0.305,1062,2.94]],["body/classes/UpdateRoleInput.html",[3,0.074,4,0.065,5,0.065,7,0.188,10,0.951,11,0.009,13,0.406,17,0.14,19,0.954,20,0.975,21,0.975,24,0.074,25,0.417,30,0.006,31,0.006,91,1.333,92,0.406,93,1.074,151,1.268,199,0.521,209,1.37,220,0.493,233,0.734,235,1.016,239,1.339,241,1.558,244,2.034,245,0.975,254,1.411,257,2.324,258,1.068,273,2.374,286,4.37,301,1.722,302,2.45,309,3.303,310,5.572,315,2.826,343,2.766,344,2.011,345,0.851,347,1.777,367,2.193,428,5.997,452,2.509,457,2.864,1062,4.025,1185,3.84,1208,2.789,1229,6.883,1230,6.05,1231,4.408,1232,4.408,1233,4.408,1234,4.408,1235,4.408]],["title/classes/UpdateSchoolInput.html",[25,0.305,1133,2.94]],["body/classes/UpdateSchoolInput.html",[3,0.067,4,0.059,5,0.059,7,0.171,10,0.999,11,0.009,13,0.418,17,0.134,19,0.867,20,0.887,21,0.887,24,0.067,25,0.391,30,0.005,31,0.005,91,1.268,92,0.418,93,1.104,151,1.295,199,0.474,209,1.856,220,0.448,233,0.687,235,0.951,239,1.38,241,1.417,244,1.904,245,0.887,254,1.284,257,1.77,258,0.971,269,3.65,273,2.222,301,1.809,302,2.229,315,2.645,318,3.004,319,4.619,320,4.92,321,4.155,324,3.542,328,5.003,343,2.655,344,1.912,345,0.774,347,1.617,367,2.587,428,4.568,452,2.348,457,2.723,1133,3.768,1185,3.65,1208,2.537,1236,7.093,1237,4.009,1238,4.009,1239,4.009,1240,4.009,1241,4.009,1242,4.009]],["title/classes/UpdateUserInput.html",[25,0.305,1243,2.94]],["body/classes/UpdateUserInput.html",[3,0.062,4,0.055,5,0.055,7,0.159,10,1.028,11,0.009,13,0.427,17,0.13,19,0.802,20,0.821,21,0.821,24,0.062,25,0.37,30,0.005,31,0.005,92,0.427,93,1.107,151,1.312,152,4.184,154,3.799,199,0.438,209,1.905,220,0.415,233,0.65,235,0.899,239,1.407,241,1.311,244,1.801,245,0.821,254,1.188,257,1.675,258,0.899,269,3.496,273,2.102,301,1.86,302,2.978,331,2.779,332,4.712,333,5.072,340,4.733,343,2.563,344,1.831,345,0.716,346,2.062,347,1.496,367,2.76,452,2.221,457,2.608,1185,3.496,1243,3.564,1244,7.232,1245,6.288,1246,6.288,1247,3.709,1248,3.709,1249,3.709,1250,3.709,1251,3.709,1252,3.709,1253,3.709,1254,3.709,1255,3.709]],["title/classes/User.html",[25,0.305,149,2.558]],["body/classes/User.html",[3,0.06,4,0.053,5,0.053,7,0.153,10,1.039,11,0.009,13,0.423,17,0.142,19,0.777,20,0.795,21,0.795,24,0.103,25,0.248,30,0.005,31,0.005,92,0.441,93,1.019,104,3.73,149,3.573,151,1.209,152,4.107,154,3.73,169,1.409,199,0.424,203,1.15,209,1.184,220,0.402,235,0.878,239,1.396,241,1.269,269,3.432,273,2.953,301,1.571,302,1.996,321,2.272,332,4.625,333,4.98,367,1.897,452,2.17,454,3.186,455,3.432,456,3.304,457,2.56,458,2.078,459,3.573,461,3.926,464,3.028,469,3.028,470,4.838,471,2.634,472,2.078,473,2.078,474,2.909,475,2.11,477,2.078,922,3.172,1031,3.028,1033,4.343,1056,2.896,1197,4.221,1256,2.69,1257,3.59,1258,3.59,1259,3.59,1260,3.59,1261,3.59,1262,3.59,1263,5.232,1264,3.59,1265,3.59,1266,3.59,1267,2.896,1268,3.59,1269,2.896,1270,3.59,1271,2.69,1272,3.172]],["title/injectables/UserRepository.html",[74,0.873,1273,2.94]],["body/injectables/UserRepository.html",[3,0.047,4,0.042,5,0.042,7,0.121,8,1.134,11,0.009,13,0.358,15,1.687,17,0.151,18,0.558,19,0.611,20,0.625,21,0.625,24,0.047,25,0.195,27,1.812,28,2.202,30,0.004,31,0.004,74,0.863,75,0.999,84,3.76,90,1.911,91,1.327,92,0.358,93,0.88,104,1.707,109,2.43,140,1.273,149,3.481,152,1.88,154,2.64,155,2.89,161,2.279,162,2.279,163,2.279,164,2.279,165,2.279,166,2.279,167,2.279,168,2.279,169,2.097,170,1.988,171,2.117,173,3.275,176,2.496,177,1.988,189,4.506,190,4.811,191,2.496,192,2.117,203,0.905,261,4.287,273,1.715,319,1.988,321,1.788,329,4.002,344,1.556,361,4.002,421,4.002,431,4.002,454,1.458,456,1.512,475,1.762,496,1.762,497,1.715,498,2.155,499,1.762,500,1.762,502,3.986,508,1.762,511,2.372,512,1.762,515,1.762,518,1.762,520,1.635,522,0.95,524,0.95,525,1.469,528,0.95,595,1.865,651,1.88,1031,1.635,1033,1.988,1041,2.117,1060,4.721,1183,2.496,1186,2.496,1187,2.496,1188,2.496,1194,4.721,1197,2.279,1198,2.496,1243,4.002,1267,2.279,1269,2.279,1273,2.908,1274,2.279,1275,2.826,1276,2.826,1277,4.37,1278,2.826,1279,2.826,1280,2.826,1281,2.826,1282,2.826,1283,2.826,1284,4.311,1285,2.279,1286,2.279,1287,2.826,1288,2.826,1289,2.826,1290,2.826,1291,4.37,1292,2.826,1293,2.826,1294,2.826,1295,2.826,1296,2.826,1297,2.826,1298,2.826,1299,2.826,1300,2.826,1301,4.37,1302,2.826,1303,2.826,1304,2.826,1305,2.826,1306,2.826,1307,2.826,1308,2.826,1309,2.826,1310,2.826,1311,2.826]],["title/modules/UsersModule.html",[32,1.602,48,2.796]],["body/modules/UsersModule.html",[3,0.079,4,0.07,5,0.07,11,0.009,17,0.163,18,0.934,24,0.079,25,0.326,30,0.006,31,0.006,32,2.301,34,2.209,35,2.964,39,4.015,46,4.222,48,5.469,49,3.275,50,2.441,51,2.441,53,3.164,54,2.358,59,3.815,60,4.178,91,1.225,117,5.038,142,5.361,149,2.737,202,2.629,203,1.514,219,3.528,471,2.708,492,2.737,1031,2.737,1042,4.464,1056,3.815,1267,3.815,1271,4.755,1273,5.468,1312,4.178,1313,4.178,1314,4.178,1315,4.73,1316,4.178,1317,4.755,1318,4.73,1319,4.178,1320,4.178,1321,4.73]],["title/classes/UsersResolver.html",[25,0.305,1317,3.311]],["body/classes/UsersResolver.html",[3,0.053,4,0.046,5,0.046,7,0.134,8,1.228,10,0.872,11,0.009,13,0.373,15,1.768,17,0.156,18,0.619,19,0.678,20,0.694,21,0.694,24,0.053,25,0.216,26,1.512,27,1.3,28,2.182,30,0.005,31,0.005,90,1.991,91,1.383,92,0.373,93,0.917,97,1.743,102,1.743,104,1.895,140,0.913,142,4.328,149,4.535,155,2.971,177,2.121,199,0.371,209,1.071,220,0.351,223,2.631,226,3.169,227,2.631,301,1.578,329,4.224,361,4.224,421,4.224,431,4.224,436,1.619,511,2.557,522,1.054,524,1.054,525,1.591,528,1.054,547,3.443,548,1.984,551,1.895,557,3.698,560,1.895,562,3.674,563,1.815,564,1.815,565,1.678,566,1.619,567,1.815,568,1.815,569,1.815,571,1.815,574,1.895,575,3.944,578,1.895,581,1.815,584,1.815,891,2.206,892,2.206,899,2.087,1243,4.224,1284,4.598,1285,2.53,1286,2.53,1316,2.77,1317,3.546,1320,2.77,1322,2.77,1323,4.732,1324,4.732,1325,4.732,1326,4.732,1327,3.136,1328,3.136,1329,3.136,1330,3.136,1331,3.136,1332,3.136,1333,3.136,1334,3.136,1335,3.136,1336,3.136,1337,3.136,1338,3.136,1339,3.136,1340,3.136,1341,3.136,1342,3.136,1343,3.136,1344,3.136,1345,3.136,1346,3.136,1347,3.136,1348,3.136,1349,3.136,1350,3.136,1351,3.136]],["title/injectables/UsersService.html",[74,0.873,142,2.67]],["body/injectables/UsersService.html",[3,0.059,4,0.052,5,0.052,7,0.152,8,1.345,11,0.009,13,0.391,15,1.861,17,0.149,18,0.7,19,0.767,20,0.785,21,0.785,24,0.059,25,0.245,26,1.71,27,1.47,28,2.297,30,0.005,31,0.005,74,1.024,75,1.253,84,3.665,90,2.083,91,1.446,92,0.391,93,0.959,104,2.142,109,1.971,140,1.032,142,3.132,155,3.061,161,2.86,162,2.86,163,2.86,164,2.86,165,2.86,166,2.86,167,2.86,168,2.86,169,1.391,170,2.494,171,2.656,177,2.28,261,4.464,329,4.486,361,4.486,421,4.486,431,4.486,496,2.09,497,2.034,498,2.09,499,2.09,500,2.09,508,2.09,511,2.297,512,2.09,515,2.09,518,2.09,522,1.192,524,1.192,525,1.743,528,1.192,595,2.212,1243,4.486,1273,4.986,1284,4.943,1285,2.86,1286,2.86,1319,3.132,1352,2.86,1353,3.545,1354,3.545,1355,3.545,1356,3.545,1357,3.545,1358,3.545,1359,3.545,1360,3.545,1361,3.545,1362,3.545,1363,3.545,1364,2.86,1365,3.545,1366,3.545,1367,3.545]],["title/coverage.html",[1368,5.354]],["body/coverage.html",[0,1.829,1,1.126,5,0.022,6,1.327,11,0.009,22,1,25,0.619,30,0.002,31,0.002,61,2.476,62,1.829,64,2.476,65,1.829,66,2.476,67,1.829,71,2.172,72,1.829,74,1.554,76,1.327,80,1.126,81,1.327,92,0.078,98,0.951,100,1.126,114,1.057,115,1.057,137,2.097,142,0.908,149,0.87,170,2.417,190,0.951,194,1.212,196,1.212,200,1.126,204,1.212,221,1.327,229,1,230,3.118,231,1.327,232,2.575,234,0.749,246,0.804,248,1,249,3.118,250,2.097,251,3.206,259,1,260,3.118,262,1,263,2.823,264,1.327,265,2.575,282,1,283,1.327,284,2.575,294,0.951,295,1.212,297,2.575,307,1,308,1.327,309,2.575,316,1,317,1.327,318,2.575,329,1,330,1.327,331,2.575,341,1,342,1.327,343,0.559,348,1,349,2.097,350,1,351,1,352,1.327,353,1,354,1.327,355,1,356,1.327,357,1,358,1.327,359,1,360,1.327,361,1,362,1.327,363,1,364,2.097,365,1.327,366,0.725,371,1,372,1.327,373,0.702,377,1,378,2.881,379,2.097,383,1,384,2.097,386,1,387,1,388,1,389,2.097,390,1.327,392,1,393,1.327,395,1,396,2.097,397,1.327,398,1,399,2.097,400,1.327,401,1,402,1.327,403,1,404,1.327,406,1,407,2.097,408,1.327,409,1,410,1.327,411,1,412,2.097,413,1.327,414,1,415,1.327,421,1,422,2.097,423,1.327,424,1,429,1.212,431,1,432,1.327,433,3.079,434,1.327,436,0.775,437,1.327,438,2.575,448,1.327,449,1,450,2.417,451,1.948,478,1.126,483,1,484,1,487,1.126,494,1.327,495,0.775,521,1,538,1.327,557,0.775,565,0.804,566,0.775,587,1.327,588,0.804,603,1,604,2.417,605,2.881,614,1.126,619,1,620,1,623,1.126,629,2.097,634,1,651,6.137,666,2.097,689,2.097,691,2.097,695,1.327,697,1.212,698,1.327,699,1.327,716,1.327,718,1.327,726,1,727,2.417,730,1.126,735,1,736,1,737,1.126,742,1,766,1.212,768,1.327,769,1.327,800,1.948,812,0.908,813,2.174,817,1.126,819,1,820,2.417,821,1.948,836,1.126,842,1,843,1,846,1.126,852,1.327,853,0.951,859,1,880,1.327,905,1.327,910,1,913,1.126,917,1.057,920,1.948,936,1,937,1,938,1.948,941,1.126,944,1.327,946,0.951,955,1.327,976,1.327,978,1.327,982,1,991,1.327,1013,1.327,1015,1.327,1016,1.327,1031,0.87,1032,1.948,1042,1.057,1048,1,1049,1,1052,1.126,1057,1.327,1062,1,1068,1.327,1099,1.327,1103,1,1104,1.948,1116,1.126,1121,1,1122,1,1125,1.126,1130,1.327,1133,1,1150,1.327,1173,1.327,1175,1.327,1205,1.327,1210,2.097,1214,1.327,1218,1.327,1225,1.212,1229,1.327,1236,1.327,1243,1,1244,1.327,1256,1.948,1271,1.126,1273,1,1274,2.097,1317,1.126,1322,1.327,1352,2.097,1368,1.327,1369,1.327,1370,1.502,1371,1.502,1372,8.166,1373,4.095,1374,7.586,1375,7.924,1376,1.327,1377,1.327,1378,1.327,1379,2.297,1380,6.018,1381,1.327,1382,1.327,1383,1.327,1384,1.327,1385,3.436,1386,4.627,1387,4.095,1388,8.316,1389,1.502,1390,1.502,1391,4.095,1392,1.327,1393,2.297,1394,1.327,1395,1.327,1396,1.502,1397,1.327,1398,1.502,1399,1.502]],["title/dependencies.html",[35,2.486,1400,3.676]],["body/dependencies.html",[11,0.009,18,0.817,25,0.286,30,0.006,31,0.006,35,1.932,103,4.67,119,3.337,121,3.1,123,2.618,129,4.67,199,0.489,203,1.325,258,1.002,475,1.668,706,5.388,717,3.337,777,3.655,1401,4.137,1402,8.266,1403,4.137,1404,4.137,1405,4.137,1406,4.137,1407,5.79,1408,5.115,1409,4.137,1410,4.137,1411,4.137,1412,4.137,1413,4.137,1414,4.137,1415,4.137,1416,4.137,1417,4.137,1418,4.137,1419,4.137,1420,4.137,1421,4.137,1422,5.9,1423,4.137,1424,7.235,1425,4.137,1426,4.137,1427,4.137,1428,4.137,1429,4.137,1430,5.79,1431,4.137,1432,4.137,1433,4.137,1434,4.137,1435,4.137,1436,3.655,1437,4.137,1438,4.137,1439,5.79,1440,4.137,1441,3.655,1442,4.137,1443,5.79,1444,4.137,1445,3.655,1446,4.137,1447,4.137,1448,4.137,1449,4.137,1450,4.137,1451,4.137,1452,4.137,1453,4.137,1454,4.137,1455,5.79,1456,4.137,1457,3.655,1458,4.137,1459,4.137,1460,4.137,1461,4.137,1462,4.137,1463,4.137,1464,4.137,1465,4.137,1466,4.137,1467,4.137,1468,4.137,1469,4.137,1470,4.137,1471,4.137,1472,4.137,1473,4.137,1474,4.137,1475,4.137,1476,4.137,1477,4.137,1478,4.137,1479,4.137,1480,4.137,1481,4.137,1482,4.137,1483,4.137,1484,4.137,1485,4.137,1486,4.137]],["title/miscellaneous/functions.html",[1487,2.446,1488,4.702]],["body/miscellaneous/functions.html",[7,0.299,11,0.008,30,0.008,31,0.008,1395,6.171,1397,7.559,1487,4.648,1488,6.171,1489,6.985]],["title/index.html",[7,0.157,1490,3.676,1491,3.676]],["body/index.html",[4,0.046,11,0.007,19,0.682,30,0.005,31,0.005,35,1.473,103,2.544,190,3.007,321,1.995,497,1.237,656,5.052,661,5.052,1364,3.834,1369,5.052,1422,2.786,1436,2.786,1441,6.775,1445,4.198,1457,2.786,1492,3.154,1493,5.719,1494,3.154,1495,5.719,1496,8.542,1497,3.154,1498,3.154,1499,3.154,1500,7.669,1501,3.154,1502,3.154,1503,4.752,1504,3.154,1505,3.154,1506,3.154,1507,3.154,1508,3.154,1509,3.154,1510,3.154,1511,5.719,1512,5.719,1513,3.154,1514,4.752,1515,6.83,1516,3.154,1517,4.752,1518,7.179,1519,3.154,1520,3.154,1521,6.83,1522,3.154,1523,6.366,1524,3.154,1525,5.719,1526,4.752,1527,3.154,1528,3.154,1529,8.323,1530,3.154,1531,3.154,1532,3.154,1533,4.752,1534,3.154,1535,3.154,1536,3.154,1537,3.154,1538,3.154,1539,3.154,1540,3.154,1541,3.154,1542,7.451,1543,4.752,1544,7.996,1545,5.719,1546,3.154,1547,7.451,1548,4.752,1549,3.154,1550,3.154,1551,4.752,1552,3.154,1553,3.154,1554,3.154,1555,3.154,1556,3.154,1557,3.154,1558,3.154,1559,3.154,1560,3.154,1561,3.154,1562,3.154,1563,3.154,1564,5.719,1565,3.154,1566,5.719,1567,3.154,1568,5.719,1569,3.154,1570,3.154,1571,3.154,1572,3.154,1573,3.154,1574,3.154,1575,3.154,1576,2.786,1577,4.752,1578,5.719,1579,7.179,1580,6.366,1581,4.752,1582,3.154,1583,3.154,1584,4.752,1585,7.179,1586,3.154,1587,3.154,1588,3.154,1589,3.154,1590,3.154,1591,4.198,1592,3.154,1593,3.154,1594,3.154,1595,3.154,1596,4.752,1597,4.752,1598,6.366,1599,4.752,1600,3.154,1601,3.154,1602,3.154,1603,3.154,1604,3.154,1605,3.154,1606,3.154,1607,3.154,1608,3.154,1609,3.154,1610,3.154,1611,4.752,1612,3.154,1613,3.154,1614,3.154,1615,3.154,1616,3.154,1617,3.154,1618,3.154,1619,3.154,1620,3.154,1621,3.154,1622,3.154,1623,3.154,1624,3.154,1625,3.154,1626,3.154,1627,3.154,1628,3.154,1629,3.154,1630,3.154,1631,3.154,1632,3.154,1633,3.154]],["title/modules.html",[34,2.831]],["body/modules.html",[11,0.007,30,0.007,31,0.007,33,4.306,34,2.684,39,3.636,40,4.042,41,4.042,42,4.042,43,4.042,44,4.042,45,3.823,46,3.823,47,4.042,48,3.636,932,4.306,1408,8.022,1591,5.076,1634,9.081,1635,9.081,1636,9.125,1637,5.746]],["title/overview.html",[1638,5.354]],["body/overview.html",[2,1.906,11,0.009,22,3.586,30,0.004,31,0.004,33,6.575,34,1.338,35,2.063,36,2.53,37,2.53,38,2.53,39,4.933,40,3.792,41,5.37,42,5.37,43,5.37,44,5.581,45,5.187,46,5.279,47,5.37,48,4.707,49,2.279,50,1.478,51,1.478,75,1.012,98,3.41,112,2.53,113,2.53,114,3.792,115,3.792,142,4.353,220,0.32,480,2.53,481,2.53,482,2.53,483,4.794,484,4.794,616,2.53,617,2.53,618,2.53,619,4.794,620,4.794,732,2.53,733,2.53,734,2.53,735,4.794,736,4.794,766,2.31,838,2.53,839,2.53,840,2.53,842,4.794,843,4.794,853,4.559,907,2.53,908,2.53,909,2.53,910,4.794,932,5.575,933,2.53,934,2.53,935,2.53,936,4.794,937,4.794,1044,2.53,1045,2.53,1046,2.53,1048,4.794,1049,4.794,1118,2.53,1119,2.53,1120,2.53,1121,4.794,1122,4.794,1273,3.586,1312,2.53,1313,2.53,1314,2.53,1638,2.53,1639,2.864,1640,2.864,1641,2.864,1642,2.864,1643,2.864]],["title/miscellaneous/typealiases.html",[1487,2.446,1644,5.323]],["body/miscellaneous/typealiases.html",[7,0.25,11,0.007,30,0.007,31,0.007,92,0.305,230,2.915,249,2.915,260,2.915,263,2.708,450,4.113,451,5.454,476,5.871,604,4.113,605,5.835,613,5.871,727,4.113,729,5.871,800,4.38,813,3.699,815,5.871,820,4.113,821,5.454,835,5.871,920,5.454,930,5.871,1032,4.38,1041,5.454,1104,4.38,1115,5.871,1256,4.38,1269,5.871,1487,3.89,1645,5.846,1646,5.164,1647,5.164,1648,5.164,1649,6.43,1650,5.164,1651,5.164,1652,5.164,1653,5.164]],["title/miscellaneous/variables.html",[1487,2.446,1654,4.702]],["body/miscellaneous/variables.html",[7,0.144,11,0.009,28,1.902,30,0.005,31,0.005,53,1.676,54,1.676,84,1.522,92,0.31,95,2.518,120,2.711,137,2.711,144,5.248,151,0.742,155,1.251,169,1.956,170,5.172,171,4.451,194,4.021,196,4.021,204,4.021,209,0.761,230,1.676,249,1.676,260,1.676,263,1.855,441,2.711,443,2.711,450,2.365,451,3.735,478,3.735,479,2.969,565,2.668,566,2.573,604,2.365,605,4.623,614,3.735,615,2.969,713,2.518,727,2.365,730,3.735,731,2.969,788,2.969,789,2.969,790,2.969,791,2.969,800,2.518,813,2.127,817,3.735,818,2.969,820,2.365,821,3.735,836,3.735,837,2.969,917,3.507,920,3.735,931,2.969,1032,2.518,1042,3.507,1043,2.969,1104,2.518,1116,3.735,1117,2.969,1256,2.518,1271,3.735,1272,2.969,1274,2.711,1352,2.711,1364,2.711,1376,2.969,1377,4.403,1378,4.403,1379,2.969,1381,2.969,1382,2.969,1383,4.403,1384,2.969,1392,2.969,1393,6.2,1394,2.969,1487,2.236,1576,5.248,1646,2.969,1647,2.969,1648,2.969,1649,4.403,1650,2.969,1651,2.969,1652,2.969,1653,2.969,1654,2.969,1655,3.361,1656,3.361,1657,3.361,1658,3.361,1659,3.361,1660,3.361,1661,3.361,1662,3.361,1663,4.984,1664,3.361,1665,8.817,1666,8.817,1667,3.361,1668,4.984,1669,3.361,1670,3.361,1671,3.361,1672,5.941,1673,3.361,1674,4.984,1675,3.361,1676,3.361,1677,3.361,1678,3.361,1679,3.361,1680,3.361,1681,5.941,1682,3.361,1683,3.361,1684,3.361,1685,4.984,1686,3.361,1687,4.984,1688,3.361,1689,3.361,1690,3.361,1691,3.361,1692,3.361,1693,3.361]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":651,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"guards/PermissionGuard.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{}}}],["0.1.13",{"_index":1473,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1449,"title":{},"body":{"dependencies.html":{}}}],["0.5.2",{"_index":1464,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1375,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1391,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1389,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1380,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1385,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1386,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1388,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1387,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1390,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1643,"title":{},"body":{"overview.html":{}}}],["1.0.0",{"_index":1466,"title":{},"body":{"dependencies.html":{}}}],["1.1.12",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["1.1.18",{"_index":1418,"title":{},"body":{"dependencies.html":{}}}],["1.1.6",{"_index":1425,"title":{},"body":{"dependencies.html":{}}}],["1.22.17",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1364,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":1639,"title":{},"body":{"overview.html":{}}}],["12.1.0",{"_index":1439,"title":{},"body":{"dependencies.html":{}}}],["13.1.0",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["13.2.0",{"_index":1402,"title":{},"body":{"dependencies.html":{}}}],["13.7.1",{"_index":1437,"title":{},"body":{"dependencies.html":{}}}],["14.0.0",{"_index":1432,"title":{},"body":{"dependencies.html":{}}}],["16.0.0",{"_index":1454,"title":{},"body":{"dependencies.html":{}}}],["16.3.0",{"_index":1456,"title":{},"body":{"dependencies.html":{}}}],["17.5.0",{"_index":1460,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":1640,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["2.0.6",{"_index":1442,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1448,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":1444,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":1641,"title":{},"body":{"overview.html":{}}}],["3.0.6",{"_index":1423,"title":{},"body":{"dependencies.html":{}}}],["3.2.5",{"_index":1416,"title":{},"body":{"dependencies.html":{}}}],["3.5.8",{"_index":1412,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":1446,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1465,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1452,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":1468,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":1414,"title":{},"body":{"dependencies.html":{}}}],["5.8.3",{"_index":1420,"title":{},"body":{"dependencies.html":{}}}],["6.1.7",{"_index":1463,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":1435,"title":{},"body":{"dependencies.html":{}}}],["7.4.0",{"_index":1475,"title":{},"body":{"dependencies.html":{}}}],["72",{"_index":1642,"title":{},"body":{"overview.html":{}}}],["7d",{"_index":136,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["8.0.0",{"_index":1424,"title":{},"body":{"dependencies.html":{}}}],["8.1.0",{"_index":1428,"title":{},"body":{"dependencies.html":{}}}],["8.2.0",{"_index":1458,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":1462,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":1427,"title":{},"body":{"dependencies.html":{}}}],["9.1.2",{"_index":1426,"title":{},"body":{"dependencies.html":{}}}],["__data",{"_index":507,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["_id",{"_index":454,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"injectables/QuizRepository.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["abilities",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["above",{"_index":1548,"title":{},"body":{"index.html":{}}}],["abstract",{"_index":435,"title":{},"body":{"classes/GqlArg.html":{},"classes/GqlInput.html":{}}}],["access_token",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["add",{"_index":1441,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["adding",{"_index":1510,"title":{},"body":{"index.html":{}}}],["address",{"_index":319,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/GetSchoolsArgs.html":{},"classes/School.html":{},"classes/UpdateSchoolInput.html":{},"injectables/UserRepository.html":{}}}],["advanced",{"_index":1624,"title":{},"body":{"index.html":{}}}],["advantage",{"_index":1617,"title":{},"body":{"index.html":{}}}],["affected",{"_index":1584,"title":{},"body":{"index.html":{}}}],["affected:e2e",{"_index":1588,"title":{},"body":{"index.html":{}}}],["affected:test",{"_index":1583,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":1645,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alongside",{"_index":1622,"title":{},"body":{"index.html":{}}}],["angular",{"_index":1422,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1401,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1403,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1404,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1405,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1406,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1407,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1410,"title":{},"body":{"dependencies.html":{}}}],["answer",{"_index":266,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["answer.args",{"_index":862,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{}}}],["answer.args.ts",{"_index":390,"title":{},"body":{"classes/GetQuizAnswerArgs.html":{},"coverage.html":{}}}],["answer.entity",{"_index":849,"title":{},"body":{"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{}}}],["answer.entity.ts",{"_index":821,"title":{},"body":{"classes/QuizAnswer.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["answer.entity.ts:13",{"_index":823,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:17",{"_index":833,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:21",{"_index":832,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:25",{"_index":824,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:29",{"_index":830,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:33",{"_index":829,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:37",{"_index":825,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:41",{"_index":826,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:45",{"_index":834,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.entity.ts:49",{"_index":827,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["answer.input",{"_index":860,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{}}}],["answer.input.ts",{"_index":265,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"coverage.html":{}}}],["answer.input.ts:10",{"_index":279,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{}}}],["answer.input.ts:13",{"_index":272,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:16",{"_index":277,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:19",{"_index":274,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:21",{"_index":276,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{}}}],["answer.input.ts:22",{"_index":1216,"title":{},"body":{"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:25",{"_index":1215,"title":{},"body":{"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:27",{"_index":1217,"title":{},"body":{"classes/UpdateQuizAnswerInput.html":{}}}],["answer.input.ts:7",{"_index":280,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{}}}],["answer.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["answer.module.ts",{"_index":844,"title":{},"body":{"modules/QuizAnswerModule.html":{}}}],["answer.repository",{"_index":850,"title":{},"body":{"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerService.html":{}}}],["answer.repository.ts",{"_index":852,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"coverage.html":{}}}],["answer.repository.ts:23",{"_index":854,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["answer.resolver",{"_index":847,"title":{},"body":{"modules/QuizAnswerModule.html":{}}}],["answer.resolver.ts",{"_index":880,"title":{},"body":{"classes/QuizAnswerResolver.html":{},"coverage.html":{}}}],["answer.resolver.ts:17",{"_index":885,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.resolver.ts:23",{"_index":893,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.resolver.ts:30",{"_index":895,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.resolver.ts:37",{"_index":887,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.resolver.ts:44",{"_index":897,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.resolver.ts:51",{"_index":889,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["answer.service",{"_index":845,"title":{},"body":{"modules/QuizAnswerModule.html":{},"classes/QuizAnswerResolver.html":{}}}],["answer.service.ts",{"_index":905,"title":{},"body":{"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["answer.service.ts:18",{"_index":906,"title":{},"body":{"injectables/QuizAnswerService.html":{}}}],["answer/dto/args/get",{"_index":389,"title":{},"body":{"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"coverage.html":{}}}],["answer/dto/inputs/create",{"_index":264,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"coverage.html":{}}}],["answer/dto/inputs/delete",{"_index":352,"title":{},"body":{"classes/DeleteQuizAnswerInput.html":{},"coverage.html":{}}}],["answer/dto/inputs/update",{"_index":1214,"title":{},"body":{"classes/UpdateQuizAnswerInput.html":{},"coverage.html":{}}}],["answer/entities/quiz",{"_index":820,"title":{},"body":{"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["answer/quiz",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/QuizAnswerModule.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["answeredat",{"_index":267,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["answers",{"_index":298,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["answers.args",{"_index":861,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{}}}],["answers.args.ts",{"_index":393,"title":{},"body":{"classes/GetQuizAnswersArgs.html":{},"coverage.html":{}}}],["answers.args.ts:12",{"_index":394,"title":{},"body":{"classes/GetQuizAnswersArgs.html":{}}}],["any).deletedat",{"_index":1199,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["any).updatedat",{"_index":1306,"title":{},"body":{"injectables/UserRepository.html":{}}}],["any).user",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["anything",{"_index":952,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["api",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["apollo",{"_index":1443,"title":{},"body":{"dependencies.html":{}}}],["apollo/client",{"_index":1411,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":1547,"title":{},"body":{"index.html":{}}}],["app.service",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":1543,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1518,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":33,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps/.../auth.service.ts",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../configuration.ts",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../current",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.prod.ts",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../environment.ts",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../grouping",{"_index":1646,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../hangman",{"_index":1647,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../main.ts",{"_index":1489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apps/.../mirror",{"_index":1648,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../mongo",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../permission.decorator.ts",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../quiz",{"_index":1649,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../quiz.entity.ts",{"_index":1650,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../role.entity.ts",{"_index":1651,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../school.entity.ts",{"_index":1652,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../user.entity.ts",{"_index":1653,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/.../user.repository.ts",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../users.service.ts",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/.../validation.ts",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apps/api/src/app/app.module.ts",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["apps/api/src/app/auth/auth.controller.ts",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/auth.controller.ts:13",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["apps/api/src/app/auth/auth.module.ts",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{}}}],["apps/api/src/app/auth/auth.service.ts",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/auth.service.ts:10",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:18",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:23",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/auth.service.ts:33",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["apps/api/src/app/auth/decorators/current",{"_index":1376,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/decorators/permission.decorator.ts",{"_index":1379,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/auth/guards/gql",{"_index":437,"title":{},"body":{"classes/GqlAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/jwt",{"_index":698,"title":{},"body":{"classes/JwtAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/local",{"_index":716,"title":{},"body":{"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/guards/permission",{"_index":768,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts",{"_index":699,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts:19",{"_index":703,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/app/auth/strategies/jwt.strategy.ts:7",{"_index":700,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts",{"_index":718,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts:13",{"_index":721,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["apps/api/src/app/auth/strategies/local.strategy.ts:8",{"_index":720,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["apps/api/src/app/core/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["apps/api/src/app/core/app.controller.ts:12",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["apps/api/src/app/core/app.service.ts",{"_index":76,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["apps/api/src/app/core/app.service.ts:6",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["apps/api/src/app/core/config/configuration.ts",{"_index":1381,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/core/config/mongo",{"_index":1382,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/core/config/validation.ts",{"_index":1384,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/core/core.module.ts",{"_index":193,"title":{},"body":{"modules/CoreModule.html":{}}}],["apps/api/src/app/core/core.resolver.ts",{"_index":221,"title":{},"body":{"classes/CoreResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/core/core.resolver.ts:6",{"_index":224,"title":{},"body":{"classes/CoreResolver.html":{}}}],["apps/api/src/app/grouping",{"_index":230,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/hangman",{"_index":249,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/UpdateHangmanWordInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/mirror",{"_index":260,"title":{},"body":{"classes/CreateMirrorWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/quiz",{"_index":263,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/quiz/dto/args/get",{"_index":396,"title":{},"body":{"classes/GetQuizArgs.html":{},"classes/GetQuizzesArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/dto/inputs/create",{"_index":283,"title":{},"body":{"classes/CreateQuizInput.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/dto/inputs/delete",{"_index":354,"title":{},"body":{"classes/DeleteQuizInput.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/dto/inputs/update",{"_index":1218,"title":{},"body":{"classes/UpdateQuizInput.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts",{"_index":800,"title":{},"body":{"classes/Quiz.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:14",{"_index":803,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:18",{"_index":809,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:22",{"_index":807,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:26",{"_index":804,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:30",{"_index":808,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:34",{"_index":810,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:38",{"_index":805,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:42",{"_index":811,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.entity.ts:46",{"_index":806,"title":{},"body":{"classes/Quiz.html":{}}}],["apps/api/src/app/quiz/entities/quiz.repository.ts",{"_index":978,"title":{},"body":{"injectables/QuizRepository.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/entities/quiz.repository.ts:22",{"_index":979,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["apps/api/src/app/quiz/quiz.module.ts",{"_index":911,"title":{},"body":{"modules/QuizModule.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts",{"_index":991,"title":{},"body":{"classes/QuizResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:17",{"_index":996,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:23",{"_index":1002,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:30",{"_index":1004,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:37",{"_index":998,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:44",{"_index":1006,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.resolver.ts:51",{"_index":1000,"title":{},"body":{"classes/QuizResolver.html":{}}}],["apps/api/src/app/quiz/quiz.service.ts",{"_index":1013,"title":{},"body":{"injectables/QuizService.html":{},"coverage.html":{}}}],["apps/api/src/app/quiz/quiz.service.ts:18",{"_index":1014,"title":{},"body":{"injectables/QuizService.html":{}}}],["apps/api/src/app/role/dto/args/get",{"_index":407,"title":{},"body":{"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/create",{"_index":308,"title":{},"body":{"classes/CreateRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/delete",{"_index":358,"title":{},"body":{"classes/DeleteRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/dto/inputs/update",{"_index":1229,"title":{},"body":{"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts",{"_index":1032,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:13",{"_index":1034,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:17",{"_index":1037,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:21",{"_index":1038,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:25",{"_index":1039,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:29",{"_index":1035,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:33",{"_index":1040,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.entity.ts:37",{"_index":1036,"title":{},"body":{"classes/Role.html":{}}}],["apps/api/src/app/role/entities/role.repository.ts",{"_index":1057,"title":{},"body":{"injectables/RoleRepository.html":{},"coverage.html":{}}}],["apps/api/src/app/role/entities/role.repository.ts:22",{"_index":1059,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["apps/api/src/app/role/role.module.ts",{"_index":1050,"title":{},"body":{"modules/RoleModule.html":{}}}],["apps/api/src/app/role/role.resolver.ts",{"_index":1068,"title":{},"body":{"classes/RoleResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/role/role.resolver.ts:17",{"_index":1073,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:23",{"_index":1082,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:30",{"_index":1084,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:37",{"_index":1076,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:44",{"_index":1087,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.resolver.ts:51",{"_index":1079,"title":{},"body":{"classes/RoleResolver.html":{}}}],["apps/api/src/app/role/role.service.ts",{"_index":1099,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["apps/api/src/app/role/role.service.ts:18",{"_index":1101,"title":{},"body":{"injectables/RoleService.html":{}}}],["apps/api/src/app/school/dto/args/get",{"_index":412,"title":{},"body":{"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/school/dto/inputs/create",{"_index":317,"title":{},"body":{"classes/CreateSchoolInput.html":{},"coverage.html":{}}}],["apps/api/src/app/school/dto/inputs/delete",{"_index":360,"title":{},"body":{"classes/DeleteSchoolInput.html":{},"coverage.html":{}}}],["apps/api/src/app/school/dto/inputs/update",{"_index":1236,"title":{},"body":{"classes/UpdateSchoolInput.html":{},"coverage.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts",{"_index":1104,"title":{},"body":{"classes/School.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:13",{"_index":1106,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:17",{"_index":1112,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:21",{"_index":1111,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:25",{"_index":1107,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:29",{"_index":1108,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:33",{"_index":1113,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:37",{"_index":1109,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:41",{"_index":1114,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.entity.ts:45",{"_index":1110,"title":{},"body":{"classes/School.html":{}}}],["apps/api/src/app/school/entities/school.repository.ts",{"_index":1130,"title":{},"body":{"injectables/SchoolRepository.html":{},"coverage.html":{}}}],["apps/api/src/app/school/entities/school.repository.ts:22",{"_index":1131,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["apps/api/src/app/school/school.module.ts",{"_index":1123,"title":{},"body":{"modules/SchoolModule.html":{}}}],["apps/api/src/app/school/school.resolver.ts",{"_index":1150,"title":{},"body":{"classes/SchoolResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/school/school.resolver.ts:17",{"_index":1155,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:23",{"_index":1162,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:28",{"_index":1164,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:33",{"_index":1158,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:40",{"_index":1166,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.resolver.ts:47",{"_index":1160,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["apps/api/src/app/school/school.service.ts",{"_index":1173,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["apps/api/src/app/school/school.service.ts:18",{"_index":1174,"title":{},"body":{"injectables/SchoolService.html":{}}}],["apps/api/src/app/users/dto/args/get",{"_index":422,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/create",{"_index":330,"title":{},"body":{"classes/CreateUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/delete",{"_index":362,"title":{},"body":{"classes/DeleteUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/dto/inputs/update",{"_index":1244,"title":{},"body":{"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts",{"_index":1256,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:15",{"_index":1257,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:19",{"_index":1266,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:23",{"_index":1261,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:26",{"_index":1262,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:30",{"_index":1260,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:34",{"_index":1264,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:38",{"_index":1258,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:42",{"_index":1265,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.entity.ts:46",{"_index":1259,"title":{},"body":{"classes/User.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts",{"_index":1274,"title":{},"body":{"injectables/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:17",{"_index":1276,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:23",{"_index":1280,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:29",{"_index":1281,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:37",{"_index":1278,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:41",{"_index":1282,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/entities/user.repository.ts:60",{"_index":1279,"title":{},"body":{"injectables/UserRepository.html":{}}}],["apps/api/src/app/users/users.module.ts",{"_index":1315,"title":{},"body":{"modules/UsersModule.html":{}}}],["apps/api/src/app/users/users.resolver.ts",{"_index":1322,"title":{},"body":{"classes/UsersResolver.html":{},"coverage.html":{}}}],["apps/api/src/app/users/users.resolver.ts:17",{"_index":1328,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:23",{"_index":1336,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:30",{"_index":1340,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:37",{"_index":1330,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:44",{"_index":1334,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.resolver.ts:51",{"_index":1332,"title":{},"body":{"classes/UsersResolver.html":{}}}],["apps/api/src/app/users/users.service.ts",{"_index":1352,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/app/users/users.service.ts:13",{"_index":1354,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:16",{"_index":1357,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:20",{"_index":1358,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:24",{"_index":1355,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:29",{"_index":1359,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/app/users/users.service.ts:33",{"_index":1356,"title":{},"body":{"injectables/UsersService.html":{}}}],["apps/api/src/environments/environment.prod.ts",{"_index":1392,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/environments/environment.ts",{"_index":1394,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps/api/src/main.ts",{"_index":1395,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apps/api/src/shared/gql",{"_index":433,"title":{},"body":{"classes/GqlArg.html":{},"classes/GqlInput.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/repository",{"_index":1015,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts",{"_index":1175,"title":{},"body":{"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:16",{"_index":1177,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:19",{"_index":1180,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:25",{"_index":1181,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:32",{"_index":1178,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:42",{"_index":1182,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["apps/api/src/shared/proxies/simple.repository.ts:50",{"_index":1179,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["appservice",{"_index":22,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arg.abstract",{"_index":430,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{}}}],["arg.abstract.ts",{"_index":434,"title":{},"body":{"classes/GqlArg.html":{},"coverage.html":{}}}],["args",{"_index":563,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["args/gql",{"_index":429,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/GqlArg.html":{},"coverage.html":{}}}],["args/id.args",{"_index":369,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{}}}],["args/id.args.ts",{"_index":691,"title":{},"body":{"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"coverage.html":{}}}],["args/id.args.ts:14",{"_index":692,"title":{},"body":{"classes/IdArg.html":{}}}],["args/id.args.ts:8",{"_index":694,"title":{},"body":{"classes/IdArrayArg.html":{}}}],["argstype",{"_index":370,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{}}}],["arraynotempty",{"_index":328,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["artifacts",{"_index":1570,"title":{},"body":{"index.html":{}}}],["async",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":126,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["auth.guard.ts",{"_index":438,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:6",{"_index":442,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["auth.service",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["auth/decorators/permission.decorator",{"_index":567,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["auth/guards/gql",{"_index":564,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["auth/guards/permission",{"_index":568,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["auth0/angular",{"_index":1413,"title":{},"body":{"dependencies.html":{}}}],["authcontroller",{"_index":80,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":444,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":446,"title":{},"body":{"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{}}}],["authmechanism=mongodb",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authmodule",{"_index":39,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["authservice",{"_index":98,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":1562,"title":{},"body":{"index.html":{}}}],["autoschemafile",{"_index":212,"title":{},"body":{"modules/CoreModule.html":{}}}],["available",{"_index":1637,"title":{},"body":{"modules.html":{}}}],["await",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["backend",{"_index":1632,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":1183,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["badrequestexception('cannot",{"_index":1200,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["badrequestexception('current",{"_index":1299,"title":{},"body":{"injectables/UserRepository.html":{}}}],["bcrypt",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare(data.password",{"_index":1298,"title":{},"body":{"injectables/UserRepository.html":{}}}],["bcrypt.compare(password",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":1363,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcryptjs",{"_index":1447,"title":{},"body":{"dependencies.html":{}}}],["below",{"_index":1527,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":275,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{}}}],["bootstrap",{"_index":1397,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":1630,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1636,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1408,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":1500,"title":{},"body":{"index.html":{}}}],["building",{"_index":1618,"title":{},"body":{"index.html":{}}}],["caching",{"_index":1601,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":770,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["canactivate(context",{"_index":774,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["capabilities",{"_index":1511,"title":{},"body":{"index.html":{}}}],["capacitor/core",{"_index":1415,"title":{},"body":{"dependencies.html":{}}}],["categories",{"_index":285,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/Quiz.html":{},"injectables/QuizRepository.html":{},"classes/UpdateQuizInput.html":{}}}],["category",{"_index":252,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/UpdateHangmanWordInput.html":{}}}],["cert",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":1564,"title":{},"body":{"index.html":{}}}],["check",{"_index":951,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["class",{"_index":25,"title":{"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":220,"title":{},"body":{"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"classes/LocalAuthGuard.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"overview.html":{}}}],["cli",{"_index":1451,"title":{},"body":{"dependencies.html":{}}}],["cloud",{"_index":1598,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_groupingitemmodule",{"_index":480,"title":{},"body":{"modules/GroupingItemModule.html":{},"overview.html":{}}}],["cluster_groupingitemmodule_exports",{"_index":482,"title":{},"body":{"modules/GroupingItemModule.html":{},"overview.html":{}}}],["cluster_groupingitemmodule_providers",{"_index":481,"title":{},"body":{"modules/GroupingItemModule.html":{},"overview.html":{}}}],["cluster_hangmanwordmodule",{"_index":616,"title":{},"body":{"modules/HangmanWordModule.html":{},"overview.html":{}}}],["cluster_hangmanwordmodule_exports",{"_index":618,"title":{},"body":{"modules/HangmanWordModule.html":{},"overview.html":{}}}],["cluster_hangmanwordmodule_providers",{"_index":617,"title":{},"body":{"modules/HangmanWordModule.html":{},"overview.html":{}}}],["cluster_mirrorwordmodule",{"_index":732,"title":{},"body":{"modules/MirrorWordModule.html":{},"overview.html":{}}}],["cluster_mirrorwordmodule_exports",{"_index":733,"title":{},"body":{"modules/MirrorWordModule.html":{},"overview.html":{}}}],["cluster_mirrorwordmodule_providers",{"_index":734,"title":{},"body":{"modules/MirrorWordModule.html":{},"overview.html":{}}}],["cluster_quizanswermodule",{"_index":838,"title":{},"body":{"modules/QuizAnswerModule.html":{},"overview.html":{}}}],["cluster_quizanswermodule_exports",{"_index":839,"title":{},"body":{"modules/QuizAnswerModule.html":{},"overview.html":{}}}],["cluster_quizanswermodule_imports",{"_index":841,"title":{},"body":{"modules/QuizAnswerModule.html":{}}}],["cluster_quizanswermodule_providers",{"_index":840,"title":{},"body":{"modules/QuizAnswerModule.html":{},"overview.html":{}}}],["cluster_quizmodule",{"_index":907,"title":{},"body":{"modules/QuizModule.html":{},"overview.html":{}}}],["cluster_quizmodule_exports",{"_index":908,"title":{},"body":{"modules/QuizModule.html":{},"overview.html":{}}}],["cluster_quizmodule_providers",{"_index":909,"title":{},"body":{"modules/QuizModule.html":{},"overview.html":{}}}],["cluster_quizquestionmodule",{"_index":933,"title":{},"body":{"modules/QuizQuestionModule.html":{},"overview.html":{}}}],["cluster_quizquestionmodule_exports",{"_index":934,"title":{},"body":{"modules/QuizQuestionModule.html":{},"overview.html":{}}}],["cluster_quizquestionmodule_providers",{"_index":935,"title":{},"body":{"modules/QuizQuestionModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":1044,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_exports",{"_index":1046,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_imports",{"_index":1047,"title":{},"body":{"modules/RoleModule.html":{}}}],["cluster_rolemodule_providers",{"_index":1045,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":1118,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_exports",{"_index":1119,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_providers",{"_index":1120,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1312,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1313,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1314,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":1566,"title":{},"body":{"index.html":{}}}],["community",{"_index":1541,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":1417,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":1568,"title":{},"body":{"index.html":{}}}],["computation",{"_index":1600,"title":{},"body":{"index.html":{}}}],["config.factory",{"_index":206,"title":{},"body":{"modules/CoreModule.html":{}}}],["config.factory.ts",{"_index":1383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/configuration",{"_index":195,"title":{},"body":{"modules/CoreModule.html":{}}}],["config/mongo",{"_index":205,"title":{},"body":{"modules/CoreModule.html":{}}}],["config/validation",{"_index":197,"title":{},"body":{"modules/CoreModule.html":{}}}],["configmodule",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{},"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["configmodule.forroot",{"_index":207,"title":{},"body":{"modules/CoreModule.html":{}}}],["configservice",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["configservice.get",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice.get('database_cert",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configuration",{"_index":194,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["connect",{"_index":1612,"title":{},"body":{"index.html":{}}}],["console.log('user",{"_index":725,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["const",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(groupingitem.name",{"_index":530,"title":{},"body":{"injectables/GroupingItemRepository.html":{}}}],["constructor(@injectmodel(hangmanword.name",{"_index":638,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["constructor(@injectmodel(mirrorword.name",{"_index":743,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["constructor(@injectmodel(quiz.name",{"_index":986,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["constructor(@injectmodel(quizquestion.name",{"_index":949,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["constructor(@injectmodel(role.name",{"_index":1066,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["constructor(@injectmodel(school.name",{"_index":1137,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["constructor(authservice",{"_index":719,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(hangmanwordmodel",{"_index":630,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["constructor(mirrorwordmodel",{"_index":740,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["constructor(mirrorwordservice",{"_index":749,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["constructor(model",{"_index":1176,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["constructor(private",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["constructor(protected",{"_index":1025,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{}}}],["constructor(reflector",{"_index":771,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["constructor(repository",{"_index":589,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SchoolService.html":{}}}],["constructor(resourcemodel",{"_index":501,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["constructor(rolemodel",{"_index":1058,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["constructor(rolerepository",{"_index":1100,"title":{},"body":{"injectables/RoleService.html":{}}}],["constructor(roleservice",{"_index":1072,"title":{},"body":{"classes/RoleResolver.html":{}}}],["constructor(service",{"_index":543,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["constructor(usermodel",{"_index":1275,"title":{},"body":{"injectables/UserRepository.html":{}}}],["constructor(userrepository",{"_index":1353,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(usersservice",{"_index":1327,"title":{},"body":{"classes/UsersResolver.html":{}}}],["context",{"_index":443,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["context.getclass",{"_index":780,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["context.gethandler",{"_index":781,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["context.gettype",{"_index":788,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest().user",{"_index":790,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"overview.html":{}}}],["core",{"_index":1528,"title":{},"body":{"index.html":{}}}],["core.resolver",{"_index":201,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/app.controller",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["core/app.service",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["core/core.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["coremodule",{"_index":40,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["coreresolver",{"_index":200,"title":{"classes/CoreResolver.html":{}},"body":{"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"coverage.html":{}}}],["correct",{"_index":236,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/GroupingItem.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["correctanswers",{"_index":299,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/QuizQuestion.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["count",{"_index":533,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["county",{"_index":320,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/GetSchoolsArgs.html":{},"classes/School.html":{},"classes/UpdateSchoolInput.html":{}}}],["coverage",{"_index":1368,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":497,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(data",{"_index":508,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["createdat",{"_index":455,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{}}}],["creategroupingitem",{"_index":539,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["creategroupingitem(@args('creategroupingitemdata",{"_index":579,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["creategroupingitem(data",{"_index":546,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["creategroupingiteminput",{"_index":229,"title":{"classes/CreateGroupingItemInput.html":{}},"body":{"classes/CreateGroupingItemInput.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["createhangmanword",{"_index":667,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["createhangmanword(@args('createhangmanworddata",{"_index":686,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["createhangmanword(data",{"_index":672,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["createhangmanwordinput",{"_index":248,"title":{"classes/CreateHangmanWordInput.html":{}},"body":{"classes/CreateHangmanWordInput.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["createmirrorword",{"_index":745,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["createmirrorword(@args('createmirrorworddata",{"_index":760,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["createmirrorword(data",{"_index":750,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["createmirrorwordinput",{"_index":259,"title":{"classes/CreateMirrorWordInput.html":{}},"body":{"classes/CreateMirrorWordInput.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["createparamdecorator((_data",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createquiz",{"_index":992,"title":{},"body":{"classes/QuizResolver.html":{}}}],["createquiz(@args('createquizdata",{"_index":1010,"title":{},"body":{"classes/QuizResolver.html":{}}}],["createquiz(data",{"_index":997,"title":{},"body":{"classes/QuizResolver.html":{}}}],["createquizanswer",{"_index":881,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["createquizanswer(@args('createquizanswerdata",{"_index":902,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["createquizanswer(data",{"_index":886,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["createquizanswerinput",{"_index":262,"title":{"classes/CreateQuizAnswerInput.html":{}},"body":{"classes/CreateQuizAnswerInput.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["createquizinput",{"_index":282,"title":{"classes/CreateQuizInput.html":{}},"body":{"classes/CreateQuizInput.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["createquizquestion",{"_index":956,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["createquizquestion(@args('createquizquestiondata",{"_index":973,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["createquizquestion(data",{"_index":961,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["createquizquestioninput",{"_index":294,"title":{"classes/CreateQuizQuestionInput.html":{}},"body":{"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["createrole",{"_index":1069,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createrole(@args('createroledata",{"_index":1093,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createrole(data",{"_index":1074,"title":{},"body":{"classes/RoleResolver.html":{}}}],["createroleinput",{"_index":307,"title":{"classes/CreateRoleInput.html":{}},"body":{"classes/CreateRoleInput.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["createschool",{"_index":1151,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["createschool(@args('createschooldata",{"_index":1170,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["createschool(data",{"_index":1156,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["createschoolinput",{"_index":316,"title":{"classes/CreateSchoolInput.html":{}},"body":{"classes/CreateSchoolInput.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["createuser",{"_index":1323,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(@args('createuserdata",{"_index":1346,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuser(data",{"_index":1329,"title":{},"body":{"classes/UsersResolver.html":{}}}],["createuserinput",{"_index":329,"title":{"classes/CreateUserInput.html":{}},"body":{"classes/CreateUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["currentuser",{"_index":1378,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cypress",{"_index":1587,"title":{},"body":{"index.html":{}}}],["data",{"_index":511,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["data.address",{"_index":1140,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.category",{"_index":645,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizRepository.html":{}}}],["data.county",{"_index":1141,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.email",{"_index":1291,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.id",{"_index":1194,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["data.ids.includes(x._id.tostring",{"_index":653,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data.ids?.length",{"_index":650,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizAnswerRepository.html":{}}}],["data.iscorrect",{"_index":877,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["data.name",{"_index":1139,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.newpassword",{"_index":1301,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.newpasswordconfirm",{"_index":1302,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data.om",{"_index":1138,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.password",{"_index":1362,"title":{},"body":{"injectables/UsersService.html":{}}}],["data.questionid",{"_index":871,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["data.questions",{"_index":989,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["data.questions.map((question",{"_index":990,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["data.quizid",{"_index":865,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["data.quizid}/${data.questionid",{"_index":873,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["data.type",{"_index":1142,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["data.updatedat",{"_index":1201,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["data?.category",{"_index":640,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data?.ids",{"_index":641,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["data?.roles?.map((roleid",{"_index":1308,"title":{},"body":{"injectables/UserRepository.html":{}}}],["data[filterkey",{"_index":1146,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["database_host",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":273,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["date.now",{"_index":1204,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["decoded",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoded.email",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}}}],["default",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":128,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["del",{"_index":1450,"title":{},"body":{"dependencies.html":{}}}],["delete",{"_index":498,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["delete(data",{"_index":512,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["deleted",{"_index":1195,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["deletedat",{"_index":456,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["deletegroupingitem",{"_index":540,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["deletegroupingitem(@args('deletegroupingitemdata",{"_index":585,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["deletegroupingitem(data",{"_index":550,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["deletegroupingiteminput",{"_index":341,"title":{"classes/DeleteGroupingItemInput.html":{}},"body":{"classes/DeleteGroupingItemInput.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["deletehangmanword",{"_index":668,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["deletehangmanword(@args('deletehangmanworddata",{"_index":688,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["deletehangmanword(data",{"_index":674,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["deletehangmanwordinput",{"_index":348,"title":{"classes/DeleteHangmanWordInput.html":{}},"body":{"classes/DeleteHangmanWordInput.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["deletemirrorword",{"_index":746,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["deletemirrorword(@args('deletemirrorworddata",{"_index":764,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["deletemirrorword(data",{"_index":751,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["deletemirrorwordinput",{"_index":350,"title":{"classes/DeleteMirrorWordInput.html":{}},"body":{"classes/DeleteMirrorWordInput.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["deletequiz",{"_index":993,"title":{},"body":{"classes/QuizResolver.html":{}}}],["deletequiz(@args('deletequizdata",{"_index":1012,"title":{},"body":{"classes/QuizResolver.html":{}}}],["deletequiz(data",{"_index":999,"title":{},"body":{"classes/QuizResolver.html":{}}}],["deletequizanswer",{"_index":882,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["deletequizanswer(@args('deletequizanswerdata",{"_index":904,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["deletequizanswer(data",{"_index":888,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["deletequizanswerinput",{"_index":351,"title":{"classes/DeleteQuizAnswerInput.html":{}},"body":{"classes/DeleteQuizAnswerInput.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["deletequizinput",{"_index":353,"title":{"classes/DeleteQuizInput.html":{}},"body":{"classes/DeleteQuizInput.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["deletequizquestion",{"_index":957,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["deletequizquestion(@args('deletequizquestiondata",{"_index":975,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["deletequizquestion(data",{"_index":963,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["deletequizquestioninput",{"_index":355,"title":{"classes/DeleteQuizQuestionInput.html":{}},"body":{"classes/DeleteQuizQuestionInput.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["deleterole",{"_index":1070,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleterole(@args('deleteroledata",{"_index":1097,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleterole(data",{"_index":1077,"title":{},"body":{"classes/RoleResolver.html":{}}}],["deleteroleinput",{"_index":357,"title":{"classes/DeleteRoleInput.html":{}},"body":{"classes/DeleteRoleInput.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["deleteschool",{"_index":1152,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["deleteschool(@args('deleteschooldata",{"_index":1172,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["deleteschool(data",{"_index":1159,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["deleteschoolinput",{"_index":359,"title":{"classes/DeleteSchoolInput.html":{}},"body":{"classes/DeleteSchoolInput.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["deleteuser",{"_index":1324,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuser(@args('deleteuserdata",{"_index":1350,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuser(data",{"_index":1331,"title":{},"body":{"classes/UsersResolver.html":{}}}],["deleteuserinput",{"_index":361,"title":{"classes/DeleteUserInput.html":{}},"body":{"classes/DeleteUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["dep",{"_index":1590,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":35,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["dependency",{"_index":1626,"title":{},"body":{"index.html":{}}}],["deprecationreason",{"_index":381,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{}}}],["description",{"_index":286,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/CreateRoleInput.html":{},"classes/HangmanWordResolver.html":{},"classes/Quiz.html":{},"classes/Role.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateRoleInput.html":{}}}],["dev",{"_index":1559,"title":{},"body":{"index.html":{}}}],["developers",{"_index":1633,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1516,"title":{},"body":{"index.html":{}}}],["development",{"_index":1557,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1524,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":1593,"title":{},"body":{"index.html":{}}}],["different",{"_index":1517,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1573,"title":{},"body":{"index.html":{}}}],["disable",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["dist",{"_index":1572,"title":{},"body":{"index.html":{}}}],["distributed",{"_index":1599,"title":{},"body":{"index.html":{}}}],["document",{"_index":474,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{}}}],["documentation",{"_index":1369,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotenv",{"_index":1453,"title":{},"body":{"dependencies.html":{}}}],["dto/args/get",{"_index":525,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/create",{"_index":524,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/delete",{"_index":528,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dto/inputs/update",{"_index":522,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["dynamic",{"_index":1409,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":1586,"title":{},"body":{"index.html":{}}}],["email",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"classes/GetUserArgs.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["enable",{"_index":1606,"title":{},"body":{"index.html":{}}}],["end",{"_index":1585,"title":{},"body":{"index.html":{}}}],["entities/grouping",{"_index":489,"title":{},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["entities/hangman",{"_index":625,"title":{},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{}}}],["entities/mirror",{"_index":738,"title":{},"body":{"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["entities/quiz",{"_index":848,"title":{},"body":{"modules/QuizAnswerModule.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{}}}],["entities/quiz.entity",{"_index":915,"title":{},"body":{"modules/QuizModule.html":{},"classes/QuizResolver.html":{}}}],["entities/quiz.repository",{"_index":916,"title":{},"body":{"modules/QuizModule.html":{},"injectables/QuizService.html":{}}}],["entities/role.entity",{"_index":1054,"title":{},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{}}}],["entities/role.repository",{"_index":1055,"title":{},"body":{"modules/RoleModule.html":{},"injectables/RoleService.html":{}}}],["entities/school.entity",{"_index":1127,"title":{},"body":{"modules/SchoolModule.html":{},"classes/SchoolResolver.html":{}}}],["entities/school.repository",{"_index":1128,"title":{},"body":{"modules/SchoolModule.html":{},"injectables/SchoolService.html":{}}}],["entities/user.entity",{"_index":1320,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["entities/user.repository",{"_index":1319,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["environment",{"_index":1393,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eq",{"_index":1189,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["error('new",{"_index":1303,"title":{},"body":{"injectables/UserRepository.html":{}}}],["error('please",{"_index":1294,"title":{},"body":{"injectables/UserRepository.html":{}}}],["error('user",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{}}}],["eslint",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["eslint/no",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["etc",{"_index":1522,"title":{},"body":{"index.html":{}}}],["even",{"_index":1610,"title":{},"body":{"index.html":{}}}],["exec",{"_index":988,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["execute",{"_index":1580,"title":{},"body":{"index.html":{}}}],["execution",{"_index":1603,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":441,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["experience",{"_index":1629,"title":{},"body":{"index.html":{}}}],["expiresin",{"_index":134,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":219,"title":{},"body":{"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{}}}],["express",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{},"index.html":{}}}],["extends",{"_index":233,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["extensible",{"_index":1499,"title":{},"body":{"index.html":{}}}],["extractjwt",{"_index":704,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":711,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":713,"title":{},"body":{"injectables/JwtStrategy.html":{},"guards/PermissionGuard.html":{},"injectables/SimpleRepository.html":{},"miscellaneous/variables.html":{}}}],["fast",{"_index":1498,"title":{},"body":{"index.html":{}}}],["features",{"_index":1507,"title":{},"body":{"index.html":{}}}],["few",{"_index":657,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["field",{"_index":239,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["field()@isnotempty",{"_index":254,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/IdArg.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["field()@isnotempty()@isemail",{"_index":334,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["field()@prop",{"_index":461,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["field(undefined",{"_index":241,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateUserInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArrayArg.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["field(undefined)@isarray",{"_index":313,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["field(undefined)@isarray()@arraynotempty",{"_index":326,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["field(undefined)@prop",{"_index":831,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["field(undefined)@prop({type",{"_index":458,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["field({nullable",{"_index":367,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":1565,"title":{},"body":{"index.html":{}}}],["filtering",{"_index":987,"title":{},"body":{"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["filterkey",{"_index":1145,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["filters",{"_index":1144,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["filters['types",{"_index":1148,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["filters[filterkey",{"_index":1147,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["findall",{"_index":499,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findall(data",{"_index":515,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":496,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["findone().skip",{"_index":662,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["findone(__data",{"_index":505,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["findone(data",{"_index":595,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["flag",{"_index":1575,"title":{},"body":{"index.html":{}}}],["flatten",{"_index":776,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["flatten(user.roles.map((role",{"_index":793,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["float",{"_index":225,"title":{},"body":{"classes/CoreResolver.html":{}}}],["forwardref",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{}}}],["found",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["framework",{"_index":1533,"title":{},"body":{"index.html":{}}}],["free",{"_index":875,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["frontend",{"_index":1631,"title":{},"body":{"index.html":{}}}],["frontends",{"_index":1534,"title":{},"body":{"index.html":{}}}],["full",{"_index":1619,"title":{},"body":{"index.html":{}}}],["function",{"_index":1396,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1488,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1594,"title":{},"body":{"index.html":{}}}],["g",{"_index":1545,"title":{},"body":{"index.html":{}}}],["gain",{"_index":1616,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1542,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1494,"title":{},"body":{"index.html":{}}}],["generating",{"_index":1520,"title":{},"body":{"index.html":{}}}],["generation",{"_index":1625,"title":{},"body":{"index.html":{}}}],["get('hello",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["getdata",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getgroupingitemargs",{"_index":363,"title":{"classes/GetGroupingItemArgs.html":{}},"body":{"classes/GetGroupingItemArgs.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["getgroupingitemsargs",{"_index":371,"title":{"classes/GetGroupingItemsArgs.html":{}},"body":{"classes/GetGroupingItemsArgs.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["gethangmanwordargs",{"_index":377,"title":{"classes/GetHangmanWordArgs.html":{}},"body":{"classes/GetHangmanWordArgs.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["gethangmanwordsargs",{"_index":383,"title":{"classes/GetHangmanWordsArgs.html":{}},"body":{"classes/GetHangmanWordsArgs.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["getmirrorwordargs",{"_index":386,"title":{"classes/GetMirrorWordArgs.html":{}},"body":{"classes/GetMirrorWordArgs.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["getmirrorwordsargs",{"_index":387,"title":{"classes/GetMirrorWordsArgs.html":{}},"body":{"classes/GetMirrorWordsArgs.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["getquizanswerargs",{"_index":388,"title":{"classes/GetQuizAnswerArgs.html":{}},"body":{"classes/GetQuizAnswerArgs.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["getquizanswersargs",{"_index":392,"title":{"classes/GetQuizAnswersArgs.html":{}},"body":{"classes/GetQuizAnswersArgs.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{}}}],["getquizargs",{"_index":395,"title":{"classes/GetQuizArgs.html":{}},"body":{"classes/GetQuizArgs.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["getquizquestionargs",{"_index":398,"title":{"classes/GetQuizQuestionArgs.html":{}},"body":{"classes/GetQuizQuestionArgs.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["getquizquestionsargs",{"_index":401,"title":{"classes/GetQuizQuestionsArgs.html":{}},"body":{"classes/GetQuizQuestionsArgs.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["getquizzesargs",{"_index":403,"title":{"classes/GetQuizzesArgs.html":{}},"body":{"classes/GetQuizzesArgs.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["getrequest",{"_index":439,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["getrequest(context",{"_index":440,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["getroleargs",{"_index":406,"title":{"classes/GetRoleArgs.html":{}},"body":{"classes/GetRoleArgs.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["getrolesargs",{"_index":409,"title":{"classes/GetRolesArgs.html":{}},"body":{"classes/GetRolesArgs.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["getschoolargs",{"_index":411,"title":{"classes/GetSchoolArgs.html":{}},"body":{"classes/GetSchoolArgs.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["getschoolsargs",{"_index":414,"title":{"classes/GetSchoolsArgs.html":{}},"body":{"classes/GetSchoolsArgs.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["getting",{"_index":1490,"title":{"index.html":{}},"body":{}}],["getuserargs",{"_index":421,"title":{"classes/GetUserArgs.html":{}},"body":{"classes/GetUserArgs.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["getusersargs",{"_index":431,"title":{"classes/GetUsersArgs.html":{}},"body":{"classes/GetUsersArgs.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["gql",{"_index":693,"title":{},"body":{"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{}}}],["gqlarg",{"_index":424,"title":{"classes/GqlArg.html":{}},"body":{"classes/GetUserArgs.html":{},"classes/GqlArg.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"coverage.html":{}}}],["gqlauthguard",{"_index":436,"title":{"classes/GqlAuthGuard.html":{}},"body":{"classes/GqlAuthGuard.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["gqlexecutioncontext",{"_index":445,"title":{},"body":{"classes/GqlAuthGuard.html":{},"guards/PermissionGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext().req",{"_index":447,"title":{},"body":{"classes/GqlAuthGuard.html":{}}}],["gqlexecutioncontext.create(context).getcontext().req.user",{"_index":791,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["gqlinput",{"_index":234,"title":{"classes/GqlInput.html":{}},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/GqlInput.html":{},"classes/IdInput.html":{},"coverage.html":{}}}],["graph",{"_index":1591,"title":{},"body":{"index.html":{},"modules.html":{}}}],["graphql",{"_index":1455,"title":{},"body":{"dependencies.html":{}}}],["graphqlmodule",{"_index":198,"title":{},"body":{"modules/CoreModule.html":{}}}],["graphqlmodule.forroot",{"_index":211,"title":{},"body":{"modules/CoreModule.html":{}}}],["grouping",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateGroupingItemInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["groupingitem",{"_index":449,"title":{"classes/GroupingItem.html":{}},"body":{"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"coverage.html":{}}}],["groupingitem(@args",{"_index":572,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitem(data",{"_index":553,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitem.name",{"_index":493,"title":{},"body":{"modules/GroupingItemModule.html":{}}}],["groupingitemdocument",{"_index":476,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"miscellaneous/typealiases.html":{}}}],["groupingitemmodule",{"_index":41,"title":{"modules/GroupingItemModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GroupingItemModule.html":{},"modules.html":{},"overview.html":{}}}],["groupingitemrepository",{"_index":483,"title":{"injectables/GroupingItemRepository.html":{}},"body":{"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{},"overview.html":{}}}],["groupingitemresolver",{"_index":487,"title":{"classes/GroupingItemResolver.html":{}},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"coverage.html":{}}}],["groupingitems",{"_index":541,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitems(@args",{"_index":576,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitems(data",{"_index":555,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["groupingitemschema",{"_index":478,"title":{},"body":{"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["groupingitemservice",{"_index":484,"title":{"injectables/GroupingItemService.html":{}},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{},"overview.html":{}}}],["groups",{"_index":237,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/GroupingItem.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["guard",{"_index":766,"title":{"guards/PermissionGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":569,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["guard.service.ts",{"_index":769,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["guard.service.ts:10",{"_index":775,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guard.service.ts:7",{"_index":773,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guards",{"_index":767,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["guards/local",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["hangman",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateHangmanWordInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/UpdateHangmanWordInput.html":{},"coverage.html":{}}}],["hangmanword",{"_index":603,"title":{"classes/HangmanWord.html":{}},"body":{"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"coverage.html":{}}}],["hangmanword(@args",{"_index":684,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanword(data",{"_index":676,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanword.name",{"_index":628,"title":{},"body":{"modules/HangmanWordModule.html":{}}}],["hangmanworddocument",{"_index":613,"title":{},"body":{"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"miscellaneous/typealiases.html":{}}}],["hangmanwordmodel",{"_index":632,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["hangmanwordmodule",{"_index":42,"title":{"modules/HangmanWordModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HangmanWordModule.html":{},"modules.html":{},"overview.html":{}}}],["hangmanwordrepository",{"_index":619,"title":{"injectables/HangmanWordRepository.html":{}},"body":{"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{},"overview.html":{}}}],["hangmanwordresolver",{"_index":623,"title":{"classes/HangmanWordResolver.html":{}},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"coverage.html":{}}}],["hangmanwords",{"_index":669,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanwords(@args",{"_index":685,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanwords(data",{"_index":679,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["hangmanwordschema",{"_index":614,"title":{},"body":{"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hangmanwordservice",{"_index":620,"title":{"injectables/HangmanWordService.html":{}},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":1595,"title":{},"body":{"index.html":{}}}],["http",{"_index":789,"title":{},"body":{"guards/PermissionGuard.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1561,"title":{},"body":{"index.html":{}}}],["hundred",{"_index":658,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["iapiresource",{"_index":1184,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["id",{"_index":344,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetUserArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"injectables/UserRepository.html":{}}}],["idarg",{"_index":366,"title":{"classes/IdArg.html":{}},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["idarg:7",{"_index":368,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{}}}],["idarg:9",{"_index":391,"title":{},"body":{"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{}}}],["idarrayarg",{"_index":373,"title":{"classes/IdArrayArg.html":{}},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["idarrayarg:9",{"_index":376,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{}}}],["identifier",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["idinput",{"_index":343,"title":{"classes/IdInput.html":{}},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/IdInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["idinput:10",{"_index":1208,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["idinput:11",{"_index":1221,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["idinput:9",{"_index":346,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["ids",{"_index":374,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{}}}],["ignoreexpiration",{"_index":712,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["igroupingitem",{"_index":453,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{}}}],["ihangmanword",{"_index":606,"title":{},"body":{"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{}}}],["imirrorword",{"_index":728,"title":{},"body":{"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{}}}],["implements",{"_index":452,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["imported",{"_index":1555,"title":{},"body":{"index.html":{}}}],["imports",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["include",{"_index":1519,"title":{},"body":{"index.html":{}}}],["incorrect",{"_index":1300,"title":{},"body":{"injectables/UserRepository.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":345,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["inject",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"modules/CoreModule.html":{},"injectables/JwtStrategy.html":{}}}],["inject(forwardref",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["injectable",{"_index":74,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":520,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/UserRepository.html":{}}}],["injectmodel(quizanswer.name",{"_index":864,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["injectmodel(role.name",{"_index":1288,"title":{},"body":{"injectables/UserRepository.html":{}}}],["injectmodel(user.name",{"_index":1287,"title":{},"body":{"injectables/UserRepository.html":{}}}],["input.abstract",{"_index":247,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/IdInput.html":{}}}],["input.abstract.ts",{"_index":448,"title":{},"body":{"classes/GqlInput.html":{},"coverage.html":{}}}],["inputs/gql",{"_index":246,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/GqlInput.html":{},"coverage.html":{}}}],["inputs/id.input",{"_index":347,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["inputs/id.input.ts",{"_index":695,"title":{},"body":{"classes/IdInput.html":{},"coverage.html":{}}}],["inputs/id.input.ts:4",{"_index":696,"title":{},"body":{"classes/IdInput.html":{}}}],["inputtype",{"_index":244,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["instantly",{"_index":1615,"title":{},"body":{"index.html":{}}}],["int",{"_index":281,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["interactive",{"_index":1508,"title":{},"body":{"index.html":{}}}],["interfaces",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateQuizInput.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["ionic/angular",{"_index":1419,"title":{},"body":{"dependencies.html":{}}}],["ionic/storage",{"_index":1421,"title":{},"body":{"dependencies.html":{}}}],["iquiz",{"_index":801,"title":{},"body":{"classes/Quiz.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{}}}],["iquizanswer",{"_index":822,"title":{},"body":{"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{}}}],["iquizquestion",{"_index":291,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/Quiz.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"classes/UpdateQuizInput.html":{}}}],["irole",{"_index":1033,"title":{},"body":{"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["isarray",{"_index":315,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["ischool",{"_index":1105,"title":{},"body":{"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{}}}],["iscorrect",{"_index":268,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{}}}],["isemail",{"_index":340,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{}}}],["isglobal",{"_index":208,"title":{},"body":{"modules/CoreModule.html":{}}}],["isnotempty",{"_index":257,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["isoptional",{"_index":428,"title":{},"body":{"classes/GetUserArgs.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["item",{"_index":238,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/GroupingItem.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["item.args",{"_index":527,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["item.args.ts",{"_index":365,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"coverage.html":{}}}],["item.entity",{"_index":490,"title":{},"body":{"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{}}}],["item.entity.ts",{"_index":451,"title":{},"body":{"classes/GroupingItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["item.entity.ts:13",{"_index":460,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:17",{"_index":467,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:21",{"_index":466,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:25",{"_index":462,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:29",{"_index":463,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:33",{"_index":468,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.entity.ts:37",{"_index":465,"title":{},"body":{"classes/GroupingItem.html":{}}}],["item.input",{"_index":523,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["item.input.ts",{"_index":232,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["item.input.ts:10",{"_index":242,"title":{},"body":{"classes/CreateGroupingItemInput.html":{}}}],["item.input.ts:13",{"_index":240,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:16",{"_index":1207,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:19",{"_index":1206,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:21",{"_index":1209,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{}}}],["item.input.ts:7",{"_index":243,"title":{},"body":{"classes/CreateGroupingItemInput.html":{}}}],["item.module",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["item.module.ts",{"_index":485,"title":{},"body":{"modules/GroupingItemModule.html":{}}}],["item.repository",{"_index":491,"title":{},"body":{"modules/GroupingItemModule.html":{},"injectables/GroupingItemService.html":{}}}],["item.repository.ts",{"_index":494,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"coverage.html":{}}}],["item.repository.ts:22",{"_index":503,"title":{},"body":{"injectables/GroupingItemRepository.html":{}}}],["item.resolver",{"_index":488,"title":{},"body":{"modules/GroupingItemModule.html":{}}}],["item.resolver.ts",{"_index":538,"title":{},"body":{"classes/GroupingItemResolver.html":{},"coverage.html":{}}}],["item.resolver.ts:17",{"_index":544,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:21",{"_index":554,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:28",{"_index":558,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:35",{"_index":549,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:42",{"_index":561,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.resolver.ts:49",{"_index":552,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["item.service",{"_index":486,"title":{},"body":{"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{}}}],["item.service.ts",{"_index":587,"title":{},"body":{"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["item.service.ts:18",{"_index":590,"title":{},"body":{"injectables/GroupingItemService.html":{}}}],["item/dto/args/get",{"_index":364,"title":{},"body":{"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"coverage.html":{}}}],["item/dto/inputs/create",{"_index":231,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"coverage.html":{}}}],["item/dto/inputs/delete",{"_index":342,"title":{},"body":{"classes/DeleteGroupingItemInput.html":{},"coverage.html":{}}}],["item/dto/inputs/update",{"_index":1205,"title":{},"body":{"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["item/entities/grouping",{"_index":450,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["item/grouping",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/GroupingItemModule.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"coverage.html":{}}}],["items",{"_index":571,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["items'})@permission('browse')@useguards(gqlauthguard",{"_index":556,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{}}}],["items'})@useguards(gqlauthguard",{"_index":1338,"title":{},"body":{"classes/UsersResolver.html":{}}}],["items.args",{"_index":526,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{}}}],["items.args.ts",{"_index":372,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"coverage.html":{}}}],["itemsandlist",{"_index":302,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/CreateUserInput.html":{},"classes/QuizQuestion.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["itemsandlist'})@isoptional()@isarray",{"_index":1233,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["itemsandlist'})@isoptional()@isarray()@arraynotempty",{"_index":1240,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["itemsandlist'})@prop({type",{"_index":922,"title":{},"body":{"classes/QuizQuestion.html":{},"classes/User.html":{}}}],["iupdatedat",{"_index":1185,"title":{},"body":{"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["iuser",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["jest",{"_index":1582,"title":{},"body":{"index.html":{}}}],["joi",{"_index":1459,"title":{},"body":{"dependencies.html":{}}}],["joi.number().default(3000",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid('development",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jsonwebtoken",{"_index":1461,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":129,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":697,"title":{"classes/JwtAuthGuard.html":{}},"body":{"classes/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":710,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":130,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":114,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["learn",{"_index":1597,"title":{},"body":{"index.html":{}}}],["lib",{"_index":1553,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1521,"title":{},"body":{"index.html":{}}}],["library",{"_index":1551,"title":{},"body":{"index.html":{}}}],["line",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["literal",{"_index":702,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["load",{"_index":210,"title":{},"body":{"modules/CoreModule.html":{}}}],["loader",{"_index":1434,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":717,"title":{},"body":{"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":100,"title":{"classes/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"classes/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":115,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@req",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{}}}],["many",{"_index":1514,"title":{},"body":{"index.html":{}}}],["map((permission",{"_index":795,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["match",{"_index":1305,"title":{},"body":{"injectables/UserRepository.html":{}}}],["matching",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":536,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["message",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["metadata",{"_index":1472,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["minute",{"_index":1504,"title":{},"body":{"index.html":{}}}],["mirror",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateMirrorWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["mirrorword",{"_index":726,"title":{"classes/MirrorWord.html":{}},"body":{"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"coverage.html":{}}}],["mirrorword(@args",{"_index":756,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorword(data",{"_index":752,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorword.name",{"_index":739,"title":{},"body":{"modules/MirrorWordModule.html":{}}}],["mirrorworddocument",{"_index":729,"title":{},"body":{"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"miscellaneous/typealiases.html":{}}}],["mirrorwordmodel",{"_index":741,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["mirrorwordmodule",{"_index":43,"title":{"modules/MirrorWordModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MirrorWordModule.html":{},"modules.html":{},"overview.html":{}}}],["mirrorwordrepository",{"_index":735,"title":{"injectables/MirrorWordRepository.html":{}},"body":{"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{},"overview.html":{}}}],["mirrorwordresolver",{"_index":737,"title":{"classes/MirrorWordResolver.html":{}},"body":{"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"coverage.html":{}}}],["mirrorwords",{"_index":747,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorwords(@args",{"_index":758,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorwords(data",{"_index":753,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["mirrorwordschema",{"_index":730,"title":{},"body":{"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mirrorwordservice",{"_index":736,"title":{"injectables/MirrorWordService.html":{}},"body":{"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{},"overview.html":{}}}],["miscellaneous",{"_index":1487,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":502,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["module",{"_index":32,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":34,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb+srv://${configservice.get('database_user')}@${configservice.get",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose",{"_index":475,"title":{},"body":{"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"dependencies.html":{}}}],["mongooseconfig",{"_index":204,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongooseconfig.imports",{"_index":215,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseconfig.mongooseconfigfactory",{"_index":217,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseconfig.providers",{"_index":218,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseconfigfactory",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":202,"title":{},"body":{"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":492,"title":{},"body":{"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":214,"title":{},"body":{"modules/CoreModule.html":{}}}],["mongooseschema",{"_index":473,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["mongooseschema.types.mixed",{"_index":816,"title":{},"body":{"classes/Quiz.html":{}}}],["mongooseschema.types.objectid",{"_index":477,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["more",{"_index":656,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"index.html":{}}}],["multiple",{"_index":1549,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":562,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["mutation(undefined",{"_index":1157,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard",{"_index":547,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('create",{"_index":1075,"title":{},"body":{"classes/RoleResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('delete",{"_index":1078,"title":{},"body":{"classes/RoleResolver.html":{}}}],["mutation(undefined)@useguards(gqlauthguard)@permission('update",{"_index":1086,"title":{},"body":{"classes/RoleResolver.html":{}}}],["name",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/GetSchoolsArgs.html":{},"classes/GqlAuthGuard.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["navigate",{"_index":1560,"title":{},"body":{"index.html":{}}}],["needs",{"_index":953,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["nest",{"_index":1536,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/GqlAuthGuard.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":777,"title":{},"body":{"guards/PermissionGuard.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":199,"title":{},"body":{"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":203,"title":{},"body":{"modules/CoreModule.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":123,"title":{},"body":{"modules/AuthModule.html":{},"classes/GqlAuthGuard.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1429,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"coverage.html":{},"index.html":{}}}],["newpassword",{"_index":1245,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["newpasswordconfirm",{"_index":1246,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["next",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["ng",{"_index":1529,"title":{},"body":{"index.html":{}}}],["ngx",{"_index":1430,"title":{},"body":{"dependencies.html":{}}}],["node",{"_index":1539,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["note",{"_index":654,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["notfoundexception",{"_index":858,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"injectables/SimpleRepository.html":{}}}],["notfoundexception(`model",{"_index":1193,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["notfoundexception(`question",{"_index":872,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["nrwl/angular",{"_index":1436,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nrwl/angular:app",{"_index":1546,"title":{},"body":{"index.html":{}}}],["nrwl/angular:lib",{"_index":1552,"title":{},"body":{"index.html":{}}}],["nrwl/express",{"_index":1538,"title":{},"body":{"index.html":{}}}],["nrwl/nest",{"_index":1537,"title":{},"body":{"index.html":{}}}],["nrwl/node",{"_index":1540,"title":{},"body":{"index.html":{}}}],["nrwl/react",{"_index":1531,"title":{},"body":{"index.html":{}}}],["nrwl/web",{"_index":1535,"title":{},"body":{"index.html":{}}}],["null",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateQuizAnswerInput.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["nullable",{"_index":301,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/CreateUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{}}}],["number",{"_index":278,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["nx",{"_index":1496,"title":{},"body":{"index.html":{}}}],["nx/api",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateQuizInput.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["nx/mylib",{"_index":1556,"title":{},"body":{"index.html":{}}}],["nxtend/capacitor",{"_index":1438,"title":{},"body":{"dependencies.html":{}}}],["nxtend/ionic",{"_index":1440,"title":{},"body":{"dependencies.html":{}}}],["nx’s",{"_index":1623,"title":{},"body":{"index.html":{}}}],["object",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(data).length",{"_index":1186,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["objecttype",{"_index":469,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["om",{"_index":269,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/GetSchoolsArgs.html":{},"classes/QuizAnswer.html":{},"classes/School.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["optional",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateUserInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArrayArg.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":648,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["order",{"_index":1605,"title":{},"body":{"index.html":{}}}],["originalquestion",{"_index":868,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["originalquestion.answers.includes(data.answer",{"_index":878,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["originalquestion.type",{"_index":874,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["originalquiz",{"_index":866,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["originalquiz.questions.find((q",{"_index":869,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["out",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overridden",{"_index":954,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["override",{"_index":532,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["overview",{"_index":1638,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1400,"title":{"dependencies.html":{}},"body":{}}],["pairs",{"_index":1604,"title":{},"body":{"index.html":{}}}],["param",{"_index":644,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["param['category",{"_index":646,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["parameters",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["parseint(process.env.port",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":706,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":122,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":127,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":707,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":708,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserInput.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["passwords",{"_index":1304,"title":{},"body":{"injectables/UserRepository.html":{}}}],["payload",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":715,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["per",{"_index":660,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["permission",{"_index":565,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission('browse",{"_index":574,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('create",{"_index":578,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('delete",{"_index":584,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('read",{"_index":899,"title":{},"body":{"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permission('update",{"_index":581,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permission.replace(/^\\*::/g",{"_index":796,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["permissionguard",{"_index":557,"title":{"guards/PermissionGuard.html":{}},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["permissionguard)@permission('browse",{"_index":1339,"title":{},"body":{"classes/UsersResolver.html":{}}}],["permissionguard)@permission('create",{"_index":548,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/UsersResolver.html":{}}}],["permissionguard)@permission('delete",{"_index":551,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permissionguard)@permission('read",{"_index":892,"title":{},"body":{"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permissionguard)@permission('update",{"_index":560,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["permissions",{"_index":310,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/Role.html":{},"classes/UpdateRoleInput.html":{}}}],["playground",{"_index":213,"title":{},"body":{"modules/CoreModule.html":{}}}],["plugins",{"_index":1515,"title":{},"body":{"index.html":{}}}],["plus",{"_index":1627,"title":{},"body":{"index.html":{}}}],["polyfill",{"_index":1479,"title":{},"body":{"dependencies.html":{}}}],["populate('roles",{"_index":1293,"title":{},"body":{"injectables/UserRepository.html":{}}}],["port",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{}}}],["preferred",{"_index":1621,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["primeicons",{"_index":1467,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":1469,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/UserRepository.html":{}}}],["process.env.jwt_expires",{"_index":135,"title":{},"body":{"modules/AuthModule.html":{}}}],["process.env.jwt_secret",{"_index":132,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.node_env",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.uptime",{"_index":228,"title":{},"body":{"classes/CoreResolver.html":{}}}],["prod",{"_index":1574,"title":{},"body":{"index.html":{}}}],["production",{"_index":1576,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1493,"title":{},"body":{"index.html":{}}}],["project=my",{"_index":1569,"title":{},"body":{"index.html":{}}}],["projects",{"_index":1526,"title":{},"body":{"index.html":{}}}],["promise",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["promise.all(data.ids.map((id",{"_index":1187,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["promise.reject(new",{"_index":1192,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["prop",{"_index":470,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["properties",{"_index":235,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["provide",{"_index":1295,"title":{},"body":{"injectables/UserRepository.html":{}}}],["providers",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CoreModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["proxy.service",{"_index":601,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["proxy.service.ts",{"_index":1016,"title":{},"body":{"injectables/RepositoryProxyService.html":{},"coverage.html":{}}}],["proxy.service.ts:22",{"_index":1018,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:25",{"_index":1019,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:29",{"_index":1021,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:33",{"_index":1022,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:37",{"_index":1023,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["proxy.service.ts:41",{"_index":1020,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["public",{"_index":261,"title":{},"body":{"classes/CreateMirrorWordInput.html":{},"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["q._id.tostring",{"_index":870,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["query",{"_index":226,"title":{},"body":{"classes/CoreResolver.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["query(undefined",{"_index":223,"title":{},"body":{"classes/CoreResolver.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["question",{"_index":300,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/QuizQuestion.html":{},"injectables/QuizRepository.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["question.args",{"_index":948,"title":{},"body":{"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{}}}],["question.args.ts",{"_index":400,"title":{},"body":{"classes/GetQuizQuestionArgs.html":{},"coverage.html":{}}}],["question.entity",{"_index":814,"title":{},"body":{"classes/Quiz.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{}}}],["question.entity.ts",{"_index":920,"title":{},"body":{"classes/QuizQuestion.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["question.entity.ts:13",{"_index":921,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:17",{"_index":927,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:21",{"_index":928,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:25",{"_index":923,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:29",{"_index":924,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:33",{"_index":925,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:37",{"_index":929,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.entity.ts:41",{"_index":926,"title":{},"body":{"classes/QuizQuestion.html":{}}}],["question.input",{"_index":296,"title":{},"body":{"classes/CreateQuizInput.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"classes/UpdateQuizInput.html":{}}}],["question.input.ts",{"_index":297,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{}}}],["question.input.ts:10",{"_index":306,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{}}}],["question.input.ts:13",{"_index":303,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:16",{"_index":304,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{},"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:19",{"_index":1226,"title":{},"body":{"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:22",{"_index":1227,"title":{},"body":{"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:24",{"_index":1228,"title":{},"body":{"classes/UpdateQuizQuestionInput.html":{}}}],["question.input.ts:7",{"_index":305,"title":{},"body":{"classes/CreateQuizQuestionInput.html":{}}}],["question.module.ts",{"_index":939,"title":{},"body":{"modules/QuizQuestionModule.html":{}}}],["question.repository",{"_index":943,"title":{},"body":{"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionService.html":{}}}],["question.repository.ts",{"_index":944,"title":{},"body":{"injectables/QuizQuestionRepository.html":{},"coverage.html":{}}}],["question.repository.ts:22",{"_index":945,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["question.resolver",{"_index":942,"title":{},"body":{"modules/QuizQuestionModule.html":{}}}],["question.resolver.ts",{"_index":955,"title":{},"body":{"classes/QuizQuestionResolver.html":{},"coverage.html":{}}}],["question.resolver.ts:17",{"_index":960,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:23",{"_index":966,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:30",{"_index":968,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:37",{"_index":962,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:44",{"_index":970,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.resolver.ts:51",{"_index":964,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["question.service",{"_index":940,"title":{},"body":{"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{}}}],["question.service.ts",{"_index":976,"title":{},"body":{"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["question.service.ts:18",{"_index":977,"title":{},"body":{"injectables/QuizQuestionService.html":{}}}],["question/dto/args/get",{"_index":399,"title":{},"body":{"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"coverage.html":{}}}],["question/dto/inputs/create",{"_index":295,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"coverage.html":{}}}],["question/dto/inputs/delete",{"_index":356,"title":{},"body":{"classes/DeleteQuizQuestionInput.html":{},"coverage.html":{}}}],["question/dto/inputs/update",{"_index":1225,"title":{},"body":{"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{}}}],["question/entities/quiz",{"_index":813,"title":{},"body":{"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["question/quiz",{"_index":938,"title":{},"body":{"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{}}}],["questionid",{"_index":270,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/QuizAnswer.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["questions",{"_index":287,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/Quiz.html":{},"classes/QuizQuestionResolver.html":{},"classes/UpdateQuizInput.html":{}}}],["questions.args",{"_index":947,"title":{},"body":{"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{}}}],["questions.args.ts",{"_index":402,"title":{},"body":{"classes/GetQuizQuestionsArgs.html":{},"coverage.html":{}}}],["quick",{"_index":1502,"title":{},"body":{"index.html":{}}}],["quiz",{"_index":71,"title":{"classes/Quiz.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/Quiz.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{}}}],["quiz(@args",{"_index":1008,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quiz(data",{"_index":1001,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quiz.args",{"_index":985,"title":{},"body":{"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{}}}],["quiz.args.ts",{"_index":397,"title":{},"body":{"classes/GetQuizArgs.html":{},"coverage.html":{}}}],["quiz.entity",{"_index":981,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["quiz.input",{"_index":983,"title":{},"body":{"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{}}}],["quiz.input.ts",{"_index":284,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/DeleteQuizInput.html":{},"classes/UpdateQuizInput.html":{},"coverage.html":{}}}],["quiz.input.ts:12",{"_index":290,"title":{},"body":{"classes/CreateQuizInput.html":{}}}],["quiz.input.ts:14",{"_index":1223,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:15",{"_index":289,"title":{},"body":{"classes/CreateQuizInput.html":{}}}],["quiz.input.ts:17",{"_index":1220,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:18",{"_index":292,"title":{},"body":{"classes/CreateQuizInput.html":{}}}],["quiz.input.ts:20",{"_index":1219,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:23",{"_index":1222,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:25",{"_index":1224,"title":{},"body":{"classes/UpdateQuizInput.html":{}}}],["quiz.input.ts:9",{"_index":293,"title":{},"body":{"classes/CreateQuizInput.html":{}}}],["quiz.name",{"_index":919,"title":{},"body":{"modules/QuizModule.html":{}}}],["quiz.resolver",{"_index":914,"title":{},"body":{"modules/QuizModule.html":{}}}],["quiz.service",{"_index":912,"title":{},"body":{"modules/QuizModule.html":{},"classes/QuizResolver.html":{}}}],["quiz/quiz.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/QuizAnswerModule.html":{}}}],["quiz/quiz.service",{"_index":863,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["quizanswer",{"_index":819,"title":{"classes/QuizAnswer.html":{}},"body":{"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"coverage.html":{}}}],["quizanswer(@args",{"_index":900,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["quizanswer(data",{"_index":890,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["quizanswer.name",{"_index":851,"title":{},"body":{"modules/QuizAnswerModule.html":{}}}],["quizanswerdocument",{"_index":835,"title":{},"body":{"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"miscellaneous/typealiases.html":{}}}],["quizanswermodule",{"_index":44,"title":{"modules/QuizAnswerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QuizAnswerModule.html":{},"modules.html":{},"overview.html":{}}}],["quizanswerrepository",{"_index":842,"title":{"injectables/QuizAnswerRepository.html":{}},"body":{"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{},"overview.html":{}}}],["quizanswerresolver",{"_index":846,"title":{"classes/QuizAnswerResolver.html":{}},"body":{"modules/QuizAnswerModule.html":{},"classes/QuizAnswerResolver.html":{},"coverage.html":{}}}],["quizanswers",{"_index":883,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["quizanswers(@args",{"_index":901,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["quizanswers(data",{"_index":894,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["quizanswerschema",{"_index":836,"title":{},"body":{"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quizanswerservice",{"_index":843,"title":{"injectables/QuizAnswerService.html":{}},"body":{"modules/QuizAnswerModule.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"coverage.html":{},"overview.html":{}}}],["quizdocument",{"_index":815,"title":{},"body":{"classes/Quiz.html":{},"injectables/QuizRepository.html":{},"miscellaneous/typealiases.html":{}}}],["quizid",{"_index":271,"title":{},"body":{"classes/CreateQuizAnswerInput.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/UpdateQuizAnswerInput.html":{}}}],["quizmodule",{"_index":45,"title":{"modules/QuizModule.html":{}},"body":{"modules/AppModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules.html":{},"overview.html":{}}}],["quizquestion",{"_index":812,"title":{"classes/QuizQuestion.html":{}},"body":{"classes/Quiz.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"coverage.html":{}}}],["quizquestion(@args",{"_index":971,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestion(data",{"_index":965,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestion.name",{"_index":918,"title":{},"body":{"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{}}}],["quizquestiondocument",{"_index":930,"title":{},"body":{"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"miscellaneous/typealiases.html":{}}}],["quizquestionmodule",{"_index":932,"title":{"modules/QuizQuestionModule.html":{}},"body":{"modules/QuizQuestionModule.html":{},"modules.html":{},"overview.html":{}}}],["quizquestionrepository",{"_index":936,"title":{"injectables/QuizQuestionRepository.html":{}},"body":{"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{},"overview.html":{}}}],["quizquestionresolver",{"_index":941,"title":{"classes/QuizQuestionResolver.html":{}},"body":{"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{},"coverage.html":{}}}],["quizquestions",{"_index":958,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestions(@args",{"_index":972,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestions(data",{"_index":967,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["quizquestionschema",{"_index":917,"title":{},"body":{"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quizquestionservice",{"_index":937,"title":{"injectables/QuizQuestionService.html":{}},"body":{"modules/QuizQuestionModule.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"coverage.html":{},"overview.html":{}}}],["quizrepository",{"_index":910,"title":{"injectables/QuizRepository.html":{}},"body":{"modules/QuizModule.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"coverage.html":{},"overview.html":{}}}],["quizresolver",{"_index":913,"title":{"classes/QuizResolver.html":{}},"body":{"modules/QuizModule.html":{},"classes/QuizResolver.html":{},"coverage.html":{}}}],["quizschema",{"_index":817,"title":{},"body":{"classes/Quiz.html":{},"modules/QuizModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quizservice",{"_index":853,"title":{"injectables/QuizService.html":{}},"body":{"injectables/QuizAnswerRepository.html":{},"modules/QuizModule.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"coverage.html":{},"overview.html":{}}}],["quizzes",{"_index":994,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quizzes(@args",{"_index":1009,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quizzes(data",{"_index":1003,"title":{},"body":{"classes/QuizResolver.html":{}}}],["quizzes.args",{"_index":984,"title":{},"body":{"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{}}}],["quizzes.args.ts",{"_index":404,"title":{},"body":{"classes/GetQuizzesArgs.html":{},"coverage.html":{}}}],["quizzes.args.ts:12",{"_index":405,"title":{},"body":{"classes/GetQuizzesArgs.html":{}}}],["random",{"_index":535,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["randomly",{"_index":677,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["rapidly",{"_index":1607,"title":{},"body":{"index.html":{}}}],["react",{"_index":1530,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWordResolver.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"injectables/RepositoryProxyService.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["ref",{"_index":1263,"title":{},"body":{"classes/User.html":{}}}],["reflect",{"_index":1471,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":772,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["regex",{"_index":647,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["reload",{"_index":1563,"title":{},"body":{"index.html":{}}}],["repository",{"_index":591,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/SchoolService.html":{}}}],["repositoryproxyservice",{"_index":588,"title":{"injectables/RepositoryProxyService.html":{}},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["repositoryproxyservice:25",{"_index":592,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["repositoryproxyservice:29",{"_index":594,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["repositoryproxyservice:33",{"_index":597,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["repositoryproxyservice:37",{"_index":599,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["repositoryproxyservice:41",{"_index":593,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["req",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["require('bcryptjs",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":786,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities",{"_index":782,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities?.length",{"_index":784,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities[0]}::${requiredresource[0",{"_index":787,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredabilities[0]}::`).replace(/::\\*$/g",{"_index":797,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource",{"_index":778,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource?.length",{"_index":785,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requiredresource[0",{"_index":798,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["requires",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["res",{"_index":643,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/SimpleRepository.html":{}}}],["res.filter((x",{"_index":652,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["res.length",{"_index":665,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["res?.deletedat",{"_index":1191,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["res[math.floor(math.random",{"_index":664,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["reset",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolver",{"_index":227,"title":{},"body":{"classes/CoreResolver.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["resource",{"_index":566,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UsersResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resource('grouping",{"_index":570,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["resource('hangman",{"_index":683,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["resource('mirror",{"_index":755,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["resource('quiz",{"_index":898,"title":{},"body":{"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{}}}],["resource('quizzes",{"_index":1007,"title":{},"body":{"classes/QuizResolver.html":{}}}],["resource('roles",{"_index":1088,"title":{},"body":{"classes/RoleResolver.html":{}}}],["resource('schools",{"_index":1167,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["resource('users",{"_index":1341,"title":{},"body":{"classes/UsersResolver.html":{}}}],["resourcemodel",{"_index":504,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["resources",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["results",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/RepositoryProxyService.html":{},"classes/RoleResolver.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CoreResolver.html":{},"classes/GqlAuthGuard.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":1031,"title":{"classes/Role.html":{}},"body":{"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["role(@args",{"_index":1089,"title":{},"body":{"classes/RoleResolver.html":{}}}],["role(data",{"_index":1080,"title":{},"body":{"classes/RoleResolver.html":{}}}],["role.args",{"_index":1065,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["role.args.ts",{"_index":408,"title":{},"body":{"classes/GetRoleArgs.html":{},"coverage.html":{}}}],["role.entity",{"_index":1061,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["role.input",{"_index":1063,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["role.input.ts",{"_index":309,"title":{},"body":{"classes/CreateRoleInput.html":{},"classes/DeleteRoleInput.html":{},"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["role.input.ts:13",{"_index":311,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.input.ts:15",{"_index":1232,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:17",{"_index":314,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.input.ts:20",{"_index":1231,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:25",{"_index":1234,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:27",{"_index":1235,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["role.input.ts:9",{"_index":312,"title":{},"body":{"classes/CreateRoleInput.html":{}}}],["role.name",{"_index":1056,"title":{},"body":{"modules/RoleModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["role.permissions",{"_index":794,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["role.resolver",{"_index":1053,"title":{},"body":{"modules/RoleModule.html":{}}}],["role.service",{"_index":1051,"title":{},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{}}}],["role/entities/role.entity",{"_index":1267,"title":{},"body":{"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{}}}],["role/role.module",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["roledocument",{"_index":1041,"title":{},"body":{"classes/Role.html":{},"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":1060,"title":{},"body":{"injectables/RoleRepository.html":{},"injectables/UserRepository.html":{}}}],["rolemodule",{"_index":46,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["rolerepository",{"_index":1048,"title":{"injectables/RoleRepository.html":{}},"body":{"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["roleresolver",{"_index":1052,"title":{"classes/RoleResolver.html":{}},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{},"coverage.html":{}}}],["roles",{"_index":332,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/RoleResolver.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["roles(@args",{"_index":1091,"title":{},"body":{"classes/RoleResolver.html":{}}}],["roles(data",{"_index":1083,"title":{},"body":{"classes/RoleResolver.html":{}}}],["roles.args",{"_index":1064,"title":{},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{}}}],["roles.args.ts",{"_index":410,"title":{},"body":{"classes/GetRolesArgs.html":{},"coverage.html":{}}}],["roleschema",{"_index":1042,"title":{},"body":{"classes/Role.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleservice",{"_index":1049,"title":{"injectables/RoleService.html":{}},"body":{"modules/RoleModule.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":1544,"title":{},"body":{"index.html":{}}}],["running",{"_index":1577,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1474,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":1550,"title":{},"body":{"index.html":{}}}],["save",{"_index":1198,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["saving",{"_index":1613,"title":{},"body":{"index.html":{}}}],["scaffolding",{"_index":1567,"title":{},"body":{"index.html":{}}}],["schema",{"_index":471,"title":{},"body":{"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":472,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(groupingitem",{"_index":479,"title":{},"body":{"classes/GroupingItem.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(hangmanword",{"_index":615,"title":{},"body":{"classes/HangmanWord.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(mirrorword",{"_index":731,"title":{},"body":{"classes/MirrorWord.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(quiz",{"_index":818,"title":{},"body":{"classes/Quiz.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(quizanswer",{"_index":837,"title":{},"body":{"classes/QuizAnswer.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(quizquestion",{"_index":931,"title":{},"body":{"classes/QuizQuestion.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1043,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(school",{"_index":1117,"title":{},"body":{"classes/School.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1272,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schematypes",{"_index":1268,"title":{},"body":{"classes/User.html":{}}}],["schematypes.objectid",{"_index":1270,"title":{},"body":{"classes/User.html":{}}}],["school",{"_index":1103,"title":{"classes/School.html":{}},"body":{"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"coverage.html":{}}}],["school(@args",{"_index":1168,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["school(data",{"_index":1161,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["school.args",{"_index":1136,"title":{},"body":{"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{}}}],["school.args.ts",{"_index":413,"title":{},"body":{"classes/GetSchoolArgs.html":{},"coverage.html":{}}}],["school.entity",{"_index":1132,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["school.input",{"_index":1134,"title":{},"body":{"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{}}}],["school.input.ts",{"_index":318,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/UpdateSchoolInput.html":{},"coverage.html":{}}}],["school.input.ts:13",{"_index":324,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:16",{"_index":1239,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:17",{"_index":322,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["school.input.ts:19",{"_index":1237,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:21",{"_index":323,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["school.input.ts:22",{"_index":1238,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:26",{"_index":327,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["school.input.ts:28",{"_index":1241,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:30",{"_index":1242,"title":{},"body":{"classes/UpdateSchoolInput.html":{}}}],["school.input.ts:9",{"_index":325,"title":{},"body":{"classes/CreateSchoolInput.html":{}}}],["school.name",{"_index":1129,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.resolver",{"_index":1126,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.service",{"_index":1124,"title":{},"body":{"modules/SchoolModule.html":{},"classes/SchoolResolver.html":{}}}],["school/school.module",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["schooldocument",{"_index":1115,"title":{},"body":{"classes/School.html":{},"injectables/SchoolRepository.html":{},"miscellaneous/typealiases.html":{}}}],["schoolmodule",{"_index":47,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolrepository",{"_index":1121,"title":{"injectables/SchoolRepository.html":{}},"body":{"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["schoolresolver",{"_index":1125,"title":{"classes/SchoolResolver.html":{}},"body":{"modules/SchoolModule.html":{},"classes/SchoolResolver.html":{},"coverage.html":{}}}],["schools",{"_index":1153,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["schools(@args",{"_index":1169,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["schools(data",{"_index":1163,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["schools.args",{"_index":1135,"title":{},"body":{"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{}}}],["schools.args.ts",{"_index":415,"title":{},"body":{"classes/GetSchoolsArgs.html":{},"coverage.html":{}}}],["schools.args.ts:12",{"_index":419,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schools.args.ts:15",{"_index":418,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schools.args.ts:18",{"_index":416,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schools.args.ts:21",{"_index":417,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schools.args.ts:24",{"_index":420,"title":{},"body":{"classes/GetSchoolsArgs.html":{}}}],["schoolschema",{"_index":1116,"title":{},"body":{"classes/School.html":{},"modules/SchoolModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["schoolservice",{"_index":1122,"title":{"injectables/SchoolService.html":{}},"body":{"modules/SchoolModule.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["secret",{"_index":131,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":714,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["see",{"_index":1592,"title":{},"body":{"index.html":{}}}],["serve",{"_index":1558,"title":{},"body":{"index.html":{}}}],["server",{"_index":1445,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["service",{"_index":545,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["setmetadata('abilities",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata('resources",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shareable",{"_index":1554,"title":{},"body":{"index.html":{}}}],["shared/gql",{"_index":245,"title":{},"body":{"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{}}}],["shared/proxies/repository",{"_index":600,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{}}}],["shared/proxies/simple.repository",{"_index":529,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{}}}],["showing",{"_index":1506,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":133,"title":{},"body":{"modules/AuthModule.html":{}}}],["simple",{"_index":1143,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["simple.repository",{"_index":1024,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["simplerepository",{"_index":495,"title":{"injectables/SimpleRepository.html":{}},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{},"injectables/SimpleRepository.html":{},"coverage.html":{}}}],["simplerepository:19",{"_index":517,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/RoleRepository.html":{}}}],["simplerepository:25",{"_index":857,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{}}}],["simplerepository:27",{"_index":506,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["simplerepository:31",{"_index":856,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["simplerepository:32",{"_index":510,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{}}}],["simplerepository:33",{"_index":980,"title":{},"body":{"injectables/QuizRepository.html":{}}}],["simplerepository:37",{"_index":633,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["simplerepository:39",{"_index":855,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["simplerepository:42",{"_index":519,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{}}}],["simplerepository:50",{"_index":514,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/RoleRepository.html":{},"injectables/SchoolRepository.html":{}}}],["smart",{"_index":1497,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"classes/CoreResolver.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlArg.html":{},"classes/GqlAuthGuard.html":{},"classes/GqlInput.html":{},"classes/GroupingItem.html":{},"modules/GroupingItemModule.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"classes/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"modules/QuizAnswerModule.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"modules/QuizModule.html":{},"classes/QuizQuestion.html":{},"modules/QuizQuestionModule.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"modules/RoleModule.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"modules/SchoolModule.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sslcert",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sslkey",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stack",{"_index":1620,"title":{},"body":{"index.html":{}}}],["start",{"_index":1503,"title":{},"body":{"index.html":{}}}],["started",{"_index":1491,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":1571,"title":{},"body":{"index.html":{}}}],["strategies/jwt.strategy",{"_index":124,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local.strategy",{"_index":125,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":705,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["super",{"_index":709,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super(hangmanwordmodel",{"_index":639,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["super(mirrorwordmodel",{"_index":744,"title":{},"body":{"injectables/MirrorWordRepository.html":{}}}],["super(repository",{"_index":602,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/SchoolService.html":{}}}],["super(resourcemodel",{"_index":531,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["super(rolemodel",{"_index":1067,"title":{},"body":{"injectables/RoleRepository.html":{}}}],["super(rolerepository",{"_index":1102,"title":{},"body":{"injectables/RoleService.html":{}}}],["super.create(data",{"_index":879,"title":{},"body":{"injectables/QuizAnswerRepository.html":{},"injectables/QuizRepository.html":{}}}],["super.findall(data",{"_index":642,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SchoolRepository.html":{}}}],["support",{"_index":1634,"title":{},"body":{"modules.html":{}}}],["supports",{"_index":1513,"title":{},"body":{"index.html":{}}}],["svg",{"_index":1635,"title":{},"body":{"modules.html":{}}}],["system",{"_index":1501,"title":{},"body":{"index.html":{}}}],["szakszolg",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateQuizInput.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["szakszolgnx",{"_index":1492,"title":{},"body":{"index.html":{}}}],["table",{"_index":1399,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1398,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":1602,"title":{},"body":{"index.html":{}}}],["tcreateinput",{"_index":509,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{}}}],["tdeleteinput",{"_index":513,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{}}}],["teams",{"_index":1611,"title":{},"body":{"index.html":{}}}],["test",{"_index":1525,"title":{},"body":{"index.html":{}}}],["test').required",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tests",{"_index":1579,"title":{},"body":{"index.html":{}}}],["text",{"_index":876,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["tfindmanyargs",{"_index":516,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{}}}],["tfindoneargs",{"_index":596,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{}}}],["this.appservice.getdata",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login((req",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validate(email",{"_index":724,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.configservice.get('jwt_expires",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_secret",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.findone",{"_index":1188,"title":{},"body":{"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{}}}],["this.jwtservice.sign(payload",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mirrorwordservice.create(data",{"_index":761,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.delete(data",{"_index":765,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.findall(data",{"_index":759,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.findone(data",{"_index":757,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.mirrorwordservice.update(data",{"_index":763,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["this.model",{"_index":1196,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.estimateddocumentcount",{"_index":534,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["this.model.find",{"_index":663,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizRepository.html":{},"injectables/SimpleRepository.html":{}}}],["this.model.find(filters).exec",{"_index":1149,"title":{},"body":{"injectables/SchoolRepository.html":{}}}],["this.model.find(param",{"_index":649,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["this.model.findbyid(data.id",{"_index":1190,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findbyidandupdate(data.id",{"_index":1203,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findbyidandupdate(id",{"_index":1202,"title":{},"body":{"injectables/SimpleRepository.html":{}}}],["this.model.findone().skip(random).limit(1",{"_index":537,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["this.quizservice.findone",{"_index":867,"title":{},"body":{"injectables/QuizAnswerRepository.html":{}}}],["this.reflector.get('abilities",{"_index":783,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.reflector.getallandmerge('resources",{"_index":779,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.repository.create(data",{"_index":1026,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.delete(data",{"_index":1030,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.findall(data",{"_index":1027,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.findone(data",{"_index":1028,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.repository.update(data",{"_index":1029,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["this.roleservice.create(data",{"_index":1094,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.delete(data",{"_index":1098,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.findall(data",{"_index":1092,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.findone(data",{"_index":1090,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.roleservice.update(data",{"_index":1096,"title":{},"body":{"classes/RoleResolver.html":{}}}],["this.service.create(data",{"_index":580,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["this.service.delete(data",{"_index":586,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["this.service.findall(data",{"_index":577,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["this.service.findone(data",{"_index":573,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["this.service.update(data",{"_index":583,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{}}}],["this.usermodel",{"_index":1296,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.find",{"_index":1289,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyid(data.id",{"_index":1297,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyid(data.id).populate('roles",{"_index":1290,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findbyidandupdate(data.id",{"_index":1311,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.usermodel.findone",{"_index":1292,"title":{},"body":{"injectables/UserRepository.html":{}}}],["this.userrepository.create(data",{"_index":1365,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.delete(data",{"_index":1367,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findall(data",{"_index":1360,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.findone(data",{"_index":1361,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepository.update(data",{"_index":1366,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.findone",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["this.usersservice.create(data",{"_index":1347,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.delete(data",{"_index":1351,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findall(data",{"_index":1345,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.findone(data",{"_index":1343,"title":{},"body":{"classes/UsersResolver.html":{}}}],["this.usersservice.update(data",{"_index":1349,"title":{},"body":{"classes/UsersResolver.html":{}}}],["throw",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/UserRepository.html":{}}}],["time",{"_index":1614,"title":{},"body":{"index.html":{}}}],["times",{"_index":1609,"title":{},"body":{"index.html":{}}}],["title",{"_index":288,"title":{},"body":{"classes/CreateQuizInput.html":{},"classes/Quiz.html":{},"classes/UpdateQuizInput.html":{}}}],["todo",{"_index":950,"title":{},"body":{"injectables/QuizQuestionRepository.html":{}}}],["token",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens",{"_index":802,"title":{},"body":{"classes/Quiz.html":{}}}],["tools",{"_index":1457,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["translate/core",{"_index":1431,"title":{},"body":{"dependencies.html":{}}}],["translate/http",{"_index":1433,"title":{},"body":{"dependencies.html":{}}}],["trepository",{"_index":1017,"title":{},"body":{"injectables/RepositoryProxyService.html":{}}}],["true",{"_index":209,"title":{},"body":{"modules/CoreModule.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GroupingItem.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/MirrorWord.html":{},"classes/MirrorWordResolver.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestion.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/Role.html":{},"classes/RoleResolver.html":{},"classes/School.html":{},"classes/SchoolResolver.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"classes/UsersResolver.html":{},"miscellaneous/variables.html":{}}}],["true})@isarray",{"_index":375,"title":{},"body":{"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArrayArg.html":{}}}],["true})@isemail",{"_index":1247,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["true})@isoptional",{"_index":425,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["true})@isoptional()@isnotempty",{"_index":1230,"title":{},"body":{"classes/UpdateRoleInput.html":{}}}],["true})@prop",{"_index":464,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["true})@prop({nullable",{"_index":828,"title":{},"body":{"classes/QuizAnswer.html":{}}}],["true})@useguards(gqlauthguard",{"_index":891,"title":{},"body":{"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["true})@useguards(gqlauthguard)@permission('read",{"_index":1081,"title":{},"body":{"classes/RoleResolver.html":{}}}],["tslib",{"_index":1476,"title":{},"body":{"dependencies.html":{}}}],["tupdateinput",{"_index":598,"title":{},"body":{"injectables/GroupingItemService.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleService.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{}}}],["tutorial",{"_index":1509,"title":{},"body":{"index.html":{}}}],["type",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGroupingItemInput.html":{},"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateQuizAnswerInput.html":{},"classes/CreateQuizInput.html":{},"classes/CreateQuizQuestionInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemArgs.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/GqlAuthGuard.html":{},"classes/GroupingItem.html":{},"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/IdInput.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"guards/PermissionGuard.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/QuizQuestion.html":{},"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"classes/Role.html":{},"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/School.html":{},"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1644,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":321,"title":{},"body":{"classes/CreateSchoolInput.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateSchoolInput.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"index.html":{}}}],["types.objectid",{"_index":1197,"title":{},"body":{"injectables/SimpleRepository.html":{},"classes/User.html":{},"injectables/UserRepository.html":{}}}],["types.objectid(roleid",{"_index":1309,"title":{},"body":{"injectables/UserRepository.html":{}}}],["typescript",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":722,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":459,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"classes/User.html":{}}}],["understand",{"_index":1589,"title":{},"body":{"index.html":{}}}],["unified",{"_index":1628,"title":{},"body":{"index.html":{}}}],["unit",{"_index":1578,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["unused",{"_index":382,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{}}}],["up",{"_index":1608,"title":{},"body":{"index.html":{}}}],["update",{"_index":500,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["update(data",{"_index":518,"title":{},"body":{"injectables/GroupingItemRepository.html":{},"injectables/GroupingItemService.html":{},"injectables/HangmanWordRepository.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"injectables/MirrorWordService.html":{},"injectables/QuizAnswerRepository.html":{},"injectables/QuizAnswerService.html":{},"injectables/QuizQuestionRepository.html":{},"injectables/QuizQuestionService.html":{},"injectables/QuizRepository.html":{},"injectables/QuizService.html":{},"injectables/RepositoryProxyService.html":{},"injectables/RoleRepository.html":{},"injectables/RoleService.html":{},"injectables/SchoolRepository.html":{},"injectables/SchoolService.html":{},"injectables/SimpleRepository.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["updatedat",{"_index":457,"title":{},"body":{"classes/GroupingItem.html":{},"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"classes/Quiz.html":{},"classes/QuizAnswer.html":{},"classes/QuizQuestion.html":{},"classes/Role.html":{},"classes/School.html":{},"injectables/SimpleRepository.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["updategroupingitem",{"_index":542,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["updategroupingitem(@args('updategroupingitemdata",{"_index":582,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["updategroupingitem(data",{"_index":559,"title":{},"body":{"classes/GroupingItemResolver.html":{}}}],["updategroupingiteminput",{"_index":521,"title":{"classes/UpdateGroupingItemInput.html":{}},"body":{"injectables/GroupingItemRepository.html":{},"classes/GroupingItemResolver.html":{},"injectables/GroupingItemService.html":{},"classes/UpdateGroupingItemInput.html":{},"coverage.html":{}}}],["updatehangmanword",{"_index":670,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["updatehangmanword(@args('updatehangmanworddata",{"_index":687,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["updatehangmanword(data",{"_index":681,"title":{},"body":{"classes/HangmanWordResolver.html":{}}}],["updatehangmanwordinput",{"_index":634,"title":{"classes/UpdateHangmanWordInput.html":{}},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"classes/UpdateHangmanWordInput.html":{},"coverage.html":{}}}],["updatemirrorword",{"_index":748,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["updatemirrorword(@args('updatemirrorworddata",{"_index":762,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["updatemirrorword(data",{"_index":754,"title":{},"body":{"classes/MirrorWordResolver.html":{}}}],["updatemirrorwordinput",{"_index":742,"title":{"classes/UpdateMirrorWordInput.html":{}},"body":{"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["updatequiz",{"_index":995,"title":{},"body":{"classes/QuizResolver.html":{}}}],["updatequiz(@args('updatequizdata",{"_index":1011,"title":{},"body":{"classes/QuizResolver.html":{}}}],["updatequiz(data",{"_index":1005,"title":{},"body":{"classes/QuizResolver.html":{}}}],["updatequizanswer",{"_index":884,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["updatequizanswer(@args('updatequizanswerdata",{"_index":903,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["updatequizanswer(data",{"_index":896,"title":{},"body":{"classes/QuizAnswerResolver.html":{}}}],["updatequizanswerinput",{"_index":859,"title":{"classes/UpdateQuizAnswerInput.html":{}},"body":{"injectables/QuizAnswerRepository.html":{},"classes/QuizAnswerResolver.html":{},"injectables/QuizAnswerService.html":{},"classes/UpdateQuizAnswerInput.html":{},"coverage.html":{}}}],["updatequizinput",{"_index":982,"title":{"classes/UpdateQuizInput.html":{}},"body":{"injectables/QuizRepository.html":{},"classes/QuizResolver.html":{},"injectables/QuizService.html":{},"classes/UpdateQuizInput.html":{},"coverage.html":{}}}],["updatequizquestion",{"_index":959,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["updatequizquestion(@args('updatequizquestiondata",{"_index":974,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["updatequizquestion(data",{"_index":969,"title":{},"body":{"classes/QuizQuestionResolver.html":{}}}],["updatequizquestioninput",{"_index":946,"title":{"classes/UpdateQuizQuestionInput.html":{}},"body":{"injectables/QuizQuestionRepository.html":{},"classes/QuizQuestionResolver.html":{},"injectables/QuizQuestionService.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"coverage.html":{}}}],["updaterole",{"_index":1071,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updaterole(@args('updateroledata",{"_index":1095,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updaterole(data",{"_index":1085,"title":{},"body":{"classes/RoleResolver.html":{}}}],["updateroleinput",{"_index":1062,"title":{"classes/UpdateRoleInput.html":{}},"body":{"injectables/RoleRepository.html":{},"classes/RoleResolver.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleInput.html":{},"coverage.html":{}}}],["updateschool",{"_index":1154,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["updateschool(@args('updateschooldata",{"_index":1171,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["updateschool(data",{"_index":1165,"title":{},"body":{"classes/SchoolResolver.html":{}}}],["updateschoolinput",{"_index":1133,"title":{"classes/UpdateSchoolInput.html":{}},"body":{"injectables/SchoolRepository.html":{},"classes/SchoolResolver.html":{},"injectables/SchoolService.html":{},"classes/UpdateSchoolInput.html":{},"coverage.html":{}}}],["updateuser",{"_index":1325,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuser(@args('updateuserdata",{"_index":1348,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuser(data",{"_index":1333,"title":{},"body":{"classes/UsersResolver.html":{}}}],["updateuserinput",{"_index":1243,"title":{"classes/UpdateUserInput.html":{}},"body":{"classes/UpdateUserInput.html":{},"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uptime",{"_index":222,"title":{},"body":{"classes/CoreResolver.html":{}}}],["uri",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":1478,"title":{},"body":{"dependencies.html":{}}}],["use",{"_index":661,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"index.html":{}}}],["usefactory",{"_index":216,"title":{},"body":{"modules/CoreModule.html":{}}}],["useguards",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["useguards(gqlauthguard",{"_index":575,"title":{},"body":{"classes/GroupingItemResolver.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"classes/QuizAnswerResolver.html":{},"classes/QuizQuestionResolver.html":{},"classes/QuizResolver.html":{},"classes/RoleResolver.html":{},"classes/SchoolResolver.html":{},"classes/UsersResolver.html":{}}}],["useguards(localauthguard",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('login",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":149,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"guards/PermissionGuard.html":{},"classes/User.html":{},"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["user(@args",{"_index":1342,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user(data",{"_index":1335,"title":{},"body":{"classes/UsersResolver.html":{}}}],["user._id",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.args",{"_index":1285,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.args.ts",{"_index":423,"title":{},"body":{"classes/GetUserArgs.html":{},"coverage.html":{}}}],["user.args.ts:13",{"_index":426,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["user.args.ts:9",{"_index":427,"title":{},"body":{"classes/GetUserArgs.html":{}}}],["user.decorator.ts",{"_index":1377,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.entity",{"_index":1283,"title":{},"body":{"injectables/UserRepository.html":{}}}],["user.input",{"_index":1284,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["user.input.ts",{"_index":331,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/DeleteUserInput.html":{},"classes/UpdateUserInput.html":{},"coverage.html":{}}}],["user.input.ts:10",{"_index":335,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:13",{"_index":1248,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:14",{"_index":339,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:16",{"_index":1255,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:18",{"_index":337,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:20",{"_index":1252,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:21",{"_index":336,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:23",{"_index":1249,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:24",{"_index":338,"title":{},"body":{"classes/CreateUserInput.html":{}}}],["user.input.ts:26",{"_index":1250,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:29",{"_index":1251,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:32",{"_index":1253,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.input.ts:34",{"_index":1254,"title":{},"body":{"classes/UpdateUserInput.html":{}}}],["user.name",{"_index":1321,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{}}}],["user.roles",{"_index":1307,"title":{},"body":{"injectables/UserRepository.html":{}}}],["user.save",{"_index":1310,"title":{},"body":{"injectables/UserRepository.html":{}}}],["userdocument",{"_index":1269,"title":{},"body":{"classes/User.html":{},"injectables/UserRepository.html":{},"miscellaneous/typealiases.html":{}}}],["usermodel",{"_index":1277,"title":{},"body":{"injectables/UserRepository.html":{}}}],["username",{"_index":333,"title":{},"body":{"classes/CreateUserInput.html":{},"classes/UpdateUserInput.html":{},"classes/User.html":{}}}],["usernamefield",{"_index":723,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userpermissions",{"_index":792,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["userpermissions.includes(required",{"_index":799,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["userrepository",{"_index":1273,"title":{"injectables/UserRepository.html":{}},"body":{"injectables/UserRepository.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":1326,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users(@args",{"_index":1344,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users(data",{"_index":1337,"title":{},"body":{"classes/UsersResolver.html":{}}}],["users.args",{"_index":1286,"title":{},"body":{"injectables/UserRepository.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{}}}],["users.args.ts",{"_index":432,"title":{},"body":{"classes/GetUsersArgs.html":{},"coverage.html":{}}}],["users.resolver",{"_index":1318,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1316,"title":{},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{}}}],["users/users.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{}}}],["users/users.service",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["userschema",{"_index":1271,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["usersmodule",{"_index":48,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RoleModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersresolver",{"_index":1317,"title":{"classes/UsersResolver.html":{}},"body":{"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"coverage.html":{}}}],["usersservice",{"_index":142,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"classes/UsersResolver.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":1495,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["validate",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":701,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validationschema",{"_index":196,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validator",{"_index":258,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/CreateRoleInput.html":{},"classes/CreateSchoolInput.html":{},"classes/CreateUserInput.html":{},"classes/DeleteGroupingItemInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/DeleteQuizAnswerInput.html":{},"classes/DeleteQuizInput.html":{},"classes/DeleteQuizQuestionInput.html":{},"classes/DeleteRoleInput.html":{},"classes/DeleteSchoolInput.html":{},"classes/DeleteUserInput.html":{},"classes/GetGroupingItemsArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"classes/GetQuizAnswerArgs.html":{},"classes/GetQuizAnswersArgs.html":{},"classes/GetQuizArgs.html":{},"classes/GetQuizQuestionArgs.html":{},"classes/GetQuizQuestionsArgs.html":{},"classes/GetQuizzesArgs.html":{},"classes/GetRoleArgs.html":{},"classes/GetRolesArgs.html":{},"classes/GetSchoolArgs.html":{},"classes/GetSchoolsArgs.html":{},"classes/GetUserArgs.html":{},"classes/GetUsersArgs.html":{},"classes/IdArg.html":{},"classes/IdArrayArg.html":{},"classes/UpdateGroupingItemInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"classes/UpdateQuizAnswerInput.html":{},"classes/UpdateQuizInput.html":{},"classes/UpdateQuizQuestionInput.html":{},"classes/UpdateRoleInput.html":{},"classes/UpdateSchoolInput.html":{},"classes/UpdateUserInput.html":{},"dependencies.html":{}}}],["value",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["var",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserRepository.html":{},"injectables/UsersService.html":{}}}],["variable",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1654,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["verify(token",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["via",{"_index":1581,"title":{},"body":{"index.html":{}}}],["video",{"_index":1505,"title":{},"body":{"index.html":{}}}],["visit",{"_index":1596,"title":{},"body":{"index.html":{}}}],["want",{"_index":655,"title":{},"body":{"injectables/HangmanWordRepository.html":{}}}],["web",{"_index":1532,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["well",{"_index":1523,"title":{},"body":{"index.html":{}}}],["word",{"_index":253,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/HangmanWord.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWord.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{}}}],["word.args",{"_index":637,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["word.args.ts",{"_index":379,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetMirrorWordArgs.html":{},"coverage.html":{}}}],["word.args.ts:10",{"_index":380,"title":{},"body":{"classes/GetHangmanWordArgs.html":{}}}],["word.entity",{"_index":626,"title":{},"body":{"modules/HangmanWordModule.html":{},"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{}}}],["word.entity.ts",{"_index":605,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["word.entity.ts:13",{"_index":607,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:17",{"_index":612,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:21",{"_index":608,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:25",{"_index":609,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:29",{"_index":611,"title":{},"body":{"classes/HangmanWord.html":{},"classes/MirrorWord.html":{}}}],["word.entity.ts:33",{"_index":610,"title":{},"body":{"classes/HangmanWord.html":{}}}],["word.input",{"_index":635,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["word.input.ts",{"_index":251,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["word.input.ts:13",{"_index":255,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/UpdateHangmanWordInput.html":{}}}],["word.input.ts:14",{"_index":1213,"title":{},"body":{"classes/UpdateMirrorWordInput.html":{}}}],["word.input.ts:16",{"_index":1211,"title":{},"body":{"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{}}}],["word.input.ts:18",{"_index":1212,"title":{},"body":{"classes/UpdateHangmanWordInput.html":{}}}],["word.input.ts:9",{"_index":256,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{}}}],["word.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["word.module.ts",{"_index":621,"title":{},"body":{"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{}}}],["word.repository",{"_index":627,"title":{},"body":{"modules/HangmanWordModule.html":{},"injectables/HangmanWordService.html":{},"modules/MirrorWordModule.html":{},"injectables/MirrorWordService.html":{}}}],["word.repository.ts",{"_index":629,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{},"coverage.html":{}}}],["word.repository.ts:22",{"_index":631,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"injectables/MirrorWordRepository.html":{}}}],["word.resolver",{"_index":624,"title":{},"body":{"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{}}}],["word.resolver.ts",{"_index":666,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{},"coverage.html":{}}}],["word.resolver.ts:17",{"_index":671,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:21",{"_index":678,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:28",{"_index":680,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:35",{"_index":673,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:42",{"_index":682,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.resolver.ts:49",{"_index":675,"title":{},"body":{"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["word.service",{"_index":622,"title":{},"body":{"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{}}}],["word.service.ts",{"_index":689,"title":{},"body":{"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["word.service.ts:18",{"_index":690,"title":{},"body":{"injectables/HangmanWordService.html":{},"injectables/MirrorWordService.html":{}}}],["word/dto/args/get",{"_index":378,"title":{},"body":{"classes/GetHangmanWordArgs.html":{},"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"coverage.html":{}}}],["word/dto/inputs/create",{"_index":250,"title":{},"body":{"classes/CreateHangmanWordInput.html":{},"classes/CreateMirrorWordInput.html":{},"coverage.html":{}}}],["word/dto/inputs/delete",{"_index":349,"title":{},"body":{"classes/DeleteHangmanWordInput.html":{},"classes/DeleteMirrorWordInput.html":{},"coverage.html":{}}}],["word/dto/inputs/update",{"_index":1210,"title":{},"body":{"classes/UpdateHangmanWordInput.html":{},"classes/UpdateMirrorWordInput.html":{},"coverage.html":{}}}],["word/entities/hangman",{"_index":604,"title":{},"body":{"classes/HangmanWord.html":{},"injectables/HangmanWordRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["word/entities/mirror",{"_index":727,"title":{},"body":{"classes/MirrorWord.html":{},"injectables/MirrorWordRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["word/hangman",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/HangmanWordModule.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"coverage.html":{}}}],["word/mirror",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/MirrorWordModule.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{},"coverage.html":{}}}],["words",{"_index":659,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"classes/MirrorWordResolver.html":{}}}],["words.args",{"_index":636,"title":{},"body":{"injectables/HangmanWordRepository.html":{},"classes/HangmanWordResolver.html":{},"injectables/HangmanWordService.html":{},"injectables/MirrorWordRepository.html":{},"classes/MirrorWordResolver.html":{},"injectables/MirrorWordService.html":{}}}],["words.args.ts",{"_index":384,"title":{},"body":{"classes/GetHangmanWordsArgs.html":{},"classes/GetMirrorWordsArgs.html":{},"coverage.html":{}}}],["words.args.ts:12",{"_index":385,"title":{},"body":{"classes/GetHangmanWordsArgs.html":{}}}],["workspace",{"_index":1512,"title":{},"body":{"index.html":{}}}],["x509&ssl=true&retrywrites=true&w=majority",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yarn",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["zone.js",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GroupingItemModule.html":{},"modules/HangmanWordModule.html":{},"modules/MirrorWordModule.html":{},"modules/QuizAnswerModule.html":{},"modules/QuizModule.html":{},"modules/QuizQuestionModule.html":{},"modules/RoleModule.html":{},"modules/SchoolModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('hello')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/core/app.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Message\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common'\n\nimport { Message } from '@szakszolg-nx/api-interfaces'\n\nimport { AppService } from './app.service'\n\n@Controller()\nexport class AppController {\n    constructor(private readonly appService: AppService) {}\n\n    @Get('hello')\n    getData(): Message {\n        return this.appService.getData()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nGroupingItemModule\n\nGroupingItemModule\n\nAppModule -->\n\nGroupingItemModule->AppModule\n\n\n\n\n\nHangmanWordModule\n\nHangmanWordModule\n\nAppModule -->\n\nHangmanWordModule->AppModule\n\n\n\n\n\nMirrorWordModule\n\nMirrorWordModule\n\nAppModule -->\n\nMirrorWordModule->AppModule\n\n\n\n\n\nQuizAnswerModule\n\nQuizAnswerModule\n\nAppModule -->\n\nQuizAnswerModule->AppModule\n\n\n\n\n\nQuizModule\n\nQuizModule\n\nAppModule -->\n\nQuizModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            GroupingItemModule\n                        \n                        \n                            HangmanWordModule\n                        \n                        \n                            MirrorWordModule\n                        \n                        \n                            QuizAnswerModule\n                        \n                        \n                            QuizModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\n\nimport { AppController } from './core/app.controller'\nimport { AppService } from './core/app.service'\nimport { CoreModule } from './core/core.module'\nimport { UsersModule } from './users/users.module'\nimport { AuthModule } from './auth/auth.module'\nimport { RoleModule } from './role/role.module'\nimport { MirrorWordModule } from './mirror-word/mirror-word.module'\nimport { HangmanWordModule } from './hangman-word/hangman-word.module'\nimport { GroupingItemModule } from './grouping-item/grouping-item.module'\nimport { SchoolModule } from './school/school.module'\nimport { QuizModule } from './quiz/quiz.module'\nimport { QuizAnswerModule } from './quiz-answer/quiz-answer.module'\n\n@Module({\n    imports: [\n        CoreModule,\n        UsersModule,\n        AuthModule,\n        RoleModule,\n        MirrorWordModule,\n        HangmanWordModule,\n        GroupingItemModule,\n        SchoolModule,\n        QuizModule,\n        QuizAnswerModule,\n    ],\n    controllers: [AppController],\n    providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/core/app.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Message\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { Message } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class AppService {\n    getData(): Message {\n        return { message: 'Welcome to api!' }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Req, UseGuards } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { LocalAuthGuard } from './guards/local-auth.guard'\nimport { Request } from 'express'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService) {}\n\n    @UseGuards(LocalAuthGuard)\n    @Post('login')\n    async login(@Req() req: Request) {\n        return await this.authService.login((req as any).user as IUser)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common'\nimport { AuthService } from './auth.service'\nimport { UsersModule } from '../users/users.module'\nimport { JwtModule } from '@nestjs/jwt'\nimport { ConfigModule } from '@nestjs/config'\nimport { PassportModule } from '@nestjs/passport'\nimport { JwtStrategy } from './strategies/jwt.strategy'\nimport { LocalStrategy } from './strategies/local.strategy'\nimport { AuthController } from './auth.controller'\n\n@Module({\n    imports: [\n        ConfigModule,\n        forwardRef(() => UsersModule),\n        PassportModule.register({ defaultStrategy: 'jwt' }),\n        JwtModule.register({\n            secret: process.env.JWT_SECRET,\n            signOptions: {\n                expiresIn: process.env.JWT_EXPIRES || '7d',\n            },\n        }),\n    ],\n    controllers: [AuthController],\n    providers: [AuthService, JwtStrategy, LocalStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validate\n                            \n                            \n                                    Async\n                                verify\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        verify\n                        \n                    \n                \n            \n            \n                \n                    \n                    verify(token: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/auth.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { forwardRef, Inject, Injectable } from '@nestjs/common'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\nimport { UsersService } from '../users/users.service'\nimport { JwtService } from '@nestjs/jwt'\nimport { ConfigService } from '@nestjs/config'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        @Inject(forwardRef(() => UsersService))\n        private readonly userService: UsersService,\n        private readonly jwtService: JwtService,\n        private readonly configService: ConfigService,\n    ) {}\n\n    async validate(email: string, password: string): Promise {\n        const user = await this.userService.findOne({ email })\n        return user && (await bcrypt.compare(password, user.password)) ? user : null\n    }\n\n    async login(user: IUser) {\n        const payload = { email: user.email, sub: user._id }\n        return {\n            access_token: this.jwtService.sign(payload, {\n                secret: this.configService.get('JWT_SECRET'),\n                expiresIn: this.configService.get('JWT_EXPIRES') || '7d',\n            }),\n        }\n    }\n\n    async verify(token: string) {\n        const decoded = this.jwtService.verify(token, { secret: this.configService.get('JWT_SECRET')! })\n        const user = await this.userService.findOne({ email: decoded.email })\n        if (!user) throw new Error('User not found')\n        return user\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { ConfigModule } from '@nestjs/config'\nimport { configuration } from './config/configuration'\nimport { validationSchema } from './config/validation'\nimport { GraphQLModule } from '@nestjs/graphql'\nimport { CoreResolver } from './core.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { mongooseConfig } from './config/mongo-config.factory'\n\n@Module({\n    imports: [\n        ConfigModule.forRoot({\n            isGlobal: true,\n            load: [configuration],\n            validationSchema,\n        }),\n        GraphQLModule.forRoot({\n            autoSchemaFile: true,\n            playground: true,\n        }),\n        MongooseModule.forRootAsync({\n            imports: mongooseConfig.imports,\n            useFactory: mongooseConfig.mongooseConfigFactory,\n            inject: mongooseConfig.providers,\n        }),\n    ],\n    controllers: [],\n    providers: [CoreResolver],\n    exports: [],\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoreResolver.html":{"url":"classes/CoreResolver.html","title":"class - CoreResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoreResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/core/core.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                uptime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        uptime\n                        \n                    \n                \n            \n            \n                \nuptime()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/core/core.resolver.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Float, Query, Resolver } from '@nestjs/graphql'\n\n@Resolver()\nexport class CoreResolver {\n    @Query(() => Float)\n    uptime() {\n        return process.uptime()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGroupingItemInput.html":{"url":"classes/CreateGroupingItemInput.html","title":"class - CreateGroupingItemInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGroupingItemInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                correct\n                            \n                            \n                                groups\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateGroupingItemInput extends GqlInput {\n    @Field()\n    item: string\n\n    @Field(() => [String])\n    groups: string[]\n\n    @Field()\n    correct: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateHangmanWordInput.html":{"url":"classes/CreateHangmanWordInput.html","title":"class - CreateHangmanWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateHangmanWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class CreateHangmanWordInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    word: string\n\n    @Field()\n    @IsNotEmpty()\n    category: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMirrorWordInput.html":{"url":"classes/CreateMirrorWordInput.html","title":"class - CreateMirrorWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMirrorWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/inputs/create-mirror-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/dto/inputs/create-mirror-word.input.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateMirrorWordInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    public word: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuizAnswerInput.html":{"url":"classes/CreateQuizAnswerInput.html","title":"class - CreateQuizAnswerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuizAnswerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answer\n                            \n                            \n                                    Optional\n                                answeredAt\n                            \n                            \n                                    Optional\n                                isCorrect\n                            \n                            \n                                om\n                            \n                            \n                                questionId\n                            \n                            \n                                quizId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answeredAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isCorrect\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType, Int } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateQuizAnswerInput extends GqlInput {\n    @Field()\n    quizId: string\n\n    @Field(() => Int)\n    questionId: number\n\n    @Field()\n    answer: string\n\n    @Field()\n    om: string\n\n    @Field()\n    answeredAt?: Date\n\n    isCorrect?: boolean | null\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuizInput.html":{"url":"classes/CreateQuizInput.html","title":"class - CreateQuizInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuizInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                description\n                            \n                            \n                                questions\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IQuizQuestion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\nimport { IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { CreateQuizQuestionInput } from '../../../quiz-question/dto/inputs/create-quiz-question.input'\n\n@InputType()\nexport class CreateQuizInput extends GqlInput {\n    @Field()\n    title: string\n\n    @Field()\n    description: string\n\n    @Field(() => [String])\n    categories: string[]\n\n    @Field(() => [CreateQuizQuestionInput])\n    questions: IQuizQuestion[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateQuizQuestionInput.html":{"url":"classes/CreateQuizQuestionInput.html","title":"class - CreateQuizQuestionInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateQuizQuestionInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                answers\n                            \n                            \n                                    Optional\n                                correctAnswers\n                            \n                            \n                                question\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        correctAnswers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateQuizQuestionInput extends GqlInput {\n    @Field()\n    question: string\n\n    @Field()\n    type: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    answers?: string[]\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    correctAnswers?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleInput.html":{"url":"classes/CreateRoleInput.html","title":"class - CreateRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/create-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/create-role.input.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateRoleInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    name: string\n\n    @Field()\n    @IsNotEmpty()\n    description: string\n\n    @Field(() => [String])\n    @IsArray()\n    permissions: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolInput.html":{"url":"classes/CreateSchoolInput.html","title":"class - CreateSchoolInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/inputs/create-school.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                county\n                            \n                            \n                                name\n                            \n                            \n                                om\n                            \n                            \n                                types\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        county\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@IsArray()@ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/create-school.input.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\nimport { ArrayNotEmpty, IsArray, IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class CreateSchoolInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    om: string\n\n    @Field()\n    @IsNotEmpty()\n    name: string\n\n    @Field()\n    @IsNotEmpty()\n    address: string\n\n    @Field()\n    @IsNotEmpty()\n    county: string\n\n    @Field(() => [String])\n    @IsArray()\n    @ArrayNotEmpty()\n    types: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserInput.html":{"url":"classes/CreateUserInput.html","title":"class - CreateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/create-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/create-user.input.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsEmail, IsNotEmpty } from 'class-validator'\nimport { GqlInput } from '../../../../shared/gql-inputs/gql-input.abstract'\n\n@InputType()\nexport class CreateUserInput extends GqlInput {\n    @Field()\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @Field()\n    @IsNotEmpty()\n    username: string\n\n    @Field()\n    @IsNotEmpty()\n    password: string\n\n    @Field()\n    om?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    roles?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteGroupingItemInput.html":{"url":"classes/DeleteGroupingItemInput.html","title":"class - DeleteGroupingItemInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteGroupingItemInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/inputs/delete-grouping-item.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteGroupingItemInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteHangmanWordInput.html":{"url":"classes/DeleteHangmanWordInput.html","title":"class - DeleteHangmanWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteHangmanWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/inputs/delete-hangman-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteHangmanWordInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteMirrorWordInput.html":{"url":"classes/DeleteMirrorWordInput.html","title":"class - DeleteMirrorWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteMirrorWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/inputs/delete-mirror-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteMirrorWordInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteQuizAnswerInput.html":{"url":"classes/DeleteQuizAnswerInput.html","title":"class - DeleteQuizAnswerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteQuizAnswerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/dto/inputs/delete-quiz-answer.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteQuizAnswerInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteQuizInput.html":{"url":"classes/DeleteQuizInput.html","title":"class - DeleteQuizInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteQuizInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/inputs/delete-quiz.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteQuizInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteQuizQuestionInput.html":{"url":"classes/DeleteQuizQuestionInput.html","title":"class - DeleteQuizQuestionInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteQuizQuestionInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/inputs/delete-quiz-question.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteQuizQuestionInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteRoleInput.html":{"url":"classes/DeleteRoleInput.html","title":"class - DeleteRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/delete-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteRoleInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteSchoolInput.html":{"url":"classes/DeleteSchoolInput.html","title":"class - DeleteSchoolInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteSchoolInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/inputs/delete-school.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteSchoolInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserInput.html":{"url":"classes/DeleteUserInput.html","title":"class - DeleteUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/delete-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class DeleteUserInput extends IdInput {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetGroupingItemArgs.html":{"url":"classes/GetGroupingItemArgs.html","title":"class - GetGroupingItemArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetGroupingItemArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/args/get-grouping-item.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\n\n@ArgsType()\nexport class GetGroupingItemArgs extends IdArg {\n    @Field({ nullable: true })\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetGroupingItemsArgs.html":{"url":"classes/GetGroupingItemsArgs.html","title":"class - GetGroupingItemsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetGroupingItemsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/args/get-grouping-items.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetGroupingItemsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetHangmanWordArgs.html":{"url":"classes/GetHangmanWordArgs.html","title":"class - GetHangmanWordArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetHangmanWordArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/args/get-hangman-word.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/args/get-hangman-word.args.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true, deprecationReason: 'This field is unused'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\n\n@ArgsType()\nexport class GetHangmanWordArgs extends IdArg {\n    @Field({ nullable: true, deprecationReason: 'This field is unused' })\n    id: string\n\n    @Field({ nullable: true })\n    category?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetHangmanWordsArgs.html":{"url":"classes/GetHangmanWordsArgs.html","title":"class - GetHangmanWordsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetHangmanWordsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/args/get-hangman-words.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/args/get-hangman-words.args.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetHangmanWordsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n\n    @Field(() => String, { nullable: true })\n    category?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetMirrorWordArgs.html":{"url":"classes/GetMirrorWordArgs.html","title":"class - GetMirrorWordArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetMirrorWordArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/args/get-mirror-word.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true, deprecationReason: 'This field is unused.'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\n\n@ArgsType()\nexport class GetMirrorWordArgs extends IdArg {\n    @Field({ nullable: true, deprecationReason: 'This field is unused.' })\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetMirrorWordsArgs.html":{"url":"classes/GetMirrorWordsArgs.html","title":"class - GetMirrorWordsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetMirrorWordsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/args/get-mirror-words.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetMirrorWordsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizAnswerArgs.html":{"url":"classes/GetQuizAnswerArgs.html","title":"class - GetQuizAnswerArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizAnswerArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/dto/args/get-quiz-answer.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizAnswerArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizAnswersArgs.html":{"url":"classes/GetQuizAnswersArgs.html","title":"class - GetQuizAnswersArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizAnswersArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/dto/args/get-quiz-answers.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                            \n                                    Optional\n                                quizId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        quizId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/args/get-quiz-answers.args.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizAnswersArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n\n    @Field({ nullable: true })\n    quizId?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizArgs.html":{"url":"classes/GetQuizArgs.html","title":"class - GetQuizArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/args/get-quiz.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizQuestionArgs.html":{"url":"classes/GetQuizQuestionArgs.html","title":"class - GetQuizQuestionArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizQuestionArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/args/get-quiz-question.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizQuestionArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizQuestionsArgs.html":{"url":"classes/GetQuizQuestionsArgs.html","title":"class - GetQuizQuestionsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizQuestionsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/args/get-quiz-questions.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizQuestionsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetQuizzesArgs.html":{"url":"classes/GetQuizzesArgs.html","title":"class - GetQuizzesArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetQuizzesArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/args/get-quizzes.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/args/get-quizzes.args.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetQuizzesArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n\n    @Field({ nullable: true })\n    category?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRoleArgs.html":{"url":"classes/GetRoleArgs.html","title":"class - GetRoleArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRoleArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/args/get-role.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetRoleArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRolesArgs.html":{"url":"classes/GetRolesArgs.html","title":"class - GetRolesArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRolesArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/args/get-roles.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetRolesArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSchoolArgs.html":{"url":"classes/GetSchoolArgs.html","title":"class - GetSchoolArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSchoolArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/args/get-school.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\n\n@ArgsType()\nexport class GetSchoolArgs extends IdArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSchoolsArgs.html":{"url":"classes/GetSchoolsArgs.html","title":"class - GetSchoolsArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSchoolsArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/args/get-schools.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                county\n                            \n                            \n                                    Optional\n                                ids\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        county\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/args/get-schools.args.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetSchoolsArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field({ nullable: true })\n    name?: string\n\n    @Field({ nullable: true })\n    address?: string\n\n    @Field({ nullable: true })\n    county?: string\n\n    @Field({ nullable: true })\n    type: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserArgs.html":{"url":"classes/GetUserArgs.html","title":"class - GetUserArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/args/get-user.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/args/get-user.args.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/args/get-user.args.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field } from '@nestjs/graphql'\nimport { IsOptional } from 'class-validator'\nimport { GqlArg } from '../../../../shared/gql-args/gql-arg.abstract'\n\n@ArgsType()\nexport class GetUserArgs extends GqlArg {\n    @Field({ nullable: true })\n    @IsOptional()\n    id?: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    email?: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersArgs.html":{"url":"classes/GetUsersArgs.html","title":"class - GetUsersArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/args/get-users.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdArrayArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdArrayArg\n\n                            \n                        \n                    \n                        \n                                Defined in         IdArrayArg:9\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdArrayArg } from '../../../../shared/gql-args/id.args'\nimport { ArgsType, Field } from '@nestjs/graphql'\nimport { IsArray } from 'class-validator'\n\n@ArgsType()\nexport class GetUsersArgs extends IdArrayArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlArg.html":{"url":"classes/GqlArg.html","title":"class - GqlArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/gql-arg.abstract.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType } from '@nestjs/graphql'\n\n@ArgsType()\nexport abstract class GqlArg {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlAuthGuard.html":{"url":"classes/GqlAuthGuard.html","title":"class - GqlAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/gql-auth.guard.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRequest\n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/guards/gql-auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\nimport {ExecutionContext} from \"@nestjs/common\";\nimport {GqlExecutionContext} from \"@nestjs/graphql\";\n\nexport class GqlAuthGuard extends AuthGuard('jwt') {\n    getRequest(context: ExecutionContext) {\n        return GqlExecutionContext.create(context).getContext().req\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GqlInput.html":{"url":"classes/GqlInput.html","title":"class - GqlInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GqlInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-inputs/gql-input.abstract.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class GqlInput {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupingItem.html":{"url":"classes/GroupingItem.html","title":"class - GroupingItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupingItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IGroupingItem\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                correct\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                groups\n                            \n                            \n                                item\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IGroupingItem } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type GroupingItemDocument = IGroupingItem & Document\n\n@ObjectType()\n@Schema()\nexport class GroupingItem implements IGroupingItem {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    item: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    groups: string[]\n\n    @Field()\n    @Prop()\n    correct: string\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const GroupingItemSchema = SchemaFactory.createForClass(GroupingItem)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupingItemModule.html":{"url":"modules/GroupingItemModule.html","title":"module - GroupingItemModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupingItemModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GroupingItemModule\n\n\n\ncluster_GroupingItemModule_providers\n\n\n\ncluster_GroupingItemModule_exports\n\n\n\n\nGroupingItemRepository \n\nGroupingItemRepository \n\n\n\nGroupingItemService \n\nGroupingItemService \n\n\n\nGroupingItemModule\n\nGroupingItemModule\n\nGroupingItemRepository  -->\n\nGroupingItemModule->GroupingItemRepository \n\n\n\nGroupingItemService  -->\n\nGroupingItemModule->GroupingItemService \n\n\n\n\n\nGroupingItemRepository\n\nGroupingItemRepository\n\nGroupingItemModule -->\n\nGroupingItemRepository->GroupingItemModule\n\n\n\n\n\nGroupingItemService\n\nGroupingItemService\n\nGroupingItemModule -->\n\nGroupingItemService->GroupingItemModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/grouping-item.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GroupingItemRepository\n                        \n                        \n                            GroupingItemService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GroupingItemRepository\n                        \n                        \n                            GroupingItemService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { GroupingItemService } from './grouping-item.service'\nimport { GroupingItemResolver } from './grouping-item.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { GroupingItem, GroupingItemSchema } from './entities/grouping-item.entity'\nimport { GroupingItemRepository } from './entities/grouping-item.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: GroupingItem.name,\n                schema: GroupingItemSchema,\n            },\n        ]),\n    ],\n    providers: [GroupingItemResolver, GroupingItemService, GroupingItemRepository],\n    exports: [GroupingItemService, GroupingItemRepository],\n})\nexport class GroupingItemModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupingItemRepository.html":{"url":"injectables/GroupingItemRepository.html","title":"injectable - GroupingItemRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupingItemRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/entities/grouping-item.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/grouping-item/entities/grouping-item.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(__data: GetGroupingItemArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    __data\n                                    \n                                                GetGroupingItemArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { GroupingItem, GroupingItemDocument } from './grouping-item.entity'\nimport { Model } from 'mongoose'\nimport { UpdateGroupingItemInput } from '../dto/inputs/update-grouping-item.input'\nimport { CreateGroupingItemInput } from '../dto/inputs/create-grouping-item.input'\nimport { GetGroupingItemsArgs } from '../dto/args/get-grouping-items.args'\nimport { GetGroupingItemArgs } from '../dto/args/get-grouping-item.args'\nimport { IGroupingItem } from '@szakszolg-nx/api-interfaces'\nimport { DeleteGroupingItemInput } from '../dto/inputs/delete-grouping-item.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class GroupingItemRepository extends SimpleRepository {\n    constructor(@InjectModel(GroupingItem.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    override async findOne(__data: GetGroupingItemArgs): Promise {\n        const count = await this.model.estimatedDocumentCount()\n        const random = Math.floor(Math.random() * count)\n        return this.model.findOne().skip(random).limit(1)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupingItemResolver.html":{"url":"classes/GroupingItemResolver.html","title":"class - GroupingItemResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupingItemResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/grouping-item.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGroupingItem\n                            \n                            \n                                deleteGroupingItem\n                            \n                            \n                                groupingItem\n                            \n                            \n                                groupingItems\n                            \n                            \n                                updateGroupingItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: GroupingItemService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        GroupingItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createGroupingItem\n                        \n                    \n                \n            \n            \n                \ncreateGroupingItem(data: CreateGroupingItemInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateGroupingItemInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroupingItem\n                        \n                    \n                \n            \n            \n                \ndeleteGroupingItem(data: DeleteGroupingItemInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteGroupingItemInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupingItem\n                        \n                    \n                \n            \n            \n                \ngroupingItem(data: GetGroupingItemArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetGroupingItemArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupingItems\n                        \n                    \n                \n            \n            \n                \ngroupingItems(data: GetGroupingItemsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetGroupingItemsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateGroupingItem\n                        \n                    \n                \n            \n            \n                \nupdateGroupingItem(data: UpdateGroupingItemInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/grouping-item/grouping-item.resolver.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateGroupingItemInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { GroupingItemService } from './grouping-item.service'\nimport { GroupingItem } from './entities/grouping-item.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetGroupingItemArgs } from './dto/args/get-grouping-item.args'\nimport { IGroupingItem } from '@szakszolg-nx/api-interfaces'\nimport { GetGroupingItemsArgs } from './dto/args/get-grouping-items.args'\nimport { CreateGroupingItemInput } from './dto/inputs/create-grouping-item.input'\nimport { UpdateGroupingItemInput } from './dto/inputs/update-grouping-item.input'\nimport { DeleteGroupingItemInput } from './dto/inputs/delete-grouping-item.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => GroupingItem)\n@Resource('grouping-items')\nexport class GroupingItemResolver {\n    constructor(private readonly service: GroupingItemService) {}\n\n    @Query(() => GroupingItem, { nullable: true })\n    groupingItem(@Args({ nullable: true }) data: GetGroupingItemArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [GroupingItem], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    groupingItems(@Args({ nullable: true }) data: GetGroupingItemsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => GroupingItem)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createGroupingItem(@Args('createGroupingItemData') data: CreateGroupingItemInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => GroupingItem)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateGroupingItem(@Args('updateGroupingItemData') data: UpdateGroupingItemInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => GroupingItem)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteGroupingItem(@Args('deleteGroupingItemData') data: DeleteGroupingItemInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupingItemService.html":{"url":"injectables/GroupingItemService.html","title":"injectable - GroupingItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupingItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/grouping-item.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: GroupingItemRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/grouping-item/grouping-item.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        GroupingItemRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateGroupingItemInput } from './dto/inputs/create-grouping-item.input'\nimport { UpdateGroupingItemInput } from './dto/inputs/update-grouping-item.input'\nimport { GroupingItemRepository } from './entities/grouping-item.repository'\nimport { GetGroupingItemsArgs } from './dto/args/get-grouping-items.args'\nimport { GetGroupingItemArgs } from './dto/args/get-grouping-item.args'\nimport { DeleteGroupingItemInput } from './dto/inputs/delete-grouping-item.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class GroupingItemService extends RepositoryProxyService {\n    constructor(repository: GroupingItemRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HangmanWord.html":{"url":"classes/HangmanWord.html","title":"class - HangmanWord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HangmanWord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IHangmanWord\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                category\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IHangmanWord } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type HangmanWordDocument = IHangmanWord & Document\n\n@ObjectType()\n@Schema()\nexport class HangmanWord implements IHangmanWord {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    word: string\n\n    @Field()\n    @Prop()\n    category: string\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const HangmanWordSchema = SchemaFactory.createForClass(HangmanWord)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HangmanWordModule.html":{"url":"modules/HangmanWordModule.html","title":"module - HangmanWordModule","body":"\n                   \n\n\n\n\n    Modules\n    HangmanWordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HangmanWordModule\n\n\n\ncluster_HangmanWordModule_providers\n\n\n\ncluster_HangmanWordModule_exports\n\n\n\n\nHangmanWordRepository \n\nHangmanWordRepository \n\n\n\nHangmanWordService \n\nHangmanWordService \n\n\n\nHangmanWordModule\n\nHangmanWordModule\n\nHangmanWordRepository  -->\n\nHangmanWordModule->HangmanWordRepository \n\n\n\nHangmanWordService  -->\n\nHangmanWordModule->HangmanWordService \n\n\n\n\n\nHangmanWordRepository\n\nHangmanWordRepository\n\nHangmanWordModule -->\n\nHangmanWordRepository->HangmanWordModule\n\n\n\n\n\nHangmanWordService\n\nHangmanWordService\n\nHangmanWordModule -->\n\nHangmanWordService->HangmanWordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/hangman-word.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HangmanWordRepository\n                        \n                        \n                            HangmanWordService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HangmanWordRepository\n                        \n                        \n                            HangmanWordService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { HangmanWordService } from './hangman-word.service'\nimport { HangmanWordResolver } from './hangman-word.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { HangmanWord, HangmanWordSchema } from './entities/hangman-word.entity'\nimport { HangmanWordRepository } from './entities/hangman-word.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: HangmanWord.name,\n                schema: HangmanWordSchema,\n            },\n        ]),\n    ],\n    providers: [HangmanWordResolver, HangmanWordService, HangmanWordRepository],\n    exports: [HangmanWordService, HangmanWordRepository],\n})\nexport class HangmanWordModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HangmanWordRepository.html":{"url":"injectables/HangmanWordRepository.html","title":"injectable - HangmanWordRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HangmanWordRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/entities/hangman-word.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(hangmanWordModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/hangman-word/entities/hangman-word.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hangmanWordModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetHangmanWordsArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetHangmanWordsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetHangmanWordArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetHangmanWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { HangmanWord, HangmanWordDocument } from './hangman-word.entity'\nimport { Model } from 'mongoose'\nimport { UpdateHangmanWordInput } from '../dto/inputs/update-hangman-word.input'\nimport { CreateHangmanWordInput } from '../dto/inputs/create-hangman-word.input'\nimport { GetHangmanWordsArgs } from '../dto/args/get-hangman-words.args'\nimport { GetHangmanWordArgs } from '../dto/args/get-hangman-word.args'\nimport { IHangmanWord } from '@szakszolg-nx/api-interfaces'\nimport { DeleteHangmanWordInput } from '../dto/inputs/delete-hangman-word.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class HangmanWordRepository extends SimpleRepository {\n    constructor(@InjectModel(HangmanWord.name) hangmanWordModel: Model) {\n        super(hangmanWordModel)\n    }\n\n    override async findAll(data: GetHangmanWordsArgs | null): Promise {\n        if (!data?.category && !data?.ids) return super.findAll(data)\n        let res: any[]\n        const param = {}\n        if (data.category) param['category'] = { $regex: data.category, $options: 'i' }\n        res = await this.model.find(param)\n        if (data.ids?.length > 0) res = res.filter((x) => data.ids.includes(x._id.toString()))\n        return res\n    }\n\n    override async findOne(data: GetHangmanWordArgs): Promise {\n        if (data?.category) {\n            // Note: If we want more than a few hundred words per category, we should use findOne().skip()\n            const res = await this.model.find({ category: { $regex: data.category, $options: 'i' } })\n            return res[Math.floor(Math.random() * res.length)]\n        }\n\n        const count = await this.model.estimatedDocumentCount()\n        const random = Math.floor(Math.random() * count)\n        return this.model.findOne().skip(random).limit(1)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HangmanWordResolver.html":{"url":"classes/HangmanWordResolver.html","title":"class - HangmanWordResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HangmanWordResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/hangman-word.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createHangmanWord\n                            \n                            \n                                deleteHangmanWord\n                            \n                            \n                                hangmanWord\n                            \n                            \n                                hangmanWords\n                            \n                            \n                                updateHangmanWord\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: HangmanWordService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        HangmanWordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createHangmanWord\n                        \n                    \n                \n            \n            \n                \ncreateHangmanWord(data: CreateHangmanWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateHangmanWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteHangmanWord\n                        \n                    \n                \n            \n            \n                \ndeleteHangmanWord(data: DeleteHangmanWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteHangmanWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hangmanWord\n                        \n                    \n                \n            \n            \n                \nhangmanWord(data: GetHangmanWordArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true, description: 'Get a hangman word randomly'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetHangmanWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hangmanWords\n                        \n                    \n                \n            \n            \n                \nhangmanWords(data: GetHangmanWordsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetHangmanWordsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateHangmanWord\n                        \n                    \n                \n            \n            \n                \nupdateHangmanWord(data: UpdateHangmanWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/hangman-word/hangman-word.resolver.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateHangmanWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { HangmanWordService } from './hangman-word.service'\nimport { HangmanWord } from './entities/hangman-word.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetHangmanWordArgs } from './dto/args/get-hangman-word.args'\nimport { IHangmanWord } from '@szakszolg-nx/api-interfaces'\nimport { GetHangmanWordsArgs } from './dto/args/get-hangman-words.args'\nimport { CreateHangmanWordInput } from './dto/inputs/create-hangman-word.input'\nimport { UpdateHangmanWordInput } from './dto/inputs/update-hangman-word.input'\nimport { DeleteHangmanWordInput } from './dto/inputs/delete-hangman-word.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => HangmanWord)\n@Resource('hangman-words')\nexport class HangmanWordResolver {\n    constructor(private readonly service: HangmanWordService) {}\n\n    @Query(() => HangmanWord, { nullable: true, description: 'Get a hangman word randomly' })\n    hangmanWord(@Args({ nullable: true }) data: GetHangmanWordArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [HangmanWord], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    hangmanWords(@Args({ nullable: true }) data: GetHangmanWordsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => HangmanWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createHangmanWord(@Args('createHangmanWordData') data: CreateHangmanWordInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => HangmanWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateHangmanWord(@Args('updateHangmanWordData') data: UpdateHangmanWordInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => HangmanWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteHangmanWord(@Args('deleteHangmanWordData') data: DeleteHangmanWordInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HangmanWordService.html":{"url":"injectables/HangmanWordService.html","title":"injectable - HangmanWordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HangmanWordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/hangman-word.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: HangmanWordRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/hangman-word/hangman-word.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        HangmanWordRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateHangmanWordInput } from './dto/inputs/create-hangman-word.input'\nimport { UpdateHangmanWordInput } from './dto/inputs/update-hangman-word.input'\nimport { HangmanWordRepository } from './entities/hangman-word.repository'\nimport { GetHangmanWordsArgs } from './dto/args/get-hangman-words.args'\nimport { GetHangmanWordArgs } from './dto/args/get-hangman-word.args'\nimport { DeleteHangmanWordInput } from './dto/inputs/delete-hangman-word.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class HangmanWordService extends RepositoryProxyService {\n    constructor(repository: HangmanWordRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdArg.html":{"url":"classes/IdArg.html","title":"class - IdArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/id.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-args/id.args.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlArg } from './gql-arg.abstract'\n\nexport class IdArrayArg extends GqlArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\nexport class IdArg extends GqlArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdArrayArg.html":{"url":"classes/IdArrayArg.html","title":"class - IdArrayArg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdArrayArg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-args/id.args.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlArg\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                ids\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        ids\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-args/id.args.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty } from 'class-validator'\nimport { GqlArg } from './gql-arg.abstract'\n\nexport class IdArrayArg extends GqlArg {\n    @Field(() => [String], { nullable: true })\n    @IsArray()\n    ids?: string[]\n}\n\nexport class IdArg extends GqlArg {\n    @Field()\n    @IsNotEmpty()\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IdInput.html":{"url":"classes/IdInput.html","title":"class - IdInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IdInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/gql-inputs/id.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        GqlInput\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/shared/gql-inputs/id.input.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { GqlInput } from './gql-input.abstract'\n\nexport class IdInput extends GqlInput {\n    id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtAuthGuard.html":{"url":"classes/JwtAuthGuard.html","title":"class - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\n\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/strategies/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/strategies/jwt.strategy.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { forwardRef, Inject, Injectable } from '@nestjs/common'\nimport { UsersService } from '../../users/users.service'\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n    constructor(\n        @Inject(forwardRef(() => UsersService))\n        private readonly userService: UsersService,\n    ) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            ignoreExpiration: false,\n            secretOrKey: process.env.JWT_SECRET,\n        })\n    }\n\n    async validate(payload: { email: string; sub: string }) {\n        return this.userService.findOne({ email: payload.email })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalAuthGuard.html":{"url":"classes/LocalAuthGuard.html","title":"class - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {AuthGuard} from \"@nestjs/passport\";\n\nexport class LocalAuthGuard extends AuthGuard\n('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/auth/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/strategies/local.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/strategies/local.strategy.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport'\nimport { Strategy } from 'passport-local'\nimport { AuthService } from '../auth.service'\nimport { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n    constructor(private readonly authService: AuthService) {\n        super({ usernameField: 'email' })\n    }\n\n    async validate(email: string, password: string): Promise {\n        const user = await this.authService.validate(email, password)\n        console.log('user', user)\n        if (!user) {\n            throw new UnauthorizedException()\n        }\n        return user\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MirrorWord.html":{"url":"classes/MirrorWord.html","title":"class - MirrorWord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MirrorWord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IMirrorWord\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IMirrorWord } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type MirrorWordDocument = IMirrorWord & Document\n\n@ObjectType()\n@Schema()\nexport class MirrorWord implements IMirrorWord {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    word: string\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const MirrorWordSchema = SchemaFactory.createForClass(MirrorWord)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MirrorWordModule.html":{"url":"modules/MirrorWordModule.html","title":"module - MirrorWordModule","body":"\n                   \n\n\n\n\n    Modules\n    MirrorWordModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MirrorWordModule\n\n\n\ncluster_MirrorWordModule_exports\n\n\n\ncluster_MirrorWordModule_providers\n\n\n\n\nMirrorWordRepository \n\nMirrorWordRepository \n\n\n\nMirrorWordService \n\nMirrorWordService \n\n\n\nMirrorWordModule\n\nMirrorWordModule\n\nMirrorWordRepository  -->\n\nMirrorWordModule->MirrorWordRepository \n\n\n\nMirrorWordService  -->\n\nMirrorWordModule->MirrorWordService \n\n\n\n\n\nMirrorWordRepository\n\nMirrorWordRepository\n\nMirrorWordModule -->\n\nMirrorWordRepository->MirrorWordModule\n\n\n\n\n\nMirrorWordService\n\nMirrorWordService\n\nMirrorWordModule -->\n\nMirrorWordService->MirrorWordModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/mirror-word.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MirrorWordRepository\n                        \n                        \n                            MirrorWordService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MirrorWordRepository\n                        \n                        \n                            MirrorWordService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { MirrorWordService } from './mirror-word.service'\nimport { MirrorWordResolver } from './mirror-word.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { MirrorWord, MirrorWordSchema } from './entities/mirror-word.entity'\nimport { MirrorWordRepository } from './entities/mirror-word.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: MirrorWord.name,\n                schema: MirrorWordSchema,\n            },\n        ]),\n    ],\n    providers: [MirrorWordResolver, MirrorWordService, MirrorWordRepository],\n    exports: [MirrorWordService, MirrorWordRepository],\n})\nexport class MirrorWordModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MirrorWordRepository.html":{"url":"injectables/MirrorWordRepository.html","title":"injectable - MirrorWordRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MirrorWordRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/entities/mirror-word.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mirrorWordModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/mirror-word/entities/mirror-word.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mirrorWordModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(__data: GetMirrorWordArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    __data\n                                    \n                                                GetMirrorWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { MirrorWord, MirrorWordDocument } from './mirror-word.entity'\nimport { Model } from 'mongoose'\nimport { UpdateMirrorWordInput } from '../dto/inputs/update-mirror-word.input'\nimport { CreateMirrorWordInput } from '../dto/inputs/create-mirror-word.input'\nimport { GetMirrorWordsArgs } from '../dto/args/get-mirror-words.args'\nimport { GetMirrorWordArgs } from '../dto/args/get-mirror-word.args'\nimport { IMirrorWord } from '@szakszolg-nx/api-interfaces'\nimport { DeleteMirrorWordInput } from '../dto/inputs/delete-mirror-word.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class MirrorWordRepository extends SimpleRepository {\n    constructor(@InjectModel(MirrorWord.name) mirrorWordModel: Model) {\n        super(mirrorWordModel)\n    }\n\n    override async findOne(__data: GetMirrorWordArgs): Promise {\n        const count = await this.model.estimatedDocumentCount()\n        const random = Math.floor(Math.random() * count)\n        return this.model.findOne().skip(random).limit(1)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MirrorWordResolver.html":{"url":"classes/MirrorWordResolver.html","title":"class - MirrorWordResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MirrorWordResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/mirror-word.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMirrorWord\n                            \n                            \n                                deleteMirrorWord\n                            \n                            \n                                mirrorWord\n                            \n                            \n                                mirrorWords\n                            \n                            \n                                updateMirrorWord\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mirrorWordService: MirrorWordService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mirrorWordService\n                                                  \n                                                        \n                                                                        MirrorWordService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMirrorWord\n                        \n                    \n                \n            \n            \n                \ncreateMirrorWord(data: CreateMirrorWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateMirrorWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteMirrorWord\n                        \n                    \n                \n            \n            \n                \ndeleteMirrorWord(data: DeleteMirrorWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteMirrorWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mirrorWord\n                        \n                    \n                \n            \n            \n                \nmirrorWord(data: GetMirrorWordArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetMirrorWordArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mirrorWords\n                        \n                    \n                \n            \n            \n                \nmirrorWords(data: GetMirrorWordsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetMirrorWordsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMirrorWord\n                        \n                    \n                \n            \n            \n                \nupdateMirrorWord(data: UpdateMirrorWordInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/mirror-word/mirror-word.resolver.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateMirrorWordInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { MirrorWordService } from './mirror-word.service'\nimport { MirrorWord } from './entities/mirror-word.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetMirrorWordArgs } from './dto/args/get-mirror-word.args'\nimport { IMirrorWord } from '@szakszolg-nx/api-interfaces'\nimport { GetMirrorWordsArgs } from './dto/args/get-mirror-words.args'\nimport { CreateMirrorWordInput } from './dto/inputs/create-mirror-word.input'\nimport { UpdateMirrorWordInput } from './dto/inputs/update-mirror-word.input'\nimport { DeleteMirrorWordInput } from './dto/inputs/delete-mirror-word.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => MirrorWord)\n@Resource('mirror-words')\nexport class MirrorWordResolver {\n    constructor(private readonly mirrorWordService: MirrorWordService) {}\n\n    @Query(() => MirrorWord, { nullable: true })\n    mirrorWord(@Args({ nullable: true }) data: GetMirrorWordArgs): Promise {\n        return this.mirrorWordService.findOne(data)\n    }\n\n    @Query(() => [MirrorWord], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    mirrorWords(@Args({ nullable: true }) data: GetMirrorWordsArgs | null): Promise {\n        return this.mirrorWordService.findAll(data)\n    }\n\n    @Mutation(() => MirrorWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createMirrorWord(@Args('createMirrorWordData') data: CreateMirrorWordInput): Promise {\n        return this.mirrorWordService.create(data)\n    }\n\n    @Mutation(() => MirrorWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateMirrorWord(@Args('updateMirrorWordData') data: UpdateMirrorWordInput): Promise {\n        return this.mirrorWordService.update(data)\n    }\n\n    @Mutation(() => MirrorWord)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteMirrorWord(@Args('deleteMirrorWordData') data: DeleteMirrorWordInput): Promise {\n        return this.mirrorWordService.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MirrorWordService.html":{"url":"injectables/MirrorWordService.html","title":"injectable - MirrorWordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MirrorWordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/mirror-word.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: MirrorWordRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/mirror-word/mirror-word.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        MirrorWordRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateMirrorWordInput } from './dto/inputs/create-mirror-word.input'\nimport { UpdateMirrorWordInput } from './dto/inputs/update-mirror-word.input'\nimport { MirrorWordRepository } from './entities/mirror-word.repository'\nimport { GetMirrorWordsArgs } from './dto/args/get-mirror-words.args'\nimport { GetMirrorWordArgs } from './dto/args/get-mirror-word.args'\nimport { DeleteMirrorWordInput } from './dto/inputs/delete-mirror-word.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class MirrorWordService extends RepositoryProxyService {\n    constructor(repository: MirrorWordRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PermissionGuard.html":{"url":"guards/PermissionGuard.html","title":"guard - PermissionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PermissionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                apps/api/src/app/auth/guards/permission-guard.service.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/auth/guards/permission-guard.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/auth/guards/permission-guard.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, flatten, Injectable } from '@nestjs/common'\nimport { Reflector } from '@nestjs/core'\nimport { GqlExecutionContext } from '@nestjs/graphql'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class PermissionGuard implements CanActivate {\n    constructor(private reflector: Reflector) {}\n\n    canActivate(context: ExecutionContext) {\n        const requiredResource = this.reflector.getAllAndMerge('resources', [\n            context.getClass(),\n            context.getHandler(),\n        ])\n        const requiredAbilities = this.reflector.get('abilities', context.getHandler())\n        if (requiredAbilities?.length == 0 && requiredResource?.length == 0) return true\n        const required = `${requiredAbilities[0]}::${requiredResource[0]}`\n        let user: IUser\n        if (context.getType() === 'http') user = context.switchToHttp().getRequest().user\n        user = GqlExecutionContext.create(context).getContext().req.user\n        if (!user) return false\n        const userPermissions = flatten(user.roles.map((role) => role.permissions ?? [])).map((permission: string) =>\n            permission.replace(/^\\*::/g, `${requiredAbilities[0]}::`).replace(/::\\*$/g, `::${requiredResource[0]}`),\n        )\n\n        return userPermissions.includes(required)\n    }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Quiz.html":{"url":"classes/Quiz.html","title":"class - Quiz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Quiz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/entities/quiz.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IQuiz\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                categories\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                questions\n                            \n                            \n                                title\n                            \n                            \n                                tokens\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IQuizQuestion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tokens\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/entities/quiz.entity.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IQuiz, IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\nimport { QuizQuestion } from '../../quiz-question/entities/quiz-question.entity'\n\nexport type QuizDocument = IQuiz & Document\n\n@ObjectType()\n@Schema()\nexport class Quiz implements IQuiz {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    title: string\n\n    @Field()\n    @Prop()\n    description: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    categories: string[]\n\n    @Field(() => [QuizQuestion])\n    @Prop({ type: [MongooseSchema.Types.Mixed] })\n    questions: IQuizQuestion[]\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    tokens: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const QuizSchema = SchemaFactory.createForClass(Quiz)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizAnswer.html":{"url":"classes/QuizAnswer.html","title":"class - QuizAnswer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizAnswer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQuizAnswer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                answer\n                            \n                            \n                                    Optional\n                                answeredAt\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                    Optional\n                                isCorrect\n                            \n                            \n                                om\n                            \n                            \n                                questionId\n                            \n                            \n                                quizId\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answeredAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isCorrect\n                        \n                    \n                \n            \n                \n                    \n                        Type :     boolean | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})@Prop({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Int, ObjectType } from '@nestjs/graphql'\nimport { IQuizAnswer } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type QuizAnswerDocument = IQuizAnswer & Document\n\n@ObjectType()\n@Schema()\nexport class QuizAnswer implements IQuizAnswer {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    quizId: string\n\n    @Field(() => Int)\n    @Prop()\n    questionId: number\n\n    @Field()\n    @Prop()\n    answer: string\n\n    @Field()\n    @Prop()\n    om: string\n\n    @Field(() => Boolean, { nullable: true })\n    @Prop({ nullable: true })\n    isCorrect?: boolean | null\n\n    @Field()\n    @Prop()\n    answeredAt?: Date\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const QuizAnswerSchema = SchemaFactory.createForClass(QuizAnswer)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuizAnswerModule.html":{"url":"modules/QuizAnswerModule.html","title":"module - QuizAnswerModule","body":"\n                   \n\n\n\n\n    Modules\n    QuizAnswerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_QuizAnswerModule\n\n\n\ncluster_QuizAnswerModule_exports\n\n\n\ncluster_QuizAnswerModule_providers\n\n\n\ncluster_QuizAnswerModule_imports\n\n\n\n\nQuizModule\n\nQuizModule\n\n\n\nQuizAnswerModule\n\nQuizAnswerModule\n\nQuizAnswerModule -->\n\nQuizModule->QuizAnswerModule\n\n\n\n\n\nQuizAnswerRepository \n\nQuizAnswerRepository \n\nQuizAnswerRepository  -->\n\nQuizAnswerModule->QuizAnswerRepository \n\n\n\n\n\nQuizAnswerService \n\nQuizAnswerService \n\nQuizAnswerService  -->\n\nQuizAnswerModule->QuizAnswerService \n\n\n\n\n\nQuizAnswerRepository\n\nQuizAnswerRepository\n\nQuizAnswerModule -->\n\nQuizAnswerRepository->QuizAnswerModule\n\n\n\n\n\nQuizAnswerService\n\nQuizAnswerService\n\nQuizAnswerModule -->\n\nQuizAnswerService->QuizAnswerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/quiz-answer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QuizAnswerRepository\n                        \n                        \n                            QuizAnswerService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            QuizModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuizAnswerRepository\n                        \n                        \n                            QuizAnswerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { QuizAnswerService } from './quiz-answer.service'\nimport { QuizAnswerResolver } from './quiz-answer.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { QuizAnswer, QuizAnswerSchema } from './entities/quiz-answer.entity'\nimport { QuizAnswerRepository } from './entities/quiz-answer.repository'\nimport { QuizModule } from '../quiz/quiz.module'\n\n@Module({\n    imports: [\n        QuizModule,\n        MongooseModule.forFeature([\n            {\n                name: QuizAnswer.name,\n                schema: QuizAnswerSchema,\n            },\n        ]),\n    ],\n    providers: [QuizAnswerResolver, QuizAnswerService, QuizAnswerRepository],\n    exports: [QuizAnswerService, QuizAnswerRepository],\n})\nexport class QuizAnswerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizAnswerRepository.html":{"url":"injectables/QuizAnswerRepository.html","title":"injectable - QuizAnswerRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizAnswerRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/entities/quiz-answer.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model, quizService: QuizService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-answer/entities/quiz-answer.repository.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateQuizAnswerInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizAnswerInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetQuizAnswersArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizAnswersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { QuizAnswer, QuizAnswerDocument } from './quiz-answer.entity'\nimport { Model } from 'mongoose'\nimport { UpdateQuizAnswerInput } from '../dto/inputs/update-quiz-answer.input'\nimport { CreateQuizAnswerInput } from '../dto/inputs/create-quiz-answer.input'\nimport { GetQuizAnswersArgs } from '../dto/args/get-quiz-answers.args'\nimport { GetQuizAnswerArgs } from '../dto/args/get-quiz-answer.args'\nimport { IQuiz, IQuizAnswer, IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { DeleteQuizAnswerInput } from '../dto/inputs/delete-quiz-answer.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\nimport { QuizService } from '../../quiz/quiz.service'\n\n@Injectable()\nexport class QuizAnswerRepository extends SimpleRepository {\n    constructor(\n        @InjectModel(QuizAnswer.name) resourceModel: Model,\n        private readonly quizService: QuizService,\n    ) {\n        super(resourceModel)\n    }\n\n    override async findAll(data: GetQuizAnswersArgs | null): Promise {\n        if (data.ids?.length > 0) {\n            return super.findAll(data)\n        }\n\n        return this.model.find({ quizId: data.quizId })\n    }\n\n    override async create(data: CreateQuizAnswerInput): Promise {\n        const originalQuiz: IQuiz = await this.quizService.findOne({ id: data.quizId })\n        const originalQuestion = originalQuiz.questions.find((q) => q._id.toString() === data.questionId)\n        if (!originalQuestion) {\n            throw new NotFoundException(`Question not found: ${data.quizId}/${data.questionId}`)\n        }\n\n        if (originalQuestion.type !== 'free-text') {\n            data.isCorrect = originalQuestion.answers.includes(data.answer)\n        }\n        return super.create(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizAnswerResolver.html":{"url":"classes/QuizAnswerResolver.html","title":"class - QuizAnswerResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizAnswerResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/quiz-answer.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createQuizAnswer\n                            \n                            \n                                deleteQuizAnswer\n                            \n                            \n                                quizAnswer\n                            \n                            \n                                quizAnswers\n                            \n                            \n                                updateQuizAnswer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: QuizAnswerService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        QuizAnswerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createQuizAnswer\n                        \n                    \n                \n            \n            \n                \ncreateQuizAnswer(data: CreateQuizAnswerInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizAnswerInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteQuizAnswer\n                        \n                    \n                \n            \n            \n                \ndeleteQuizAnswer(data: DeleteQuizAnswerInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteQuizAnswerInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizAnswer\n                        \n                    \n                \n            \n            \n                \nquizAnswer(data: GetQuizAnswerArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetQuizAnswerArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizAnswers\n                        \n                    \n                \n            \n            \n                \nquizAnswers(data: GetQuizAnswersArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizAnswersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateQuizAnswer\n                        \n                    \n                \n            \n            \n                \nupdateQuizAnswer(data: UpdateQuizAnswerInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-answer/quiz-answer.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateQuizAnswerInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { QuizAnswerService } from './quiz-answer.service'\nimport { QuizAnswer } from './entities/quiz-answer.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetQuizAnswerArgs } from './dto/args/get-quiz-answer.args'\nimport { IQuizAnswer } from '@szakszolg-nx/api-interfaces'\nimport { GetQuizAnswersArgs } from './dto/args/get-quiz-answers.args'\nimport { CreateQuizAnswerInput } from './dto/inputs/create-quiz-answer.input'\nimport { UpdateQuizAnswerInput } from './dto/inputs/update-quiz-answer.input'\nimport { DeleteQuizAnswerInput } from './dto/inputs/delete-quiz-answer.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => QuizAnswer)\n@Resource('quiz-answers')\nexport class QuizAnswerResolver {\n    constructor(private readonly service: QuizAnswerService) {}\n\n    @Query(() => QuizAnswer, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    quizAnswer(@Args({ nullable: true }) data: GetQuizAnswerArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [QuizAnswer], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    quizAnswers(@Args({ nullable: true }) data: GetQuizAnswersArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => QuizAnswer)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createQuizAnswer(@Args('createQuizAnswerData') data: CreateQuizAnswerInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => QuizAnswer)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateQuizAnswer(@Args('updateQuizAnswerData') data: UpdateQuizAnswerInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => QuizAnswer)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteQuizAnswer(@Args('deleteQuizAnswerData') data: DeleteQuizAnswerInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizAnswerService.html":{"url":"injectables/QuizAnswerService.html","title":"injectable - QuizAnswerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizAnswerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/quiz-answer.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: QuizAnswerRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-answer/quiz-answer.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        QuizAnswerRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateQuizAnswerInput } from './dto/inputs/create-quiz-answer.input'\nimport { UpdateQuizAnswerInput } from './dto/inputs/update-quiz-answer.input'\nimport { QuizAnswerRepository } from './entities/quiz-answer.repository'\nimport { GetQuizAnswersArgs } from './dto/args/get-quiz-answers.args'\nimport { GetQuizAnswerArgs } from './dto/args/get-quiz-answer.args'\nimport { DeleteQuizAnswerInput } from './dto/inputs/delete-quiz-answer.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class QuizAnswerService extends RepositoryProxyService {\n    constructor(repository: QuizAnswerRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuizModule.html":{"url":"modules/QuizModule.html","title":"module - QuizModule","body":"\n                   \n\n\n\n\n    Modules\n    QuizModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_QuizModule\n\n\n\ncluster_QuizModule_exports\n\n\n\ncluster_QuizModule_providers\n\n\n\n\nQuizRepository \n\nQuizRepository \n\n\n\nQuizService \n\nQuizService \n\n\n\nQuizModule\n\nQuizModule\n\nQuizRepository  -->\n\nQuizModule->QuizRepository \n\n\n\nQuizService  -->\n\nQuizModule->QuizService \n\n\n\n\n\nQuizRepository\n\nQuizRepository\n\nQuizModule -->\n\nQuizRepository->QuizModule\n\n\n\n\n\nQuizService\n\nQuizService\n\nQuizModule -->\n\nQuizService->QuizModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/quiz/quiz.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QuizRepository\n                        \n                        \n                            QuizService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuizRepository\n                        \n                        \n                            QuizService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { QuizService } from './quiz.service'\nimport { QuizResolver } from './quiz.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Quiz, QuizSchema } from './entities/quiz.entity'\nimport { QuizRepository } from './entities/quiz.repository'\nimport { QuizQuestion, QuizQuestionSchema } from '../quiz-question/entities/quiz-question.entity'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: QuizQuestion.name,\n                schema: QuizQuestionSchema,\n            },\n            {\n                name: Quiz.name,\n                schema: QuizSchema,\n            },\n        ]),\n    ],\n    providers: [QuizResolver, QuizService, QuizRepository],\n    exports: [QuizService, QuizRepository],\n})\nexport class QuizModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizQuestion.html":{"url":"classes/QuizQuestion.html","title":"class - QuizQuestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizQuestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        IQuizQuestion\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    Optional\n                                answers\n                            \n                            \n                                    Optional\n                                correctAnswers\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                question\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        correctAnswers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.entity.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type QuizQuestionDocument = IQuizQuestion & Document\n\n@ObjectType()\n@Schema()\nexport class QuizQuestion implements IQuizQuestion {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    question: string\n\n    @Field()\n    @Prop()\n    type: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @Prop({ type: [String] })\n    answers?: string[]\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @Prop({ type: [String] })\n    correctAnswers?: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const QuizQuestionSchema = SchemaFactory.createForClass(QuizQuestion)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QuizQuestionModule.html":{"url":"modules/QuizQuestionModule.html","title":"module - QuizQuestionModule","body":"\n                   \n\n\n\n\n    Modules\n    QuizQuestionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_QuizQuestionModule\n\n\n\ncluster_QuizQuestionModule_exports\n\n\n\ncluster_QuizQuestionModule_providers\n\n\n\n\nQuizQuestionRepository \n\nQuizQuestionRepository \n\n\n\nQuizQuestionService \n\nQuizQuestionService \n\n\n\nQuizQuestionModule\n\nQuizQuestionModule\n\nQuizQuestionRepository  -->\n\nQuizQuestionModule->QuizQuestionRepository \n\n\n\nQuizQuestionService  -->\n\nQuizQuestionModule->QuizQuestionService \n\n\n\n\n\nQuizQuestionRepository\n\nQuizQuestionRepository\n\nQuizQuestionModule -->\n\nQuizQuestionRepository->QuizQuestionModule\n\n\n\n\n\nQuizQuestionService\n\nQuizQuestionService\n\nQuizQuestionModule -->\n\nQuizQuestionService->QuizQuestionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/quiz-question.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            QuizQuestionRepository\n                        \n                        \n                            QuizQuestionService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            QuizQuestionRepository\n                        \n                        \n                            QuizQuestionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { QuizQuestionService } from './quiz-question.service'\nimport { QuizQuestionResolver } from './quiz-question.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { QuizQuestion, QuizQuestionSchema } from './entities/quiz-question.entity'\nimport { QuizQuestionRepository } from './entities/quiz-question.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: QuizQuestion.name,\n                schema: QuizQuestionSchema,\n            },\n        ]),\n    ],\n    providers: [QuizQuestionResolver, QuizQuestionService, QuizQuestionRepository],\n    exports: [QuizQuestionService, QuizQuestionRepository],\n})\nexport class QuizQuestionModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizQuestionRepository.html":{"url":"injectables/QuizQuestionRepository.html","title":"injectable - QuizQuestionRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizQuestionRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/entities/quiz-question.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-question/entities/quiz-question.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { QuizQuestion, QuizQuestionDocument } from './quiz-question.entity'\nimport { Model } from 'mongoose'\nimport { UpdateQuizQuestionInput } from '../dto/inputs/update-quiz-question.input'\nimport { CreateQuizQuestionInput } from '../dto/inputs/create-quiz-question.input'\nimport { GetQuizQuestionsArgs } from '../dto/args/get-quiz-questions.args'\nimport { GetQuizQuestionArgs } from '../dto/args/get-quiz-question.args'\nimport { IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { DeleteQuizQuestionInput } from '../dto/inputs/delete-quiz-question.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class QuizQuestionRepository extends SimpleRepository {\n    constructor(@InjectModel(QuizQuestion.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    // TODO: Check if anything needs to be overridden\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizQuestionResolver.html":{"url":"classes/QuizQuestionResolver.html","title":"class - QuizQuestionResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizQuestionResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/quiz-question.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createQuizQuestion\n                            \n                            \n                                deleteQuizQuestion\n                            \n                            \n                                quizQuestion\n                            \n                            \n                                quizQuestions\n                            \n                            \n                                updateQuizQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: QuizQuestionService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        QuizQuestionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createQuizQuestion\n                        \n                    \n                \n            \n            \n                \ncreateQuizQuestion(data: CreateQuizQuestionInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizQuestionInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteQuizQuestion\n                        \n                    \n                \n            \n            \n                \ndeleteQuizQuestion(data: DeleteQuizQuestionInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteQuizQuestionInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizQuestion\n                        \n                    \n                \n            \n            \n                \nquizQuestion(data: GetQuizQuestionArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetQuizQuestionArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizQuestions\n                        \n                    \n                \n            \n            \n                \nquizQuestions(data: GetQuizQuestionsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizQuestionsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateQuizQuestion\n                        \n                    \n                \n            \n            \n                \nupdateQuizQuestion(data: UpdateQuizQuestionInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz-question/quiz-question.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateQuizQuestionInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { QuizQuestionService } from './quiz-question.service'\nimport { QuizQuestion } from './entities/quiz-question.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetQuizQuestionArgs } from './dto/args/get-quiz-question.args'\nimport { IQuizQuestion } from '@szakszolg-nx/api-interfaces'\nimport { GetQuizQuestionsArgs } from './dto/args/get-quiz-questions.args'\nimport { CreateQuizQuestionInput } from './dto/inputs/create-quiz-question.input'\nimport { UpdateQuizQuestionInput } from './dto/inputs/update-quiz-question.input'\nimport { DeleteQuizQuestionInput } from './dto/inputs/delete-quiz-question.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => QuizQuestion)\n@Resource('quiz-questions')\nexport class QuizQuestionResolver {\n    constructor(private readonly service: QuizQuestionService) {}\n\n    @Query(() => QuizQuestion, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    quizQuestion(@Args({ nullable: true }) data: GetQuizQuestionArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [QuizQuestion], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    quizQuestions(@Args({ nullable: true }) data: GetQuizQuestionsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => QuizQuestion)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createQuizQuestion(@Args('createQuizQuestionData') data: CreateQuizQuestionInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => QuizQuestion)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateQuizQuestion(@Args('updateQuizQuestionData') data: UpdateQuizQuestionInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => QuizQuestion)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteQuizQuestion(@Args('deleteQuizQuestionData') data: DeleteQuizQuestionInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizQuestionService.html":{"url":"injectables/QuizQuestionService.html","title":"injectable - QuizQuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizQuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/quiz-question.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: QuizQuestionRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz-question/quiz-question.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        QuizQuestionRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateQuizQuestionInput } from './dto/inputs/create-quiz-question.input'\nimport { UpdateQuizQuestionInput } from './dto/inputs/update-quiz-question.input'\nimport { QuizQuestionRepository } from './entities/quiz-question.repository'\nimport { GetQuizQuestionsArgs } from './dto/args/get-quiz-questions.args'\nimport { GetQuizQuestionArgs } from './dto/args/get-quiz-question.args'\nimport { DeleteQuizQuestionInput } from './dto/inputs/delete-quiz-question.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class QuizQuestionService extends RepositoryProxyService {\n    constructor(repository: QuizQuestionRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizRepository.html":{"url":"injectables/QuizRepository.html","title":"injectable - QuizRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/entities/quiz.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz/entities/quiz.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateQuizInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetQuizzesArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizzesArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Quiz, QuizDocument } from './quiz.entity'\nimport { Model } from 'mongoose'\nimport { UpdateQuizInput } from '../dto/inputs/update-quiz.input'\nimport { CreateQuizInput } from '../dto/inputs/create-quiz.input'\nimport { GetQuizzesArgs } from '../dto/args/get-quizzes.args'\nimport { GetQuizArgs } from '../dto/args/get-quiz.args'\nimport { IQuiz } from '@szakszolg-nx/api-interfaces'\nimport { DeleteQuizInput } from '../dto/inputs/delete-quiz.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class QuizRepository extends SimpleRepository {\n    constructor(@InjectModel(Quiz.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    override async findAll(data: GetQuizzesArgs | null): Promise {\n        if (!data.category) return super.findAll(data) // No filtering\n\n        return this.model.find({ categories: { $regex: data.category, $options: 'i' } }).exec()\n    }\n\n    override async create(data: CreateQuizInput): Promise {\n        data.questions = data.questions.map((question, index) => ({ _id: index, ...question }))\n        return super.create(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuizResolver.html":{"url":"classes/QuizResolver.html","title":"class - QuizResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuizResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/quiz.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createQuiz\n                            \n                            \n                                deleteQuiz\n                            \n                            \n                                quiz\n                            \n                            \n                                quizzes\n                            \n                            \n                                updateQuiz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: QuizService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz/quiz.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createQuiz\n                        \n                    \n                \n            \n            \n                \ncreateQuiz(data: CreateQuizInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateQuizInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteQuiz\n                        \n                    \n                \n            \n            \n                \ndeleteQuiz(data: DeleteQuizInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteQuizInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quiz\n                        \n                    \n                \n            \n            \n                \nquiz(data: GetQuizArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetQuizArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        quizzes\n                        \n                    \n                \n            \n            \n                \nquizzes(data: GetQuizzesArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetQuizzesArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateQuiz\n                        \n                    \n                \n            \n            \n                \nupdateQuiz(data: UpdateQuizInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/quiz/quiz.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateQuizInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { QuizService } from './quiz.service'\nimport { Quiz } from './entities/quiz.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetQuizArgs } from './dto/args/get-quiz.args'\nimport { IQuiz } from '@szakszolg-nx/api-interfaces'\nimport { GetQuizzesArgs } from './dto/args/get-quizzes.args'\nimport { CreateQuizInput } from './dto/inputs/create-quiz.input'\nimport { UpdateQuizInput } from './dto/inputs/update-quiz.input'\nimport { DeleteQuizInput } from './dto/inputs/delete-quiz.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => Quiz)\n@Resource('quizzes')\nexport class QuizResolver {\n    constructor(private readonly service: QuizService) {}\n\n    @Query(() => Quiz, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    quiz(@Args({ nullable: true }) data: GetQuizArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [Quiz], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    quizzes(@Args({ nullable: true }) data: GetQuizzesArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => Quiz)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createQuiz(@Args('createQuizData') data: CreateQuizInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => Quiz)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateQuiz(@Args('updateQuizData') data: UpdateQuizInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => Quiz)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteQuiz(@Args('deleteQuizData') data: DeleteQuizInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizService.html":{"url":"injectables/QuizService.html","title":"injectable - QuizService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/quiz.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: QuizRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/quiz/quiz.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        QuizRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateQuizInput } from './dto/inputs/create-quiz.input'\nimport { UpdateQuizInput } from './dto/inputs/update-quiz.input'\nimport { QuizRepository } from './entities/quiz.repository'\nimport { GetQuizzesArgs } from './dto/args/get-quizzes.args'\nimport { GetQuizArgs } from './dto/args/get-quiz.args'\nimport { DeleteQuizInput } from './dto/inputs/delete-quiz.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class QuizService extends RepositoryProxyService {\n    constructor(repository: QuizRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepositoryProxyService.html":{"url":"injectables/RepositoryProxyService.html","title":"injectable - RepositoryProxyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RepositoryProxyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/proxies/repository-proxy.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: TRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    TRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/repository-proxy.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { SimpleRepository } from './simple.repository'\nimport { IdArg, IdArrayArg } from '../gql-args/id.args'\nimport { IdInput } from '../gql-inputs/id.input'\n\n@Injectable()\nexport class RepositoryProxyService,\n    TFindOneArgs extends IdArg,\n    TFindManyArgs extends IdArrayArg,\n    TCreateInput,\n    TUpdateInput extends IdInput,\n    TDeleteInput extends IdInput,\n> {\n    constructor(protected readonly repository: TRepository) {}\n\n    create(data: TCreateInput) {\n        return this.repository.create(data)\n    }\n\n    findAll(data: TFindManyArgs) {\n        return this.repository.findAll(data)\n    }\n\n    findOne(data: TFindOneArgs) {\n        return this.repository.findOne(data)\n    }\n\n    update(data: TUpdateInput) {\n        return this.repository.update(data)\n    }\n\n    delete(data: TDeleteInput) {\n        return this.repository.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/entities/role.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IRole\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                permissions\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/entities/role.entity.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type RoleDocument = IRole & Document\n\n@ObjectType()\n@Schema()\nexport class Role implements IRole {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    description: string\n\n    @Field()\n    @Prop()\n    name: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    permissions: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nAuthModule->RoleModule\n\n\n\n\n\nRoleRepository \n\nRoleRepository \n\nRoleRepository  -->\n\nRoleModule->RoleRepository \n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nRoleRepository\n\nRoleRepository\n\nRoleModule -->\n\nRoleRepository->RoleModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleRepository\n                        \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RoleRepository\n                        \n                        \n                            RoleService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common'\nimport { RoleService } from './role.service'\nimport { RoleResolver } from './role.resolver'\nimport { AuthModule } from '../auth/auth.module'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { Role, RoleSchema } from './entities/role.entity'\nimport { RoleRepository } from './entities/role.repository'\nimport { UsersModule } from '../users/users.module'\n\n@Module({\n    imports: [\n        AuthModule,\n        forwardRef(() => UsersModule),\n        MongooseModule.forFeature([\n            {\n                name: Role.name,\n                schema: RoleSchema,\n            },\n        ]),\n    ],\n    providers: [RoleResolver, RoleService, RoleRepository],\n    exports: [RoleService, RoleRepository],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleRepository.html":{"url":"injectables/RoleRepository.html","title":"injectable - RoleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/entities/role.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/entities/role.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Role, RoleDocument } from './role.entity'\nimport { Model } from 'mongoose'\nimport { UpdateRoleInput } from '../dto/inputs/update-role.input'\nimport { CreateRoleInput } from '../dto/inputs/create-role.input'\nimport { GetRolesArgs } from '../dto/args/get-roles.args'\nimport { GetRoleArgs } from '../dto/args/get-role.args'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { DeleteRoleInput } from '../dto/inputs/delete-role.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class RoleRepository extends SimpleRepository {\n    constructor(@InjectModel(Role.name) roleModel: Model) {\n        super(roleModel)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleResolver.html":{"url":"classes/RoleResolver.html","title":"class - RoleResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/role.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createRole\n                            \n                            \n                                deleteRole\n                            \n                            \n                                role\n                            \n                            \n                                roles\n                            \n                            \n                                updateRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleService: RoleService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/role.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RoleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createRole\n                        \n                    \n                \n            \n            \n                \ncreateRole(data: CreateRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteRole\n                        \n                    \n                \n            \n            \n                \ndeleteRole(data: DeleteRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n            \n                \nrole(data: GetRoleArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetRoleArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n            \n                \nroles(data: GetRolesArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@Permission('browse')@UseGuards(GqlAuthGuard, PermissionGuard)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetRolesArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateRole\n                        \n                    \n                \n            \n            \n                \nupdateRole(data: UpdateRoleInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/role/role.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateRoleInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { RoleService } from './role.service'\nimport { Role } from './entities/role.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetRoleArgs } from './dto/args/get-role.args'\nimport { IRole } from '@szakszolg-nx/api-interfaces'\nimport { GetRolesArgs } from './dto/args/get-roles.args'\nimport { CreateRoleInput } from './dto/inputs/create-role.input'\nimport { UpdateRoleInput } from './dto/inputs/update-role.input'\nimport { DeleteRoleInput } from './dto/inputs/delete-role.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => Role)\n@Resource('roles')\nexport class RoleResolver {\n    constructor(private readonly roleService: RoleService) {}\n\n    @Query(() => Role, { nullable: true })\n    @UseGuards(GqlAuthGuard)\n    @Permission('read')\n    role(@Args({ nullable: true }) data: GetRoleArgs): Promise {\n        return this.roleService.findOne(data)\n    }\n\n    @Query(() => [Role], { nullable: 'items' })\n    @Permission('browse')\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    roles(@Args({ nullable: true }) data: GetRolesArgs | null): Promise {\n        return this.roleService.findAll(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('create')\n    createRole(@Args('createRoleData') data: CreateRoleInput): Promise {\n        return this.roleService.create(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('update')\n    updateRole(@Args('updateRoleData') data: UpdateRoleInput): Promise {\n        return this.roleService.update(data)\n    }\n\n    @Mutation(() => Role)\n    @UseGuards(GqlAuthGuard)\n    @Permission('delete')\n    deleteRole(@Args('deleteRoleData') data: DeleteRoleInput): Promise {\n        return this.roleService.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/role.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleRepository: RoleRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/role/role.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleRepository\n                                                  \n                                                        \n                                                                        RoleRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateRoleInput } from './dto/inputs/create-role.input'\nimport { UpdateRoleInput } from './dto/inputs/update-role.input'\nimport { RoleRepository } from './entities/role.repository'\nimport { GetRolesArgs } from './dto/args/get-roles.args'\nimport { GetRoleArgs } from './dto/args/get-role.args'\nimport { DeleteRoleInput } from './dto/inputs/delete-role.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class RoleService extends RepositoryProxyService {\n    constructor(roleRepository: RoleRepository) {\n        super(roleRepository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/School.html":{"url":"classes/School.html","title":"class - School","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  School\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/entities/school.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ISchool\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                address\n                            \n                            \n                                county\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                name\n                            \n                            \n                                om\n                            \n                            \n                                types\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        county\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/entities/school.entity.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { ISchool } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Schema as MongooseSchema, Document } from 'mongoose'\n\nexport type SchoolDocument = ISchool & Document\n\n@ObjectType()\n@Schema()\nexport class School implements ISchool {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    om: string\n\n    @Field()\n    @Prop()\n    name: string\n\n    @Field()\n    @Prop()\n    address: string\n\n    @Field()\n    @Prop()\n    county: string\n\n    @Field(() => [String])\n    @Prop({ type: [String] })\n    types: string[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const SchoolSchema = SchemaFactory.createForClass(School)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_exports\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nSchoolRepository \n\nSchoolRepository \n\n\n\nSchoolService \n\nSchoolService \n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolRepository  -->\n\nSchoolModule->SchoolRepository \n\n\n\nSchoolService  -->\n\nSchoolModule->SchoolService \n\n\n\n\n\nSchoolRepository\n\nSchoolRepository\n\nSchoolModule -->\n\nSchoolRepository->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolRepository\n                        \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SchoolRepository\n                        \n                        \n                            SchoolService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common'\nimport { SchoolService } from './school.service'\nimport { SchoolResolver } from './school.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { School, SchoolSchema } from './entities/school.entity'\nimport { SchoolRepository } from './entities/school.repository'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: School.name,\n                schema: SchoolSchema,\n            },\n        ]),\n    ],\n    providers: [SchoolResolver, SchoolService, SchoolRepository],\n    exports: [SchoolService, SchoolRepository],\n})\nexport class SchoolModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolRepository.html":{"url":"injectables/SchoolRepository.html","title":"injectable - SchoolRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/entities/school.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        SimpleRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/school/entities/school.repository.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetSchoolsArgs | null)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetSchoolsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:50\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleRepository\n\n                \n            \n            \n                \n                        Defined in         SimpleRepository:42\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { School, SchoolDocument } from './school.entity'\nimport { Model } from 'mongoose'\nimport { UpdateSchoolInput } from '../dto/inputs/update-school.input'\nimport { CreateSchoolInput } from '../dto/inputs/create-school.input'\nimport { GetSchoolsArgs } from '../dto/args/get-schools.args'\nimport { GetSchoolArgs } from '../dto/args/get-school.args'\nimport { ISchool } from '@szakszolg-nx/api-interfaces'\nimport { DeleteSchoolInput } from '../dto/inputs/delete-school.input'\nimport { SimpleRepository } from '../../../shared/proxies/simple.repository'\n\n@Injectable()\nexport class SchoolRepository extends SimpleRepository {\n    constructor(@InjectModel(School.name) resourceModel: Model) {\n        super(resourceModel)\n    }\n\n    override async findAll(data: GetSchoolsArgs | null): Promise {\n        if (!data.om && !data.name && !data.address && !data.county && !data.type) return super.findAll(data) // Simple findAll, no filtering\n\n        const filters = {}\n        for (const filterKey in data) {\n            if (data[filterKey] && data[filterKey] !== 'type')\n                filters[filterKey] = {\n                    $regex: data[filterKey],\n                    $options: 'i',\n                }\n        }\n\n        if (data.type) filters['types'] = { $regex: data.type, $options: 'i' }\n\n        return this.model.find(filters).exec()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SchoolResolver.html":{"url":"classes/SchoolResolver.html","title":"class - SchoolResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SchoolResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/school.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createSchool\n                            \n                            \n                                deleteSchool\n                            \n                            \n                                school\n                            \n                            \n                                schools\n                            \n                            \n                                updateSchool\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(service: SchoolService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/school/school.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        SchoolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createSchool\n                        \n                    \n                \n            \n            \n                \ncreateSchool(data: CreateSchoolInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateSchoolInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteSchool\n                        \n                    \n                \n            \n            \n                \ndeleteSchool(data: DeleteSchoolInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteSchoolInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n            \n                \nschool(data: GetSchoolArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetSchoolArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        schools\n                        \n                    \n                \n            \n            \n                \nschools(data: GetSchoolsArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetSchoolsArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSchool\n                        \n                    \n                \n            \n            \n                \nupdateSchool(data: UpdateSchoolInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/school/school.resolver.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateSchoolInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Mutation, Args } from '@nestjs/graphql'\nimport { SchoolService } from './school.service'\nimport { School } from './entities/school.entity'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { GetSchoolArgs } from './dto/args/get-school.args'\nimport { ISchool } from '@szakszolg-nx/api-interfaces'\nimport { GetSchoolsArgs } from './dto/args/get-schools.args'\nimport { CreateSchoolInput } from './dto/inputs/create-school.input'\nimport { UpdateSchoolInput } from './dto/inputs/update-school.input'\nimport { DeleteSchoolInput } from './dto/inputs/delete-school.input'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => School)\n@Resource('schools')\nexport class SchoolResolver {\n    constructor(private readonly service: SchoolService) {}\n\n    @Query(() => School, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    school(@Args({ nullable: true }) data: GetSchoolArgs): Promise {\n        return this.service.findOne(data)\n    }\n\n    @Query(() => [School], { nullable: 'items' })\n    schools(@Args({ nullable: true }) data: GetSchoolsArgs | null): Promise {\n        return this.service.findAll(data)\n    }\n\n    @Mutation(() => School)\n    createSchool(@Args('createSchoolData') data: CreateSchoolInput): Promise {\n        return this.service.create(data)\n    }\n\n    @Mutation(() => School)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateSchool(@Args('updateSchoolData') data: UpdateSchoolInput): Promise {\n        return this.service.update(data)\n    }\n\n    @Mutation(() => School)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteSchool(@Args('deleteSchoolData') data: DeleteSchoolInput): Promise {\n        return this.service.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/school.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RepositoryProxyService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: SchoolRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/school/school.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        SchoolRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(data: TFindManyArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:33\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: TUpdateInput)\n                \n            \n\n\n            \n                \n                    Inherited from         RepositoryProxyService\n\n                \n            \n            \n                \n                        Defined in         RepositoryProxyService:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TUpdateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateSchoolInput } from './dto/inputs/create-school.input'\nimport { UpdateSchoolInput } from './dto/inputs/update-school.input'\nimport { SchoolRepository } from './entities/school.repository'\nimport { GetSchoolsArgs } from './dto/args/get-schools.args'\nimport { GetSchoolArgs } from './dto/args/get-school.args'\nimport { DeleteSchoolInput } from './dto/inputs/delete-school.input'\nimport { RepositoryProxyService } from '../../shared/proxies/repository-proxy.service'\n\n@Injectable()\nexport class SchoolService extends RepositoryProxyService {\n    constructor(repository: SchoolRepository) {\n        super(repository)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SimpleRepository.html":{"url":"injectables/SimpleRepository.html","title":"injectable - SimpleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SimpleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/shared/proxies/simple.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(model: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/shared/proxies/simple.repository.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: TCreateInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TCreateInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: TDeleteInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TDeleteInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: TFindManyArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindManyArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: TFindOneArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            TFindOneArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/shared/proxies/simple.repository.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException } from '@nestjs/common'\nimport { Document, Model, Types } from 'mongoose'\nimport { IdArg, IdArrayArg } from '../gql-args/id.args'\nimport { IdInput } from '../gql-inputs/id.input'\nimport { IApiResource, IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@Injectable()\nexport class SimpleRepository {\n    constructor(protected readonly model: Model) {}\n\n    public async findAll(data: TFindManyArgs | null): Promise {\n        return data && Object.keys(data).length > 0\n            ? Promise.all(data.ids.map((id) => this.findOne({ id } as TFindOneArgs)))\n            : (this.model.find({ deletedAt: { $eq: null } }) as any)\n    }\n\n    public async findOne(data: TFindOneArgs): Promise {\n        const res = this.model.findById(data.id) as any\n        return res?.deletedAt\n            ? Promise.reject(new NotFoundException(`Model with id ${data.id} not found or has been deleted`))\n            : res\n    }\n\n    public async create(data: TCreateInput): Promise {\n        return (await new this.model({\n            ...data,\n            _id: new Types.ObjectId(),\n            createdAt: new Date(),\n            updatedAt: new Date(),\n            deletedAt: null,\n        }).save()) as any\n    }\n\n    public async update(data: TUpdateInput & IUpdatedAt): Promise {\n        const id = data.id\n        delete data.id\n        if ((data as any).deletedAt) return Promise.reject(new BadRequestException('Cannot update deleted resource'))\n        data.updatedAt = new Date()\n        return this.model.findByIdAndUpdate(id, data, { new: false }) as any\n    }\n\n    public async delete(data: TDeleteInput): Promise {\n        return this.model.findByIdAndUpdate(data.id, { deletedAt: Date.now() }) as any\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGroupingItemInput.html":{"url":"classes/UpdateGroupingItemInput.html","title":"class - UpdateGroupingItemInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGroupingItemInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                correct\n                            \n                            \n                                    Optional\n                                groups\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                item\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        correct\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateGroupingItemInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    item?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    groups?: string[]\n\n    @Field({ nullable: true })\n    correct?: string\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateHangmanWordInput.html":{"url":"classes/UpdateHangmanWordInput.html","title":"class - UpdateHangmanWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateHangmanWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                category\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateHangmanWordInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    word?: string\n\n    @Field({ nullable: true })\n    category?: string\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMirrorWordInput.html":{"url":"classes/UpdateMirrorWordInput.html","title":"class - UpdateMirrorWordInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMirrorWordInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                word\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        word\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\nimport { IsNotEmpty } from 'class-validator'\n\n@InputType()\nexport class UpdateMirrorWordInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field()\n    @IsNotEmpty()\n    word: string\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateQuizAnswerInput.html":{"url":"classes/UpdateQuizAnswerInput.html","title":"class - UpdateQuizAnswerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateQuizAnswerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                answer\n                            \n                            \n                                    Optional\n                                answeredAt\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                    Optional\n                                questionId\n                            \n                            \n                                    Optional\n                                quizId\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answeredAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        questionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        quizId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType, Int } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateQuizAnswerInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    quizId?: string\n\n    @Field(() => Int, { nullable: true })\n    questionId?: number\n\n    @Field({ nullable: true })\n    answer?: string\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field({ nullable: true })\n    answeredAt?: Date\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateQuizInput.html":{"url":"classes/UpdateQuizInput.html","title":"class - UpdateQuizInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateQuizInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                questions\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     IQuizQuestion[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IQuizQuestion, IUpdatedAt } from '@szakszolg-nx/api-interfaces'\nimport { UpdateQuizQuestionInput } from '../../../quiz-question/dto/inputs/update-quiz-question.input'\n\n@InputType()\nexport class UpdateQuizInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    title: string\n\n    @Field({ nullable: true })\n    description: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    categories: string[]\n\n    @Field(() => [UpdateQuizQuestionInput], { nullable: 'itemsAndList' })\n    questions: IQuizQuestion[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateQuizQuestionInput.html":{"url":"classes/UpdateQuizQuestionInput.html","title":"class - UpdateQuizQuestionInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateQuizQuestionInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                answers\n                            \n                            \n                                    Optional\n                                correctAnswers\n                            \n                            \n                                id\n                            \n                            \n                                question\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        answers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        correctAnswers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        question\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsNotEmpty } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateQuizQuestionInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    question: string\n\n    @Field({ nullable: true })\n    type: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    answers?: string[]\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    correctAnswers?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleInput.html":{"url":"classes/UpdateRoleInput.html","title":"class - UpdateRoleInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/role/dto/inputs/update-role.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                description\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                permissions\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/role/dto/inputs/update-role.input.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { IsArray, IsNotEmpty, IsOptional } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateRoleInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    @IsNotEmpty()\n    name?: string\n\n    @Field({ nullable: true })\n    @IsOptional()\n    @IsNotEmpty()\n    description?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @IsOptional()\n    @IsArray()\n    permissions?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSchoolInput.html":{"url":"classes/UpdateSchoolInput.html","title":"class - UpdateSchoolInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSchoolInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/school/dto/inputs/update-school.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                address\n                            \n                            \n                                    Optional\n                                county\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                    Optional\n                                types\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        county\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        types\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@IsOptional()@IsArray()@ArrayNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/school/dto/inputs/update-school.input.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { Field, InputType } from '@nestjs/graphql'\nimport { ArrayNotEmpty, IsArray, IsNotEmpty, IsOptional } from 'class-validator'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateSchoolInput extends IdInput implements IUpdatedAt {\n    @Field()\n    @IsNotEmpty()\n    id: string\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field({ nullable: true })\n    name?: string\n\n    @Field({ nullable: true })\n    address?: string\n\n    @Field({ nullable: true })\n    county?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    @IsOptional()\n    @IsArray()\n    @ArrayNotEmpty()\n    types?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserInput.html":{"url":"classes/UpdateUserInput.html","title":"class - UpdateUserInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/dto/inputs/update-user.input.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        IdInput\n            \n\n            \n                Implements\n            \n            \n                        IUpdatedAt\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                email\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                newPassword\n                            \n                            \n                                    Optional\n                                newPasswordConfirm\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                roles\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         IdInput\n\n                            \n                        \n                    \n                        \n                                Defined in         IdInput:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        newPasswordConfirm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/dto/inputs/update-user.input.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, InputType } from '@nestjs/graphql'\nimport { IsEmail, IsNotEmpty } from 'class-validator'\nimport { IdInput } from '../../../../shared/gql-inputs/id.input'\nimport { IUpdatedAt } from '@szakszolg-nx/api-interfaces'\n\n@InputType()\nexport class UpdateUserInput extends IdInput implements IUpdatedAt {\n    @Field({ nullable: true })\n    id: string\n\n    @Field({ nullable: true })\n    @IsEmail()\n    email?: string\n\n    @Field({ nullable: true })\n    username?: string\n\n    @Field()\n    @IsNotEmpty()\n    password: string\n\n    @Field({ nullable: true })\n    newPassword?: string\n\n    @Field({ nullable: true })\n    newPasswordConfirm?: string\n\n    @Field({ nullable: true })\n    om?: string\n\n    @Field(() => [String], { nullable: 'itemsAndList' })\n    roles?: string[]\n\n    updatedAt?: Date\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/entities/user.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IUser\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                createdAt\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                om\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined)@Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        om\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field({nullable: true})@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Types.ObjectId[] | IRole[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field(undefined, {nullable: 'itemsAndList'})@Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Field()@Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in apps/api/src/app/users/entities/user.entity.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql'\nimport { Document, Schema as MongooseSchema, Types } from 'mongoose'\nimport { IRole, IUser } from '@szakszolg-nx/api-interfaces'\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose'\nimport { Role } from '../../role/entities/role.entity'\nimport { SchemaTypes } from 'mongoose'\n\nexport type UserDocument = User & Document\n\n@ObjectType()\n@Schema()\nexport class User implements IUser {\n    @Field(() => String)\n    @Prop({ type: MongooseSchema.Types.ObjectId })\n    _id: any\n\n    @Field()\n    @Prop()\n    username: string\n\n    @Field({ nullable: true })\n    @Prop()\n    om?: string\n\n    @Prop()\n    password?: string\n\n    @Field()\n    @Prop()\n    email: string\n\n    @Field(() => [Role], { nullable: 'itemsAndList' })\n    @Prop({ type: [SchemaTypes.ObjectId], ref: Role.name })\n    roles: Types.ObjectId[] | IRole[]\n\n    @Field()\n    @Prop()\n    createdAt: Date\n\n    @Field()\n    @Prop()\n    updatedAt?: Date\n\n    @Field({ nullable: true })\n    @Prop()\n    deletedAt?: Date\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User)\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRepository.html":{"url":"injectables/UserRepository.html","title":"injectable - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/entities/user.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model, roleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/entities/user.repository.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: DeleteUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetUsersArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetUserArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: UpdateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/entities/user.repository.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { User, UserDocument } from './user.entity'\nimport { CreateUserInput } from '../dto/inputs/create-user.input'\nimport { UpdateUserInput } from '../dto/inputs/update-user.input'\nimport { DeleteUserInput } from '../dto/inputs/delete-user.input'\nimport { GetUserArgs } from '../dto/args/get-user.args'\nimport { GetUsersArgs } from '../dto/args/get-users.args'\nimport { BadRequestException, Injectable } from '@nestjs/common'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\nimport { IRole, IUser } from '@szakszolg-nx/api-interfaces'\nimport { Types } from 'mongoose'\nimport { Role, RoleDocument } from '../../role/entities/role.entity'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class UserRepository {\n    constructor(\n        @InjectModel(User.name) private readonly userModel: Model,\n        @InjectModel(Role.name) private readonly roleModel: Model,\n    ) {}\n\n    public async findAll(data: GetUsersArgs | null): Promise {\n        return data && Object.keys(data).length > 0\n            ? Promise.all(data.ids.map((id) => this.findOne({ id })))\n            : this.userModel.find()\n    }\n\n    public async findOne(data: GetUserArgs): Promise {\n        if (data.id) return this.userModel.findById(data.id).populate('roles')\n\n        if (data.email) return this.userModel.findOne({ email: data.email }).populate('roles')\n\n        throw new Error('Please provide either an id or an email address')\n    }\n\n    public async create(data: CreateUserInput): Promise {\n        return new this.userModel({ ...data, _id: new Types.ObjectId() }).save()\n    }\n\n    public async update(data: UpdateUserInput): Promise {\n        const user = await this.userModel.findById(data.id)\n\n        if (!user) throw new Error('User not found')\n        if (!(await bcrypt.compare(data.password, user.password)))\n            throw new BadRequestException('Current password is incorrect')\n\n        if (data.newPassword && data.newPassword !== data.newPasswordConfirm)\n            throw new Error('New passwords do not match')\n        // const id = data.id\n        delete data.id\n        ;(data as any).updatedAt = new Date()\n\n        user.roles = data?.roles?.map((roleId) => new Types.ObjectId(roleId))\n\n        user.save()\n        return user\n    }\n\n    public async delete(data: DeleteUserInput): Promise {\n        return this.userModel.findByIdAndUpdate(data.id, { deletedAt: new Date() })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            apps/api/src/app/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserRepository\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common'\nimport { UsersService } from './users.service'\nimport { UsersResolver } from './users.resolver'\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { UserRepository } from './entities/user.repository'\nimport { AuthModule } from '../auth/auth.module'\nimport { User, UserSchema } from './entities/user.entity'\nimport { RoleModule } from '../role/role.module'\nimport { Role, RoleSchema } from '../role/entities/role.entity'\n\n@Module({\n    imports: [\n        forwardRef(() => AuthModule),\n        forwardRef(() => RoleModule),\n        MongooseModule.forFeature([\n            {\n                name: Role.name,\n                schema: RoleSchema,\n            },\n            {\n                name: User.name,\n                schema: UserSchema,\n            },\n        ]),\n    ],\n    providers: [UsersResolver, UsersService, UserRepository],\n    exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UsersResolver.html":{"url":"classes/UsersResolver.html","title":"class - UsersResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UsersResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/users.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createUser\n                            \n                            \n                                deleteUser\n                            \n                            \n                                updateUser\n                            \n                            \n                                user\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/users.resolver.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser(data: CreateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('create')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(data: DeleteUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('delete')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(data: UpdateUserInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('update')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n            \n                \nuser(data: GetUserArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: true})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('read')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n            \n                \nusers(data: GetUsersArgs | null)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {nullable: 'items'})@UseGuards(GqlAuthGuard, PermissionGuard)@Permission('browse')\n                \n            \n\n            \n                \n                    Defined in apps/api/src/app/users/users.resolver.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Resolver, Query, Args, Mutation } from '@nestjs/graphql'\nimport { UsersService } from './users.service'\nimport { User } from './entities/user.entity'\nimport { GetUserArgs } from './dto/args/get-user.args'\nimport { GetUsersArgs } from './dto/args/get-users.args'\nimport { CreateUserInput } from './dto/inputs/create-user.input'\nimport { UpdateUserInput } from './dto/inputs/update-user.input'\nimport { DeleteUserInput } from './dto/inputs/delete-user.input'\nimport { UseGuards } from '@nestjs/common'\nimport { GqlAuthGuard } from '../auth/guards/gql-auth.guard'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\nimport { Permission, Resource } from '../auth/decorators/permission.decorator'\nimport { PermissionGuard } from '../auth/guards/permission-guard.service'\n\n@Resolver(() => User)\n@Resource('users')\nexport class UsersResolver {\n    constructor(private readonly usersService: UsersService) {}\n\n    @Query(() => User, { nullable: true })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('read')\n    user(@Args() data: GetUserArgs): Promise {\n        return this.usersService.findOne(data)\n    }\n\n    @Query(() => [User], { nullable: 'items' })\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('browse')\n    users(@Args({ nullable: true }) data: GetUsersArgs | null): Promise {\n        return this.usersService.findAll(data)\n    }\n\n    @Mutation(() => User)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('create')\n    createUser(@Args('createUserData') data: CreateUserInput): Promise {\n        return this.usersService.create(data)\n    }\n\n    @Mutation(() => User)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('update')\n    updateUser(@Args('updateUserData') data: UpdateUserInput): Promise {\n        return this.usersService.update(data)\n    }\n\n    @Mutation(() => User)\n    @UseGuards(GqlAuthGuard, PermissionGuard)\n    @Permission('delete')\n    deleteUser(@Args('deleteUserData') data: DeleteUserInput): Promise {\n        return this.usersService.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            apps/api/src/app/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in apps/api/src/app/users/users.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(data: DeleteUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DeleteUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(data: GetUsersArgs | null)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            GetUsersArgs | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(data: GetUserArgs)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                GetUserArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(data: UpdateUserInput)\n                \n            \n\n\n            \n                \n                    Defined in apps/api/src/app/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                UpdateUserInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { CreateUserInput } from './dto/inputs/create-user.input'\nimport { UpdateUserInput } from './dto/inputs/update-user.input'\nimport { DeleteUserInput } from './dto/inputs/delete-user.input'\nimport { GetUserArgs } from './dto/args/get-user.args'\nimport { GetUsersArgs } from './dto/args/get-users.args'\nimport { UserRepository } from './entities/user.repository'\nimport { IUser } from '@szakszolg-nx/api-interfaces'\n// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst bcrypt = require('bcryptjs')\n\n@Injectable()\nexport class UsersService {\n    constructor(private readonly userRepository: UserRepository) {}\n\n    public findAll(data: GetUsersArgs | null): Promise {\n        return this.userRepository.findAll(data)\n    }\n\n    public findOne(data: GetUserArgs): Promise {\n        return this.userRepository.findOne(data)\n    }\n\n    public async create(data: CreateUserInput): Promise {\n        data.password = await bcrypt.hash(data.password, 10)\n        return this.userRepository.create(data)\n    }\n\n    public async update(data: UpdateUserInput): Promise {\n        return this.userRepository.update(data)\n    }\n\n    public async delete(data: DeleteUserInput): Promise {\n        return this.userRepository.delete(data)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                apps/api/src/app/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/auth.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/current-user.decorator.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/permission.decorator.ts\n            \n            variable\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/decorators/permission.decorator.ts\n            \n            variable\n            Resource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/gql-auth.guard.ts\n            \n            class\n            GqlAuthGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/jwt-auth.guard.ts\n            \n            class\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/local-auth.guard.ts\n            \n            class\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/guards/permission-guard.service.ts\n            \n            guard\n            PermissionGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/auth/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/config/configuration.ts\n            \n            variable\n            configuration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/config/mongo-config.factory.ts\n            \n            variable\n            mongooseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/config/validation.ts\n            \n            variable\n            validationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/core/core.resolver.ts\n            \n            class\n            CoreResolver\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/args/get-grouping-item.args.ts\n            \n            class\n            GetGroupingItemArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/args/get-grouping-items.args.ts\n            \n            class\n            GetGroupingItemsArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/inputs/create-grouping-item.input.ts\n            \n            class\n            CreateGroupingItemInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/inputs/delete-grouping-item.input.ts\n            \n            class\n            DeleteGroupingItemInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/dto/inputs/update-grouping-item.input.ts\n            \n            class\n            UpdateGroupingItemInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n            \n            class\n            GroupingItem\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n            \n            variable\n            GroupingItemSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/entities/grouping-item.repository.ts\n            \n            injectable\n            GroupingItemRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/grouping-item.resolver.ts\n            \n            class\n            GroupingItemResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/grouping-item/grouping-item.service.ts\n            \n            injectable\n            GroupingItemService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/args/get-hangman-word.args.ts\n            \n            class\n            GetHangmanWordArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/args/get-hangman-words.args.ts\n            \n            class\n            GetHangmanWordsArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/inputs/create-hangman-word.input.ts\n            \n            class\n            CreateHangmanWordInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/inputs/delete-hangman-word.input.ts\n            \n            class\n            DeleteHangmanWordInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/dto/inputs/update-hangman-word.input.ts\n            \n            class\n            UpdateHangmanWordInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n            \n            class\n            HangmanWord\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n            \n            variable\n            HangmanWordSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/entities/hangman-word.repository.ts\n            \n            injectable\n            HangmanWordRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/hangman-word.resolver.ts\n            \n            class\n            HangmanWordResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/hangman-word/hangman-word.service.ts\n            \n            injectable\n            HangmanWordService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/args/get-mirror-word.args.ts\n            \n            class\n            GetMirrorWordArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/args/get-mirror-words.args.ts\n            \n            class\n            GetMirrorWordsArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/inputs/create-mirror-word.input.ts\n            \n            class\n            CreateMirrorWordInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/inputs/delete-mirror-word.input.ts\n            \n            class\n            DeleteMirrorWordInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/dto/inputs/update-mirror-word.input.ts\n            \n            class\n            UpdateMirrorWordInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n            \n            class\n            MirrorWord\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n            \n            variable\n            MirrorWordSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/entities/mirror-word.repository.ts\n            \n            injectable\n            MirrorWordRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/mirror-word.resolver.ts\n            \n            class\n            MirrorWordResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/mirror-word/mirror-word.service.ts\n            \n            injectable\n            MirrorWordService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/dto/args/get-quiz-answer.args.ts\n            \n            class\n            GetQuizAnswerArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/dto/args/get-quiz-answers.args.ts\n            \n            class\n            GetQuizAnswersArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/dto/inputs/create-quiz-answer.input.ts\n            \n            class\n            CreateQuizAnswerInput\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/dto/inputs/delete-quiz-answer.input.ts\n            \n            class\n            DeleteQuizAnswerInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/dto/inputs/update-quiz-answer.input.ts\n            \n            class\n            UpdateQuizAnswerInput\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts\n            \n            class\n            QuizAnswer\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts\n            \n            variable\n            QuizAnswerSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/entities/quiz-answer.repository.ts\n            \n            injectable\n            QuizAnswerRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/quiz-answer.resolver.ts\n            \n            class\n            QuizAnswerResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-answer/quiz-answer.service.ts\n            \n            injectable\n            QuizAnswerService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/args/get-quiz-question.args.ts\n            \n            class\n            GetQuizQuestionArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/args/get-quiz-questions.args.ts\n            \n            class\n            GetQuizQuestionsArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/inputs/create-quiz-question.input.ts\n            \n            class\n            CreateQuizQuestionInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/inputs/delete-quiz-question.input.ts\n            \n            class\n            DeleteQuizQuestionInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/dto/inputs/update-quiz-question.input.ts\n            \n            class\n            UpdateQuizQuestionInput\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n            \n            class\n            QuizQuestion\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n            \n            variable\n            QuizQuestionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/entities/quiz-question.repository.ts\n            \n            injectable\n            QuizQuestionRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/quiz-question.resolver.ts\n            \n            class\n            QuizQuestionResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz-question/quiz-question.service.ts\n            \n            injectable\n            QuizQuestionService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/args/get-quiz.args.ts\n            \n            class\n            GetQuizArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/args/get-quizzes.args.ts\n            \n            class\n            GetQuizzesArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/inputs/create-quiz.input.ts\n            \n            class\n            CreateQuizInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/inputs/delete-quiz.input.ts\n            \n            class\n            DeleteQuizInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/dto/inputs/update-quiz.input.ts\n            \n            class\n            UpdateQuizInput\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/entities/quiz.entity.ts\n            \n            class\n            Quiz\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/entities/quiz.entity.ts\n            \n            variable\n            QuizSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/entities/quiz.repository.ts\n            \n            injectable\n            QuizRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/quiz.resolver.ts\n            \n            class\n            QuizResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/quiz/quiz.service.ts\n            \n            injectable\n            QuizService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/args/get-role.args.ts\n            \n            class\n            GetRoleArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/args/get-roles.args.ts\n            \n            class\n            GetRolesArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/create-role.input.ts\n            \n            class\n            CreateRoleInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/delete-role.input.ts\n            \n            class\n            DeleteRoleInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/dto/inputs/update-role.input.ts\n            \n            class\n            UpdateRoleInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.entity.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/entities/role.repository.ts\n            \n            injectable\n            RoleRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/role.resolver.ts\n            \n            class\n            RoleResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/args/get-school.args.ts\n            \n            class\n            GetSchoolArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/args/get-schools.args.ts\n            \n            class\n            GetSchoolsArgs\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/inputs/create-school.input.ts\n            \n            class\n            CreateSchoolInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/inputs/delete-school.input.ts\n            \n            class\n            DeleteSchoolInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/dto/inputs/update-school.input.ts\n            \n            class\n            UpdateSchoolInput\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/entities/school.entity.ts\n            \n            class\n            School\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/entities/school.entity.ts\n            \n            variable\n            SchoolSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/entities/school.repository.ts\n            \n            injectable\n            SchoolRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/school.resolver.ts\n            \n            class\n            SchoolResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/args/get-user.args.ts\n            \n            class\n            GetUserArgs\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/args/get-users.args.ts\n            \n            class\n            GetUsersArgs\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/create-user.input.ts\n            \n            class\n            CreateUserInput\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/delete-user.input.ts\n            \n            class\n            DeleteUserInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/dto/inputs/update-user.input.ts\n            \n            class\n            UpdateUserInput\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.entity.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.repository.ts\n            \n            injectable\n            UserRepository\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/entities/user.repository.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.resolver.ts\n            \n            class\n            UsersResolver\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/app/users/users.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/gql-arg.abstract.ts\n            \n            class\n            GqlArg\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/id.args.ts\n            \n            class\n            IdArg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-args/id.args.ts\n            \n            class\n            IdArrayArg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-inputs/gql-input.abstract.ts\n            \n            class\n            GqlInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                apps/api/src/shared/gql-inputs/id.input.ts\n            \n            class\n            IdInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                apps/api/src/shared/proxies/repository-proxy.service.ts\n            \n            injectable\n            RepositoryProxyService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                apps/api/src/shared/proxies/simple.repository.ts\n            \n            injectable\n            SimpleRepository\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 13.2.0\n        \n            @angular/common : 13.2.0\n        \n            @angular/compiler : 13.2.0\n        \n            @angular/core : 13.2.0\n        \n            @angular/forms : 13.2.0\n        \n            @angular/platform-browser : 13.2.0\n        \n            @angular/platform-browser-dynamic : 13.2.0\n        \n            @angular/router : 13.2.0\n        \n            @apollo/client : ^3.5.8\n        \n            @auth0/angular-jwt : ^5.0.2\n        \n            @capacitor/core : ^3.2.5\n        \n            @compodoc/compodoc : ^1.1.18\n        \n            @ionic/angular : ^5.8.3\n        \n            @ionic/storage-angular : ^3.0.6\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^1.1.6\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/graphql : ^9.1.2\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/mongoose : ^9.0.2\n        \n            @nestjs/passport : ^8.1.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @ngx-translate/core : ^14.0.0\n        \n            @ngx-translate/http-loader : ^7.0.0\n        \n            @nrwl/angular : 13.7.1\n        \n            @nxtend/capacitor : 12.1.0\n        \n            @nxtend/ionic-angular : 12.1.0\n        \n            add : 2.0.6\n        \n            apollo-angular : ^2.6.0\n        \n            apollo-server-express : ^3.6.1\n        \n            bcryptjs : ^2.4.3\n        \n            class-validator : ^0.13.2\n        \n            del-cli : ^4.0.1\n        \n            dotenv : ^16.0.0\n        \n            graphql : ^16.3.0\n        \n            graphql-tools : ^8.2.0\n        \n            joi : ^17.5.0\n        \n            jsonwebtoken : ^8.5.1\n        \n            mongoose : ^6.1.7\n        \n            passport : ^0.5.2\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            primeicons : ^5.0.0\n        \n            primeng : ^13.1.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.0.0\n        \n            url-polyfill : ^1.1.12\n        \n            uuid : ^8.3.2\n        \n            yarn : 1.22.17\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (apps/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nSzakszolgNx\nThis project was generated using Nx.\n\n\n🔎 Smart, Fast and Extensible Build System\nQuick Start & Documentation\nNx Documentation\n10-minute video showing all Nx features\nInteractive Tutorial\nAdding capabilities to your workspace\nNx supports many plugins which add capabilities for developing different types of applications and different tools.\nThese capabilities include generating applications, libraries, etc as well as the devtools to test, and build projects as well.\nBelow are our core plugins:\n\nAngular\nng add @nrwl/angular\n\n\nReact\nng add @nrwl/react\n\n\nWeb (no framework frontends)\nng add @nrwl/web\n\n\nNest\nng add @nrwl/nest\n\n\nExpress\nng add @nrwl/express\n\n\nNode\nng add @nrwl/node\n\n\n\nThere are also many community plugins you could add.\nGenerate an application\nRun ng g @nrwl/angular:app my-app to generate an application.\n\nYou can use any of the plugins above to generate applications as well.\n\nWhen using Nx, you can create multiple applications and libraries in the same workspace.\nGenerate a library\nRun ng g @nrwl/angular:lib my-lib to generate a library.\n\nYou can also use any of the plugins above to generate libraries as well.\n\nLibraries are shareable across libraries and applications. They can be imported from @szakszolg-nx/mylib.\nDevelopment server\nRun ng serve my-app for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng g component my-component --project=my-app to generate a new component.\nBuild\nRun ng build my-app to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test my-app to execute the unit tests via Jest.\nRun nx affected:test to execute the unit tests affected by a change.\nRunning end-to-end tests\nRun ng e2e my-app to execute the end-to-end tests via Cypress.\nRun nx affected:e2e to execute the end-to-end tests affected by a change.\nUnderstand your workspace\nRun nx dep-graph to see a diagram of the dependencies of your projects.\nFurther help\nVisit the Nx Documentation to learn more.\n☁ Nx Cloud\nDistributed Computation Caching & Distributed Task Execution\n\n\nNx Cloud pairs with Nx in order to enable you to build and test code more rapidly, by up to 10 times. Even teams that are new to Nx can connect to Nx Cloud and start saving time instantly.\nTeams using Nx gain the advantage of building full-stack applications with their preferred framework alongside Nx’s advanced code generation and project dependency graph, plus a unified experience for both frontend and backend developers.\nVisit Nx Cloud to learn more.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupingItemModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HangmanWordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MirrorWordModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuizAnswerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuizModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        QuizQuestionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GroupingItemModule\n\n\n\ncluster_GroupingItemModule_exports\n\n\n\ncluster_GroupingItemModule_providers\n\n\n\ncluster_HangmanWordModule\n\n\n\ncluster_HangmanWordModule_exports\n\n\n\ncluster_HangmanWordModule_providers\n\n\n\ncluster_MirrorWordModule\n\n\n\ncluster_MirrorWordModule_exports\n\n\n\ncluster_MirrorWordModule_providers\n\n\n\ncluster_QuizAnswerModule\n\n\n\ncluster_QuizAnswerModule_exports\n\n\n\ncluster_QuizAnswerModule_providers\n\n\n\ncluster_QuizModule\n\n\n\ncluster_QuizModule_exports\n\n\n\ncluster_QuizModule_providers\n\n\n\ncluster_QuizQuestionModule\n\n\n\ncluster_QuizQuestionModule_exports\n\n\n\ncluster_QuizQuestionModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_exports\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_exports\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nAuthModule->RoleModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nGroupingItemModule\n\nGroupingItemModule\n\nAppModule -->\n\nGroupingItemModule->AppModule\n\n\n\n\n\nGroupingItemRepository \n\nGroupingItemRepository \n\nGroupingItemRepository  -->\n\nGroupingItemModule->GroupingItemRepository \n\n\n\n\n\nGroupingItemService \n\nGroupingItemService \n\nGroupingItemService  -->\n\nGroupingItemModule->GroupingItemService \n\n\n\n\n\nHangmanWordModule\n\nHangmanWordModule\n\nAppModule -->\n\nHangmanWordModule->AppModule\n\n\n\n\n\nHangmanWordRepository \n\nHangmanWordRepository \n\nHangmanWordRepository  -->\n\nHangmanWordModule->HangmanWordRepository \n\n\n\n\n\nHangmanWordService \n\nHangmanWordService \n\nHangmanWordService  -->\n\nHangmanWordModule->HangmanWordService \n\n\n\n\n\nMirrorWordModule\n\nMirrorWordModule\n\nAppModule -->\n\nMirrorWordModule->AppModule\n\n\n\n\n\nMirrorWordRepository \n\nMirrorWordRepository \n\nMirrorWordRepository  -->\n\nMirrorWordModule->MirrorWordRepository \n\n\n\n\n\nMirrorWordService \n\nMirrorWordService \n\nMirrorWordService  -->\n\nMirrorWordModule->MirrorWordService \n\n\n\n\n\nQuizAnswerModule\n\nQuizAnswerModule\n\nAppModule -->\n\nQuizAnswerModule->AppModule\n\n\n\n\n\nQuizAnswerRepository \n\nQuizAnswerRepository \n\nQuizAnswerRepository  -->\n\nQuizAnswerModule->QuizAnswerRepository \n\n\n\n\n\nQuizAnswerService \n\nQuizAnswerService \n\nQuizAnswerService  -->\n\nQuizAnswerModule->QuizAnswerService \n\n\n\n\n\nQuizModule\n\nQuizModule\n\nQuizAnswerModule -->\n\nQuizModule->QuizAnswerModule\n\n\n\nAppModule -->\n\nQuizModule->AppModule\n\n\n\n\n\nQuizRepository \n\nQuizRepository \n\nQuizRepository  -->\n\nQuizModule->QuizRepository \n\n\n\n\n\nQuizService \n\nQuizService \n\nQuizService  -->\n\nQuizModule->QuizService \n\n\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nRoleRepository \n\nRoleRepository \n\nRoleRepository  -->\n\nRoleModule->RoleRepository \n\n\n\n\n\nRoleService \n\nRoleService \n\nRoleService  -->\n\nRoleModule->RoleService \n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nSchoolRepository \n\nSchoolRepository \n\nSchoolRepository  -->\n\nSchoolModule->SchoolRepository \n\n\n\n\n\nSchoolService \n\nSchoolService \n\nSchoolService  -->\n\nSchoolModule->SchoolService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nGroupingItemRepository\n\nGroupingItemRepository\n\nGroupingItemModule -->\n\nGroupingItemRepository->GroupingItemModule\n\n\n\n\n\nGroupingItemService\n\nGroupingItemService\n\nGroupingItemModule -->\n\nGroupingItemService->GroupingItemModule\n\n\n\n\n\nHangmanWordRepository\n\nHangmanWordRepository\n\nHangmanWordModule -->\n\nHangmanWordRepository->HangmanWordModule\n\n\n\n\n\nHangmanWordService\n\nHangmanWordService\n\nHangmanWordModule -->\n\nHangmanWordService->HangmanWordModule\n\n\n\n\n\nMirrorWordRepository\n\nMirrorWordRepository\n\nMirrorWordModule -->\n\nMirrorWordRepository->MirrorWordModule\n\n\n\n\n\nMirrorWordService\n\nMirrorWordService\n\nMirrorWordModule -->\n\nMirrorWordService->MirrorWordModule\n\n\n\n\n\nQuizAnswerRepository\n\nQuizAnswerRepository\n\nQuizAnswerModule -->\n\nQuizAnswerRepository->QuizAnswerModule\n\n\n\n\n\nQuizAnswerService\n\nQuizAnswerService\n\nQuizAnswerModule -->\n\nQuizAnswerService->QuizAnswerModule\n\n\n\n\n\nQuizRepository\n\nQuizRepository\n\nQuizModule -->\n\nQuizRepository->QuizModule\n\n\n\n\n\nQuizService\n\nQuizService\n\nQuizModule -->\n\nQuizService->QuizModule\n\n\n\n\n\nQuizQuestionRepository \n\nQuizQuestionRepository \n\n\n\nQuizQuestionService \n\nQuizQuestionService \n\n\n\nQuizQuestionModule\n\nQuizQuestionModule\n\nQuizQuestionRepository  -->\n\nQuizQuestionModule->QuizQuestionRepository \n\n\n\nQuizQuestionService  -->\n\nQuizQuestionModule->QuizQuestionService \n\n\n\n\n\nQuizQuestionRepository\n\nQuizQuestionRepository\n\nQuizQuestionModule -->\n\nQuizQuestionRepository->QuizQuestionModule\n\n\n\n\n\nQuizQuestionService\n\nQuizQuestionService\n\nQuizQuestionModule -->\n\nQuizQuestionService->QuizQuestionModule\n\n\n\n\n\nRoleRepository\n\nRoleRepository\n\nRoleModule -->\n\nRoleRepository->RoleModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nSchoolRepository\n\nSchoolRepository\n\nSchoolModule -->\n\nSchoolRepository->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nUserRepository\n\nUserRepository\n\nUsersModule -->\n\nUserRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    24 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    72 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            GroupingItemDocument   (apps/.../grouping-item.entity.ts)\n                        \n                        \n                            HangmanWordDocument   (apps/.../hangman-word.entity.ts)\n                        \n                        \n                            MirrorWordDocument   (apps/.../mirror-word.entity.ts)\n                        \n                        \n                            QuizAnswerDocument   (apps/.../quiz-answer.entity.ts)\n                        \n                        \n                            QuizDocument   (apps/.../quiz.entity.ts)\n                        \n                        \n                            QuizQuestionDocument   (apps/.../quiz-question.entity.ts)\n                        \n                        \n                            RoleDocument   (apps/.../role.entity.ts)\n                        \n                        \n                            SchoolDocument   (apps/.../school.entity.ts)\n                        \n                        \n                            UserDocument   (apps/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n    \n    \n        \n            \n                \n                    \n                    GroupingItemDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n    \n    \n        \n            \n                \n                    \n                    HangmanWordDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n    \n    \n        \n            \n                \n                    \n                    MirrorWordDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts\n    \n    \n        \n            \n                \n                    \n                    QuizAnswerDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/quiz/entities/quiz.entity.ts\n    \n    \n        \n            \n                \n                    \n                    QuizDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n    \n    \n        \n            \n                \n                    \n                    QuizQuestionDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/role/entities/role.entity.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/school/entities/school.entity.ts\n    \n    \n        \n            \n                \n                    \n                    SchoolDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    apps/api/src/app/users/entities/user.entity.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bcrypt   (apps/.../auth.service.ts)\n                        \n                        \n                            bcrypt   (apps/.../users.service.ts)\n                        \n                        \n                            bcrypt   (apps/.../user.repository.ts)\n                        \n                        \n                            configuration   (apps/.../configuration.ts)\n                        \n                        \n                            CurrentUser   (apps/.../current-user.decorator.ts)\n                        \n                        \n                            environment   (apps/.../environment.prod.ts)\n                        \n                        \n                            environment   (apps/.../environment.ts)\n                        \n                        \n                            GroupingItemSchema   (apps/.../grouping-item.entity.ts)\n                        \n                        \n                            HangmanWordSchema   (apps/.../hangman-word.entity.ts)\n                        \n                        \n                            MirrorWordSchema   (apps/.../mirror-word.entity.ts)\n                        \n                        \n                            mongooseConfig   (apps/.../mongo-config.factory.ts)\n                        \n                        \n                            Permission   (apps/.../permission.decorator.ts)\n                        \n                        \n                            QuizAnswerSchema   (apps/.../quiz-answer.entity.ts)\n                        \n                        \n                            QuizQuestionSchema   (apps/.../quiz-question.entity.ts)\n                        \n                        \n                            QuizSchema   (apps/.../quiz.entity.ts)\n                        \n                        \n                            Resource   (apps/.../permission.decorator.ts)\n                        \n                        \n                            RoleSchema   (apps/.../role.entity.ts)\n                        \n                        \n                            SchoolSchema   (apps/.../school.entity.ts)\n                        \n                        \n                            UserSchema   (apps/.../user.entity.ts)\n                        \n                        \n                            validationSchema   (apps/.../validation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    apps/api/src/app/auth/auth.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/users.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/entities/user.repository.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcryptjs')\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/core/config/configuration.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configuration\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => ({\n    environment: process.env.NODE_ENV,\n    port: parseInt(process.env.PORT || '3000', 10),\n})\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/auth/decorators/current-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CurrentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_data: unknown, context: ExecutionContext) => {\n    if (context.getType() === 'http') return context.switchToHttp().getRequest().user\n    return GqlExecutionContext.create(context).getContext().req.user\n})\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: true,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/grouping-item/entities/grouping-item.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GroupingItemSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(GroupingItem)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/hangman-word/entities/hangman-word.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HangmanWordSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(HangmanWord)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/mirror-word/entities/mirror-word.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MirrorWordSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(MirrorWord)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/core/config/mongo-config.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mongooseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    imports: [ConfigModule],\n    providers: [ConfigService],\n    mongooseConfigFactory: async (configService: ConfigService): Promise => {\n        const uri = `mongodb+srv://${configService.get('DATABASE_USER')}@${configService.get(\n            'DATABASE_HOST',\n        )}/${configService.get(\n            'DATABASE_NAME',\n        )}?authMechanism=MONGODB-X509&ssl=true&retryWrites=true&w=majority`\n        const cert = configService.get('DATABASE_CERT')\n        return {\n            uri,\n            sslKey: cert,\n            sslCert: cert,\n        }\n    },\n}\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/auth/decorators/permission.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Permission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...abilities: string[]) => SetMetadata('abilities', abilities)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Resource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...resources: string[]) => SetMetadata('resources', resources)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/quiz-answer/entities/quiz-answer.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        QuizAnswerSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(QuizAnswer)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/quiz-question/entities/quiz-question.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        QuizQuestionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(QuizQuestion)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/quiz/entities/quiz.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        QuizSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Quiz)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/role/entities/role.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/school/entities/school.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SchoolSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(School)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/users/entities/user.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n    apps/api/src/app/core/config/validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.object({\n    NODE_ENV: Joi.string().valid('development', 'production', 'test').required(),\n    PORT: Joi.number().default(3000),\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
